   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "system_XMC4400.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global SystemCoreClock
  20              	 .section .no_init,"aw",%progbits
  21              	 .align 2
  24              	SystemCoreClock:
  25 0000 00000000 	 .space 4
  26              	 .global g_chipid
  27              	 .align 2
  30              	g_chipid:
  31 0004 00000000 	 .space 16
  31      00000000 
  31      00000000 
  31      00000000 
  32              	 .global g_hrpwm_char_data
  33              	 .align 2
  36              	g_hrpwm_char_data:
  37 0014 00000000 	 .space 12
  37      00000000 
  37      00000000 
  38              	 .section .text.delay,"ax",%progbits
  39              	 .align 2
  40              	 .thumb
  41              	 .thumb_func
  43              	delay:
  44              	.LFB130:
  45              	 .file 1 "../Startup/system_XMC4400.c"
   1:../Startup/system_XMC4400.c **** /**************************************************************************************************
   2:../Startup/system_XMC4400.c ****  * @file     system_XMC4400.c
   3:../Startup/system_XMC4400.c ****  * @brief    CMSIS Cortex-M4 Device Peripheral Access Layer Header File for the Infineon XMC4400 De
   4:../Startup/system_XMC4400.c ****  * @version  V3.1.3
   5:../Startup/system_XMC4400.c ****  * @date     26. Sep 2017
   6:../Startup/system_XMC4400.c ****  *
   7:../Startup/system_XMC4400.c ****  * @cond
   8:../Startup/system_XMC4400.c ****  **************************************************************************************************
   9:../Startup/system_XMC4400.c ****  * Copyright (c) 2014-2017, Infineon Technologies AG
  10:../Startup/system_XMC4400.c ****  * All rights reserved.
  11:../Startup/system_XMC4400.c ****  *
  12:../Startup/system_XMC4400.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Startup/system_XMC4400.c ****  * following conditions are met:
  14:../Startup/system_XMC4400.c ****  *
  15:../Startup/system_XMC4400.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Startup/system_XMC4400.c ****  * disclaimer.
  17:../Startup/system_XMC4400.c ****  *
  18:../Startup/system_XMC4400.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Startup/system_XMC4400.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  20:../Startup/system_XMC4400.c ****  *
  21:../Startup/system_XMC4400.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Startup/system_XMC4400.c ****  * products derived from this software without specific prior written permission.
  23:../Startup/system_XMC4400.c ****  *
  24:../Startup/system_XMC4400.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Startup/system_XMC4400.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Startup/system_XMC4400.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Startup/system_XMC4400.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Startup/system_XMC4400.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Startup/system_XMC4400.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Startup/system_XMC4400.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:../Startup/system_XMC4400.c ****  *
  32:../Startup/system_XMC4400.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Startup/system_XMC4400.c ****  * Infineon Technologies AG dave@infineon.com).
  34:../Startup/system_XMC4400.c ****  **************************************************************************************************
  35:../Startup/system_XMC4400.c ****  *
  36:../Startup/system_XMC4400.c ****  ********************** Version History ***************************************
  37:../Startup/system_XMC4400.c ****  * V3.1.0, Dec 2014, Added options to configure clock settings
  38:../Startup/system_XMC4400.c ****  * V3.1.1, 01. Jun 2016, Fix masking of OSCHPCTRL value 
  39:../Startup/system_XMC4400.c ****  * V3.1.2, 19. Jun 2017, Rely on cmsis_compiler.h instead of defining __WEAK 
  40:../Startup/system_XMC4400.c ****  *                       Added support for ARM Compiler 6 (armclang) 
  41:../Startup/system_XMC4400.c ****  * V3.1.3, 26. Sep 2017, Disable FPU if FPU_USED is zero  
  42:../Startup/system_XMC4400.c ****  ******************************************************************************
  43:../Startup/system_XMC4400.c ****  * @endcond
  44:../Startup/system_XMC4400.c ****  */
  45:../Startup/system_XMC4400.c **** 
  46:../Startup/system_XMC4400.c **** /*******************************************************************************
  47:../Startup/system_XMC4400.c ****  * HEADER FILES
  48:../Startup/system_XMC4400.c ****  *******************************************************************************/
  49:../Startup/system_XMC4400.c **** #include <string.h>
  50:../Startup/system_XMC4400.c **** 
  51:../Startup/system_XMC4400.c **** #include <XMC4400.h>
  52:../Startup/system_XMC4400.c **** #include "system_XMC4400.h"
  53:../Startup/system_XMC4400.c **** 
  54:../Startup/system_XMC4400.c **** /*******************************************************************************
  55:../Startup/system_XMC4400.c ****  * MACROS
  56:../Startup/system_XMC4400.c ****  *******************************************************************************/
  57:../Startup/system_XMC4400.c **** #define CHIPID_LOC ((uint8_t *)0x20000000UL)
  58:../Startup/system_XMC4400.c **** #define HRPWM_CHARDATA_LOC ((uint8_t *)0x20000084UL)
  59:../Startup/system_XMC4400.c **** 
  60:../Startup/system_XMC4400.c **** #define PMU_FLASH_WS          (0x3U)
  61:../Startup/system_XMC4400.c **** 
  62:../Startup/system_XMC4400.c **** #define FPLL_FREQUENCY        (120000000U)
  63:../Startup/system_XMC4400.c **** #define FOSCREF               (2500000U)
  64:../Startup/system_XMC4400.c **** #define DELAY_CNT_50US_50MHZ  (2500UL)
  65:../Startup/system_XMC4400.c **** #define DELAY_CNT_150US_50MHZ (7500UL)
  66:../Startup/system_XMC4400.c **** #define DELAY_CNT_50US_60MHZ  (3000UL)
  67:../Startup/system_XMC4400.c **** #define DELAY_CNT_50US_90MHZ  (4500UL)
  68:../Startup/system_XMC4400.c **** #define DELAY_CNT_50US_120MHZ (6000UL)
  69:../Startup/system_XMC4400.c **** 
  70:../Startup/system_XMC4400.c **** #define SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
  71:../Startup/system_XMC4400.c ****                                      SCU_PLL_PLLSTAT_PLLLV_Msk | \
  72:../Startup/system_XMC4400.c ****                                      SCU_PLL_PLLSTAT_PLLSP_Msk)
  73:../Startup/system_XMC4400.c **** 
  74:../Startup/system_XMC4400.c **** /*
  75:../Startup/system_XMC4400.c **** //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
  76:../Startup/system_XMC4400.c **** */
  77:../Startup/system_XMC4400.c **** 
  78:../Startup/system_XMC4400.c **** /*
  79:../Startup/system_XMC4400.c **** // <h> Clock configuration
  80:../Startup/system_XMC4400.c **** */
  81:../Startup/system_XMC4400.c **** 
  82:../Startup/system_XMC4400.c **** /*
  83:../Startup/system_XMC4400.c **** //    <o> External crystal frequency [Hz]
  84:../Startup/system_XMC4400.c **** //       <8000000=> 8MHz
  85:../Startup/system_XMC4400.c **** //       <12000000=> 12MHz
  86:../Startup/system_XMC4400.c **** //       <16000000=> 16MHz
  87:../Startup/system_XMC4400.c **** //    <i> Defines external crystal frequency
  88:../Startup/system_XMC4400.c **** //    <i> Default: 8MHz
  89:../Startup/system_XMC4400.c **** */
  90:../Startup/system_XMC4400.c **** #define OSCHP_FREQUENCY (12000000U)
  91:../Startup/system_XMC4400.c **** 
  92:../Startup/system_XMC4400.c **** #if OSCHP_FREQUENCY == 8000000U
  93:../Startup/system_XMC4400.c **** #define USB_PDIV (1U)
  94:../Startup/system_XMC4400.c **** #define USB_NDIV (95U)
  95:../Startup/system_XMC4400.c **** #define USB_DIV (3U)
  96:../Startup/system_XMC4400.c **** 
  97:../Startup/system_XMC4400.c **** #elif OSCHP_FREQUENCY == 12000000U
  98:../Startup/system_XMC4400.c **** #define USB_PDIV (1U)
  99:../Startup/system_XMC4400.c **** #define USB_NDIV (63U)
 100:../Startup/system_XMC4400.c **** #define USB_DIV (3U)
 101:../Startup/system_XMC4400.c **** 
 102:../Startup/system_XMC4400.c **** #elif OSCHP_FREQUENCY == 16000000U
 103:../Startup/system_XMC4400.c **** #define USB_PDIV (1U)
 104:../Startup/system_XMC4400.c **** #define USB_NDIV (47U)
 105:../Startup/system_XMC4400.c **** #define USB_DIV (3U)
 106:../Startup/system_XMC4400.c **** 
 107:../Startup/system_XMC4400.c **** #else
 108:../Startup/system_XMC4400.c **** #error "External crystal frequency not supported"
 109:../Startup/system_XMC4400.c **** 
 110:../Startup/system_XMC4400.c **** #endif
 111:../Startup/system_XMC4400.c **** 
 112:../Startup/system_XMC4400.c **** /*
 113:../Startup/system_XMC4400.c **** //    <o> System clock (fSYS) source selection
 114:../Startup/system_XMC4400.c **** //       <0=> Backup clock (24MHz)
 115:../Startup/system_XMC4400.c **** //       <1=> Maximum clock frequency using PLL (120MHz)
 116:../Startup/system_XMC4400.c **** //    <i> Default: Maximum clock frequency using PLL (120MHz)
 117:../Startup/system_XMC4400.c **** */
 118:../Startup/system_XMC4400.c **** #define SYS_CLOCK_SRC 1
 119:../Startup/system_XMC4400.c **** #define SYS_CLOCK_SRC_OFI 0
 120:../Startup/system_XMC4400.c **** #define SYS_CLOCK_SRC_PLL 1
 121:../Startup/system_XMC4400.c **** 
 122:../Startup/system_XMC4400.c **** /*
 123:../Startup/system_XMC4400.c **** //    <o> Backup clock calibration mode
 124:../Startup/system_XMC4400.c **** //       <0=> Factory calibration
 125:../Startup/system_XMC4400.c **** //       <1=> Automatic calibration
 126:../Startup/system_XMC4400.c **** //    <i> Default: Automatic calibration
 127:../Startup/system_XMC4400.c **** */
 128:../Startup/system_XMC4400.c **** #define FOFI_CALIBRATION_MODE 1
 129:../Startup/system_XMC4400.c **** #define FOFI_CALIBRATION_MODE_FACTORY 0
 130:../Startup/system_XMC4400.c **** #define FOFI_CALIBRATION_MODE_AUTOMATIC 1
 131:../Startup/system_XMC4400.c **** 
 132:../Startup/system_XMC4400.c **** /*
 133:../Startup/system_XMC4400.c **** //    <o> Standby clock (fSTDBY) source selection
 134:../Startup/system_XMC4400.c **** //       <0=> Internal slow oscillator (32768Hz)
 135:../Startup/system_XMC4400.c **** //       <1=> External crystal (32768Hz)
 136:../Startup/system_XMC4400.c **** //    <i> Default: Internal slow oscillator (32768Hz)
 137:../Startup/system_XMC4400.c **** */
 138:../Startup/system_XMC4400.c **** #define STDBY_CLOCK_SRC 0
 139:../Startup/system_XMC4400.c **** #define STDBY_CLOCK_SRC_OSI 0
 140:../Startup/system_XMC4400.c **** #define STDBY_CLOCK_SRC_OSCULP 1
 141:../Startup/system_XMC4400.c **** 
 142:../Startup/system_XMC4400.c **** /*
 143:../Startup/system_XMC4400.c **** //    <o> PLL clock source selection
 144:../Startup/system_XMC4400.c **** //       <0=> External crystal
 145:../Startup/system_XMC4400.c **** //       <1=> External direct input
 146:../Startup/system_XMC4400.c **** //       <2=> Internal fast oscillator
 147:../Startup/system_XMC4400.c **** //    <i> Default: External crystal
 148:../Startup/system_XMC4400.c **** */
 149:../Startup/system_XMC4400.c **** #define PLL_CLOCK_SRC 0
 150:../Startup/system_XMC4400.c **** #define PLL_CLOCK_SRC_EXT_XTAL 0
 151:../Startup/system_XMC4400.c **** #define PLL_CLOCK_SRC_EXT_DIRECT 1
 152:../Startup/system_XMC4400.c **** #define PLL_CLOCK_SRC_OFI 2
 153:../Startup/system_XMC4400.c **** 
 154:../Startup/system_XMC4400.c **** #if PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL
 155:../Startup/system_XMC4400.c **** #if OSCHP_FREQUENCY == 8000000U
 156:../Startup/system_XMC4400.c **** #define PLL_PDIV (1U)
 157:../Startup/system_XMC4400.c **** #define PLL_NDIV (89U)
 158:../Startup/system_XMC4400.c **** #define PLL_K2DIV (2U)
 159:../Startup/system_XMC4400.c **** 
 160:../Startup/system_XMC4400.c **** #elif OSCHP_FREQUENCY == 12000000U
 161:../Startup/system_XMC4400.c **** #define PLL_PDIV (1U)
 162:../Startup/system_XMC4400.c **** #define PLL_NDIV (79U)
 163:../Startup/system_XMC4400.c **** #define PLL_K2DIV (3U)
 164:../Startup/system_XMC4400.c **** 
 165:../Startup/system_XMC4400.c **** #elif OSCHP_FREQUENCY == 16000000U
 166:../Startup/system_XMC4400.c **** #define PLL_PDIV (1U)
 167:../Startup/system_XMC4400.c **** #define PLL_NDIV (59U)
 168:../Startup/system_XMC4400.c **** #define PLL_K2DIV (3U)
 169:../Startup/system_XMC4400.c **** 
 170:../Startup/system_XMC4400.c **** #else
 171:../Startup/system_XMC4400.c **** #error "External crystal frequency not supported"
 172:../Startup/system_XMC4400.c **** 
 173:../Startup/system_XMC4400.c **** #endif
 174:../Startup/system_XMC4400.c **** 
 175:../Startup/system_XMC4400.c **** #define VCO ((OSCHP_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 176:../Startup/system_XMC4400.c **** 
 177:../Startup/system_XMC4400.c **** #else /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL */
 178:../Startup/system_XMC4400.c **** 
 179:../Startup/system_XMC4400.c **** #define PLL_PDIV (1U)
 180:../Startup/system_XMC4400.c **** #define PLL_NDIV (39U)
 181:../Startup/system_XMC4400.c **** #define PLL_K2DIV (3U)
 182:../Startup/system_XMC4400.c **** 
 183:../Startup/system_XMC4400.c **** #define VCO ((OFI_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 184:../Startup/system_XMC4400.c **** 
 185:../Startup/system_XMC4400.c **** #endif /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_OFI */
 186:../Startup/system_XMC4400.c **** 
 187:../Startup/system_XMC4400.c **** #define PLL_K2DIV_0 ((VCO / OFI_FREQUENCY) - 1UL)
 188:../Startup/system_XMC4400.c **** #define PLL_K2DIV_1 ((VCO / 60000000U) - 1UL)
 189:../Startup/system_XMC4400.c **** #define PLL_K2DIV_2 ((VCO / 90000000U) - 1UL)
 190:../Startup/system_XMC4400.c **** 
 191:../Startup/system_XMC4400.c **** #define SCU_CLK_CLKCLR_ENABLE_USBCLK SCU_CLK_CLKCLR_USBCDI_Msk
 192:../Startup/system_XMC4400.c **** #define SCU_CLK_CLKCLR_ENABLE_ETHCLK SCU_CLK_CLKCLR_ETH0CDI_Msk
 193:../Startup/system_XMC4400.c **** #define SCU_CLK_CLKCLR_ENABLE_CCUCLK SCU_CLK_CLKCLR_CCUCDI_Msk
 194:../Startup/system_XMC4400.c **** #define SCU_CLK_CLKCLR_ENABLE_WDTCLK SCU_CLK_CLKCLR_WDTCDI_Msk
 195:../Startup/system_XMC4400.c **** 
 196:../Startup/system_XMC4400.c **** #define SCU_CLK_USBCLKCR_USBSEL_USBPLL (0U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 197:../Startup/system_XMC4400.c **** #define SCU_CLK_USBCLKCR_USBSEL_PLL    (1U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 198:../Startup/system_XMC4400.c **** 
 199:../Startup/system_XMC4400.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_OFI      (0U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 200:../Startup/system_XMC4400.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_STANDBY  (1U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 201:../Startup/system_XMC4400.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_PLL      (2U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 202:../Startup/system_XMC4400.c **** 
 203:../Startup/system_XMC4400.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_SYS      (0U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 204:../Startup/system_XMC4400.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_USBPLL   (2U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 205:../Startup/system_XMC4400.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_PLL      (3U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 206:../Startup/system_XMC4400.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_STANDBY  (4U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 207:../Startup/system_XMC4400.c **** 
 208:../Startup/system_XMC4400.c **** #define EXTCLK_PIN_P0_8  (0)
 209:../Startup/system_XMC4400.c **** #define EXTCLK_PIN_P1_15 (1)
 210:../Startup/system_XMC4400.c **** 
 211:../Startup/system_XMC4400.c **** /*
 212:../Startup/system_XMC4400.c **** //    <h> Clock tree
 213:../Startup/system_XMC4400.c **** //        <o1.0> CPU clock divider
 214:../Startup/system_XMC4400.c **** //                   <0=> fCPU = fSYS
 215:../Startup/system_XMC4400.c **** //                   <1=> fCPU = fSYS / 2
 216:../Startup/system_XMC4400.c **** //        <o2.0>  Peripheral clock divider
 217:../Startup/system_XMC4400.c **** //                     <0=> fPB	= fCPU
 218:../Startup/system_XMC4400.c **** //                     <1=> fPB	= fCPU / 2
 219:../Startup/system_XMC4400.c **** //        <e.4> Enable CCU clock
 220:../Startup/system_XMC4400.c **** //             <o3.0>  CCU clock divider
 221:../Startup/system_XMC4400.c **** //                     <0=> fCCU = fCPU
 222:../Startup/system_XMC4400.c **** //                     <1=> fCCU = fCPU / 2
 223:../Startup/system_XMC4400.c **** //        </e>
 224:../Startup/system_XMC4400.c **** //        <e.5> Enable WDT clock
 225:../Startup/system_XMC4400.c **** //             <o4.0..7>  WDT clock divider <1-256><#-1>
 226:../Startup/system_XMC4400.c **** //             <o4.16..17> WDT clock source <0=> fOFI
 227:../Startup/system_XMC4400.c **** //                                          <1=> fSTDBY
 228:../Startup/system_XMC4400.c **** //                                          <2=> fPLL
 229:../Startup/system_XMC4400.c **** //        </e>
 230:../Startup/system_XMC4400.c **** //        <e.2> Enable ETH clock
 231:../Startup/system_XMC4400.c **** //        </e>
 232:../Startup/system_XMC4400.c **** //        <e.0> Enable USB clock
 233:../Startup/system_XMC4400.c **** //             <o5.16> USB clock source <0=> USBPLL
 234:../Startup/system_XMC4400.c **** //                                      <1=> PLL
 235:../Startup/system_XMC4400.c **** //        </e>
 236:../Startup/system_XMC4400.c **** //        <e6> External Clock configuration
 237:../Startup/system_XMC4400.c **** //            <o7.0..2> External clock source selection
 238:../Startup/system_XMC4400.c **** //                  <0=> System clock
 239:../Startup/system_XMC4400.c **** //                  <2=> USB PLL clock
 240:../Startup/system_XMC4400.c **** //                  <3=> PLL clock
 241:../Startup/system_XMC4400.c **** //                  <4=> Standby clock
 242:../Startup/system_XMC4400.c **** //            <o7.16..24> External clock divider <1-512><#-1>
 243:../Startup/system_XMC4400.c **** //            <i> Only valid for USB PLL and PLL clocks
 244:../Startup/system_XMC4400.c **** //            <o8.0> External Pin Selection
 245:../Startup/system_XMC4400.c **** //                  <0=> P0.8
 246:../Startup/system_XMC4400.c **** //                  <1=> P1.15
 247:../Startup/system_XMC4400.c **** //        </e>
 248:../Startup/system_XMC4400.c **** //    </h>
 249:../Startup/system_XMC4400.c **** */
 250:../Startup/system_XMC4400.c **** #define ENABLE_SCUCLK (0U)
 251:../Startup/system_XMC4400.c **** #define CPUCLKDIV (0U)
 252:../Startup/system_XMC4400.c **** #define PBCLKDIV (0U)
 253:../Startup/system_XMC4400.c **** #define CCUCLKDIV (0U)
 254:../Startup/system_XMC4400.c **** #define WDTCLKDIV (0U | SCU_CLK_WDTCLKCR_WDTSEL_OFI)
 255:../Startup/system_XMC4400.c **** #define USBCLKDIV (0U | SCU_CLK_USBCLKCR_USBSEL_USBPLL | USB_DIV)
 256:../Startup/system_XMC4400.c **** 
 257:../Startup/system_XMC4400.c **** #define ENABLE_EXTCLK (0U)
 258:../Startup/system_XMC4400.c **** #define EXTCLKDIV (0U | SCU_CLK_EXTCLKCR_ECKSEL_SYS)
 259:../Startup/system_XMC4400.c **** #define EXTCLK_PIN (0U)
 260:../Startup/system_XMC4400.c **** 
 261:../Startup/system_XMC4400.c **** #define ENABLE_PLL \
 262:../Startup/system_XMC4400.c ****     (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL) || \
 263:../Startup/system_XMC4400.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Ms
 264:../Startup/system_XMC4400.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_WDTCEN_Msk) != 0) && ((WDTCLKDIV & SCU_CLK_WDTCLKCR_WDTSEL_Ms
 265:../Startup/system_XMC4400.c **** 
 266:../Startup/system_XMC4400.c **** /*
 267:../Startup/system_XMC4400.c **** // </h>
 268:../Startup/system_XMC4400.c **** */
 269:../Startup/system_XMC4400.c **** 
 270:../Startup/system_XMC4400.c **** /*
 271:../Startup/system_XMC4400.c **** //-------- <<< end of configuration section >>> ------------------
 272:../Startup/system_XMC4400.c **** */
 273:../Startup/system_XMC4400.c **** 
 274:../Startup/system_XMC4400.c **** /*******************************************************************************
 275:../Startup/system_XMC4400.c ****  * GLOBAL VARIABLES
 276:../Startup/system_XMC4400.c ****  *******************************************************************************/
 277:../Startup/system_XMC4400.c **** #if defined ( __CC_ARM )
 278:../Startup/system_XMC4400.c **** uint32_t SystemCoreClock __attribute__((at(0x2000FFC0)));
 279:../Startup/system_XMC4400.c **** uint8_t g_chipid[16] __attribute__((at(0x2000FFC4)));
 280:../Startup/system_XMC4400.c **** uint32_t g_hrpwm_char_data[3] __attribute__((at(0x2000FFD4)));
 281:../Startup/system_XMC4400.c **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 282:../Startup/system_XMC4400.c **** uint32_t SystemCoreClock __attribute__((section(".ARM.__at_0x2000FFC0")));
 283:../Startup/system_XMC4400.c **** uint8_t g_chipid[16] __attribute__((section(".ARM.__at_0x2000FFC4")));
 284:../Startup/system_XMC4400.c **** uint32_t g_hrpwm_char_data[3] __attribute__((section(".ARM.__at_0x2000FFD4")));
 285:../Startup/system_XMC4400.c **** #elif defined ( __ICCARM__ )
 286:../Startup/system_XMC4400.c **** __no_init uint32_t SystemCoreClock;
 287:../Startup/system_XMC4400.c **** __no_init uint8_t g_chipid[16];
 288:../Startup/system_XMC4400.c **** __no_init uint32_t g_hrpwm_char_data[3];
 289:../Startup/system_XMC4400.c **** #elif defined ( __GNUC__ )
 290:../Startup/system_XMC4400.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
 291:../Startup/system_XMC4400.c **** uint8_t g_chipid[16] __attribute__((section(".no_init")));
 292:../Startup/system_XMC4400.c **** uint32_t g_hrpwm_char_data[3] __attribute__((section(".no_init")));
 293:../Startup/system_XMC4400.c **** #elif defined ( __TASKING__ )
 294:../Startup/system_XMC4400.c **** uint32_t SystemCoreClock __at( 0x2000FFC0 );
 295:../Startup/system_XMC4400.c **** uint8_t g_chipid[16] __at( 0x2000FFC4 );
 296:../Startup/system_XMC4400.c **** uint32_t g_hrpwm_char_data[3] __at( 0x2000FFD4 );
 297:../Startup/system_XMC4400.c **** #endif
 298:../Startup/system_XMC4400.c **** 
 299:../Startup/system_XMC4400.c **** extern uint32_t __Vectors;
 300:../Startup/system_XMC4400.c **** 
 301:../Startup/system_XMC4400.c **** /*******************************************************************************
 302:../Startup/system_XMC4400.c ****  * LOCAL FUNCTIONS
 303:../Startup/system_XMC4400.c ****  *******************************************************************************/
 304:../Startup/system_XMC4400.c **** static void delay(uint32_t cycles)
 305:../Startup/system_XMC4400.c **** {
  46              	 .loc 1 305 0
  47              	 .cfi_startproc
  48              	 
  49              	 
  50              	 
  51 0000 80B4     	 push {r7}
  52              	.LCFI0:
  53              	 .cfi_def_cfa_offset 4
  54              	 .cfi_offset 7,-4
  55 0002 85B0     	 sub sp,sp,#20
  56              	.LCFI1:
  57              	 .cfi_def_cfa_offset 24
  58 0004 00AF     	 add r7,sp,#0
  59              	.LCFI2:
  60              	 .cfi_def_cfa_register 7
  61 0006 7860     	 str r0,[r7,#4]
 306:../Startup/system_XMC4400.c ****   volatile uint32_t i;
 307:../Startup/system_XMC4400.c **** 
 308:../Startup/system_XMC4400.c ****   for(i = 0UL; i < cycles ;++i)
  62              	 .loc 1 308 0
  63 0008 0023     	 movs r3,#0
  64 000a FB60     	 str r3,[r7,#12]
  65 000c 03E0     	 b .L2
  66              	.L3:
 309:../Startup/system_XMC4400.c ****   {
 310:../Startup/system_XMC4400.c ****     __NOP();
  67              	 .loc 1 310 0 discriminator 3
  68              	
  69 000e 00BF     	 nop
  70              	
 308:../Startup/system_XMC4400.c ****   {
  71              	 .loc 1 308 0 discriminator 3
  72              	 .thumb
  73 0010 FB68     	 ldr r3,[r7,#12]
  74 0012 0133     	 adds r3,r3,#1
  75 0014 FB60     	 str r3,[r7,#12]
  76              	.L2:
 308:../Startup/system_XMC4400.c ****   {
  77              	 .loc 1 308 0 is_stmt 0 discriminator 1
  78 0016 FA68     	 ldr r2,[r7,#12]
  79 0018 7B68     	 ldr r3,[r7,#4]
  80 001a 9A42     	 cmp r2,r3
  81 001c F7D3     	 bcc .L3
 311:../Startup/system_XMC4400.c ****   }
 312:../Startup/system_XMC4400.c **** }
  82              	 .loc 1 312 0 is_stmt 1
  83 001e 1437     	 adds r7,r7,#20
  84              	.LCFI3:
  85              	 .cfi_def_cfa_offset 4
  86 0020 BD46     	 mov sp,r7
  87              	.LCFI4:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0022 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI5:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 0026 7047     	 bx lr
  95              	 .cfi_endproc
  96              	.LFE130:
  98              	 .section .text.SystemInit,"ax",%progbits
  99              	 .align 2
 100              	 .weak SystemInit
 101              	 .thumb
 102              	 .thumb_func
 104              	SystemInit:
 105              	.LFB131:
 313:../Startup/system_XMC4400.c **** 
 314:../Startup/system_XMC4400.c **** /*******************************************************************************
 315:../Startup/system_XMC4400.c ****  * API IMPLEMENTATION
 316:../Startup/system_XMC4400.c ****  *******************************************************************************/
 317:../Startup/system_XMC4400.c **** 
 318:../Startup/system_XMC4400.c **** __WEAK void SystemInit(void)
 319:../Startup/system_XMC4400.c **** {
 106              	 .loc 1 319 0
 107              	 .cfi_startproc
 108              	 
 109              	 
 110 0000 98B5     	 push {r3,r4,r7,lr}
 111              	.LCFI6:
 112              	 .cfi_def_cfa_offset 16
 113              	 .cfi_offset 3,-16
 114              	 .cfi_offset 4,-12
 115              	 .cfi_offset 7,-8
 116              	 .cfi_offset 14,-4
 117 0002 00AF     	 add r7,sp,#0
 118              	.LCFI7:
 119              	 .cfi_def_cfa_register 7
 320:../Startup/system_XMC4400.c ****   memcpy(g_chipid, CHIPID_LOC, 16);
 120              	 .loc 1 320 0
 121 0004 084A     	 ldr r2,.L5
 122 0006 4FF00053 	 mov r3,#536870912
 123 000a 1446     	 mov r4,r2
 124 000c 0FCB     	 ldmia r3,{r0,r1,r2,r3}
 125 000e 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 321:../Startup/system_XMC4400.c ****   memcpy(g_hrpwm_char_data, HRPWM_CHARDATA_LOC, 12);
 126              	 .loc 1 321 0
 127 0012 064B     	 ldr r3,.L5+4
 128 0014 064A     	 ldr r2,.L5+8
 129 0016 07CA     	 ldmia r2,{r0,r1,r2}
 130 0018 83E80700 	 stmia r3,{r0,r1,r2}
 322:../Startup/system_XMC4400.c **** 
 323:../Startup/system_XMC4400.c ****   SystemCoreSetup();
 131              	 .loc 1 323 0
 132 001c FFF7FEFF 	 bl SystemCoreSetup
 324:../Startup/system_XMC4400.c ****   SystemCoreClockSetup(); 
 133              	 .loc 1 324 0
 134 0020 FFF7FEFF 	 bl SystemCoreClockSetup
 325:../Startup/system_XMC4400.c **** }
 135              	 .loc 1 325 0
 136 0024 98BD     	 pop {r3,r4,r7,pc}
 137              	.L6:
 138 0026 00BF     	 .align 2
 139              	.L5:
 140 0028 00000000 	 .word g_chipid
 141 002c 00000000 	 .word g_hrpwm_char_data
 142 0030 84000020 	 .word 536871044
 143              	 .cfi_endproc
 144              	.LFE131:
 146              	 .section .text.SystemCoreSetup,"ax",%progbits
 147              	 .align 2
 148              	 .weak SystemCoreSetup
 149              	 .thumb
 150              	 .thumb_func
 152              	SystemCoreSetup:
 153              	.LFB132:
 326:../Startup/system_XMC4400.c **** 
 327:../Startup/system_XMC4400.c **** __WEAK void SystemCoreSetup(void)
 328:../Startup/system_XMC4400.c **** {
 154              	 .loc 1 328 0
 155              	 .cfi_startproc
 156              	 
 157              	 
 158              	 
 159 0000 80B4     	 push {r7}
 160              	.LCFI8:
 161              	 .cfi_def_cfa_offset 4
 162              	 .cfi_offset 7,-4
 163 0002 83B0     	 sub sp,sp,#12
 164              	.LCFI9:
 165              	 .cfi_def_cfa_offset 16
 166 0004 00AF     	 add r7,sp,#0
 167              	.LCFI10:
 168              	 .cfi_def_cfa_register 7
 169              	.LBB8:
 170              	.LBB9:
 171              	 .file 2 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.2
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     13. February 2017
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 172              	 .loc 2 142 0
 173              	
 174 0006 72B6     	 cpsid i
 175              	
 176              	 .thumb
 177              	.LBE9:
 178              	.LBE8:
 329:../Startup/system_XMC4400.c ****   uint32_t temp;
 330:../Startup/system_XMC4400.c **** 	
 331:../Startup/system_XMC4400.c ****   /* relocate vector table */
 332:../Startup/system_XMC4400.c ****   __disable_irq();
 333:../Startup/system_XMC4400.c ****   SCB->VTOR = (uint32_t)(&__Vectors);
 179              	 .loc 1 333 0
 180 0008 164B     	 ldr r3,.L8
 181 000a 174A     	 ldr r2,.L8+4
 182 000c 9A60     	 str r2,[r3,#8]
 183              	.LBB10:
 184              	.LBB11:
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 185              	 .loc 2 820 0
 186              	
 187 000e BFF34F8F 	 dsb 0xF
 188              	
 189              	 .thumb
 190              	.LBE11:
 191              	.LBE10:
 192              	.LBB12:
 193              	.LBB13:
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194              	 .loc 2 131 0
 195              	
 196 0012 62B6     	 cpsie i
 197              	
 198              	 .thumb
 199              	.LBE13:
 200              	.LBE12:
 334:../Startup/system_XMC4400.c ****   __DSB();
 335:../Startup/system_XMC4400.c ****   __enable_irq();
 336:../Startup/system_XMC4400.c ****     
 337:../Startup/system_XMC4400.c ****   /* __FPU_PRESENT = 1 defined in device header file */
 338:../Startup/system_XMC4400.c ****   /* __FPU_USED value depends on compiler/linker options. */
 339:../Startup/system_XMC4400.c ****   /* __FPU_USED = 0 if -mfloat-abi=soft is selected */
 340:../Startup/system_XMC4400.c ****   /* __FPU_USED = 1 if -mfloat-abi=softfp or –mfloat-abi=hard */
 341:../Startup/system_XMC4400.c **** 
 342:../Startup/system_XMC4400.c **** #if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
 343:../Startup/system_XMC4400.c ****   SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
 201              	 .loc 1 343 0
 202 0014 134A     	 ldr r2,.L8
 203 0016 134B     	 ldr r3,.L8
 204 0018 D3F88830 	 ldr r3,[r3,#136]
 205 001c 43F47003 	 orr r3,r3,#15728640
 206 0020 C2F88830 	 str r3,[r2,#136]
 344:../Startup/system_XMC4400.c ****                  (3UL << 11*2)  );               /* set CP11 Full Access */
 345:../Startup/system_XMC4400.c **** #else
 346:../Startup/system_XMC4400.c ****   SCB->CPACR = 0;
 347:../Startup/system_XMC4400.c **** #endif
 348:../Startup/system_XMC4400.c **** 
 349:../Startup/system_XMC4400.c ****   /* Enable unaligned memory access - SCB_CCR.UNALIGN_TRP = 0 */
 350:../Startup/system_XMC4400.c ****   SCB->CCR &= ~(SCB_CCR_UNALIGN_TRP_Msk);
 207              	 .loc 1 350 0
 208 0024 0F4A     	 ldr r2,.L8
 209 0026 0F4B     	 ldr r3,.L8
 210 0028 5B69     	 ldr r3,[r3,#20]
 211 002a 23F00803 	 bic r3,r3,#8
 212 002e 5361     	 str r3,[r2,#20]
 351:../Startup/system_XMC4400.c **** 
 352:../Startup/system_XMC4400.c ****   temp = FLASH0->FCON;
 213              	 .loc 1 352 0
 214 0030 0E4B     	 ldr r3,.L8+8
 215 0032 03F58053 	 add r3,r3,#4096
 216 0036 1433     	 adds r3,r3,#20
 217 0038 1B68     	 ldr r3,[r3]
 218 003a 7B60     	 str r3,[r7,#4]
 353:../Startup/system_XMC4400.c ****   temp &= ~FLASH_FCON_WSPFLASH_Msk;
 219              	 .loc 1 353 0
 220 003c 7B68     	 ldr r3,[r7,#4]
 221 003e 23F00F03 	 bic r3,r3,#15
 222 0042 7B60     	 str r3,[r7,#4]
 354:../Startup/system_XMC4400.c ****   temp |= PMU_FLASH_WS;
 223              	 .loc 1 354 0
 224 0044 7B68     	 ldr r3,[r7,#4]
 225 0046 43F00303 	 orr r3,r3,#3
 226 004a 7B60     	 str r3,[r7,#4]
 355:../Startup/system_XMC4400.c ****   FLASH0->FCON = temp;
 227              	 .loc 1 355 0
 228 004c 074B     	 ldr r3,.L8+8
 229 004e 03F58053 	 add r3,r3,#4096
 230 0052 1433     	 adds r3,r3,#20
 231 0054 7A68     	 ldr r2,[r7,#4]
 232 0056 1A60     	 str r2,[r3]
 356:../Startup/system_XMC4400.c **** }
 233              	 .loc 1 356 0
 234 0058 0C37     	 adds r7,r7,#12
 235              	.LCFI11:
 236              	 .cfi_def_cfa_offset 4
 237 005a BD46     	 mov sp,r7
 238              	.LCFI12:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 005c 5DF8047B 	 ldr r7,[sp],#4
 242              	.LCFI13:
 243              	 .cfi_restore 7
 244              	 .cfi_def_cfa_offset 0
 245 0060 7047     	 bx lr
 246              	.L9:
 247 0062 00BF     	 .align 2
 248              	.L8:
 249 0064 00ED00E0 	 .word -536810240
 250 0068 00000000 	 .word __Vectors
 251 006c 00100058 	 .word 1476399104
 252              	 .cfi_endproc
 253              	.LFE132:
 255              	 .section .text.SystemCoreClockSetup,"ax",%progbits
 256              	 .align 2
 257              	 .weak SystemCoreClockSetup
 258              	 .thumb
 259              	 .thumb_func
 261              	SystemCoreClockSetup:
 262              	.LFB133:
 357:../Startup/system_XMC4400.c **** 
 358:../Startup/system_XMC4400.c **** __WEAK void SystemCoreClockSetup(void)
 359:../Startup/system_XMC4400.c **** {
 263              	 .loc 1 359 0
 264              	 .cfi_startproc
 265              	 
 266              	 
 267 0000 80B5     	 push {r7,lr}
 268              	.LCFI14:
 269              	 .cfi_def_cfa_offset 8
 270              	 .cfi_offset 7,-8
 271              	 .cfi_offset 14,-4
 272 0002 00AF     	 add r7,sp,#0
 273              	.LCFI15:
 274              	 .cfi_def_cfa_register 7
 360:../Startup/system_XMC4400.c **** #if FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_FACTORY
 361:../Startup/system_XMC4400.c ****   /* Enable factory calibration */
 362:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FOTR_Msk;
 363:../Startup/system_XMC4400.c **** #else
 364:../Startup/system_XMC4400.c ****   /* Automatic calibration uses the fSTDBY */
 365:../Startup/system_XMC4400.c **** 
 366:../Startup/system_XMC4400.c ****   /* Enable HIB domain */
 367:../Startup/system_XMC4400.c ****   /* Power up HIB domain if and only if it is currently powered down */
 368:../Startup/system_XMC4400.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 275              	 .loc 1 368 0
 276 0004 734B     	 ldr r3,.L21
 277 0006 1B68     	 ldr r3,[r3]
 278 0008 03F00103 	 and r3,r3,#1
 279 000c 002B     	 cmp r3,#0
 280 000e 0CD1     	 bne .L11
 369:../Startup/system_XMC4400.c ****   {
 370:../Startup/system_XMC4400.c ****     SCU_POWER->PWRSET |= SCU_POWER_PWRSET_HIB_Msk;
 281              	 .loc 1 370 0
 282 0010 704A     	 ldr r2,.L21
 283 0012 704B     	 ldr r3,.L21
 284 0014 5B68     	 ldr r3,[r3,#4]
 285 0016 43F00103 	 orr r3,r3,#1
 286 001a 5360     	 str r3,[r2,#4]
 371:../Startup/system_XMC4400.c **** 
 372:../Startup/system_XMC4400.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 287              	 .loc 1 372 0
 288 001c 00BF     	 nop
 289              	.L12:
 290              	 .loc 1 372 0 is_stmt 0 discriminator 1
 291 001e 6D4B     	 ldr r3,.L21
 292 0020 1B68     	 ldr r3,[r3]
 293 0022 03F00103 	 and r3,r3,#1
 294 0026 002B     	 cmp r3,#0
 295 0028 F9D0     	 beq .L12
 296              	.L11:
 373:../Startup/system_XMC4400.c ****     {
 374:../Startup/system_XMC4400.c ****       /* wait until HIB domain is enabled */
 375:../Startup/system_XMC4400.c ****     }
 376:../Startup/system_XMC4400.c ****   }
 377:../Startup/system_XMC4400.c **** 
 378:../Startup/system_XMC4400.c ****   /* Remove the reset only if HIB domain were in a state of reset */
 379:../Startup/system_XMC4400.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 297              	 .loc 1 379 0 is_stmt 1
 298 002a 6B4B     	 ldr r3,.L21+4
 299 002c 1B68     	 ldr r3,[r3]
 300 002e 03F40073 	 and r3,r3,#512
 301 0032 002B     	 cmp r3,#0
 302 0034 09D0     	 beq .L13
 380:../Startup/system_XMC4400.c ****   {
 381:../Startup/system_XMC4400.c ****     SCU_RESET->RSTCLR |= SCU_RESET_RSTCLR_HIBRS_Msk;
 303              	 .loc 1 381 0
 304 0036 684A     	 ldr r2,.L21+4
 305 0038 674B     	 ldr r3,.L21+4
 306 003a 9B68     	 ldr r3,[r3,#8]
 307 003c 43F40073 	 orr r3,r3,#512
 308 0040 9360     	 str r3,[r2,#8]
 382:../Startup/system_XMC4400.c ****     delay(DELAY_CNT_150US_50MHZ);
 309              	 .loc 1 382 0
 310 0042 41F64C50 	 movw r0,#7500
 311 0046 FFF7FEFF 	 bl delay
 312              	.L13:
 383:../Startup/system_XMC4400.c ****   }
 384:../Startup/system_XMC4400.c ****   
 385:../Startup/system_XMC4400.c **** #if STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP
 386:../Startup/system_XMC4400.c ****   /* Enable OSC_ULP */
 387:../Startup/system_XMC4400.c ****   if ((SCU_HIBERNATE->OSCULCTRL & SCU_HIBERNATE_OSCULCTRL_MODE_Msk) != 0UL)
 388:../Startup/system_XMC4400.c ****   {
 389:../Startup/system_XMC4400.c ****     /*enable OSC_ULP*/
 390:../Startup/system_XMC4400.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 391:../Startup/system_XMC4400.c ****     {
 392:../Startup/system_XMC4400.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 393:../Startup/system_XMC4400.c ****     }
 394:../Startup/system_XMC4400.c ****     SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 395:../Startup/system_XMC4400.c **** 
 396:../Startup/system_XMC4400.c ****     /* Check if the clock is OK using OSCULP Oscillator Watchdog*/
 397:../Startup/system_XMC4400.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 398:../Startup/system_XMC4400.c ****     {
 399:../Startup/system_XMC4400.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 400:../Startup/system_XMC4400.c ****     }
 401:../Startup/system_XMC4400.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 402:../Startup/system_XMC4400.c **** 
 403:../Startup/system_XMC4400.c ****     /* wait till clock is stable */
 404:../Startup/system_XMC4400.c ****     do
 405:../Startup/system_XMC4400.c ****     {
 406:../Startup/system_XMC4400.c ****       while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 407:../Startup/system_XMC4400.c ****       {
 408:../Startup/system_XMC4400.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 409:../Startup/system_XMC4400.c ****       }
 410:../Startup/system_XMC4400.c ****       SCU_HIBERNATE->HDCLR |= SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 411:../Startup/system_XMC4400.c **** 
 412:../Startup/system_XMC4400.c ****       delay(DELAY_CNT_50US_50MHZ);
 413:../Startup/system_XMC4400.c **** 
 414:../Startup/system_XMC4400.c ****     } while ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) != 0UL);
 415:../Startup/system_XMC4400.c **** 
 416:../Startup/system_XMC4400.c ****   }
 417:../Startup/system_XMC4400.c **** 
 418:../Startup/system_XMC4400.c ****   /* now OSC_ULP is running and can be used*/
 419:../Startup/system_XMC4400.c ****   /* Select OSC_ULP as the clock source for RTC and STDBY*/
 420:../Startup/system_XMC4400.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 421:../Startup/system_XMC4400.c ****   {
 422:../Startup/system_XMC4400.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 423:../Startup/system_XMC4400.c ****   }
 424:../Startup/system_XMC4400.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_RCS_Msk | SCU_HIBERNATE_HDCR_STDBYSEL_Msk;
 425:../Startup/system_XMC4400.c **** 
 426:../Startup/system_XMC4400.c **** #endif /* STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP */
 427:../Startup/system_XMC4400.c **** 
 428:../Startup/system_XMC4400.c ****   /* Enable automatic calibration of internal fast oscillator */
 429:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_AOTREN_Msk;
 313              	 .loc 1 429 0
 314 004a 644A     	 ldr r2,.L21+8
 315 004c 634B     	 ldr r3,.L21+8
 316 004e 5B68     	 ldr r3,[r3,#4]
 317 0050 43F40023 	 orr r3,r3,#524288
 318 0054 5360     	 str r3,[r2,#4]
 430:../Startup/system_XMC4400.c **** #endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */
 431:../Startup/system_XMC4400.c **** 
 432:../Startup/system_XMC4400.c ****   delay(DELAY_CNT_50US_50MHZ);
 319              	 .loc 1 432 0
 320 0056 40F6C410 	 movw r0,#2500
 321 005a FFF7FEFF 	 bl delay
 433:../Startup/system_XMC4400.c **** 
 434:../Startup/system_XMC4400.c **** #if ENABLE_PLL
 435:../Startup/system_XMC4400.c **** 
 436:../Startup/system_XMC4400.c ****   /* enable PLL */
 437:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 322              	 .loc 1 437 0
 323 005e 5F4A     	 ldr r2,.L21+8
 324 0060 5E4B     	 ldr r3,.L21+8
 325 0062 5B68     	 ldr r3,[r3,#4]
 326 0064 23F48033 	 bic r3,r3,#65536
 327 0068 23F00203 	 bic r3,r3,#2
 328 006c 5360     	 str r3,[r2,#4]
 438:../Startup/system_XMC4400.c **** 
 439:../Startup/system_XMC4400.c **** #if PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI
 440:../Startup/system_XMC4400.c ****   /* enable OSC_HP */
 441:../Startup/system_XMC4400.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 329              	 .loc 1 441 0
 330 006e 5C4B     	 ldr r3,.L21+12
 331 0070 5B68     	 ldr r3,[r3,#4]
 332 0072 03F03003 	 and r3,r3,#48
 333 0076 002B     	 cmp r3,#0
 334 0078 29D0     	 beq .L14
 442:../Startup/system_XMC4400.c ****   {
 443:../Startup/system_XMC4400.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 335              	 .loc 1 443 0
 336 007a 594A     	 ldr r2,.L21+12
 337 007c 584B     	 ldr r3,.L21+12
 338 007e 5B68     	 ldr r3,[r3,#4]
 339 0080 23F47023 	 bic r3,r3,#983040
 340 0084 23F03003 	 bic r3,r3,#48
 341 0088 5360     	 str r3,[r2,#4]
 444:../Startup/system_XMC4400.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 342              	 .loc 1 444 0
 343 008a FFF7FEFF 	 bl OSCHP_GetFrequency
 344 008e 0246     	 mov r2,r0
 345 0090 544B     	 ldr r3,.L21+16
 346 0092 A3FB0223 	 umull r2,r3,r3,r2
 347 0096 1B0D     	 lsrs r3,r3,#20
 348 0098 013B     	 subs r3,r3,#1
 349 009a 1B04     	 lsls r3,r3,#16
 350 009c 5049     	 ldr r1,.L21+12
 351 009e 504A     	 ldr r2,.L21+12
 352 00a0 5268     	 ldr r2,[r2,#4]
 353 00a2 1343     	 orrs r3,r3,r2
 354 00a4 4B60     	 str r3,[r1,#4]
 445:../Startup/system_XMC4400.c **** 
 446:../Startup/system_XMC4400.c ****     /* select OSC_HP clock as PLL input */
 447:../Startup/system_XMC4400.c ****     SCU_PLL->PLLCON2 &= ~SCU_PLL_PLLCON2_PINSEL_Msk;
 355              	 .loc 1 447 0
 356 00a6 4D4A     	 ldr r2,.L21+8
 357 00a8 4C4B     	 ldr r3,.L21+8
 358 00aa DB68     	 ldr r3,[r3,#12]
 359 00ac 23F00103 	 bic r3,r3,#1
 360 00b0 D360     	 str r3,[r2,#12]
 448:../Startup/system_XMC4400.c **** 
 449:../Startup/system_XMC4400.c ****     /* restart OSC Watchdog */
 450:../Startup/system_XMC4400.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 361              	 .loc 1 450 0
 362 00b2 4A4A     	 ldr r2,.L21+8
 363 00b4 494B     	 ldr r3,.L21+8
 364 00b6 5B68     	 ldr r3,[r3,#4]
 365 00b8 23F40033 	 bic r3,r3,#131072
 366 00bc 5360     	 str r3,[r2,#4]
 451:../Startup/system_XMC4400.c **** 
 452:../Startup/system_XMC4400.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 367              	 .loc 1 452 0
 368 00be 00BF     	 nop
 369              	.L15:
 370              	 .loc 1 452 0 is_stmt 0 discriminator 1
 371 00c0 464B     	 ldr r3,.L21+8
 372 00c2 1B68     	 ldr r3,[r3]
 373 00c4 03F46073 	 and r3,r3,#896
 374 00c8 B3F5607F 	 cmp r3,#896
 375 00cc F8D1     	 bne .L15
 376              	.L14:
 453:../Startup/system_XMC4400.c ****     {
 454:../Startup/system_XMC4400.c ****       /* wait till OSC_HP output frequency is usable */
 455:../Startup/system_XMC4400.c ****     }
 456:../Startup/system_XMC4400.c ****   }
 457:../Startup/system_XMC4400.c **** #else /* PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI */
 458:../Startup/system_XMC4400.c **** 
 459:../Startup/system_XMC4400.c ****   /* select backup clock as PLL input */
 460:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON2 |= SCU_PLL_PLLCON2_PINSEL_Msk;
 461:../Startup/system_XMC4400.c **** #endif
 462:../Startup/system_XMC4400.c **** 
 463:../Startup/system_XMC4400.c ****   /* Go to bypass the Main PLL */
 464:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_VCOBYP_Msk;
 377              	 .loc 1 464 0 is_stmt 1
 378 00ce 434A     	 ldr r2,.L21+8
 379 00d0 424B     	 ldr r3,.L21+8
 380 00d2 5B68     	 ldr r3,[r3,#4]
 381 00d4 43F00103 	 orr r3,r3,#1
 382 00d8 5360     	 str r3,[r2,#4]
 465:../Startup/system_XMC4400.c **** 
 466:../Startup/system_XMC4400.c ****   /* disconnect Oscillator from PLL */
 467:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FINDIS_Msk;
 383              	 .loc 1 467 0
 384 00da 404A     	 ldr r2,.L21+8
 385 00dc 3F4B     	 ldr r3,.L21+8
 386 00de 5B68     	 ldr r3,[r3,#4]
 387 00e0 43F01003 	 orr r3,r3,#16
 388 00e4 5360     	 str r3,[r2,#4]
 468:../Startup/system_XMC4400.c **** 
 469:../Startup/system_XMC4400.c ****   /* Setup divider settings for main PLL */
 470:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 389              	 .loc 1 470 0
 390 00e6 3D4B     	 ldr r3,.L21+8
 391 00e8 3F4A     	 ldr r2,.L21+20
 392 00ea 9A60     	 str r2,[r3,#8]
 471:../Startup/system_XMC4400.c ****                       (PLL_K2DIV_0 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 472:../Startup/system_XMC4400.c ****                       (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 473:../Startup/system_XMC4400.c **** 
 474:../Startup/system_XMC4400.c ****   /* Set OSCDISCDIS */
 475:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 393              	 .loc 1 475 0
 394 00ec 3B4A     	 ldr r2,.L21+8
 395 00ee 3B4B     	 ldr r3,.L21+8
 396 00f0 5B68     	 ldr r3,[r3,#4]
 397 00f2 43F04003 	 orr r3,r3,#64
 398 00f6 5360     	 str r3,[r2,#4]
 476:../Startup/system_XMC4400.c **** 
 477:../Startup/system_XMC4400.c ****   /* connect Oscillator to PLL */
 478:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_FINDIS_Msk;
 399              	 .loc 1 478 0
 400 00f8 384A     	 ldr r2,.L21+8
 401 00fa 384B     	 ldr r3,.L21+8
 402 00fc 5B68     	 ldr r3,[r3,#4]
 403 00fe 23F01003 	 bic r3,r3,#16
 404 0102 5360     	 str r3,[r2,#4]
 479:../Startup/system_XMC4400.c **** 
 480:../Startup/system_XMC4400.c ****   /* restart PLL Lock detection */
 481:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_RESLD_Msk;
 405              	 .loc 1 481 0
 406 0104 354A     	 ldr r2,.L21+8
 407 0106 354B     	 ldr r3,.L21+8
 408 0108 5B68     	 ldr r3,[r3,#4]
 409 010a 43F48023 	 orr r3,r3,#262144
 410 010e 5360     	 str r3,[r2,#4]
 482:../Startup/system_XMC4400.c **** 
 483:../Startup/system_XMC4400.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 411              	 .loc 1 483 0
 412 0110 00BF     	 nop
 413              	.L16:
 414              	 .loc 1 483 0 is_stmt 0 discriminator 1
 415 0112 324B     	 ldr r3,.L21+8
 416 0114 1B68     	 ldr r3,[r3]
 417 0116 03F00403 	 and r3,r3,#4
 418 011a 002B     	 cmp r3,#0
 419 011c F9D0     	 beq .L16
 484:../Startup/system_XMC4400.c ****   {
 485:../Startup/system_XMC4400.c ****     /* wait for PLL Lock */
 486:../Startup/system_XMC4400.c ****   }
 487:../Startup/system_XMC4400.c **** 
 488:../Startup/system_XMC4400.c ****   /* Disable bypass- put PLL clock back */
 489:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_VCOBYP_Msk;
 420              	 .loc 1 489 0 is_stmt 1
 421 011e 2F4A     	 ldr r2,.L21+8
 422 0120 2E4B     	 ldr r3,.L21+8
 423 0122 5B68     	 ldr r3,[r3,#4]
 424 0124 23F00103 	 bic r3,r3,#1
 425 0128 5360     	 str r3,[r2,#4]
 490:../Startup/system_XMC4400.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 426              	 .loc 1 490 0
 427 012a 00BF     	 nop
 428              	.L17:
 429              	 .loc 1 490 0 is_stmt 0 discriminator 1
 430 012c 2B4B     	 ldr r3,.L21+8
 431 012e 1B68     	 ldr r3,[r3]
 432 0130 03F00103 	 and r3,r3,#1
 433 0134 002B     	 cmp r3,#0
 434 0136 F9D1     	 bne .L17
 491:../Startup/system_XMC4400.c ****   {
 492:../Startup/system_XMC4400.c ****     /* wait for normal mode */
 493:../Startup/system_XMC4400.c ****   }
 494:../Startup/system_XMC4400.c **** #endif /* ENABLE_PLL */
 495:../Startup/system_XMC4400.c **** 
 496:../Startup/system_XMC4400.c **** #if (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL)
 497:../Startup/system_XMC4400.c ****   /* Switch system clock to PLL */
 498:../Startup/system_XMC4400.c ****   SCU_CLK->SYSCLKCR |= SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 435              	 .loc 1 498 0 is_stmt 1
 436 0138 2C4A     	 ldr r2,.L21+24
 437 013a 2C4B     	 ldr r3,.L21+24
 438 013c DB68     	 ldr r3,[r3,#12]
 439 013e 43F48033 	 orr r3,r3,#65536
 440 0142 D360     	 str r3,[r2,#12]
 499:../Startup/system_XMC4400.c **** #else
 500:../Startup/system_XMC4400.c ****   /* Switch system clock to backup clock */
 501:../Startup/system_XMC4400.c ****   SCU_CLK->SYSCLKCR &= ~SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 502:../Startup/system_XMC4400.c **** #endif
 503:../Startup/system_XMC4400.c **** 
 504:../Startup/system_XMC4400.c ****   /* Before scaling to final frequency we need to setup the clock dividers */
 505:../Startup/system_XMC4400.c ****   SCU_CLK->PBCLKCR = PBCLKDIV;
 441              	 .loc 1 505 0
 442 0144 294B     	 ldr r3,.L21+24
 443 0146 0022     	 movs r2,#0
 444 0148 5A61     	 str r2,[r3,#20]
 506:../Startup/system_XMC4400.c ****   SCU_CLK->CPUCLKCR = CPUCLKDIV;
 445              	 .loc 1 506 0
 446 014a 284B     	 ldr r3,.L21+24
 447 014c 0022     	 movs r2,#0
 448 014e 1A61     	 str r2,[r3,#16]
 507:../Startup/system_XMC4400.c ****   SCU_CLK->CCUCLKCR = CCUCLKDIV;
 449              	 .loc 1 507 0
 450 0150 264B     	 ldr r3,.L21+24
 451 0152 0022     	 movs r2,#0
 452 0154 1A62     	 str r2,[r3,#32]
 508:../Startup/system_XMC4400.c ****   SCU_CLK->WDTCLKCR = WDTCLKDIV;
 453              	 .loc 1 508 0
 454 0156 254B     	 ldr r3,.L21+24
 455 0158 0022     	 movs r2,#0
 456 015a 5A62     	 str r2,[r3,#36]
 509:../Startup/system_XMC4400.c ****   SCU_CLK->USBCLKCR = USBCLKDIV;
 457              	 .loc 1 509 0
 458 015c 234B     	 ldr r3,.L21+24
 459 015e 0322     	 movs r2,#3
 460 0160 9A61     	 str r2,[r3,#24]
 510:../Startup/system_XMC4400.c **** 
 511:../Startup/system_XMC4400.c **** #if ENABLE_PLL
 512:../Startup/system_XMC4400.c ****   /* PLL frequency stepping...*/
 513:../Startup/system_XMC4400.c ****   /* Reset OSCDISCDIS */
 514:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 461              	 .loc 1 514 0
 462 0162 1E4A     	 ldr r2,.L21+8
 463 0164 1D4B     	 ldr r3,.L21+8
 464 0166 5B68     	 ldr r3,[r3,#4]
 465 0168 23F04003 	 bic r3,r3,#64
 466 016c 5360     	 str r3,[r2,#4]
 515:../Startup/system_XMC4400.c **** 
 516:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 467              	 .loc 1 516 0
 468 016e 1B4B     	 ldr r3,.L21+8
 469 0170 1F4A     	 ldr r2,.L21+28
 470 0172 9A60     	 str r2,[r3,#8]
 517:../Startup/system_XMC4400.c **** 	                    (PLL_K2DIV_1 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 518:../Startup/system_XMC4400.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 519:../Startup/system_XMC4400.c **** 
 520:../Startup/system_XMC4400.c **** 
 521:../Startup/system_XMC4400.c ****   delay(DELAY_CNT_50US_60MHZ);
 471              	 .loc 1 521 0
 472 0174 40F6B830 	 movw r0,#3000
 473 0178 FFF7FEFF 	 bl delay
 522:../Startup/system_XMC4400.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 474              	 .loc 1 522 0
 475 017c 00BF     	 nop
 476              	.L18:
 477              	 .loc 1 522 0 is_stmt 0 discriminator 1
 478 017e 174B     	 ldr r3,.L21+8
 479 0180 1B68     	 ldr r3,[r3]
 480 0182 03F00403 	 and r3,r3,#4
 481 0186 002B     	 cmp r3,#0
 482 0188 F9D0     	 beq .L18
 523:../Startup/system_XMC4400.c ****   {
 524:../Startup/system_XMC4400.c ****     /* wait for PLL Lock */
 525:../Startup/system_XMC4400.c ****   }
 526:../Startup/system_XMC4400.c **** 
 527:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 483              	 .loc 1 527 0 is_stmt 1
 484 018a 144B     	 ldr r3,.L21+8
 485 018c 194A     	 ldr r2,.L21+32
 486 018e 9A60     	 str r2,[r3,#8]
 528:../Startup/system_XMC4400.c **** 	                    (PLL_K2DIV_2 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 529:../Startup/system_XMC4400.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 530:../Startup/system_XMC4400.c **** 
 531:../Startup/system_XMC4400.c **** 
 532:../Startup/system_XMC4400.c ****   delay(DELAY_CNT_50US_90MHZ);
 487              	 .loc 1 532 0
 488 0190 41F29410 	 movw r0,#4500
 489 0194 FFF7FEFF 	 bl delay
 533:../Startup/system_XMC4400.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 490              	 .loc 1 533 0
 491 0198 00BF     	 nop
 492              	.L19:
 493              	 .loc 1 533 0 is_stmt 0 discriminator 1
 494 019a 104B     	 ldr r3,.L21+8
 495 019c 1B68     	 ldr r3,[r3]
 496 019e 03F00403 	 and r3,r3,#4
 497 01a2 002B     	 cmp r3,#0
 498 01a4 F9D0     	 beq .L19
 534:../Startup/system_XMC4400.c ****   {
 535:../Startup/system_XMC4400.c ****     /* wait for PLL Lock */
 536:../Startup/system_XMC4400.c ****   }
 537:../Startup/system_XMC4400.c **** 
 538:../Startup/system_XMC4400.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 499              	 .loc 1 538 0 is_stmt 1
 500 01a6 0D4B     	 ldr r3,.L21+8
 501 01a8 134A     	 ldr r2,.L21+36
 502 01aa 9A60     	 str r2,[r3,#8]
 539:../Startup/system_XMC4400.c **** 	                    (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
 540:../Startup/system_XMC4400.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 541:../Startup/system_XMC4400.c **** 
 542:../Startup/system_XMC4400.c **** 
 543:../Startup/system_XMC4400.c ****   delay(DELAY_CNT_50US_120MHZ);
 503              	 .loc 1 543 0
 504 01ac 41F27070 	 movw r0,#6000
 505 01b0 FFF7FEFF 	 bl delay
 544:../Startup/system_XMC4400.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 506              	 .loc 1 544 0
 507 01b4 00BF     	 nop
 508              	.L20:
 509              	 .loc 1 544 0 is_stmt 0 discriminator 1
 510 01b6 094B     	 ldr r3,.L21+8
 511 01b8 1B68     	 ldr r3,[r3]
 512 01ba 03F00403 	 and r3,r3,#4
 513 01be 002B     	 cmp r3,#0
 514 01c0 F9D0     	 beq .L20
 545:../Startup/system_XMC4400.c ****   {
 546:../Startup/system_XMC4400.c ****     /* wait for PLL Lock */
 547:../Startup/system_XMC4400.c ****   }
 548:../Startup/system_XMC4400.c **** 
 549:../Startup/system_XMC4400.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_SOSCWDGT_Msk | SCU_TRAP_TRAPCLR_SVCOLCKT_Msk;
 515              	 .loc 1 549 0 is_stmt 1
 516 01c2 0E4B     	 ldr r3,.L21+40
 517 01c4 0522     	 movs r2,#5
 518 01c6 DA60     	 str r2,[r3,#12]
 550:../Startup/system_XMC4400.c **** #endif /* ENABLE_PLL */
 551:../Startup/system_XMC4400.c **** 
 552:../Startup/system_XMC4400.c **** #if (((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Ms
 553:../Startup/system_XMC4400.c ****   /* enable USB PLL first */
 554:../Startup/system_XMC4400.c ****   SCU_PLL->USBPLLCON &= ~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 555:../Startup/system_XMC4400.c **** 
 556:../Startup/system_XMC4400.c ****   /* USB PLL uses as clock input the OSC_HP */
 557:../Startup/system_XMC4400.c ****   /* check and if not already running enable OSC_HP */
 558:../Startup/system_XMC4400.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 559:../Startup/system_XMC4400.c ****   {
 560:../Startup/system_XMC4400.c ****     /* check if Main PLL is switched on for OSC WDG*/
 561:../Startup/system_XMC4400.c ****     if ((SCU_PLL->PLLCON0 &(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk)) != 0UL)
 562:../Startup/system_XMC4400.c ****     {
 563:../Startup/system_XMC4400.c ****       /* enable PLL first */
 564:../Startup/system_XMC4400.c ****       SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 565:../Startup/system_XMC4400.c ****     }
 566:../Startup/system_XMC4400.c **** 
 567:../Startup/system_XMC4400.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 568:../Startup/system_XMC4400.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 569:../Startup/system_XMC4400.c **** 
 570:../Startup/system_XMC4400.c ****     /* restart OSC Watchdog */
 571:../Startup/system_XMC4400.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 572:../Startup/system_XMC4400.c **** 
 573:../Startup/system_XMC4400.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 574:../Startup/system_XMC4400.c ****     {
 575:../Startup/system_XMC4400.c ****       /* wait till OSC_HP output frequency is usable */
 576:../Startup/system_XMC4400.c ****     }
 577:../Startup/system_XMC4400.c ****   }
 578:../Startup/system_XMC4400.c **** 
 579:../Startup/system_XMC4400.c ****   /* Setup USB PLL */
 580:../Startup/system_XMC4400.c ****   /* Go to bypass the USB PLL */
 581:../Startup/system_XMC4400.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_VCOBYP_Msk;
 582:../Startup/system_XMC4400.c **** 
 583:../Startup/system_XMC4400.c ****   /* disconnect Oscillator from USB PLL */
 584:../Startup/system_XMC4400.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_FINDIS_Msk;
 585:../Startup/system_XMC4400.c **** 
 586:../Startup/system_XMC4400.c ****   /* Setup Divider settings for USB PLL */
 587:../Startup/system_XMC4400.c ****   SCU_PLL->USBPLLCON = ((USB_NDIV << SCU_PLL_USBPLLCON_NDIV_Pos) |
 588:../Startup/system_XMC4400.c ****                         (USB_PDIV << SCU_PLL_USBPLLCON_PDIV_Pos));
 589:../Startup/system_XMC4400.c **** 
 590:../Startup/system_XMC4400.c ****   /* Set OSCDISCDIS */
 591:../Startup/system_XMC4400.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 592:../Startup/system_XMC4400.c **** 
 593:../Startup/system_XMC4400.c ****   /* connect Oscillator to USB PLL */
 594:../Startup/system_XMC4400.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_FINDIS_Msk;
 595:../Startup/system_XMC4400.c **** 
 596:../Startup/system_XMC4400.c ****   /* restart PLL Lock detection */
 597:../Startup/system_XMC4400.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_RESLD_Msk;
 598:../Startup/system_XMC4400.c **** 
 599:../Startup/system_XMC4400.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 600:../Startup/system_XMC4400.c ****   {
 601:../Startup/system_XMC4400.c ****     /* wait for PLL Lock */
 602:../Startup/system_XMC4400.c ****   }
 603:../Startup/system_XMC4400.c **** #endif /* (USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Msk) */
 604:../Startup/system_XMC4400.c **** 
 605:../Startup/system_XMC4400.c ****   /* Enable selected clocks */
 606:../Startup/system_XMC4400.c ****   SCU_CLK->CLKSET = ENABLE_SCUCLK;
 519              	 .loc 1 606 0
 520 01c8 084B     	 ldr r3,.L21+24
 521 01ca 0022     	 movs r2,#0
 522 01cc 5A60     	 str r2,[r3,#4]
 607:../Startup/system_XMC4400.c **** 
 608:../Startup/system_XMC4400.c **** #if ENABLE_EXTCLK == 1
 609:../Startup/system_XMC4400.c ****   /* Configure external clock */
 610:../Startup/system_XMC4400.c ****   SCU_CLK->EXTCLKCR = EXTCLKDIV;
 611:../Startup/system_XMC4400.c **** 
 612:../Startup/system_XMC4400.c **** #if EXTCLK_PIN == EXTCLK_PIN_P1_15
 613:../Startup/system_XMC4400.c ****   /* P1.15 */
 614:../Startup/system_XMC4400.c ****   PORT1->PDR1 &= ~PORT1_PDR1_PD15_Msk;
 615:../Startup/system_XMC4400.c ****   PORT1->IOCR12 = (PORT1->IOCR12 & ~PORT0_IOCR12_PC15_Msk) | (0x11U << PORT0_IOCR12_PC15_Pos);
 616:../Startup/system_XMC4400.c **** #else
 617:../Startup/system_XMC4400.c ****   /* P0.8 */
 618:../Startup/system_XMC4400.c ****   PORT0->HWSEL &= ~PORT0_HWSEL_HW8_Msk;
 619:../Startup/system_XMC4400.c ****   PORT0->PDR1 &= ~PORT0_PDR1_PD8_Msk;
 620:../Startup/system_XMC4400.c ****   PORT0->IOCR8 = (PORT0->IOCR8 & ~PORT0_IOCR8_PC8_Msk) | (0x11U << PORT0_IOCR8_PC8_Pos);
 621:../Startup/system_XMC4400.c **** #endif
 622:../Startup/system_XMC4400.c **** 
 623:../Startup/system_XMC4400.c **** #endif  /* ENABLE_EXTCLK == 1  */
 624:../Startup/system_XMC4400.c **** 
 625:../Startup/system_XMC4400.c ****   SystemCoreClockUpdate();
 523              	 .loc 1 625 0
 524 01ce FFF7FEFF 	 bl SystemCoreClockUpdate
 626:../Startup/system_XMC4400.c **** }
 525              	 .loc 1 626 0
 526 01d2 80BD     	 pop {r7,pc}
 527              	.L22:
 528              	 .align 2
 529              	.L21:
 530 01d4 00420050 	 .word 1342194176
 531 01d8 00440050 	 .word 1342194688
 532 01dc 10470050 	 .word 1342195472
 533 01e0 00470050 	 .word 1342195456
 534 01e4 6BCA5F6B 	 .word 1801439851
 535 01e8 004F1301 	 .word 18042624
 536 01ec 00460050 	 .word 1342195200
 537 01f0 004F0701 	 .word 17256192
 538 01f4 004F0401 	 .word 17059584
 539 01f8 004F0301 	 .word 16994048
 540 01fc 60410050 	 .word 1342194016
 541              	 .cfi_endproc
 542              	.LFE133:
 544              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 545              	 .align 2
 546              	 .weak SystemCoreClockUpdate
 547              	 .thumb
 548              	 .thumb_func
 550              	SystemCoreClockUpdate:
 551              	.LFB134:
 627:../Startup/system_XMC4400.c **** 
 628:../Startup/system_XMC4400.c **** __WEAK void SystemCoreClockUpdate(void)
 629:../Startup/system_XMC4400.c **** {
 552              	 .loc 1 629 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556 0000 80B5     	 push {r7,lr}
 557              	.LCFI16:
 558              	 .cfi_def_cfa_offset 8
 559              	 .cfi_offset 7,-8
 560              	 .cfi_offset 14,-4
 561 0002 84B0     	 sub sp,sp,#16
 562              	.LCFI17:
 563              	 .cfi_def_cfa_offset 24
 564 0004 00AF     	 add r7,sp,#0
 565              	.LCFI18:
 566              	 .cfi_def_cfa_register 7
 630:../Startup/system_XMC4400.c ****   uint32_t pdiv;
 631:../Startup/system_XMC4400.c ****   uint32_t ndiv;
 632:../Startup/system_XMC4400.c ****   uint32_t kdiv;
 633:../Startup/system_XMC4400.c ****   uint32_t temp;
 634:../Startup/system_XMC4400.c **** 
 635:../Startup/system_XMC4400.c ****   if (SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk)
 567              	 .loc 1 635 0
 568 0006 2F4B     	 ldr r3,.L30
 569 0008 DB68     	 ldr r3,[r3,#12]
 570 000a 03F48033 	 and r3,r3,#65536
 571 000e 002B     	 cmp r3,#0
 572 0010 3ED0     	 beq .L24
 636:../Startup/system_XMC4400.c ****   {
 637:../Startup/system_XMC4400.c ****     /* fPLL is clock source for fSYS */
 638:../Startup/system_XMC4400.c ****     if(SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk)
 573              	 .loc 1 638 0
 574 0012 2D4B     	 ldr r3,.L30+4
 575 0014 DB68     	 ldr r3,[r3,#12]
 576 0016 03F00103 	 and r3,r3,#1
 577 001a 002B     	 cmp r3,#0
 578 001c 02D0     	 beq .L25
 639:../Startup/system_XMC4400.c ****     {
 640:../Startup/system_XMC4400.c ****       /* PLL input clock is the backup clock (fOFI) */
 641:../Startup/system_XMC4400.c ****       temp = OFI_FREQUENCY;
 579              	 .loc 1 641 0
 580 001e 2B4B     	 ldr r3,.L30+8
 581 0020 FB60     	 str r3,[r7,#12]
 582 0022 02E0     	 b .L26
 583              	.L25:
 642:../Startup/system_XMC4400.c ****     }
 643:../Startup/system_XMC4400.c ****     else
 644:../Startup/system_XMC4400.c ****     {
 645:../Startup/system_XMC4400.c ****       /* PLL input clock is the high performance osicllator (fOSCHP) */
 646:../Startup/system_XMC4400.c ****       temp = OSCHP_GetFrequency();
 584              	 .loc 1 646 0
 585 0024 FFF7FEFF 	 bl OSCHP_GetFrequency
 586 0028 F860     	 str r0,[r7,#12]
 587              	.L26:
 647:../Startup/system_XMC4400.c ****     }
 648:../Startup/system_XMC4400.c **** 
 649:../Startup/system_XMC4400.c ****     /* check if PLL is locked */
 650:../Startup/system_XMC4400.c ****     if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk)
 588              	 .loc 1 650 0
 589 002a 274B     	 ldr r3,.L30+4
 590 002c 1B68     	 ldr r3,[r3]
 591 002e 03F00403 	 and r3,r3,#4
 592 0032 002B     	 cmp r3,#0
 593 0034 20D0     	 beq .L27
 651:../Startup/system_XMC4400.c ****     {
 652:../Startup/system_XMC4400.c ****       /* PLL normal mode */
 653:../Startup/system_XMC4400.c ****       /* read back divider settings */
 654:../Startup/system_XMC4400.c ****       pdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Pos) + 1;
 594              	 .loc 1 654 0
 595 0036 244B     	 ldr r3,.L30+4
 596 0038 9B68     	 ldr r3,[r3,#8]
 597 003a 03F07063 	 and r3,r3,#251658240
 598 003e 1B0E     	 lsrs r3,r3,#24
 599 0040 0133     	 adds r3,r3,#1
 600 0042 BB60     	 str r3,[r7,#8]
 655:../Startup/system_XMC4400.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 601              	 .loc 1 655 0
 602 0044 204B     	 ldr r3,.L30+4
 603 0046 9B68     	 ldr r3,[r3,#8]
 604 0048 03F4FE43 	 and r3,r3,#32512
 605 004c 1B0A     	 lsrs r3,r3,#8
 606 004e 0133     	 adds r3,r3,#1
 607 0050 7B60     	 str r3,[r7,#4]
 656:../Startup/system_XMC4400.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 608              	 .loc 1 656 0
 609 0052 1D4B     	 ldr r3,.L30+4
 610 0054 9B68     	 ldr r3,[r3,#8]
 611 0056 03F4FE03 	 and r3,r3,#8323072
 612 005a 1B0C     	 lsrs r3,r3,#16
 613 005c 0133     	 adds r3,r3,#1
 614 005e 3B60     	 str r3,[r7]
 657:../Startup/system_XMC4400.c **** 
 658:../Startup/system_XMC4400.c ****       temp = (temp / (pdiv * kdiv)) * ndiv;
 615              	 .loc 1 658 0
 616 0060 BB68     	 ldr r3,[r7,#8]
 617 0062 3A68     	 ldr r2,[r7]
 618 0064 02FB03F3 	 mul r3,r2,r3
 619 0068 FA68     	 ldr r2,[r7,#12]
 620 006a B2FBF3F3 	 udiv r3,r2,r3
 621 006e 7A68     	 ldr r2,[r7,#4]
 622 0070 02FB03F3 	 mul r3,r2,r3
 623 0074 FB60     	 str r3,[r7,#12]
 624 0076 0DE0     	 b .L29
 625              	.L27:
 659:../Startup/system_XMC4400.c ****     }
 660:../Startup/system_XMC4400.c ****     else
 661:../Startup/system_XMC4400.c ****     {
 662:../Startup/system_XMC4400.c ****       /* PLL prescalar mode */
 663:../Startup/system_XMC4400.c ****       /* read back divider settings */
 664:../Startup/system_XMC4400.c ****       kdiv  = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_Pos) + 1;
 626              	 .loc 1 664 0
 627 0078 134B     	 ldr r3,.L30+4
 628 007a 9B68     	 ldr r3,[r3,#8]
 629 007c 03F07F03 	 and r3,r3,#127
 630 0080 0133     	 adds r3,r3,#1
 631 0082 3B60     	 str r3,[r7]
 665:../Startup/system_XMC4400.c ****       
 666:../Startup/system_XMC4400.c ****       temp = (temp / kdiv);
 632              	 .loc 1 666 0
 633 0084 FA68     	 ldr r2,[r7,#12]
 634 0086 3B68     	 ldr r3,[r7]
 635 0088 B2FBF3F3 	 udiv r3,r2,r3
 636 008c FB60     	 str r3,[r7,#12]
 637 008e 01E0     	 b .L29
 638              	.L24:
 667:../Startup/system_XMC4400.c ****     }
 668:../Startup/system_XMC4400.c ****   }
 669:../Startup/system_XMC4400.c ****   else
 670:../Startup/system_XMC4400.c ****   {
 671:../Startup/system_XMC4400.c ****     /* fOFI is clock source for fSYS */    
 672:../Startup/system_XMC4400.c ****     temp = OFI_FREQUENCY;
 639              	 .loc 1 672 0
 640 0090 0E4B     	 ldr r3,.L30+8
 641 0092 FB60     	 str r3,[r7,#12]
 642              	.L29:
 673:../Startup/system_XMC4400.c ****   }
 674:../Startup/system_XMC4400.c **** 
 675:../Startup/system_XMC4400.c ****   temp = temp / ((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) + 1);
 643              	 .loc 1 675 0
 644 0094 0B4B     	 ldr r3,.L30
 645 0096 DB68     	 ldr r3,[r3,#12]
 646 0098 DBB2     	 uxtb r3,r3
 647 009a 0133     	 adds r3,r3,#1
 648 009c FA68     	 ldr r2,[r7,#12]
 649 009e B2FBF3F3 	 udiv r3,r2,r3
 650 00a2 FB60     	 str r3,[r7,#12]
 676:../Startup/system_XMC4400.c ****   temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 651              	 .loc 1 676 0
 652 00a4 074B     	 ldr r3,.L30
 653 00a6 1B69     	 ldr r3,[r3,#16]
 654 00a8 03F00103 	 and r3,r3,#1
 655 00ac 0133     	 adds r3,r3,#1
 656 00ae FA68     	 ldr r2,[r7,#12]
 657 00b0 B2FBF3F3 	 udiv r3,r2,r3
 658 00b4 FB60     	 str r3,[r7,#12]
 677:../Startup/system_XMC4400.c **** 
 678:../Startup/system_XMC4400.c ****   SystemCoreClock = temp;
 659              	 .loc 1 678 0
 660 00b6 064A     	 ldr r2,.L30+12
 661 00b8 FB68     	 ldr r3,[r7,#12]
 662 00ba 1360     	 str r3,[r2]
 679:../Startup/system_XMC4400.c **** }
 663              	 .loc 1 679 0
 664 00bc 1037     	 adds r7,r7,#16
 665              	.LCFI19:
 666              	 .cfi_def_cfa_offset 8
 667 00be BD46     	 mov sp,r7
 668              	.LCFI20:
 669              	 .cfi_def_cfa_register 13
 670              	 
 671 00c0 80BD     	 pop {r7,pc}
 672              	.L31:
 673 00c2 00BF     	 .align 2
 674              	.L30:
 675 00c4 00460050 	 .word 1342195200
 676 00c8 10470050 	 .word 1342195472
 677 00cc 00366E01 	 .word 24000000
 678 00d0 00000000 	 .word SystemCoreClock
 679              	 .cfi_endproc
 680              	.LFE134:
 682              	 .section .text.OSCHP_GetFrequency,"ax",%progbits
 683              	 .align 2
 684              	 .weak OSCHP_GetFrequency
 685              	 .thumb
 686              	 .thumb_func
 688              	OSCHP_GetFrequency:
 689              	.LFB135:
 680:../Startup/system_XMC4400.c **** 
 681:../Startup/system_XMC4400.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 682:../Startup/system_XMC4400.c **** {
 690              	 .loc 1 682 0
 691              	 .cfi_startproc
 692              	 
 693              	 
 694              	 
 695 0000 80B4     	 push {r7}
 696              	.LCFI21:
 697              	 .cfi_def_cfa_offset 4
 698              	 .cfi_offset 7,-4
 699 0002 00AF     	 add r7,sp,#0
 700              	.LCFI22:
 701              	 .cfi_def_cfa_register 7
 683:../Startup/system_XMC4400.c ****   return OSCHP_FREQUENCY;
 702              	 .loc 1 683 0
 703 0004 024B     	 ldr r3,.L34
 684:../Startup/system_XMC4400.c **** }
 704              	 .loc 1 684 0
 705 0006 1846     	 mov r0,r3
 706 0008 BD46     	 mov sp,r7
 707              	.LCFI23:
 708              	 .cfi_def_cfa_register 13
 709              	 
 710 000a 5DF8047B 	 ldr r7,[sp],#4
 711              	.LCFI24:
 712              	 .cfi_restore 7
 713              	 .cfi_def_cfa_offset 0
 714 000e 7047     	 bx lr
 715              	.L35:
 716              	 .align 2
 717              	.L34:
 718 0010 001BB700 	 .word 12000000
 719              	 .cfi_endproc
 720              	.LFE135:
 722              	 .text
 723              	.Letext0:
 724              	 .file 3 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 725              	 .file 4 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 726              	 .file 5 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/core_cm4.h"
 727              	 .file 6 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/XMC4400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC4400.c
    {standard input}:24     .no_init:00000000 SystemCoreClock
    {standard input}:21     .no_init:00000000 $d
    {standard input}:30     .no_init:00000004 g_chipid
    {standard input}:36     .no_init:00000014 g_hrpwm_char_data
    {standard input}:39     .text.delay:00000000 $t
    {standard input}:43     .text.delay:00000000 delay
    {standard input}:99     .text.SystemInit:00000000 $t
    {standard input}:104    .text.SystemInit:00000000 SystemInit
    {standard input}:152    .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:261    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:140    .text.SystemInit:00000028 $d
    {standard input}:147    .text.SystemCoreSetup:00000000 $t
    {standard input}:249    .text.SystemCoreSetup:00000064 $d
    {standard input}:256    .text.SystemCoreClockSetup:00000000 $t
    {standard input}:688    .text.OSCHP_GetFrequency:00000000 OSCHP_GetFrequency
    {standard input}:550    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:530    .text.SystemCoreClockSetup:000001d4 $d
    {standard input}:545    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:675    .text.SystemCoreClockUpdate:000000c4 $d
    {standard input}:683    .text.OSCHP_GetFrequency:00000000 $t
    {standard input}:718    .text.OSCHP_GetFrequency:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__Vectors
