   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm_svm.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_EnableClock:
  25              	.LFB144:
  26              	 .file 1 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2017-09-15
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
1158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPCH_Msk;
1176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPCH_Msk;
1212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1328 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
1329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
  45              	 .loc 1 1332 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e DA68     	 ldr r2,[r3,#12]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 0121     	 movs r1,#1
  50 0014 01FA03F3 	 lsl r3,r1,r3
  51 0018 1A43     	 orrs r2,r2,r3
  52 001a 7B68     	 ldr r3,[r7,#4]
  53 001c DA60     	 str r2,[r3,#12]
1333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  54              	 .loc 1 1333 0
  55 001e 0C37     	 adds r7,r7,#12
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 0020 BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0022 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0026 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE144:
  70              	 .section .text.XMC_CCU8_SLICE_EnableTrap,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_CCU8_SLICE_EnableTrap:
  76              	.LFB153:
1334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Pointer", XMC_CCU8_IsVal
1401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  77              	 .loc 1 1869 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 83B0     	 sub sp,sp,#12
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
  93 0008 3960     	 str r1,[r7]
1870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
  94              	 .loc 1 1871 0
  95 000a 7B68     	 ldr r3,[r7,#4]
  96 000c 5A69     	 ldr r2,[r3,#20]
  97 000e 3B68     	 ldr r3,[r7]
  98 0010 5B04     	 lsls r3,r3,#17
  99 0012 1A43     	 orrs r2,r2,r3
 100 0014 7B68     	 ldr r3,[r7,#4]
 101 0016 5A61     	 str r2,[r3,#20]
1872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 102              	 .loc 1 1872 0
 103 0018 0C37     	 adds r7,r7,#12
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 4
 106 001a BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 001c 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI11:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0020 7047     	 bx lr
 115              	 .cfi_endproc
 116              	.LFE153:
 118 0022 00BF     	 .section .text.XMC_CCU8_SLICE_DisableTrap,"ax",%progbits
 119              	 .align 2
 120              	 .thumb
 121              	 .thumb_func
 123              	XMC_CCU8_SLICE_DisableTrap:
 124              	.LFB154:
1873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 125              	 .loc 1 1893 0
 126              	 .cfi_startproc
 127              	 
 128              	 
 129              	 
 130 0000 80B4     	 push {r7}
 131              	.LCFI12:
 132              	 .cfi_def_cfa_offset 4
 133              	 .cfi_offset 7,-4
 134 0002 83B0     	 sub sp,sp,#12
 135              	.LCFI13:
 136              	 .cfi_def_cfa_offset 16
 137 0004 00AF     	 add r7,sp,#0
 138              	.LCFI14:
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
 141 0008 3960     	 str r1,[r7]
1894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
 142              	 .loc 1 1896 0
 143 000a 7B68     	 ldr r3,[r7,#4]
 144 000c 5A69     	 ldr r2,[r3,#20]
 145 000e 3B68     	 ldr r3,[r7]
 146 0010 5B04     	 lsls r3,r3,#17
 147 0012 DB43     	 mvns r3,r3
 148 0014 1A40     	 ands r2,r2,r3
 149 0016 7B68     	 ldr r3,[r7,#4]
 150 0018 5A61     	 str r2,[r3,#20]
1897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 151              	 .loc 1 1897 0
 152 001a 0C37     	 adds r7,r7,#12
 153              	.LCFI15:
 154              	 .cfi_def_cfa_offset 4
 155 001c BD46     	 mov sp,r7
 156              	.LCFI16:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 001e 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI17:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 0022 7047     	 bx lr
 164              	 .cfi_endproc
 165              	.LFE154:
 167              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
 168              	 .align 2
 169              	 .thumb
 170              	 .thumb_func
 172              	XMC_CCU8_SLICE_StopTimer:
 173              	.LFB160:
1898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 174              	 .loc 1 2002 0
 175              	 .cfi_startproc
 176              	 
 177              	 
 178              	 
 179 0000 80B4     	 push {r7}
 180              	.LCFI18:
 181              	 .cfi_def_cfa_offset 4
 182              	 .cfi_offset 7,-4
 183 0002 83B0     	 sub sp,sp,#12
 184              	.LCFI19:
 185              	 .cfi_def_cfa_offset 16
 186 0004 00AF     	 add r7,sp,#0
 187              	.LCFI20:
 188              	 .cfi_def_cfa_register 7
 189 0006 7860     	 str r0,[r7,#4]
2003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 190              	 .loc 1 2004 0
 191 0008 7B68     	 ldr r3,[r7,#4]
 192 000a 0122     	 movs r2,#1
 193 000c 1A61     	 str r2,[r3,#16]
2005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 194              	 .loc 1 2005 0
 195 000e 0C37     	 adds r7,r7,#12
 196              	.LCFI21:
 197              	 .cfi_def_cfa_offset 4
 198 0010 BD46     	 mov sp,r7
 199              	.LCFI22:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 0012 5DF8047B 	 ldr r7,[sp],#4
 203              	.LCFI23:
 204              	 .cfi_restore 7
 205              	 .cfi_def_cfa_offset 0
 206 0016 7047     	 bx lr
 207              	 .cfi_endproc
 208              	.LFE160:
 210              	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 211              	 .align 2
 212              	 .thumb
 213              	 .thumb_func
 215              	XMC_CCU8_EnableShadowTransfer:
 216              	.LFB169:
2006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
2024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
2181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 217              	 .loc 1 2295 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221              	 
 222 0000 80B4     	 push {r7}
 223              	.LCFI24:
 224              	 .cfi_def_cfa_offset 4
 225              	 .cfi_offset 7,-4
 226 0002 83B0     	 sub sp,sp,#12
 227              	.LCFI25:
 228              	 .cfi_def_cfa_offset 16
 229 0004 00AF     	 add r7,sp,#0
 230              	.LCFI26:
 231              	 .cfi_def_cfa_register 7
 232 0006 7860     	 str r0,[r7,#4]
 233 0008 3960     	 str r1,[r7]
2296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 234              	 .loc 1 2297 0
 235 000a 7B68     	 ldr r3,[r7,#4]
 236 000c 3A68     	 ldr r2,[r7]
 237 000e 1A61     	 str r2,[r3,#16]
2298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 238              	 .loc 1 2298 0
 239 0010 0C37     	 adds r7,r7,#12
 240              	.LCFI27:
 241              	 .cfi_def_cfa_offset 4
 242 0012 BD46     	 mov sp,r7
 243              	.LCFI28:
 244              	 .cfi_def_cfa_register 13
 245              	 
 246 0014 5DF8047B 	 ldr r7,[sp],#4
 247              	.LCFI29:
 248              	 .cfi_restore 7
 249              	 .cfi_def_cfa_offset 0
 250 0018 7047     	 bx lr
 251              	 .cfi_endproc
 252              	.LFE169:
 254 001a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerValue,"ax",%progbits
 255              	 .align 2
 256              	 .thumb
 257              	 .thumb_func
 259              	XMC_CCU8_SLICE_SetTimerValue:
 260              	.LFB171:
2299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 261              	 .loc 1 2334 0
 262              	 .cfi_startproc
 263              	 
 264              	 
 265              	 
 266 0000 80B4     	 push {r7}
 267              	.LCFI30:
 268              	 .cfi_def_cfa_offset 4
 269              	 .cfi_offset 7,-4
 270 0002 83B0     	 sub sp,sp,#12
 271              	.LCFI31:
 272              	 .cfi_def_cfa_offset 16
 273 0004 00AF     	 add r7,sp,#0
 274              	.LCFI32:
 275              	 .cfi_def_cfa_register 7
 276 0006 7860     	 str r0,[r7,#4]
 277 0008 0B46     	 mov r3,r1
 278 000a 7B80     	 strh r3,[r7,#2]
2335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
 279              	 .loc 1 2336 0
 280 000c 7A88     	 ldrh r2,[r7,#2]
 281 000e 7B68     	 ldr r3,[r7,#4]
 282 0010 1A67     	 str r2,[r3,#112]
2337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 283              	 .loc 1 2337 0
 284 0012 0C37     	 adds r7,r7,#12
 285              	.LCFI33:
 286              	 .cfi_def_cfa_offset 4
 287 0014 BD46     	 mov sp,r7
 288              	.LCFI34:
 289              	 .cfi_def_cfa_register 13
 290              	 
 291 0016 5DF8047B 	 ldr r7,[sp],#4
 292              	.LCFI35:
 293              	 .cfi_restore 7
 294              	 .cfi_def_cfa_offset 0
 295 001a 7047     	 bx lr
 296              	 .cfi_endproc
 297              	.LFE171:
 299              	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
 300              	 .align 2
 301              	 .thumb
 302              	 .thumb_func
 304              	XMC_CCU8_SLICE_EnableEvent:
 305              	.LFB179:
2338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                      const uint8_t cmp_val)
2487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_COMPARE_CHANNEL_t c
2512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                             const XMC_CCU8_SLICE_COMPARE_CHANNEL_t 
2535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            uint32_t *val_ptr);
2602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 306              	 .loc 1 2619 0
 307              	 .cfi_startproc
 308              	 
 309              	 
 310              	 
 311 0000 80B4     	 push {r7}
 312              	.LCFI36:
 313              	 .cfi_def_cfa_offset 4
 314              	 .cfi_offset 7,-4
 315 0002 83B0     	 sub sp,sp,#12
 316              	.LCFI37:
 317              	 .cfi_def_cfa_offset 16
 318 0004 00AF     	 add r7,sp,#0
 319              	.LCFI38:
 320              	 .cfi_def_cfa_register 7
 321 0006 7860     	 str r0,[r7,#4]
 322 0008 0B46     	 mov r3,r1
 323 000a FB70     	 strb r3,[r7,#3]
2620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 324              	 .loc 1 2623 0
 325 000c 7B68     	 ldr r3,[r7,#4]
 326 000e D3F8A420 	 ldr r2,[r3,#164]
 327 0012 FB78     	 ldrb r3,[r7,#3]
 328 0014 0121     	 movs r1,#1
 329 0016 01FA03F3 	 lsl r3,r1,r3
 330 001a 1A43     	 orrs r2,r2,r3
 331 001c 7B68     	 ldr r3,[r7,#4]
 332 001e C3F8A420 	 str r2,[r3,#164]
2624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 333              	 .loc 1 2624 0
 334 0022 0C37     	 adds r7,r7,#12
 335              	.LCFI39:
 336              	 .cfi_def_cfa_offset 4
 337 0024 BD46     	 mov sp,r7
 338              	.LCFI40:
 339              	 .cfi_def_cfa_register 13
 340              	 
 341 0026 5DF8047B 	 ldr r7,[sp],#4
 342              	.LCFI41:
 343              	 .cfi_restore 7
 344              	 .cfi_def_cfa_offset 0
 345 002a 7047     	 bx lr
 346              	 .cfi_endproc
 347              	.LFE179:
 349              	 .section .text.XMC_CCU8_SLICE_DisableEvent,"ax",%progbits
 350              	 .align 2
 351              	 .thumb
 352              	 .thumb_func
 354              	XMC_CCU8_SLICE_DisableEvent:
 355              	.LFB181:
2625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 356              	 .loc 1 2664 0
 357              	 .cfi_startproc
 358              	 
 359              	 
 360              	 
 361 0000 80B4     	 push {r7}
 362              	.LCFI42:
 363              	 .cfi_def_cfa_offset 4
 364              	 .cfi_offset 7,-4
 365 0002 83B0     	 sub sp,sp,#12
 366              	.LCFI43:
 367              	 .cfi_def_cfa_offset 16
 368 0004 00AF     	 add r7,sp,#0
 369              	.LCFI44:
 370              	 .cfi_def_cfa_register 7
 371 0006 7860     	 str r0,[r7,#4]
 372 0008 0B46     	 mov r3,r1
 373 000a FB70     	 strb r3,[r7,#3]
2665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
 374              	 .loc 1 2668 0
 375 000c 7B68     	 ldr r3,[r7,#4]
 376 000e D3F8A420 	 ldr r2,[r3,#164]
 377 0012 FB78     	 ldrb r3,[r7,#3]
 378 0014 0121     	 movs r1,#1
 379 0016 01FA03F3 	 lsl r3,r1,r3
 380 001a DB43     	 mvns r3,r3
 381 001c 1A40     	 ands r2,r2,r3
 382 001e 7B68     	 ldr r3,[r7,#4]
 383 0020 C3F8A420 	 str r2,[r3,#164]
2669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 384              	 .loc 1 2669 0
 385 0024 0C37     	 adds r7,r7,#12
 386              	.LCFI45:
 387              	 .cfi_def_cfa_offset 4
 388 0026 BD46     	 mov sp,r7
 389              	.LCFI46:
 390              	 .cfi_def_cfa_register 13
 391              	 
 392 0028 5DF8047B 	 ldr r7,[sp],#4
 393              	.LCFI47:
 394              	 .cfi_restore 7
 395              	 .cfi_def_cfa_offset 0
 396 002c 7047     	 bx lr
 397              	 .cfi_endproc
 398              	.LFE181:
 400 002e 00BF     	 .section .text.XMC_CCU8_SLICE_ClearEvent,"ax",%progbits
 401              	 .align 2
 402              	 .thumb
 403              	 .thumb_func
 405              	XMC_CCU8_SLICE_ClearEvent:
 406              	.LFB184:
2670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS |= ((uint32_t) 1) << ((uint32_t) event);
2713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 407              	 .loc 1 2729 0
 408              	 .cfi_startproc
 409              	 
 410              	 
 411              	 
 412 0000 80B4     	 push {r7}
 413              	.LCFI48:
 414              	 .cfi_def_cfa_offset 4
 415              	 .cfi_offset 7,-4
 416 0002 83B0     	 sub sp,sp,#12
 417              	.LCFI49:
 418              	 .cfi_def_cfa_offset 16
 419 0004 00AF     	 add r7,sp,#0
 420              	.LCFI50:
 421              	 .cfi_def_cfa_register 7
 422 0006 7860     	 str r0,[r7,#4]
 423 0008 0B46     	 mov r3,r1
 424 000a FB70     	 strb r3,[r7,#3]
2730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR |= ((uint32_t) 1) << ((uint32_t) event);
 425              	 .loc 1 2732 0
 426 000c 7B68     	 ldr r3,[r7,#4]
 427 000e D3F8B020 	 ldr r2,[r3,#176]
 428 0012 FB78     	 ldrb r3,[r7,#3]
 429 0014 0121     	 movs r1,#1
 430 0016 01FA03F3 	 lsl r3,r1,r3
 431 001a 1A43     	 orrs r2,r2,r3
 432 001c 7B68     	 ldr r3,[r7,#4]
 433 001e C3F8B020 	 str r2,[r3,#176]
2733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 434              	 .loc 1 2733 0
 435 0022 0C37     	 adds r7,r7,#12
 436              	.LCFI51:
 437              	 .cfi_def_cfa_offset 4
 438 0024 BD46     	 mov sp,r7
 439              	.LCFI52:
 440              	 .cfi_def_cfa_register 13
 441              	 
 442 0026 5DF8047B 	 ldr r7,[sp],#4
 443              	.LCFI53:
 444              	 .cfi_restore 7
 445              	 .cfi_def_cfa_offset 0
 446 002a 7047     	 bx lr
 447              	 .cfi_endproc
 448              	.LFE184:
 450              	 .section .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode,"ax",%progbits
 451              	 .align 2
 452              	 .thumb
 453              	 .thumb_func
 455              	XMC_CCU8_SLICE_EnableAsymmetricCompareMode:
 456              	.LFB186:
2734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
2755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   }
2756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event which must be bound to a service request line
2760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param sr The Service request line which is bound to the \b event
2761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Binds requested event to a service request line, by configuring CC8ySRS register with respective
2766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API binds the requested event with the requested service
2768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
2774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
2775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_SR_ID_t sr);
2776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out Output signal for which the passive level needs to be set.
2780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param level Output passive level for the \b out signal
2781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the passive level for the slice output, by setting CC8yPSL register.\n\n
2786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Defines the passive level for the timer slice output pin. Selects either level high is passive
2787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * or level low is passive. This is the level of the output before the compare match is value chang
2788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
2793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
2794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level);
2795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to dead time configuration data
2799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initializes Dead time configuration for the slice outputs, by configuring CC8yDC1R, CC8yDC2R, CC
2804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine programs dead time delays (rising & falling) and dead time clock prescaler.
2805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureDeadTime()<BR>  XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_S
2810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
2813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config);
2814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in asymmetric compare mode, by setting CC8yCHC.ASE bit.\n\n
2822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In asymmetric compare mode, the compare channels 1 & 2 are grouped to generate the PWM.This woul
2823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generate an inverted PWM at OUT0 & OUT1.
2824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Edge Aligned mode (counting up), the Status bit is set when a compare match of
2825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Compare channel-1 occurs and cleared when a compare match event of Compare channel-2 occurs.\n
2826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Center Aligned mode, the status bit is set when a compare match event of Compare channel-1 oc
2827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * counting up and cleared when a compare match event of Compare channel-2 occurs while counting do
2828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * External count direction function is enabled then the asymmetric mode of operation is not possib
2831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableSymmetricCompareMode()<BR> 
2834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableAsymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 457              	 .loc 1 2836 0
 458              	 .cfi_startproc
 459              	 
 460              	 
 461              	 
 462 0000 80B4     	 push {r7}
 463              	.LCFI54:
 464              	 .cfi_def_cfa_offset 4
 465              	 .cfi_offset 7,-4
 466 0002 83B0     	 sub sp,sp,#12
 467              	.LCFI55:
 468              	 .cfi_def_cfa_offset 16
 469 0004 00AF     	 add r7,sp,#0
 470              	.LCFI56:
 471              	 .cfi_def_cfa_register 7
 472 0006 7860     	 str r0,[r7,#4]
2837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableAsymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSl
2838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC |= (uint32_t) CCU8_CC8_CHC_ASE_Msk;
 473              	 .loc 1 2838 0
 474 0008 7B68     	 ldr r3,[r7,#4]
 475 000a 9B6C     	 ldr r3,[r3,#72]
 476 000c 43F00102 	 orr r2,r3,#1
 477 0010 7B68     	 ldr r3,[r7,#4]
 478 0012 9A64     	 str r2,[r3,#72]
2839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 479              	 .loc 1 2839 0
 480 0014 0C37     	 adds r7,r7,#12
 481              	.LCFI57:
 482              	 .cfi_def_cfa_offset 4
 483 0016 BD46     	 mov sp,r7
 484              	.LCFI58:
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 0018 5DF8047B 	 ldr r7,[sp],#4
 488              	.LCFI59:
 489              	 .cfi_restore 7
 490              	 .cfi_def_cfa_offset 0
 491 001c 7047     	 bx lr
 492              	 .cfi_endproc
 493              	.LFE186:
 495 001e 00BF     	 .section .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode,"ax",%progbits
 496              	 .align 2
 497              	 .thumb
 498              	 .thumb_func
 500              	XMC_CCU8_SLICE_EnableSymmetricCompareMode:
 501              	.LFB187:
2840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in symmetric(standard) compare mode, by clearing CC8yCHC.AS
2848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In symmetric compare mode, the compare channels 1 & 2 are independent of each other & each chann
2849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * PWM & inverted PWM at OUT0, OUT1, OUT2 & OUT3.
2850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableAsymmetricCompareMode().
2853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableSymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 502              	 .loc 1 2855 0
 503              	 .cfi_startproc
 504              	 
 505              	 
 506              	 
 507 0000 80B4     	 push {r7}
 508              	.LCFI60:
 509              	 .cfi_def_cfa_offset 4
 510              	 .cfi_offset 7,-4
 511 0002 83B0     	 sub sp,sp,#12
 512              	.LCFI61:
 513              	 .cfi_def_cfa_offset 16
 514 0004 00AF     	 add r7,sp,#0
 515              	.LCFI62:
 516              	 .cfi_def_cfa_register 7
 517 0006 7860     	 str r0,[r7,#4]
2856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableSymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSli
2857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC &= ~((uint32_t) CCU8_CC8_CHC_ASE_Msk);
 518              	 .loc 1 2857 0
 519 0008 7B68     	 ldr r3,[r7,#4]
 520 000a 9B6C     	 ldr r3,[r3,#72]
 521 000c 23F00102 	 bic r2,r3,#1
 522 0010 7B68     	 ldr r3,[r7,#4]
 523 0012 9A64     	 str r2,[r3,#72]
2858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 524              	 .loc 1 2858 0
 525 0014 0C37     	 adds r7,r7,#12
 526              	.LCFI63:
 527              	 .cfi_def_cfa_offset 4
 528 0016 BD46     	 mov sp,r7
 529              	.LCFI64:
 530              	 .cfi_def_cfa_register 13
 531              	 
 532 0018 5DF8047B 	 ldr r7,[sp],#4
 533              	.LCFI65:
 534              	 .cfi_restore 7
 535              	 .cfi_def_cfa_offset 0
 536 001c 7047     	 bx lr
 537              	 .cfi_endproc
 538              	.LFE187:
 540 001e 00BF     	 .section .text.XMC_SCU_SetCcuTriggerHigh,"ax",%progbits
 541              	 .align 2
 542              	 .thumb
 543              	 .thumb_func
 545              	XMC_SCU_SetCcuTriggerHigh:
 546              	.LFB218:
 547              	 .file 2 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_scu.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 548              	 .loc 2 231 0
 549              	 .cfi_startproc
 550              	 
 551              	 
 552              	 
 553 0000 80B4     	 push {r7}
 554              	.LCFI66:
 555              	 .cfi_def_cfa_offset 4
 556              	 .cfi_offset 7,-4
 557 0002 83B0     	 sub sp,sp,#12
 558              	.LCFI67:
 559              	 .cfi_def_cfa_offset 16
 560 0004 00AF     	 add r7,sp,#0
 561              	.LCFI68:
 562              	 .cfi_def_cfa_register 7
 563 0006 7860     	 str r0,[r7,#4]
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 564              	 .loc 2 232 0
 565 0008 0549     	 ldr r1,.L13
 566 000a 054B     	 ldr r3,.L13
 567 000c DA6C     	 ldr r2,[r3,#76]
 568 000e 7B68     	 ldr r3,[r7,#4]
 569 0010 1343     	 orrs r3,r3,r2
 570 0012 CB64     	 str r3,[r1,#76]
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 571              	 .loc 2 233 0
 572 0014 0C37     	 adds r7,r7,#12
 573              	.LCFI69:
 574              	 .cfi_def_cfa_offset 4
 575 0016 BD46     	 mov sp,r7
 576              	.LCFI70:
 577              	 .cfi_def_cfa_register 13
 578              	 
 579 0018 5DF8047B 	 ldr r7,[sp],#4
 580              	.LCFI71:
 581              	 .cfi_restore 7
 582              	 .cfi_def_cfa_offset 0
 583 001c 7047     	 bx lr
 584              	.L14:
 585 001e 00BF     	 .align 2
 586              	.L13:
 587 0020 00400050 	 .word 1342193664
 588              	 .cfi_endproc
 589              	.LFE218:
 591              	 .section .text.XMC_SCU_SetCcuTriggerLow,"ax",%progbits
 592              	 .align 2
 593              	 .thumb
 594              	 .thumb_func
 596              	XMC_SCU_SetCcuTriggerLow:
 597              	.LFB219:
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 598              	 .loc 2 256 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602              	 
 603 0000 80B4     	 push {r7}
 604              	.LCFI72:
 605              	 .cfi_def_cfa_offset 4
 606              	 .cfi_offset 7,-4
 607 0002 83B0     	 sub sp,sp,#12
 608              	.LCFI73:
 609              	 .cfi_def_cfa_offset 16
 610 0004 00AF     	 add r7,sp,#0
 611              	.LCFI74:
 612              	 .cfi_def_cfa_register 7
 613 0006 7860     	 str r0,[r7,#4]
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 614              	 .loc 2 257 0
 615 0008 0549     	 ldr r1,.L16
 616 000a 054B     	 ldr r3,.L16
 617 000c DA6C     	 ldr r2,[r3,#76]
 618 000e 7B68     	 ldr r3,[r7,#4]
 619 0010 DB43     	 mvns r3,r3
 620 0012 1340     	 ands r3,r3,r2
 621 0014 CB64     	 str r3,[r1,#76]
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 622              	 .loc 2 258 0
 623 0016 0C37     	 adds r7,r7,#12
 624              	.LCFI75:
 625              	 .cfi_def_cfa_offset 4
 626 0018 BD46     	 mov sp,r7
 627              	.LCFI76:
 628              	 .cfi_def_cfa_register 13
 629              	 
 630 001a 5DF8047B 	 ldr r7,[sp],#4
 631              	.LCFI77:
 632              	 .cfi_restore 7
 633              	 .cfi_def_cfa_offset 0
 634 001e 7047     	 bx lr
 635              	.L17:
 636              	 .align 2
 637              	.L16:
 638 0020 00400050 	 .word 1342193664
 639              	 .cfi_endproc
 640              	.LFE219:
 642              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 643              	 .align 2
 644              	 .thumb
 645              	 .thumb_func
 647              	XMC_GPIO_SetOutputHigh:
 648              	.LFB228:
 649              	 .file 3 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_gpio.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** {
 650              	 .loc 3 257 0
 651              	 .cfi_startproc
 652              	 
 653              	 
 654              	 
 655 0000 80B4     	 push {r7}
 656              	.LCFI78:
 657              	 .cfi_def_cfa_offset 4
 658              	 .cfi_offset 7,-4
 659 0002 83B0     	 sub sp,sp,#12
 660              	.LCFI79:
 661              	 .cfi_def_cfa_offset 16
 662 0004 00AF     	 add r7,sp,#0
 663              	.LCFI80:
 664              	 .cfi_def_cfa_register 7
 665 0006 7860     	 str r0,[r7,#4]
 666 0008 0B46     	 mov r3,r1
 667 000a FB70     	 strb r3,[r7,#3]
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 668              	 .loc 3 260 0
 669 000c FB78     	 ldrb r3,[r7,#3]
 670 000e 0122     	 movs r2,#1
 671 0010 9A40     	 lsls r2,r2,r3
 672 0012 7B68     	 ldr r3,[r7,#4]
 673 0014 5A60     	 str r2,[r3,#4]
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** }
 674              	 .loc 3 261 0
 675 0016 0C37     	 adds r7,r7,#12
 676              	.LCFI81:
 677              	 .cfi_def_cfa_offset 4
 678 0018 BD46     	 mov sp,r7
 679              	.LCFI82:
 680              	 .cfi_def_cfa_register 13
 681              	 
 682 001a 5DF8047B 	 ldr r7,[sp],#4
 683              	.LCFI83:
 684              	 .cfi_restore 7
 685              	 .cfi_def_cfa_offset 0
 686 001e 7047     	 bx lr
 687              	 .cfi_endproc
 688              	.LFE228:
 690              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 691              	 .align 2
 692              	 .thumb
 693              	 .thumb_func
 695              	XMC_GPIO_SetOutputLow:
 696              	.LFB229:
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** {
 697              	 .loc 3 283 0
 698              	 .cfi_startproc
 699              	 
 700              	 
 701              	 
 702 0000 80B4     	 push {r7}
 703              	.LCFI84:
 704              	 .cfi_def_cfa_offset 4
 705              	 .cfi_offset 7,-4
 706 0002 83B0     	 sub sp,sp,#12
 707              	.LCFI85:
 708              	 .cfi_def_cfa_offset 16
 709 0004 00AF     	 add r7,sp,#0
 710              	.LCFI86:
 711              	 .cfi_def_cfa_register 7
 712 0006 7860     	 str r0,[r7,#4]
 713 0008 0B46     	 mov r3,r1
 714 000a FB70     	 strb r3,[r7,#3]
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 715              	 .loc 3 286 0
 716 000c FB78     	 ldrb r3,[r7,#3]
 717 000e 4FF48032 	 mov r2,#65536
 718 0012 9A40     	 lsls r2,r2,r3
 719 0014 7B68     	 ldr r3,[r7,#4]
 720 0016 5A60     	 str r2,[r3,#4]
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_gpio.h **** }
 721              	 .loc 3 287 0
 722 0018 0C37     	 adds r7,r7,#12
 723              	.LCFI87:
 724              	 .cfi_def_cfa_offset 4
 725 001a BD46     	 mov sp,r7
 726              	.LCFI88:
 727              	 .cfi_def_cfa_register 13
 728              	 
 729 001c 5DF8047B 	 ldr r7,[sp],#4
 730              	.LCFI89:
 731              	 .cfi_restore 7
 732              	 .cfi_def_cfa_offset 0
 733 0020 7047     	 bx lr
 734              	 .cfi_endproc
 735              	.LFE229:
 737 0022 00BF     	 .section .text.PWM_SVM_lEnableEvent,"ax",%progbits
 738              	 .align 2
 739              	 .global PWM_SVM_lEnableEvent
 740              	 .thumb
 741              	 .thumb_func
 743              	PWM_SVM_lEnableEvent:
 744              	.LFB236:
 745              	 .file 4 "../Dave/Generated/PWM_SVM/pwm_svm.c"
   1:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
   2:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @file pwm_svm.c
   3:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @date 2015-10-21
   4:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  *
   5:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * NOTE:
   6:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
   8:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @cond
   9:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * PWM_SVM v4.0.22 - Generates 3-phase space vector pulse width modulated outputs using CCU8.
  11:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * It supports symmetric/asymmetric and 7-segment/5-segment SVM algorithm.
  12:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  13:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  14:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * All rights reserved.
  15:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  16:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * following conditions are met:
  18:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  19:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   disclaimer.
  21:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  22:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  25:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  28:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  36:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  39:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  40:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Change History
  41:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * --------------
  42:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  43:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * 2015-02-20:
  44:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - Initial version
  45:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  46:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * 2015-06-20:
  47:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - DC link current trigger is updated. <br>
  48:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - max_amplitude updated when PWM scheme is changed
  49:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  50:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @endcond
  51:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  52:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  53:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  54:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * HEADER FILES
  55:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  56:../Dave/Generated/PWM_SVM/pwm_svm.c **** #include "pwm_svm.h"
  57:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  58:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  59:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * MACROS
  60:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  61:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  62:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  63:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL DATA
  64:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  65:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  66:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  67:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL ROUTINES
  68:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  69:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  70:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function updates the compare values for the Symmetric
  71:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM(standard SVM) \n
  72:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  73:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  74:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  75:../Dave/Generated/PWM_SVM/pwm_svm.c **** RAM_ATTRIBUTE static void PWM_SVM_lSymCompValUpdate(PWM_SVM_t* const HandlePtr);
  76:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  77:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function updates the compare values for the Asymmetric
  78:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM(standard SVM) \n
  79:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  80:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  81:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  82:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lAsymCompValUpdate(PWM_SVM_t* const HandlePtr);
  83:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  84:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  85:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  86:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the compare register values based on the sector
  87:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
  88:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  89:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  90:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  91:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lUpdateDcLinkComRes(PWM_SVM_t* const HandlePtr);
  92:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  93:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the svm scheme dynamically while pwm is running
  94:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
  95:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  96:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Scheme required svm scheme
  97:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  98:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  99:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lDynamicSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme);
 100:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 101:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the svm scheme when pwm is stopped
 102:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
 103:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 104:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Scheme required svm scheme
 105:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 106:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 107:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lStaticSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme);
 108:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
 109:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 110:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the current trigger ccu8 slice
 111:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
 112:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 113:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 114:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 115:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCurrentTrigSliceInit(PWM_SVM_t* const HandlePtr);
 116:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 117:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 118:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the period value for Centre aligned PWM when switching from
 119:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *         Edge aligned PWM
 120:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 121:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 122:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 123:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCAPeriodValueConfig(PWM_SVM_t* const HandlePtr);
 124:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 125:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the period value for edge aligned PWM when switching from
 126:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *         centre aligned PWM
 127:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 128:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 129:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 130:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEAPeriodValueConfig(PWM_SVM_t* const HandlePtr);
 131:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 132:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Function enables configured events.
 133:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 134:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEnableEvent(PWM_SVM_t* const HandlePtr);
 135:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_OVERMODULATION_ENABLE)
 136:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 137:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function calculates sector angle for over modulation using Look up table.
 138:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function will update sector angle variable based on amplitude.
 139:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 140:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Amplitude Amplitude
 141:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 142:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 143:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lOvermodulation(PWM_SVM_t* const HandlePtr, uint16_t Amplitude);
 144:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 145:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function calculates sector angle for over modulation using CORDIC and Lookup table.
 146:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function will update sector angle variable based on amplitude.
 147:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 148:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Amplitude Amplitude
 149:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 150:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 151:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lOvermodulation_Cordic(PWM_SVM_t* const HandlePtr, uint16_t Amplitude);
 152:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 153:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 154:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
 155:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL DATA
 156:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
 157:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_LUT_ENABLE)
 158:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 159:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This is the sine table used for SVM algorithm.
 160:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 161:../Dave/Generated/PWM_SVM/pwm_svm.c **** extern const uint16_t Sinus60_tab[];
 162:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 163:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 164:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 165:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
 166:../Dave/Generated/PWM_SVM/pwm_svm.c **** * API IMPLEMENTATION
 167:../Dave/Generated/PWM_SVM/pwm_svm.c **** ***************************************************************************************************
 168:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEnableEvent(PWM_SVM_t* const HandlePtr)
 169:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 746              	 .loc 4 169 0
 747              	 .cfi_startproc
 748              	 
 749              	 
 750 0000 80B5     	 push {r7,lr}
 751              	.LCFI90:
 752              	 .cfi_def_cfa_offset 8
 753              	 .cfi_offset 7,-8
 754              	 .cfi_offset 14,-4
 755 0002 82B0     	 sub sp,sp,#8
 756              	.LCFI91:
 757              	 .cfi_def_cfa_offset 16
 758 0004 00AF     	 add r7,sp,#0
 759              	.LCFI92:
 760              	 .cfi_def_cfa_register 7
 761 0006 7860     	 str r0,[r7,#4]
 170:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the slice 0 period match interrupt */
 171:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) true == HandlePtr->confighandle_ptr->enable_periodmatch)
 762              	 .loc 4 171 0
 763 0008 7B68     	 ldr r3,[r7,#4]
 764 000a 1B68     	 ldr r3,[r3]
 765 000c 93F84430 	 ldrb r3,[r3,#68]
 766 0010 012B     	 cmp r3,#1
 767 0012 06D1     	 bne .L21
 172:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 173:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[0]->slice_ptr,
 768              	 .loc 4 173 0
 769 0014 7B68     	 ldr r3,[r7,#4]
 770 0016 9B68     	 ldr r3,[r3,#8]
 771 0018 1B68     	 ldr r3,[r3]
 772 001a 1846     	 mov r0,r3
 773 001c 0021     	 movs r1,#0
 774 001e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 775              	.L21:
 174:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 175:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 176:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the slice 0 trap interrupt */
 177:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) true == HandlePtr->confighandle_ptr->enable_trapevent)
 776              	 .loc 4 177 0
 777 0022 7B68     	 ldr r3,[r7,#4]
 778 0024 1B68     	 ldr r3,[r3]
 779 0026 93F84530 	 ldrb r3,[r3,#69]
 780 002a 012B     	 cmp r3,#1
 781 002c 06D1     	 bne .L20
 178:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 179:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[0]->slice_ptr,
 782              	 .loc 4 179 0
 783 002e 7B68     	 ldr r3,[r7,#4]
 784 0030 9B68     	 ldr r3,[r3,#8]
 785 0032 1B68     	 ldr r3,[r3]
 786 0034 1846     	 mov r0,r3
 787 0036 0A21     	 movs r1,#10
 788 0038 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 789              	.L20:
 180:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 181:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 182:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 790              	 .loc 4 182 0
 791 003c 0837     	 adds r7,r7,#8
 792              	.LCFI93:
 793              	 .cfi_def_cfa_offset 8
 794 003e BD46     	 mov sp,r7
 795              	.LCFI94:
 796              	 .cfi_def_cfa_register 13
 797              	 
 798 0040 80BD     	 pop {r7,pc}
 799              	 .cfi_endproc
 800              	.LFE236:
 802 0042 00BF     	 .section .text.PWM_SVM_InverterDisable,"ax",%progbits
 803              	 .align 2
 804              	 .global PWM_SVM_InverterDisable
 805              	 .thumb
 806              	 .thumb_func
 808              	PWM_SVM_InverterDisable:
 809              	.LFB237:
 183:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 184:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function disables the inverter
 185:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 186:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_InverterDisable(PWM_SVM_t* const HandlePtr)
 187:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 810              	 .loc 4 187 0
 811              	 .cfi_startproc
 812              	 
 813              	 
 814 0000 80B5     	 push {r7,lr}
 815              	.LCFI95:
 816              	 .cfi_def_cfa_offset 8
 817              	 .cfi_offset 7,-8
 818              	 .cfi_offset 14,-4
 819 0002 82B0     	 sub sp,sp,#8
 820              	.LCFI96:
 821              	 .cfi_def_cfa_offset 16
 822 0004 00AF     	 add r7,sp,#0
 823              	.LCFI97:
 824              	 .cfi_def_cfa_register 7
 825 0006 7860     	 str r0,[r7,#4]
 188:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_InverterDisable:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
 189:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin settings.*/
 190:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_HIGH == HandlePtr->confighandle_ptr->inverter_pin)
 826              	 .loc 4 190 0
 827 0008 7B68     	 ldr r3,[r7,#4]
 828 000a 1B68     	 ldr r3,[r3]
 829 000c DB7C     	 ldrb r3,[r3,#19]
 830 000e 012B     	 cmp r3,#1
 831 0010 09D1     	 bne .L24
 191:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 192:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to low*/
 193:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputLow(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 832              	 .loc 4 193 0
 833 0012 7B68     	 ldr r3,[r7,#4]
 834 0014 9B6D     	 ldr r3,[r3,#88]
 835 0016 1A68     	 ldr r2,[r3]
 836 0018 7B68     	 ldr r3,[r7,#4]
 837 001a 9B6D     	 ldr r3,[r3,#88]
 838 001c 1B79     	 ldrb r3,[r3,#4]
 839 001e 1046     	 mov r0,r2
 840 0020 1946     	 mov r1,r3
 841 0022 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 842              	.L24:
 194:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 195:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_LOW == HandlePtr->confighandle_ptr->inverter_pin)
 843              	 .loc 4 195 0
 844 0026 7B68     	 ldr r3,[r7,#4]
 845 0028 1B68     	 ldr r3,[r3]
 846 002a DB7C     	 ldrb r3,[r3,#19]
 847 002c 022B     	 cmp r3,#2
 848 002e 09D1     	 bne .L23
 196:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to high*/
 198:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputHigh(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 849              	 .loc 4 198 0
 850 0030 7B68     	 ldr r3,[r7,#4]
 851 0032 9B6D     	 ldr r3,[r3,#88]
 852 0034 1A68     	 ldr r2,[r3]
 853 0036 7B68     	 ldr r3,[r7,#4]
 854 0038 9B6D     	 ldr r3,[r3,#88]
 855 003a 1B79     	 ldrb r3,[r3,#4]
 856 003c 1046     	 mov r0,r2
 857 003e 1946     	 mov r1,r3
 858 0040 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 859              	.L23:
 199:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 200:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 860              	 .loc 4 200 0
 861 0044 0837     	 adds r7,r7,#8
 862              	.LCFI98:
 863              	 .cfi_def_cfa_offset 8
 864 0046 BD46     	 mov sp,r7
 865              	.LCFI99:
 866              	 .cfi_def_cfa_register 13
 867              	 
 868 0048 80BD     	 pop {r7,pc}
 869              	 .cfi_endproc
 870              	.LFE237:
 872 004a 00BF     	 .section .text.PWM_SVM_InverterEnable,"ax",%progbits
 873              	 .align 2
 874              	 .global PWM_SVM_InverterEnable
 875              	 .thumb
 876              	 .thumb_func
 878              	PWM_SVM_InverterEnable:
 879              	.LFB238:
 201:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 202:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function Enables the inverter
 203:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 204:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_InverterEnable(PWM_SVM_t* const HandlePtr)
 205:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 880              	 .loc 4 205 0
 881              	 .cfi_startproc
 882              	 
 883              	 
 884 0000 80B5     	 push {r7,lr}
 885              	.LCFI100:
 886              	 .cfi_def_cfa_offset 8
 887              	 .cfi_offset 7,-8
 888              	 .cfi_offset 14,-4
 889 0002 82B0     	 sub sp,sp,#8
 890              	.LCFI101:
 891              	 .cfi_def_cfa_offset 16
 892 0004 00AF     	 add r7,sp,#0
 893              	.LCFI102:
 894              	 .cfi_def_cfa_register 7
 895 0006 7860     	 str r0,[r7,#4]
 206:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
 207:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin settings.*/
 208:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_HIGH == HandlePtr->confighandle_ptr->inverter_pin)
 896              	 .loc 4 208 0
 897 0008 7B68     	 ldr r3,[r7,#4]
 898 000a 1B68     	 ldr r3,[r3]
 899 000c DB7C     	 ldrb r3,[r3,#19]
 900 000e 012B     	 cmp r3,#1
 901 0010 09D1     	 bne .L27
 209:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 210:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to high*/
 211:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputHigh(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 902              	 .loc 4 211 0
 903 0012 7B68     	 ldr r3,[r7,#4]
 904 0014 9B6D     	 ldr r3,[r3,#88]
 905 0016 1A68     	 ldr r2,[r3]
 906 0018 7B68     	 ldr r3,[r7,#4]
 907 001a 9B6D     	 ldr r3,[r3,#88]
 908 001c 1B79     	 ldrb r3,[r3,#4]
 909 001e 1046     	 mov r0,r2
 910 0020 1946     	 mov r1,r3
 911 0022 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 912              	.L27:
 212:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 213:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_LOW == HandlePtr->confighandle_ptr->inverter_pin)
 913              	 .loc 4 213 0
 914 0026 7B68     	 ldr r3,[r7,#4]
 915 0028 1B68     	 ldr r3,[r3]
 916 002a DB7C     	 ldrb r3,[r3,#19]
 917 002c 022B     	 cmp r3,#2
 918 002e 09D1     	 bne .L26
 214:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 215:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to low*/
 216:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputLow(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 919              	 .loc 4 216 0
 920 0030 7B68     	 ldr r3,[r7,#4]
 921 0032 9B6D     	 ldr r3,[r3,#88]
 922 0034 1A68     	 ldr r2,[r3]
 923 0036 7B68     	 ldr r3,[r7,#4]
 924 0038 9B6D     	 ldr r3,[r3,#88]
 925 003a 1B79     	 ldrb r3,[r3,#4]
 926 003c 1046     	 mov r0,r2
 927 003e 1946     	 mov r1,r3
 928 0040 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 929              	.L26:
 217:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 218:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 930              	 .loc 4 218 0
 931 0044 0837     	 adds r7,r7,#8
 932              	.LCFI103:
 933              	 .cfi_def_cfa_offset 8
 934 0046 BD46     	 mov sp,r7
 935              	.LCFI104:
 936              	 .cfi_def_cfa_register 13
 937              	 
 938 0048 80BD     	 pop {r7,pc}
 939              	 .cfi_endproc
 940              	.LFE238:
 942 004a 00BF     	 .section .ram_code,"ax",%progbits
 943              	 .align 2
 944              	 .thumb
 945              	 .thumb_func
 947              	PWM_SVM_lSymCompValUpdate:
 948              	.LFB240:
 219:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
 220:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 221:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function configures the current trigger slice
 222:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 223:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCurrentTrigSliceInit(PWM_SVM_t* const HandlePtr)
 224:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 225:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_CompareInit(HandlePtr->phase_ptr[3]->slice_ptr, HandlePtr->current_configinit_ptr)
 226:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->peri
 227:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Configure external start to event 0 */
 228:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[3]->slice_ptr,(XMC_CCU8_SLICE_EVENT_t)XMC_CCU8
 229:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->startconfig_ptr);
 230:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_EnableClock(HandlePtr->global_ptr,HandlePtr->phase_ptr[3]->slice_number);
 231:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 232:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Phase current measurement */
 233:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->confighandle_ptr->current_measurement == PWM_SVM_PHASECM )
 234:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 235:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Program timer compare value for channel 1 or channel 2*/
 236:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr, HandlePtr->confighandle
 237:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 1U));
 238:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Enable timer one match event  */
 239:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CC
 240:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 241:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else if (HandlePtr->confighandle_ptr->current_measurement == PWM_SVM_DCLINKCM )/* DC Link current
 242:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 243:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Program timer compare value for channel 1 or channel 2*/
 244:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 245:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t)XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 246:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 2U));
 247:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t)XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 249:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 1U));
 250:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Enable timer compare match event based on svm scheme */
 251:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_SVMCONFIG_t)PWM_SVM_7SEG_SYMM == HandlePtr->svm_config)
 252:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 253:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 254:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
 255:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 256:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
 257:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 258:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
 259:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 260:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
 261:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 262:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
 263:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 264:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 265:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
 266:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 267:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
 268:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 269:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 270:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 271:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 272:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*do nothing*/
 273:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 274:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 275:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->phase_ptr[3]->slice_ptr->SRS |= HandlePtr->confighandle_ptr->event_sr_selector[3];
 276:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 277:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 278:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 279:../Dave/Generated/PWM_SVM/pwm_svm.c **** /* This function updates the compare register values for DC link current measurement */
 280:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE static void PWM_SVM_lUpdateDcLinkComRes(PWM_SVM_t* const HandlePtr)
 281:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 282:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 283:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 284:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 285:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (uint16_t)(HandlePtr->v_tb + (uint16_t)(HandlePtr->ta >> (uint16_t) 1)));
 286:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 287:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 288:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (uint16_t)(HandlePtr->v_tb + (uint16_t)((uint16_t) HandlePtr->tb >> (uint16_t) 1) + (uint16
 289:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 290:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 291:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lSymCompValUpdate(PWM_SVM_t* const HandlePtr)
 292:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 949              	 .loc 4 292 0
 950              	 .cfi_startproc
 951              	 
 952              	 
 953              	 
 954 0000 80B4     	 push {r7}
 955              	.LCFI105:
 956              	 .cfi_def_cfa_offset 4
 957              	 .cfi_offset 7,-4
 958 0002 83B0     	 sub sp,sp,#12
 959              	.LCFI106:
 960              	 .cfi_def_cfa_offset 16
 961 0004 00AF     	 add r7,sp,#0
 962              	.LCFI107:
 963              	 .cfi_def_cfa_register 7
 964 0006 7860     	 str r0,[r7,#4]
 293:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare register with appropriate value  based on sector*/
 294:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch ((HandlePtr->sector & 7U))
 965              	 .loc 4 294 0
 966 0008 7B68     	 ldr r3,[r7,#4]
 967 000a D3F8A430 	 ldr r3,[r3,#164]
 968 000e 03F00703 	 and r3,r3,#7
 969 0012 042B     	 cmp r3,#4
 970 0014 00F28680 	 bhi .L30
 971 0018 01A2     	 adr r2,.L32
 972 001a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 973 001e 00BF     	 .p2align 2
 974              	.L32:
 975 0020 35000000 	 .word .L31+1
 976 0024 65000000 	 .word .L33+1
 977 0028 95000000 	 .word .L34+1
 978 002c C5000000 	 .word .L35+1
 979 0030 F5000000 	 .word .L36+1
 980              	 .p2align 1
 981              	.L31:
 295:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 296:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 297:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 982              	 .loc 4 297 0
 983 0034 7B68     	 ldr r3,[r7,#4]
 984 0036 1B6F     	 ldr r3,[r3,#112]
 985 0038 7A68     	 ldr r2,[r7,#4]
 986 003a B2F8B820 	 ldrh r2,[r2,#184]
 987 003e 1A60     	 str r2,[r3]
 298:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->tb);
 988              	 .loc 4 298 0
 989 0040 7B68     	 ldr r3,[r7,#4]
 990 0042 5B6F     	 ldr r3,[r3,#116]
 991 0044 7A68     	 ldr r2,[r7,#4]
 992 0046 B2F8B820 	 ldrh r2,[r2,#184]
 993 004a 1146     	 mov r1,r2
 994 004c 7A68     	 ldr r2,[r7,#4]
 995 004e B2F8B020 	 ldrh r2,[r2,#176]
 996 0052 0A44     	 add r2,r2,r1
 997 0054 1A60     	 str r2,[r3]
 299:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 998              	 .loc 4 299 0
 999 0056 7B68     	 ldr r3,[r7,#4]
 1000 0058 9B6F     	 ldr r3,[r3,#120]
 1001 005a 7A68     	 ldr r2,[r7,#4]
 1002 005c B2F8B620 	 ldrh r2,[r2,#182]
 1003 0060 1A60     	 str r2,[r3]
 300:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1004              	 .loc 4 300 0
 1005 0062 77E0     	 b .L29
 1006              	.L33:
 301:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 302:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->ta);
 1007              	 .loc 4 302 0
 1008 0064 7B68     	 ldr r3,[r7,#4]
 1009 0066 1B6F     	 ldr r3,[r3,#112]
 1010 0068 7A68     	 ldr r2,[r7,#4]
 1011 006a B2F8B820 	 ldrh r2,[r2,#184]
 1012 006e 1146     	 mov r1,r2
 1013 0070 7A68     	 ldr r2,[r7,#4]
 1014 0072 B2F8AE20 	 ldrh r2,[r2,#174]
 1015 0076 0A44     	 add r2,r2,r1
 1016 0078 1A60     	 str r2,[r3]
 303:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) (HandlePtr->v_tb);
 1017              	 .loc 4 303 0
 1018 007a 7B68     	 ldr r3,[r7,#4]
 1019 007c 5B6F     	 ldr r3,[r3,#116]
 1020 007e 7A68     	 ldr r2,[r7,#4]
 1021 0080 B2F8B820 	 ldrh r2,[r2,#184]
 1022 0084 1A60     	 str r2,[r3]
 304:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1023              	 .loc 4 304 0
 1024 0086 7B68     	 ldr r3,[r7,#4]
 1025 0088 9B6F     	 ldr r3,[r3,#120]
 1026 008a 7A68     	 ldr r2,[r7,#4]
 1027 008c B2F8B620 	 ldrh r2,[r2,#182]
 1028 0090 1A60     	 str r2,[r3]
 305:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1029              	 .loc 4 305 0
 1030 0092 5FE0     	 b .L29
 1031              	.L34:
 306:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 307:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1032              	 .loc 4 307 0
 1033 0094 7B68     	 ldr r3,[r7,#4]
 1034 0096 1B6F     	 ldr r3,[r3,#112]
 1035 0098 7A68     	 ldr r2,[r7,#4]
 1036 009a B2F8B620 	 ldrh r2,[r2,#182]
 1037 009e 1A60     	 str r2,[r3]
 308:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_tb;
 1038              	 .loc 4 308 0
 1039 00a0 7B68     	 ldr r3,[r7,#4]
 1040 00a2 5B6F     	 ldr r3,[r3,#116]
 1041 00a4 7A68     	 ldr r2,[r7,#4]
 1042 00a6 B2F8B820 	 ldrh r2,[r2,#184]
 1043 00aa 1A60     	 str r2,[r3]
 309:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->tb);
 1044              	 .loc 4 309 0
 1045 00ac 7B68     	 ldr r3,[r7,#4]
 1046 00ae 9B6F     	 ldr r3,[r3,#120]
 1047 00b0 7A68     	 ldr r2,[r7,#4]
 1048 00b2 B2F8B820 	 ldrh r2,[r2,#184]
 1049 00b6 1146     	 mov r1,r2
 1050 00b8 7A68     	 ldr r2,[r7,#4]
 1051 00ba B2F8B020 	 ldrh r2,[r2,#176]
 1052 00be 0A44     	 add r2,r2,r1
 1053 00c0 1A60     	 str r2,[r3]
 310:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1054              	 .loc 4 310 0
 1055 00c2 47E0     	 b .L29
 1056              	.L35:
 311:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 312:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1057              	 .loc 4 312 0
 1058 00c4 7B68     	 ldr r3,[r7,#4]
 1059 00c6 1B6F     	 ldr r3,[r3,#112]
 1060 00c8 7A68     	 ldr r2,[r7,#4]
 1061 00ca B2F8B620 	 ldrh r2,[r2,#182]
 1062 00ce 1A60     	 str r2,[r3]
 313:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t)( HandlePtr->v_tb+ HandlePtr->ta);
 1063              	 .loc 4 313 0
 1064 00d0 7B68     	 ldr r3,[r7,#4]
 1065 00d2 5B6F     	 ldr r3,[r3,#116]
 1066 00d4 7A68     	 ldr r2,[r7,#4]
 1067 00d6 B2F8B820 	 ldrh r2,[r2,#184]
 1068 00da 1146     	 mov r1,r2
 1069 00dc 7A68     	 ldr r2,[r7,#4]
 1070 00de B2F8AE20 	 ldrh r2,[r2,#174]
 1071 00e2 0A44     	 add r2,r2,r1
 1072 00e4 1A60     	 str r2,[r3]
 314:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb;
 1073              	 .loc 4 314 0
 1074 00e6 7B68     	 ldr r3,[r7,#4]
 1075 00e8 9B6F     	 ldr r3,[r3,#120]
 1076 00ea 7A68     	 ldr r2,[r7,#4]
 1077 00ec B2F8B820 	 ldrh r2,[r2,#184]
 1078 00f0 1A60     	 str r2,[r3]
 315:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1079              	 .loc 4 315 0
 1080 00f2 2FE0     	 b .L29
 1081              	.L36:
 316:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 317:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb+ HandlePtr->tb;
 1082              	 .loc 4 317 0
 1083 00f4 7B68     	 ldr r3,[r7,#4]
 1084 00f6 1B6F     	 ldr r3,[r3,#112]
 1085 00f8 7A68     	 ldr r2,[r7,#4]
 1086 00fa B2F8B820 	 ldrh r2,[r2,#184]
 1087 00fe 1146     	 mov r1,r2
 1088 0100 7A68     	 ldr r2,[r7,#4]
 1089 0102 B2F8B020 	 ldrh r2,[r2,#176]
 1090 0106 0A44     	 add r2,r2,r1
 1091 0108 1A60     	 str r2,[r3]
 318:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1092              	 .loc 4 318 0
 1093 010a 7B68     	 ldr r3,[r7,#4]
 1094 010c 5B6F     	 ldr r3,[r3,#116]
 1095 010e 7A68     	 ldr r2,[r7,#4]
 1096 0110 B2F8B620 	 ldrh r2,[r2,#182]
 1097 0114 1A60     	 str r2,[r3]
 319:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb;
 1098              	 .loc 4 319 0
 1099 0116 7B68     	 ldr r3,[r7,#4]
 1100 0118 9B6F     	 ldr r3,[r3,#120]
 1101 011a 7A68     	 ldr r2,[r7,#4]
 1102 011c B2F8B820 	 ldrh r2,[r2,#184]
 1103 0120 1A60     	 str r2,[r3]
 320:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1104              	 .loc 4 320 0
 1105 0122 17E0     	 b .L29
 1106              	.L30:
 321:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 322:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 1107              	 .loc 4 322 0
 1108 0124 7B68     	 ldr r3,[r7,#4]
 1109 0126 1B6F     	 ldr r3,[r3,#112]
 1110 0128 7A68     	 ldr r2,[r7,#4]
 1111 012a B2F8B820 	 ldrh r2,[r2,#184]
 1112 012e 1A60     	 str r2,[r3]
 323:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1113              	 .loc 4 323 0
 1114 0130 7B68     	 ldr r3,[r7,#4]
 1115 0132 5B6F     	 ldr r3,[r3,#116]
 1116 0134 7A68     	 ldr r2,[r7,#4]
 1117 0136 B2F8B620 	 ldrh r2,[r2,#182]
 1118 013a 1A60     	 str r2,[r3]
 324:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb+ HandlePtr->ta;
 1119              	 .loc 4 324 0
 1120 013c 7B68     	 ldr r3,[r7,#4]
 1121 013e 9B6F     	 ldr r3,[r3,#120]
 1122 0140 7A68     	 ldr r2,[r7,#4]
 1123 0142 B2F8B820 	 ldrh r2,[r2,#184]
 1124 0146 1146     	 mov r1,r2
 1125 0148 7A68     	 ldr r2,[r7,#4]
 1126 014a B2F8AE20 	 ldrh r2,[r2,#174]
 1127 014e 0A44     	 add r2,r2,r1
 1128 0150 1A60     	 str r2,[r3]
 325:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1129              	 .loc 4 325 0
 1130 0152 00BF     	 nop
 1131              	.L29:
 326:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 327:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1132              	 .loc 4 327 0
 1133 0154 0C37     	 adds r7,r7,#12
 1134              	.LCFI108:
 1135              	 .cfi_def_cfa_offset 4
 1136 0156 BD46     	 mov sp,r7
 1137              	.LCFI109:
 1138              	 .cfi_def_cfa_register 13
 1139              	 
 1140 0158 5DF8047B 	 ldr r7,[sp],#4
 1141              	.LCFI110:
 1142              	 .cfi_restore 7
 1143              	 .cfi_def_cfa_offset 0
 1144 015c 7047     	 bx lr
 1145              	 .cfi_endproc
 1146              	.LFE240:
 1148              	 .section .text.PWM_SVM_lAsymCompValUpdate,"ax",%progbits
 1149              	 .align 2
 1150              	 .thumb
 1151              	 .thumb_func
 1153              	PWM_SVM_lAsymCompValUpdate:
 1154              	.LFB241:
 328:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 329:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lAsymCompValUpdate(PWM_SVM_t* const HandlePtr)
 330:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1155              	 .loc 4 330 0
 1156              	 .cfi_startproc
 1157              	 
 1158              	 
 1159              	 
 1160 0000 80B4     	 push {r7}
 1161              	.LCFI111:
 1162              	 .cfi_def_cfa_offset 4
 1163              	 .cfi_offset 7,-4
 1164 0002 83B0     	 sub sp,sp,#12
 1165              	.LCFI112:
 1166              	 .cfi_def_cfa_offset 16
 1167 0004 00AF     	 add r7,sp,#0
 1168              	.LCFI113:
 1169              	 .cfi_def_cfa_register 7
 1170 0006 7860     	 str r0,[r7,#4]
 331:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 332:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 1171              	 .loc 4 332 0
 1172 0008 7B68     	 ldr r3,[r7,#4]
 1173 000a D3F8A430 	 ldr r3,[r3,#164]
 1174 000e 03F00703 	 and r3,r3,#7
 1175 0012 042B     	 cmp r3,#4
 1176 0014 00F20381 	 bhi .L39
 1177 0018 01A2     	 adr r2,.L41
 1178 001a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1179 001e 00BF     	 .p2align 2
 1180              	.L41:
 1181 0020 35000000 	 .word .L40+1
 1182 0024 97000000 	 .word .L42+1
 1183 0028 F9000000 	 .word .L43+1
 1184 002c 5B010000 	 .word .L44+1
 1185 0030 BD010000 	 .word .L45+1
 1186              	 .p2align 1
 1187              	.L40:
 333:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 334:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 335:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 1188              	 .loc 4 335 0
 1189 0034 7B68     	 ldr r3,[r7,#4]
 1190 0036 1B6F     	 ldr r3,[r3,#112]
 1191 0038 7A68     	 ldr r2,[r7,#4]
 1192 003a B2F8B820 	 ldrh r2,[r2,#184]
 1193 003e 1A60     	 str r2,[r3]
 336:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb2;
 1194              	 .loc 4 336 0
 1195 0040 7B68     	 ldr r3,[r7,#4]
 1196 0042 DB6F     	 ldr r3,[r3,#124]
 1197 0044 7A68     	 ldr r2,[r7,#4]
 1198 0046 B2F8BC20 	 ldrh r2,[r2,#188]
 1199 004a 1A60     	 str r2,[r3]
 337:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 338:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint32_t) HandlePtr->v_tb + (uint32_t) HandlePtr->tb);
 1200              	 .loc 4 338 0
 1201 004c 7B68     	 ldr r3,[r7,#4]
 1202 004e 5B6F     	 ldr r3,[r3,#116]
 1203 0050 7A68     	 ldr r2,[r7,#4]
 1204 0052 B2F8B820 	 ldrh r2,[r2,#184]
 1205 0056 1146     	 mov r1,r2
 1206 0058 7A68     	 ldr r2,[r7,#4]
 1207 005a B2F8B020 	 ldrh r2,[r2,#176]
 1208 005e 0A44     	 add r2,r2,r1
 1209 0060 1A60     	 str r2,[r3]
 339:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint32_t) HandlePtr->v_tb + (uint32_t) HandlePtr->tb);
 1210              	 .loc 4 339 0
 1211 0062 7B68     	 ldr r3,[r7,#4]
 1212 0064 D3F88030 	 ldr r3,[r3,#128]
 1213 0068 7A68     	 ldr r2,[r7,#4]
 1214 006a B2F8B820 	 ldrh r2,[r2,#184]
 1215 006e 1146     	 mov r1,r2
 1216 0070 7A68     	 ldr r2,[r7,#4]
 1217 0072 B2F8B020 	 ldrh r2,[r2,#176]
 1218 0076 0A44     	 add r2,r2,r1
 1219 0078 1A60     	 str r2,[r3]
 340:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 341:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1220              	 .loc 4 341 0
 1221 007a 7B68     	 ldr r3,[r7,#4]
 1222 007c 9B6F     	 ldr r3,[r3,#120]
 1223 007e 7A68     	 ldr r2,[r7,#4]
 1224 0080 B2F8B620 	 ldrh r2,[r2,#182]
 1225 0084 1A60     	 str r2,[r3]
 342:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_ta2;
 1226              	 .loc 4 342 0
 1227 0086 7B68     	 ldr r3,[r7,#4]
 1228 0088 D3F88430 	 ldr r3,[r3,#132]
 1229 008c 7A68     	 ldr r2,[r7,#4]
 1230 008e B2F8BA20 	 ldrh r2,[r2,#186]
 1231 0092 1A60     	 str r2,[r3]
 343:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1232              	 .loc 4 343 0
 1233 0094 F4E0     	 b .L38
 1234              	.L42:
 344:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 345:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1235              	 .loc 4 345 0
 1236 0096 7B68     	 ldr r3,[r7,#4]
 1237 0098 1B6F     	 ldr r3,[r3,#112]
 1238 009a 7A68     	 ldr r2,[r7,#4]
 1239 009c B2F8B820 	 ldrh r2,[r2,#184]
 1240 00a0 1146     	 mov r1,r2
 1241 00a2 7A68     	 ldr r2,[r7,#4]
 1242 00a4 B2F8AE20 	 ldrh r2,[r2,#174]
 1243 00a8 0A44     	 add r2,r2,r1
 1244 00aa 1A60     	 str r2,[r3]
 346:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1245              	 .loc 4 346 0
 1246 00ac 7B68     	 ldr r3,[r7,#4]
 1247 00ae DB6F     	 ldr r3,[r3,#124]
 1248 00b0 7A68     	 ldr r2,[r7,#4]
 1249 00b2 B2F8B820 	 ldrh r2,[r2,#184]
 1250 00b6 1146     	 mov r1,r2
 1251 00b8 7A68     	 ldr r2,[r7,#4]
 1252 00ba B2F8AE20 	 ldrh r2,[r2,#174]
 1253 00be 0A44     	 add r2,r2,r1
 1254 00c0 1A60     	 str r2,[r3]
 347:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 348:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1255              	 .loc 4 348 0
 1256 00c2 7B68     	 ldr r3,[r7,#4]
 1257 00c4 5B6F     	 ldr r3,[r3,#116]
 1258 00c6 7A68     	 ldr r2,[r7,#4]
 1259 00c8 B2F8B820 	 ldrh r2,[r2,#184]
 1260 00cc 1A60     	 str r2,[r3]
 349:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1261              	 .loc 4 349 0
 1262 00ce 7B68     	 ldr r3,[r7,#4]
 1263 00d0 D3F88030 	 ldr r3,[r3,#128]
 1264 00d4 7A68     	 ldr r2,[r7,#4]
 1265 00d6 B2F8BC20 	 ldrh r2,[r2,#188]
 1266 00da 1A60     	 str r2,[r3]
 350:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 351:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1267              	 .loc 4 351 0
 1268 00dc 7B68     	 ldr r3,[r7,#4]
 1269 00de 9B6F     	 ldr r3,[r3,#120]
 1270 00e0 7A68     	 ldr r2,[r7,#4]
 1271 00e2 B2F8B620 	 ldrh r2,[r2,#182]
 1272 00e6 1A60     	 str r2,[r3]
 352:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_ta2;
 1273              	 .loc 4 352 0
 1274 00e8 7B68     	 ldr r3,[r7,#4]
 1275 00ea D3F88430 	 ldr r3,[r3,#132]
 1276 00ee 7A68     	 ldr r2,[r7,#4]
 1277 00f0 B2F8BA20 	 ldrh r2,[r2,#186]
 1278 00f4 1A60     	 str r2,[r3]
 353:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1279              	 .loc 4 353 0
 1280 00f6 C3E0     	 b .L38
 1281              	.L43:
 354:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 355:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1282              	 .loc 4 355 0
 1283 00f8 7B68     	 ldr r3,[r7,#4]
 1284 00fa 1B6F     	 ldr r3,[r3,#112]
 1285 00fc 7A68     	 ldr r2,[r7,#4]
 1286 00fe B2F8B620 	 ldrh r2,[r2,#182]
 1287 0102 1A60     	 str r2,[r3]
 356:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_ta2;
 1288              	 .loc 4 356 0
 1289 0104 7B68     	 ldr r3,[r7,#4]
 1290 0106 DB6F     	 ldr r3,[r3,#124]
 1291 0108 7A68     	 ldr r2,[r7,#4]
 1292 010a B2F8BA20 	 ldrh r2,[r2,#186]
 1293 010e 1A60     	 str r2,[r3]
 357:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 358:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1294              	 .loc 4 358 0
 1295 0110 7B68     	 ldr r3,[r7,#4]
 1296 0112 5B6F     	 ldr r3,[r3,#116]
 1297 0114 7A68     	 ldr r2,[r7,#4]
 1298 0116 B2F8B820 	 ldrh r2,[r2,#184]
 1299 011a 1A60     	 str r2,[r3]
 359:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1300              	 .loc 4 359 0
 1301 011c 7B68     	 ldr r3,[r7,#4]
 1302 011e D3F88030 	 ldr r3,[r3,#128]
 1303 0122 7A68     	 ldr r2,[r7,#4]
 1304 0124 B2F8BC20 	 ldrh r2,[r2,#188]
 1305 0128 1A60     	 str r2,[r3]
 360:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 361:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1306              	 .loc 4 361 0
 1307 012a 7B68     	 ldr r3,[r7,#4]
 1308 012c 9B6F     	 ldr r3,[r3,#120]
 1309 012e 7A68     	 ldr r2,[r7,#4]
 1310 0130 B2F8B820 	 ldrh r2,[r2,#184]
 1311 0134 1146     	 mov r1,r2
 1312 0136 7A68     	 ldr r2,[r7,#4]
 1313 0138 B2F8B020 	 ldrh r2,[r2,#176]
 1314 013c 0A44     	 add r2,r2,r1
 1315 013e 1A60     	 str r2,[r3]
 362:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1316              	 .loc 4 362 0
 1317 0140 7B68     	 ldr r3,[r7,#4]
 1318 0142 D3F88430 	 ldr r3,[r3,#132]
 1319 0146 7A68     	 ldr r2,[r7,#4]
 1320 0148 B2F8B820 	 ldrh r2,[r2,#184]
 1321 014c 1146     	 mov r1,r2
 1322 014e 7A68     	 ldr r2,[r7,#4]
 1323 0150 B2F8B020 	 ldrh r2,[r2,#176]
 1324 0154 0A44     	 add r2,r2,r1
 1325 0156 1A60     	 str r2,[r3]
 363:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1326              	 .loc 4 363 0
 1327 0158 92E0     	 b .L38
 1328              	.L44:
 364:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 365:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1329              	 .loc 4 365 0
 1330 015a 7B68     	 ldr r3,[r7,#4]
 1331 015c 1B6F     	 ldr r3,[r3,#112]
 1332 015e 7A68     	 ldr r2,[r7,#4]
 1333 0160 B2F8B620 	 ldrh r2,[r2,#182]
 1334 0164 1A60     	 str r2,[r3]
 366:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_ta2;
 1335              	 .loc 4 366 0
 1336 0166 7B68     	 ldr r3,[r7,#4]
 1337 0168 DB6F     	 ldr r3,[r3,#124]
 1338 016a 7A68     	 ldr r2,[r7,#4]
 1339 016c B2F8BA20 	 ldrh r2,[r2,#186]
 1340 0170 1A60     	 str r2,[r3]
 367:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 368:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1341              	 .loc 4 368 0
 1342 0172 7B68     	 ldr r3,[r7,#4]
 1343 0174 5B6F     	 ldr r3,[r3,#116]
 1344 0176 7A68     	 ldr r2,[r7,#4]
 1345 0178 B2F8B820 	 ldrh r2,[r2,#184]
 1346 017c 1146     	 mov r1,r2
 1347 017e 7A68     	 ldr r2,[r7,#4]
 1348 0180 B2F8AE20 	 ldrh r2,[r2,#174]
 1349 0184 0A44     	 add r2,r2,r1
 1350 0186 1A60     	 str r2,[r3]
 369:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1351              	 .loc 4 369 0
 1352 0188 7B68     	 ldr r3,[r7,#4]
 1353 018a D3F88030 	 ldr r3,[r3,#128]
 1354 018e 7A68     	 ldr r2,[r7,#4]
 1355 0190 B2F8B820 	 ldrh r2,[r2,#184]
 1356 0194 1146     	 mov r1,r2
 1357 0196 7A68     	 ldr r2,[r7,#4]
 1358 0198 B2F8AE20 	 ldrh r2,[r2,#174]
 1359 019c 0A44     	 add r2,r2,r1
 1360 019e 1A60     	 str r2,[r3]
 370:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 371:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1361              	 .loc 4 371 0
 1362 01a0 7B68     	 ldr r3,[r7,#4]
 1363 01a2 9B6F     	 ldr r3,[r3,#120]
 1364 01a4 7A68     	 ldr r2,[r7,#4]
 1365 01a6 B2F8B820 	 ldrh r2,[r2,#184]
 1366 01aa 1A60     	 str r2,[r3]
 372:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1367              	 .loc 4 372 0
 1368 01ac 7B68     	 ldr r3,[r7,#4]
 1369 01ae D3F88430 	 ldr r3,[r3,#132]
 1370 01b2 7A68     	 ldr r2,[r7,#4]
 1371 01b4 B2F8BC20 	 ldrh r2,[r2,#188]
 1372 01b8 1A60     	 str r2,[r3]
 373:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1373              	 .loc 4 373 0
 1374 01ba 61E0     	 b .L38
 1375              	.L45:
 374:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 375:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1376              	 .loc 4 375 0
 1377 01bc 7B68     	 ldr r3,[r7,#4]
 1378 01be 1B6F     	 ldr r3,[r3,#112]
 1379 01c0 7A68     	 ldr r2,[r7,#4]
 1380 01c2 B2F8B820 	 ldrh r2,[r2,#184]
 1381 01c6 1146     	 mov r1,r2
 1382 01c8 7A68     	 ldr r2,[r7,#4]
 1383 01ca B2F8B020 	 ldrh r2,[r2,#176]
 1384 01ce 0A44     	 add r2,r2,r1
 1385 01d0 1A60     	 str r2,[r3]
 376:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1386              	 .loc 4 376 0
 1387 01d2 7B68     	 ldr r3,[r7,#4]
 1388 01d4 DB6F     	 ldr r3,[r3,#124]
 1389 01d6 7A68     	 ldr r2,[r7,#4]
 1390 01d8 B2F8B820 	 ldrh r2,[r2,#184]
 1391 01dc 1146     	 mov r1,r2
 1392 01de 7A68     	 ldr r2,[r7,#4]
 1393 01e0 B2F8B020 	 ldrh r2,[r2,#176]
 1394 01e4 0A44     	 add r2,r2,r1
 1395 01e6 1A60     	 str r2,[r3]
 377:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 378:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1396              	 .loc 4 378 0
 1397 01e8 7B68     	 ldr r3,[r7,#4]
 1398 01ea 5B6F     	 ldr r3,[r3,#116]
 1399 01ec 7A68     	 ldr r2,[r7,#4]
 1400 01ee B2F8B620 	 ldrh r2,[r2,#182]
 1401 01f2 1A60     	 str r2,[r3]
 379:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_ta2;
 1402              	 .loc 4 379 0
 1403 01f4 7B68     	 ldr r3,[r7,#4]
 1404 01f6 D3F88030 	 ldr r3,[r3,#128]
 1405 01fa 7A68     	 ldr r2,[r7,#4]
 1406 01fc B2F8BA20 	 ldrh r2,[r2,#186]
 1407 0200 1A60     	 str r2,[r3]
 380:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 381:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1408              	 .loc 4 381 0
 1409 0202 7B68     	 ldr r3,[r7,#4]
 1410 0204 9B6F     	 ldr r3,[r3,#120]
 1411 0206 7A68     	 ldr r2,[r7,#4]
 1412 0208 B2F8B820 	 ldrh r2,[r2,#184]
 1413 020c 1A60     	 str r2,[r3]
 382:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1414              	 .loc 4 382 0
 1415 020e 7B68     	 ldr r3,[r7,#4]
 1416 0210 D3F88430 	 ldr r3,[r3,#132]
 1417 0214 7A68     	 ldr r2,[r7,#4]
 1418 0216 B2F8BC20 	 ldrh r2,[r2,#188]
 1419 021a 1A60     	 str r2,[r3]
 383:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1420              	 .loc 4 383 0
 1421 021c 30E0     	 b .L38
 1422              	.L39:
 384:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 385:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1423              	 .loc 4 385 0
 1424 021e 7B68     	 ldr r3,[r7,#4]
 1425 0220 1B6F     	 ldr r3,[r3,#112]
 1426 0222 7A68     	 ldr r2,[r7,#4]
 1427 0224 B2F8B820 	 ldrh r2,[r2,#184]
 1428 0228 1A60     	 str r2,[r3]
 386:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1429              	 .loc 4 386 0
 1430 022a 7B68     	 ldr r3,[r7,#4]
 1431 022c DB6F     	 ldr r3,[r3,#124]
 1432 022e 7A68     	 ldr r2,[r7,#4]
 1433 0230 B2F8BC20 	 ldrh r2,[r2,#188]
 1434 0234 1A60     	 str r2,[r3]
 387:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 388:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1435              	 .loc 4 388 0
 1436 0236 7B68     	 ldr r3,[r7,#4]
 1437 0238 5B6F     	 ldr r3,[r3,#116]
 1438 023a 7A68     	 ldr r2,[r7,#4]
 1439 023c B2F8B620 	 ldrh r2,[r2,#182]
 1440 0240 1A60     	 str r2,[r3]
 389:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_ta2;
 1441              	 .loc 4 389 0
 1442 0242 7B68     	 ldr r3,[r7,#4]
 1443 0244 D3F88030 	 ldr r3,[r3,#128]
 1444 0248 7A68     	 ldr r2,[r7,#4]
 1445 024a B2F8BA20 	 ldrh r2,[r2,#186]
 1446 024e 1A60     	 str r2,[r3]
 390:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 391:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1447              	 .loc 4 391 0
 1448 0250 7B68     	 ldr r3,[r7,#4]
 1449 0252 9B6F     	 ldr r3,[r3,#120]
 1450 0254 7A68     	 ldr r2,[r7,#4]
 1451 0256 B2F8B820 	 ldrh r2,[r2,#184]
 1452 025a 1146     	 mov r1,r2
 1453 025c 7A68     	 ldr r2,[r7,#4]
 1454 025e B2F8AE20 	 ldrh r2,[r2,#174]
 1455 0262 0A44     	 add r2,r2,r1
 1456 0264 1A60     	 str r2,[r3]
 392:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1457              	 .loc 4 392 0
 1458 0266 7B68     	 ldr r3,[r7,#4]
 1459 0268 D3F88430 	 ldr r3,[r3,#132]
 1460 026c 7A68     	 ldr r2,[r7,#4]
 1461 026e B2F8B820 	 ldrh r2,[r2,#184]
 1462 0272 1146     	 mov r1,r2
 1463 0274 7A68     	 ldr r2,[r7,#4]
 1464 0276 B2F8AE20 	 ldrh r2,[r2,#174]
 1465 027a 0A44     	 add r2,r2,r1
 1466 027c 1A60     	 str r2,[r3]
 393:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 394:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1467              	 .loc 4 394 0
 1468 027e 00BF     	 nop
 1469              	.L38:
 395:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 396:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1470              	 .loc 4 396 0
 1471 0280 0C37     	 adds r7,r7,#12
 1472              	.LCFI114:
 1473              	 .cfi_def_cfa_offset 4
 1474 0282 BD46     	 mov sp,r7
 1475              	.LCFI115:
 1476              	 .cfi_def_cfa_register 13
 1477              	 
 1478 0284 5DF8047B 	 ldr r7,[sp],#4
 1479              	.LCFI116:
 1480              	 .cfi_restore 7
 1481              	 .cfi_def_cfa_offset 0
 1482 0288 7047     	 bx lr
 1483              	 .cfi_endproc
 1484              	.LFE241:
 1486 028a 00BF     	 .section .ram_code
 1487 015e 00BF     	 .align 2
 1488              	 .global PWM_SVM_CalCmpValueSym7
 1489              	 .thumb
 1490              	 .thumb_func
 1492              	PWM_SVM_CalCmpValueSym7:
 1493              	.LFB242:
 397:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 398:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 399:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare valuefor Symmetric 7-segment SVM.
 400:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 401:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueSym7(PWM_SVM_t* const HandlePtr)
 402:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1494              	 .loc 4 402 0
 1495              	 .cfi_startproc
 1496              	 
 1497              	 
 1498 0160 80B5     	 push {r7,lr}
 1499              	.LCFI117:
 1500              	 .cfi_def_cfa_offset 8
 1501              	 .cfi_offset 7,-8
 1502              	 .cfi_offset 14,-4
 1503 0162 82B0     	 sub sp,sp,#8
 1504              	.LCFI118:
 1505              	 .cfi_def_cfa_offset 16
 1506 0164 00AF     	 add r7,sp,#0
 1507              	.LCFI119:
 1508              	 .cfi_def_cfa_register 7
 1509 0166 7860     	 str r0,[r7,#4]
 403:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time ta less than tmin set to tmin*/
 404:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < (uint16_t) HandlePtr->tmin)
 1510              	 .loc 4 404 0
 1511 0168 7B68     	 ldr r3,[r7,#4]
 1512 016a B3F8AE20 	 ldrh r2,[r3,#174]
 1513 016e 7B68     	 ldr r3,[r7,#4]
 1514 0170 B3F8C230 	 ldrh r3,[r3,#194]
 1515 0174 9A42     	 cmp r2,r3
 1516 0176 05D2     	 bcs .L48
 405:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 406:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t) HandlePtr->tmin;
 1517              	 .loc 4 406 0
 1518 0178 7B68     	 ldr r3,[r7,#4]
 1519 017a B3F8C220 	 ldrh r2,[r3,#194]
 1520 017e 7B68     	 ldr r3,[r7,#4]
 1521 0180 A3F8AE20 	 strh r2,[r3,#174]
 1522              	.L48:
 407:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 408:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time tb less than tmin set to tmin*/
 409:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < (uint16_t) HandlePtr->tmin)
 1523              	 .loc 4 409 0
 1524 0184 7B68     	 ldr r3,[r7,#4]
 1525 0186 B3F8B020 	 ldrh r2,[r3,#176]
 1526 018a 7B68     	 ldr r3,[r7,#4]
 1527 018c B3F8C230 	 ldrh r3,[r3,#194]
 1528 0190 9A42     	 cmp r2,r3
 1529 0192 05D2     	 bcs .L49
 410:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 411:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = (uint16_t) HandlePtr->tmin;
 1530              	 .loc 4 411 0
 1531 0194 7B68     	 ldr r3,[r7,#4]
 1532 0196 B3F8C220 	 ldrh r2,[r3,#194]
 1533 019a 7B68     	 ldr r3,[r7,#4]
 1534 019c A3F8B020 	 strh r2,[r3,#176]
 1535              	.L49:
 412:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 413:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 414:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t)(((uint32_t) HandlePtr->period + (uint16_t) HandlePtr->ta) + (uint16_
 1536              	 .loc 4 414 0
 1537 01a0 7B68     	 ldr r3,[r7,#4]
 1538 01a2 D3F89C30 	 ldr r3,[r3,#156]
 1539 01a6 9AB2     	 uxth r2,r3
 1540 01a8 7B68     	 ldr r3,[r7,#4]
 1541 01aa B3F8AE30 	 ldrh r3,[r3,#174]
 1542 01ae 1344     	 add r3,r3,r2
 1543 01b0 9AB2     	 uxth r2,r3
 1544 01b2 7B68     	 ldr r3,[r7,#4]
 1545 01b4 B3F8B030 	 ldrh r3,[r3,#176]
 1546 01b8 1344     	 add r3,r3,r2
 1547 01ba 9BB2     	 uxth r3,r3
 1548 01bc 5B08     	 lsrs r3,r3,#1
 1549 01be 9AB2     	 uxth r2,r3
 1550 01c0 7B68     	 ldr r3,[r7,#4]
 1551 01c2 A3F8B620 	 strh r2,[r3,#182]
 415:../Dave/Generated/PWM_SVM/pwm_svm.c ****                      >> (uint16_t) 1;
 416:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t)((uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta + (uint16_t
 1552              	 .loc 4 416 0
 1553 01c6 7B68     	 ldr r3,[r7,#4]
 1554 01c8 D3F89C30 	 ldr r3,[r3,#156]
 1555 01cc 9AB2     	 uxth r2,r3
 1556 01ce 7B68     	 ldr r3,[r7,#4]
 1557 01d0 B3F8AE10 	 ldrh r1,[r3,#174]
 1558 01d4 7B68     	 ldr r3,[r7,#4]
 1559 01d6 B3F8B030 	 ldrh r3,[r3,#176]
 1560 01da 0B44     	 add r3,r3,r1
 1561 01dc 9BB2     	 uxth r3,r3
 1562 01de D31A     	 subs r3,r2,r3
 1563 01e0 9BB2     	 uxth r3,r3
 1564 01e2 5B08     	 lsrs r3,r3,#1
 1565 01e4 9AB2     	 uxth r2,r3
 1566 01e6 7B68     	 ldr r3,[r7,#4]
 1567 01e8 A3F8B820 	 strh r2,[r3,#184]
 417:../Dave/Generated/PWM_SVM/pwm_svm.c ****                      >> (uint16_t) 1;
 418:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 419:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 420:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 421:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 422:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 423:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 424:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 425:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 426:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lSymCompValUpdate(HandlePtr);
 1568              	 .loc 4 426 0
 1569 01ec 7868     	 ldr r0,[r7,#4]
 1570 01ee FFF707FF 	 bl PWM_SVM_lSymCompValUpdate
 427:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 428:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1571              	 .loc 4 428 0
 1572 01f2 0837     	 adds r7,r7,#8
 1573              	.LCFI120:
 1574              	 .cfi_def_cfa_offset 8
 1575 01f4 BD46     	 mov sp,r7
 1576              	.LCFI121:
 1577              	 .cfi_def_cfa_register 13
 1578              	 
 1579 01f6 80BD     	 pop {r7,pc}
 1580              	 .cfi_endproc
 1581              	.LFE242:
 1583              	 .align 2
 1584              	 .global PWM_SVM_CalCmpValueSym5
 1585              	 .thumb
 1586              	 .thumb_func
 1588              	PWM_SVM_CalCmpValueSym5:
 1589              	.LFB243:
 429:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 430:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 431:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Symmetric 5-segment SVM.
 432:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 433:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueSym5(PWM_SVM_t* const HandlePtr)
 434:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1590              	 .loc 4 434 0
 1591              	 .cfi_startproc
 1592              	 
 1593              	 
 1594 01f8 80B5     	 push {r7,lr}
 1595              	.LCFI122:
 1596              	 .cfi_def_cfa_offset 8
 1597              	 .cfi_offset 7,-8
 1598              	 .cfi_offset 14,-4
 1599 01fa 82B0     	 sub sp,sp,#8
 1600              	.LCFI123:
 1601              	 .cfi_def_cfa_offset 16
 1602 01fc 00AF     	 add r7,sp,#0
 1603              	.LCFI124:
 1604              	 .cfi_def_cfa_register 7
 1605 01fe 7860     	 str r0,[r7,#4]
 435:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time ta less than tmin set to tmin*/
 436:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1606              	 .loc 4 436 0
 1607 0200 7B68     	 ldr r3,[r7,#4]
 1608 0202 B3F8AE20 	 ldrh r2,[r3,#174]
 1609 0206 7B68     	 ldr r3,[r7,#4]
 1610 0208 B3F8C230 	 ldrh r3,[r3,#194]
 1611 020c 9A42     	 cmp r2,r3
 1612 020e 05D2     	 bcs .L51
 437:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 438:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = HandlePtr->tmin;
 1613              	 .loc 4 438 0
 1614 0210 7B68     	 ldr r3,[r7,#4]
 1615 0212 B3F8C220 	 ldrh r2,[r3,#194]
 1616 0216 7B68     	 ldr r3,[r7,#4]
 1617 0218 A3F8AE20 	 strh r2,[r3,#174]
 1618              	.L51:
 439:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 440:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time tb less than tmin set to tmin*/
 441:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1619              	 .loc 4 441 0
 1620 021c 7B68     	 ldr r3,[r7,#4]
 1621 021e B3F8B020 	 ldrh r2,[r3,#176]
 1622 0222 7B68     	 ldr r3,[r7,#4]
 1623 0224 B3F8C230 	 ldrh r3,[r3,#194]
 1624 0228 9A42     	 cmp r2,r3
 1625 022a 05D2     	 bcs .L52
 442:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 443:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tmin;
 1626              	 .loc 4 443 0
 1627 022c 7B68     	 ldr r3,[r7,#4]
 1628 022e B3F8C220 	 ldrh r2,[r3,#194]
 1629 0232 7B68     	 ldr r3,[r7,#4]
 1630 0234 A3F8B020 	 strh r2,[r3,#176]
 1631              	.L52:
 444:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 445:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period + 1U;
 1632              	 .loc 4 445 0
 1633 0238 7B68     	 ldr r3,[r7,#4]
 1634 023a D3F89C30 	 ldr r3,[r3,#156]
 1635 023e 9BB2     	 uxth r3,r3
 1636 0240 0133     	 adds r3,r3,#1
 1637 0242 9AB2     	 uxth r2,r3
 1638 0244 7B68     	 ldr r3,[r7,#4]
 1639 0246 A3F8B620 	 strh r2,[r3,#182]
 446:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = ((uint16_t) HandlePtr->period - HandlePtr->ta) - HandlePtr->tb;
 1640              	 .loc 4 446 0
 1641 024a 7B68     	 ldr r3,[r7,#4]
 1642 024c D3F89C30 	 ldr r3,[r3,#156]
 1643 0250 9AB2     	 uxth r2,r3
 1644 0252 7B68     	 ldr r3,[r7,#4]
 1645 0254 B3F8AE30 	 ldrh r3,[r3,#174]
 1646 0258 D31A     	 subs r3,r2,r3
 1647 025a 9AB2     	 uxth r2,r3
 1648 025c 7B68     	 ldr r3,[r7,#4]
 1649 025e B3F8B030 	 ldrh r3,[r3,#176]
 1650 0262 D31A     	 subs r3,r2,r3
 1651 0264 9AB2     	 uxth r2,r3
 1652 0266 7B68     	 ldr r3,[r7,#4]
 1653 0268 A3F8B820 	 strh r2,[r3,#184]
 447:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 448:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 449:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 450:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 451:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 452:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 453:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 454:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 455:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lSymCompValUpdate(HandlePtr);
 1654              	 .loc 4 455 0
 1655 026c 7868     	 ldr r0,[r7,#4]
 1656 026e FFF7C7FE 	 bl PWM_SVM_lSymCompValUpdate
 456:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1657              	 .loc 4 456 0
 1658 0272 0837     	 adds r7,r7,#8
 1659              	.LCFI125:
 1660              	 .cfi_def_cfa_offset 8
 1661 0274 BD46     	 mov sp,r7
 1662              	.LCFI126:
 1663              	 .cfi_def_cfa_register 13
 1664              	 
 1665 0276 80BD     	 pop {r7,pc}
 1666              	 .cfi_endproc
 1667              	.LFE243:
 1669              	 .section .text.PWM_SVM_CalCmpValueAsym7,"ax",%progbits
 1670              	 .align 2
 1671              	 .global PWM_SVM_CalCmpValueAsym7
 1672              	 .thumb
 1673              	 .thumb_func
 1675              	PWM_SVM_CalCmpValueAsym7:
 1676              	.LFB244:
 457:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 458:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 459:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 7-segment SVM.
 460:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 461:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueAsym7(PWM_SVM_t* const HandlePtr)
 462:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1677              	 .loc 4 462 0
 1678              	 .cfi_startproc
 1679              	 
 1680              	 
 1681 0000 80B5     	 push {r7,lr}
 1682              	.LCFI127:
 1683              	 .cfi_def_cfa_offset 8
 1684              	 .cfi_offset 7,-8
 1685              	 .cfi_offset 14,-4
 1686 0002 82B0     	 sub sp,sp,#8
 1687              	.LCFI128:
 1688              	 .cfi_def_cfa_offset 16
 1689 0004 00AF     	 add r7,sp,#0
 1690              	.LCFI129:
 1691              	 .cfi_def_cfa_register 7
 1692 0006 7860     	 str r0,[r7,#4]
 463:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* check if ta or tb is not less than Tmin*/
 464:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1693              	 .loc 4 464 0
 1694 0008 7B68     	 ldr r3,[r7,#4]
 1695 000a B3F8AE20 	 ldrh r2,[r3,#174]
 1696 000e 7B68     	 ldr r3,[r7,#4]
 1697 0010 B3F8C230 	 ldrh r3,[r3,#194]
 1698 0014 9A42     	 cmp r2,r3
 1699 0016 1CD2     	 bcs .L54
 465:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 466:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t)(2U * (HandlePtr->ta));
 1700              	 .loc 4 466 0
 1701 0018 7B68     	 ldr r3,[r7,#4]
 1702 001a B3F8AE30 	 ldrh r3,[r3,#174]
 1703 001e 5B00     	 lsls r3,r3,#1
 1704 0020 9AB2     	 uxth r2,r3
 1705 0022 7B68     	 ldr r3,[r7,#4]
 1706 0024 A3F8AE20 	 strh r2,[r3,#174]
 467:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->ta < HandlePtr->tmin)
 1707              	 .loc 4 467 0
 1708 0028 7B68     	 ldr r3,[r7,#4]
 1709 002a B3F8AE20 	 ldrh r2,[r3,#174]
 1710 002e 7B68     	 ldr r3,[r7,#4]
 1711 0030 B3F8C230 	 ldrh r3,[r3,#194]
 1712 0034 9A42     	 cmp r2,r3
 1713 0036 05D2     	 bcs .L55
 468:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 469:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = HandlePtr->tmin;
 1714              	 .loc 4 469 0
 1715 0038 7B68     	 ldr r3,[r7,#4]
 1716 003a B3F8C220 	 ldrh r2,[r3,#194]
 1717 003e 7B68     	 ldr r3,[r7,#4]
 1718 0040 A3F8AE20 	 strh r2,[r3,#174]
 1719              	.L55:
 470:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 471:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = HandlePtr->ta;
 1720              	 .loc 4 471 0
 1721 0044 7B68     	 ldr r3,[r7,#4]
 1722 0046 B3F8AE20 	 ldrh r2,[r3,#174]
 1723 004a 7B68     	 ldr r3,[r7,#4]
 1724 004c A3F8B220 	 strh r2,[r3,#178]
 1725 0050 03E0     	 b .L56
 1726              	.L54:
 472:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 473:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 474:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 475:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 1727              	 .loc 4 475 0
 1728 0052 7B68     	 ldr r3,[r7,#4]
 1729 0054 0022     	 movs r2,#0
 1730 0056 A3F8B220 	 strh r2,[r3,#178]
 1731              	.L56:
 476:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 477:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*  7 -Segment tb value Calcuation */
 478:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1732              	 .loc 4 478 0
 1733 005a 7B68     	 ldr r3,[r7,#4]
 1734 005c B3F8B020 	 ldrh r2,[r3,#176]
 1735 0060 7B68     	 ldr r3,[r7,#4]
 1736 0062 B3F8C230 	 ldrh r3,[r3,#194]
 1737 0066 9A42     	 cmp r2,r3
 1738 0068 1CD2     	 bcs .L57
 479:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 480:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = (uint16_t)(2U * (HandlePtr->tb));
 1739              	 .loc 4 480 0
 1740 006a 7B68     	 ldr r3,[r7,#4]
 1741 006c B3F8B030 	 ldrh r3,[r3,#176]
 1742 0070 5B00     	 lsls r3,r3,#1
 1743 0072 9AB2     	 uxth r2,r3
 1744 0074 7B68     	 ldr r3,[r7,#4]
 1745 0076 A3F8B020 	 strh r2,[r3,#176]
 481:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->tb < HandlePtr->tmin)
 1746              	 .loc 4 481 0
 1747 007a 7B68     	 ldr r3,[r7,#4]
 1748 007c B3F8B020 	 ldrh r2,[r3,#176]
 1749 0080 7B68     	 ldr r3,[r7,#4]
 1750 0082 B3F8C230 	 ldrh r3,[r3,#194]
 1751 0086 9A42     	 cmp r2,r3
 1752 0088 05D2     	 bcs .L58
 482:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 483:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = HandlePtr->tmin;
 1753              	 .loc 4 483 0
 1754 008a 7B68     	 ldr r3,[r7,#4]
 1755 008c B3F8C220 	 ldrh r2,[r3,#194]
 1756 0090 7B68     	 ldr r3,[r7,#4]
 1757 0092 A3F8B020 	 strh r2,[r3,#176]
 1758              	.L58:
 484:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 485:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = HandlePtr->tb;
 1759              	 .loc 4 485 0
 1760 0096 7B68     	 ldr r3,[r7,#4]
 1761 0098 B3F8B020 	 ldrh r2,[r3,#176]
 1762 009c 7B68     	 ldr r3,[r7,#4]
 1763 009e A3F8B420 	 strh r2,[r3,#180]
 1764 00a2 03E0     	 b .L59
 1765              	.L57:
 486:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 487:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 488:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 489:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = 0U;
 1766              	 .loc 4 489 0
 1767 00a4 7B68     	 ldr r3,[r7,#4]
 1768 00a6 0022     	 movs r2,#0
 1769 00a8 A3F8B420 	 strh r2,[r3,#180]
 1770              	.L59:
 490:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 491:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = ((uint16_t) HandlePtr->period + HandlePtr->ta + HandlePtr->tb) >> 1U;
 1771              	 .loc 4 491 0
 1772 00ac 7B68     	 ldr r3,[r7,#4]
 1773 00ae D3F89C30 	 ldr r3,[r3,#156]
 1774 00b2 9BB2     	 uxth r3,r3
 1775 00b4 1A46     	 mov r2,r3
 1776 00b6 7B68     	 ldr r3,[r7,#4]
 1777 00b8 B3F8AE30 	 ldrh r3,[r3,#174]
 1778 00bc 1344     	 add r3,r3,r2
 1779 00be 7A68     	 ldr r2,[r7,#4]
 1780 00c0 B2F8B020 	 ldrh r2,[r2,#176]
 1781 00c4 1344     	 add r3,r3,r2
 1782 00c6 5B10     	 asrs r3,r3,#1
 1783 00c8 9AB2     	 uxth r2,r3
 1784 00ca 7B68     	 ldr r3,[r7,#4]
 1785 00cc A3F8B620 	 strh r2,[r3,#182]
 492:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t)((uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta + (uint16_t
 1786              	 .loc 4 492 0
 1787 00d0 7B68     	 ldr r3,[r7,#4]
 1788 00d2 D3F89C30 	 ldr r3,[r3,#156]
 1789 00d6 9AB2     	 uxth r2,r3
 1790 00d8 7B68     	 ldr r3,[r7,#4]
 1791 00da B3F8AE10 	 ldrh r1,[r3,#174]
 1792 00de 7B68     	 ldr r3,[r7,#4]
 1793 00e0 B3F8B030 	 ldrh r3,[r3,#176]
 1794 00e4 0B44     	 add r3,r3,r1
 1795 00e6 9BB2     	 uxth r3,r3
 1796 00e8 D31A     	 subs r3,r2,r3
 1797 00ea 9BB2     	 uxth r3,r3
 1798 00ec 5B08     	 lsrs r3,r3,#1
 1799 00ee 9AB2     	 uxth r2,r3
 1800 00f0 7B68     	 ldr r3,[r7,#4]
 1801 00f2 A3F8B820 	 strh r2,[r3,#184]
 493:../Dave/Generated/PWM_SVM/pwm_svm.c ****                       >> 1U;
 494:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 495:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = HandlePtr->v_ta - HandlePtr->tb2;
 1802              	 .loc 4 495 0
 1803 00f6 7B68     	 ldr r3,[r7,#4]
 1804 00f8 B3F8B620 	 ldrh r2,[r3,#182]
 1805 00fc 7B68     	 ldr r3,[r7,#4]
 1806 00fe B3F8B430 	 ldrh r3,[r3,#180]
 1807 0102 D31A     	 subs r3,r2,r3
 1808 0104 9AB2     	 uxth r2,r3
 1809 0106 7B68     	 ldr r3,[r7,#4]
 1810 0108 A3F8BA20 	 strh r2,[r3,#186]
 496:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = HandlePtr->v_tb + HandlePtr->ta2;
 1811              	 .loc 4 496 0
 1812 010c 7B68     	 ldr r3,[r7,#4]
 1813 010e B3F8B820 	 ldrh r2,[r3,#184]
 1814 0112 7B68     	 ldr r3,[r7,#4]
 1815 0114 B3F8B230 	 ldrh r3,[r3,#178]
 1816 0118 1344     	 add r3,r3,r2
 1817 011a 9AB2     	 uxth r2,r3
 1818 011c 7B68     	 ldr r3,[r7,#4]
 1819 011e A3F8BC20 	 strh r2,[r3,#188]
 497:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 498:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 499:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 500:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 501:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 502:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 503:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 504:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare registers*/
 505:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lAsymCompValUpdate(HandlePtr);
 1820              	 .loc 4 505 0
 1821 0122 7868     	 ldr r0,[r7,#4]
 1822 0124 FFF7FEFF 	 bl PWM_SVM_lAsymCompValUpdate
 506:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 507:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1823              	 .loc 4 507 0
 1824 0128 0837     	 adds r7,r7,#8
 1825              	.LCFI130:
 1826              	 .cfi_def_cfa_offset 8
 1827 012a BD46     	 mov sp,r7
 1828              	.LCFI131:
 1829              	 .cfi_def_cfa_register 13
 1830              	 
 1831 012c 80BD     	 pop {r7,pc}
 1832              	 .cfi_endproc
 1833              	.LFE244:
 1835 012e 00BF     	 .section .text.PWM_SVM_CalCmpValueAsym5,"ax",%progbits
 1836              	 .align 2
 1837              	 .global PWM_SVM_CalCmpValueAsym5
 1838              	 .thumb
 1839              	 .thumb_func
 1841              	PWM_SVM_CalCmpValueAsym5:
 1842              	.LFB245:
 508:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 509:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 510:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 5-segment SVM.
 511:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 512:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueAsym5(PWM_SVM_t* const HandlePtr)
 513:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1843              	 .loc 4 513 0
 1844              	 .cfi_startproc
 1845              	 
 1846              	 
 1847 0000 80B5     	 push {r7,lr}
 1848              	.LCFI132:
 1849              	 .cfi_def_cfa_offset 8
 1850              	 .cfi_offset 7,-8
 1851              	 .cfi_offset 14,-4
 1852 0002 82B0     	 sub sp,sp,#8
 1853              	.LCFI133:
 1854              	 .cfi_def_cfa_offset 16
 1855 0004 00AF     	 add r7,sp,#0
 1856              	.LCFI134:
 1857              	 .cfi_def_cfa_register 7
 1858 0006 7860     	 str r0,[r7,#4]
 514:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* check if ta or tb is not less than Tmin*/
 515:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1859              	 .loc 4 515 0
 1860 0008 7B68     	 ldr r3,[r7,#4]
 1861 000a B3F8AE20 	 ldrh r2,[r3,#174]
 1862 000e 7B68     	 ldr r3,[r7,#4]
 1863 0010 B3F8C230 	 ldrh r3,[r3,#194]
 1864 0014 9A42     	 cmp r2,r3
 1865 0016 1CD2     	 bcs .L61
 516:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 517:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t)(2U * (HandlePtr->ta));
 1866              	 .loc 4 517 0
 1867 0018 7B68     	 ldr r3,[r7,#4]
 1868 001a B3F8AE30 	 ldrh r3,[r3,#174]
 1869 001e 5B00     	 lsls r3,r3,#1
 1870 0020 9AB2     	 uxth r2,r3
 1871 0022 7B68     	 ldr r3,[r7,#4]
 1872 0024 A3F8AE20 	 strh r2,[r3,#174]
 518:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->ta < HandlePtr->tmin)
 1873              	 .loc 4 518 0
 1874 0028 7B68     	 ldr r3,[r7,#4]
 1875 002a B3F8AE20 	 ldrh r2,[r3,#174]
 1876 002e 7B68     	 ldr r3,[r7,#4]
 1877 0030 B3F8C230 	 ldrh r3,[r3,#194]
 1878 0034 9A42     	 cmp r2,r3
 1879 0036 05D2     	 bcs .L62
 519:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 520:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = HandlePtr->tmin;
 1880              	 .loc 4 520 0
 1881 0038 7B68     	 ldr r3,[r7,#4]
 1882 003a B3F8C220 	 ldrh r2,[r3,#194]
 1883 003e 7B68     	 ldr r3,[r7,#4]
 1884 0040 A3F8AE20 	 strh r2,[r3,#174]
 1885              	.L62:
 521:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 522:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = HandlePtr->ta;
 1886              	 .loc 4 522 0
 1887 0044 7B68     	 ldr r3,[r7,#4]
 1888 0046 B3F8AE20 	 ldrh r2,[r3,#174]
 1889 004a 7B68     	 ldr r3,[r7,#4]
 1890 004c A3F8B220 	 strh r2,[r3,#178]
 1891 0050 03E0     	 b .L63
 1892              	.L61:
 523:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 524:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 525:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 526:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 1893              	 .loc 4 526 0
 1894 0052 7B68     	 ldr r3,[r7,#4]
 1895 0054 0022     	 movs r2,#0
 1896 0056 A3F8B220 	 strh r2,[r3,#178]
 1897              	.L63:
 527:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 528:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*  5 -Segment tb value Calcuation */
 529:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1898              	 .loc 4 529 0
 1899 005a 7B68     	 ldr r3,[r7,#4]
 1900 005c B3F8B020 	 ldrh r2,[r3,#176]
 1901 0060 7B68     	 ldr r3,[r7,#4]
 1902 0062 B3F8C230 	 ldrh r3,[r3,#194]
 1903 0066 9A42     	 cmp r2,r3
 1904 0068 05D2     	 bcs .L64
 530:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 531:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tmin;
 1905              	 .loc 4 531 0
 1906 006a 7B68     	 ldr r3,[r7,#4]
 1907 006c B3F8C220 	 ldrh r2,[r3,#194]
 1908 0070 7B68     	 ldr r3,[r7,#4]
 1909 0072 A3F8B020 	 strh r2,[r3,#176]
 1910              	.L64:
 532:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 533:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period + 1U;
 1911              	 .loc 4 533 0
 1912 0076 7B68     	 ldr r3,[r7,#4]
 1913 0078 D3F89C30 	 ldr r3,[r3,#156]
 1914 007c 9BB2     	 uxth r3,r3
 1915 007e 0133     	 adds r3,r3,#1
 1916 0080 9AB2     	 uxth r2,r3
 1917 0082 7B68     	 ldr r3,[r7,#4]
 1918 0084 A3F8B620 	 strh r2,[r3,#182]
 534:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = ((uint16_t) HandlePtr->period - HandlePtr->ta) - HandlePtr->tb;
 1919              	 .loc 4 534 0
 1920 0088 7B68     	 ldr r3,[r7,#4]
 1921 008a D3F89C30 	 ldr r3,[r3,#156]
 1922 008e 9AB2     	 uxth r2,r3
 1923 0090 7B68     	 ldr r3,[r7,#4]
 1924 0092 B3F8AE30 	 ldrh r3,[r3,#174]
 1925 0096 D31A     	 subs r3,r2,r3
 1926 0098 9AB2     	 uxth r2,r3
 1927 009a 7B68     	 ldr r3,[r7,#4]
 1928 009c B3F8B030 	 ldrh r3,[r3,#176]
 1929 00a0 D31A     	 subs r3,r2,r3
 1930 00a2 9AB2     	 uxth r2,r3
 1931 00a4 7B68     	 ldr r3,[r7,#4]
 1932 00a6 A3F8B820 	 strh r2,[r3,#184]
 535:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 536:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = HandlePtr->v_ta;
 1933              	 .loc 4 536 0
 1934 00aa 7B68     	 ldr r3,[r7,#4]
 1935 00ac B3F8B620 	 ldrh r2,[r3,#182]
 1936 00b0 7B68     	 ldr r3,[r7,#4]
 1937 00b2 A3F8BA20 	 strh r2,[r3,#186]
 537:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = HandlePtr->v_tb + HandlePtr->ta2;
 1938              	 .loc 4 537 0
 1939 00b6 7B68     	 ldr r3,[r7,#4]
 1940 00b8 B3F8B820 	 ldrh r2,[r3,#184]
 1941 00bc 7B68     	 ldr r3,[r7,#4]
 1942 00be B3F8B230 	 ldrh r3,[r3,#178]
 1943 00c2 1344     	 add r3,r3,r2
 1944 00c4 9AB2     	 uxth r2,r3
 1945 00c6 7B68     	 ldr r3,[r7,#4]
 1946 00c8 A3F8BC20 	 strh r2,[r3,#188]
 538:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 539:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 540:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 541:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 542:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 543:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 544:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 545:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 546:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lAsymCompValUpdate(HandlePtr);
 1947              	 .loc 4 546 0
 1948 00cc 7868     	 ldr r0,[r7,#4]
 1949 00ce FFF7FEFF 	 bl PWM_SVM_lAsymCompValUpdate
 547:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 548:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1950              	 .loc 4 548 0
 1951 00d2 0837     	 adds r7,r7,#8
 1952              	.LCFI135:
 1953              	 .cfi_def_cfa_offset 8
 1954 00d4 BD46     	 mov sp,r7
 1955              	.LCFI136:
 1956              	 .cfi_def_cfa_register 13
 1957              	 
 1958 00d6 80BD     	 pop {r7,pc}
 1959              	 .cfi_endproc
 1960              	.LFE245:
 1962              	 .section .text.PWM_SVM_Calc3av5segmentCompVal,"ax",%progbits
 1963              	 .align 2
 1964              	 .global PWM_SVM_Calc3av5segmentCompVal
 1965              	 .thumb
 1966              	 .thumb_func
 1968              	PWM_SVM_Calc3av5segmentCompVal:
 1969              	.LFB246:
 549:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 550:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 5-segment of Pseudo zero ve
 551:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 552:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Calc3av5segmentCompVal(PWM_SVM_t* const HandlePtr)
 553:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1970              	 .loc 4 553 0
 1971              	 .cfi_startproc
 1972              	 
 1973              	 
 1974 0000 80B5     	 push {r7,lr}
 1975              	.LCFI137:
 1976              	 .cfi_def_cfa_offset 8
 1977              	 .cfi_offset 7,-8
 1978              	 .cfi_offset 14,-4
 1979 0002 84B0     	 sub sp,sp,#16
 1980              	.LCFI138:
 1981              	 .cfi_def_cfa_offset 24
 1982 0004 00AF     	 add r7,sp,#0
 1983              	.LCFI139:
 1984              	 .cfi_def_cfa_register 7
 1985 0006 7860     	 str r0,[r7,#4]
 554:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t cr1s;
 555:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t cr2s;
 556:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate compare value intermediate parameters based on subsector*/
 557:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->subsector == (uint32_t) 0)
 1986              	 .loc 4 557 0
 1987 0008 7B68     	 ldr r3,[r7,#4]
 1988 000a B3F8C030 	 ldrh r3,[r3,#192]
 1989 000e 002B     	 cmp r3,#0
 1990 0010 3BD1     	 bne .L66
 558:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 559:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tb + HandlePtr->tmin;
 1991              	 .loc 4 559 0
 1992 0012 7B68     	 ldr r3,[r7,#4]
 1993 0014 B3F8B020 	 ldrh r2,[r3,#176]
 1994 0018 7B68     	 ldr r3,[r7,#4]
 1995 001a B3F8C230 	 ldrh r3,[r3,#194]
 1996 001e 1344     	 add r3,r3,r2
 1997 0020 9AB2     	 uxth r2,r3
 1998 0022 7B68     	 ldr r3,[r7,#4]
 1999 0024 A3F8B020 	 strh r2,[r3,#176]
 560:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = ((uint16_t) HandlePtr->period - (HandlePtr->ta + HandlePtr->tb + HandlePtr->
 2000              	 .loc 4 560 0
 2001 0028 7B68     	 ldr r3,[r7,#4]
 2002 002a D3F89C30 	 ldr r3,[r3,#156]
 2003 002e 9AB2     	 uxth r2,r3
 2004 0030 7B68     	 ldr r3,[r7,#4]
 2005 0032 B3F8AE10 	 ldrh r1,[r3,#174]
 2006 0036 7B68     	 ldr r3,[r7,#4]
 2007 0038 B3F8B030 	 ldrh r3,[r3,#176]
 2008 003c 0B44     	 add r3,r3,r1
 2009 003e 99B2     	 uxth r1,r3
 2010 0040 7B68     	 ldr r3,[r7,#4]
 2011 0042 B3F8C230 	 ldrh r3,[r3,#194]
 2012 0046 0B44     	 add r3,r3,r1
 2013 0048 9BB2     	 uxth r3,r3
 2014 004a D31A     	 subs r3,r2,r3
 2015 004c 9AB2     	 uxth r2,r3
 2016 004e 7B68     	 ldr r3,[r7,#4]
 2017 0050 A3F8BC20 	 strh r2,[r3,#188]
 561:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = (HandlePtr->v_tb2) >> 1U;
 2018              	 .loc 4 561 0
 2019 0054 7B68     	 ldr r3,[r7,#4]
 2020 0056 B3F8BC30 	 ldrh r3,[r3,#188]
 2021 005a 5B08     	 lsrs r3,r3,#1
 2022 005c 9AB2     	 uxth r2,r3
 2023 005e 7B68     	 ldr r3,[r7,#4]
 2024 0060 A3F8B820 	 strh r2,[r3,#184]
 562:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = (uint16_t) HandlePtr->period;
 2025              	 .loc 4 562 0
 2026 0064 7B68     	 ldr r3,[r7,#4]
 2027 0066 D3F89C30 	 ldr r3,[r3,#156]
 2028 006a 9AB2     	 uxth r2,r3
 2029 006c 7B68     	 ldr r3,[r7,#4]
 2030 006e A3F8B620 	 strh r2,[r3,#182]
 563:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tc = HandlePtr->v_tb + HandlePtr->tmin;
 2031              	 .loc 4 563 0
 2032 0072 7B68     	 ldr r3,[r7,#4]
 2033 0074 B3F8B820 	 ldrh r2,[r3,#184]
 2034 0078 7B68     	 ldr r3,[r7,#4]
 2035 007a B3F8C230 	 ldrh r3,[r3,#194]
 2036 007e 1344     	 add r3,r3,r2
 2037 0080 9AB2     	 uxth r2,r3
 2038 0082 7B68     	 ldr r3,[r7,#4]
 2039 0084 A3F8BE20 	 strh r2,[r3,#190]
 2040 0088 35E0     	 b .L67
 2041              	.L66:
 564:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 565:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 566:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 567:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = HandlePtr->ta + HandlePtr->tmin;
 2042              	 .loc 4 567 0
 2043 008a 7B68     	 ldr r3,[r7,#4]
 2044 008c B3F8AE20 	 ldrh r2,[r3,#174]
 2045 0090 7B68     	 ldr r3,[r7,#4]
 2046 0092 B3F8C230 	 ldrh r3,[r3,#194]
 2047 0096 1344     	 add r3,r3,r2
 2048 0098 9AB2     	 uxth r2,r3
 2049 009a 7B68     	 ldr r3,[r7,#4]
 2050 009c A3F8AE20 	 strh r2,[r3,#174]
 568:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = ((uint16_t) HandlePtr->period - (HandlePtr->ta + HandlePtr->tb + HandlePtr->
 2051              	 .loc 4 568 0
 2052 00a0 7B68     	 ldr r3,[r7,#4]
 2053 00a2 D3F89C30 	 ldr r3,[r3,#156]
 2054 00a6 9AB2     	 uxth r2,r3
 2055 00a8 7B68     	 ldr r3,[r7,#4]
 2056 00aa B3F8AE10 	 ldrh r1,[r3,#174]
 2057 00ae 7B68     	 ldr r3,[r7,#4]
 2058 00b0 B3F8B030 	 ldrh r3,[r3,#176]
 2059 00b4 0B44     	 add r3,r3,r1
 2060 00b6 99B2     	 uxth r1,r3
 2061 00b8 7B68     	 ldr r3,[r7,#4]
 2062 00ba B3F8C230 	 ldrh r3,[r3,#194]
 2063 00be 0B44     	 add r3,r3,r1
 2064 00c0 9BB2     	 uxth r3,r3
 2065 00c2 D31A     	 subs r3,r2,r3
 2066 00c4 9AB2     	 uxth r2,r3
 2067 00c6 7B68     	 ldr r3,[r7,#4]
 2068 00c8 A3F8BC20 	 strh r2,[r3,#188]
 569:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = (HandlePtr->v_tb2) >> 1U;
 2069              	 .loc 4 569 0
 2070 00cc 7B68     	 ldr r3,[r7,#4]
 2071 00ce B3F8BC30 	 ldrh r3,[r3,#188]
 2072 00d2 5B08     	 lsrs r3,r3,#1
 2073 00d4 9AB2     	 uxth r2,r3
 2074 00d6 7B68     	 ldr r3,[r7,#4]
 2075 00d8 A3F8B820 	 strh r2,[r3,#184]
 570:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = (uint16_t) HandlePtr->period;
 2076              	 .loc 4 570 0
 2077 00dc 7B68     	 ldr r3,[r7,#4]
 2078 00de D3F89C30 	 ldr r3,[r3,#156]
 2079 00e2 9AB2     	 uxth r2,r3
 2080 00e4 7B68     	 ldr r3,[r7,#4]
 2081 00e6 A3F8B620 	 strh r2,[r3,#182]
 571:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tc = HandlePtr->v_tb;
 2082              	 .loc 4 571 0
 2083 00ea 7B68     	 ldr r3,[r7,#4]
 2084 00ec B3F8B820 	 ldrh r2,[r3,#184]
 2085 00f0 7B68     	 ldr r3,[r7,#4]
 2086 00f2 A3F8BE20 	 strh r2,[r3,#190]
 2087              	.L67:
 572:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 573:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate and update compare value of current trigger slice for dc link current measurement*/
 574:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 2088              	 .loc 4 574 0
 2089 00f6 7B68     	 ldr r3,[r7,#4]
 2090 00f8 1B68     	 ldr r3,[r3]
 2091 00fa 1B7C     	 ldrb r3,[r3,#16]
 2092 00fc 012B     	 cmp r3,#1
 2093 00fe 2AD1     	 bne .L68
 575:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 576:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr1s = (uint16_t) HandlePtr->v_ta - (uint16_t)(HandlePtr->ta + (HandlePtr->tb >> (uint16_t) 1))
 2094              	 .loc 4 576 0
 2095 0100 7B68     	 ldr r3,[r7,#4]
 2096 0102 B3F8B620 	 ldrh r2,[r3,#182]
 2097 0106 7B68     	 ldr r3,[r7,#4]
 2098 0108 B3F8AE10 	 ldrh r1,[r3,#174]
 2099 010c 7B68     	 ldr r3,[r7,#4]
 2100 010e B3F8B030 	 ldrh r3,[r3,#176]
 2101 0112 5B08     	 lsrs r3,r3,#1
 2102 0114 9BB2     	 uxth r3,r3
 2103 0116 0B44     	 add r3,r3,r1
 2104 0118 9BB2     	 uxth r3,r3
 2105 011a D31A     	 subs r3,r2,r3
 2106 011c FB81     	 strh r3,[r7,#14]
 577:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr2s = (uint16_t) HandlePtr->v_ta - (uint16_t)(HandlePtr->ta >> (uint16_t) 1);
 2107              	 .loc 4 577 0
 2108 011e 7B68     	 ldr r3,[r7,#4]
 2109 0120 B3F8B620 	 ldrh r2,[r3,#182]
 2110 0124 7B68     	 ldr r3,[r7,#4]
 2111 0126 B3F8AE30 	 ldrh r3,[r3,#174]
 2112 012a 5B08     	 lsrs r3,r3,#1
 2113 012c 9BB2     	 uxth r3,r3
 2114 012e D31A     	 subs r3,r2,r3
 2115 0130 BB81     	 strh r3,[r7,#12]
 578:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2116              	 .loc 4 578 0
 2117 0132 7B68     	 ldr r3,[r7,#4]
 2118 0134 5B69     	 ldr r3,[r3,#20]
 2119 0136 1A68     	 ldr r2,[r3]
 2120 0138 FB89     	 ldrh r3,[r7,#14]
 2121 013a 1046     	 mov r0,r2
 2122 013c 0021     	 movs r1,#0
 2123 013e 1A46     	 mov r2,r3
 2124 0140 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 579:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) cr1s);
 580:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2125              	 .loc 4 580 0
 2126 0144 7B68     	 ldr r3,[r7,#4]
 2127 0146 5B69     	 ldr r3,[r3,#20]
 2128 0148 1A68     	 ldr r2,[r3]
 2129 014a BB89     	 ldrh r3,[r7,#12]
 2130 014c 1046     	 mov r0,r2
 2131 014e 0121     	 movs r1,#1
 2132 0150 1A46     	 mov r2,r3
 2133 0152 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 2134              	.L68:
 581:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) cr2s);
 582:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 583:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare registers based on sector number*/
 584:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 2135              	 .loc 4 584 0
 2136 0156 7B68     	 ldr r3,[r7,#4]
 2137 0158 D3F8A430 	 ldr r3,[r3,#164]
 2138 015c 03F00703 	 and r3,r3,#7
 2139 0160 042B     	 cmp r3,#4
 2140 0162 00F2A781 	 bhi .L69
 2141 0166 01A2     	 adr r2,.L71
 2142 0168 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2143              	 .p2align 2
 2144              	.L71:
 2145 016c 81010000 	 .word .L70+1
 2146 0170 25020000 	 .word .L72+1
 2147 0174 C9020000 	 .word .L73+1
 2148 0178 6D030000 	 .word .L74+1
 2149 017c 11040000 	 .word .L75+1
 2150              	 .p2align 1
 2151              	.L70:
 585:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 586:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 587:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2152              	 .loc 4 587 0
 2153 0180 7B68     	 ldr r3,[r7,#4]
 2154 0182 9B68     	 ldr r3,[r3,#8]
 2155 0184 1968     	 ldr r1,[r3]
 588:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 589:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2156              	 .loc 4 589 0
 2157 0186 7B68     	 ldr r3,[r7,#4]
 2158 0188 B3F8B820 	 ldrh r2,[r3,#184]
 2159 018c 7B68     	 ldr r3,[r7,#4]
 2160 018e B3F8C230 	 ldrh r3,[r3,#194]
 587:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2161              	 .loc 4 587 0
 2162 0192 1344     	 add r3,r3,r2
 2163 0194 9BB2     	 uxth r3,r3
 2164 0196 0846     	 mov r0,r1
 2165 0198 0021     	 movs r1,#0
 2166 019a 1A46     	 mov r2,r3
 2167 019c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 590:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2168              	 .loc 4 590 0
 2169 01a0 7B68     	 ldr r3,[r7,#4]
 2170 01a2 9B68     	 ldr r3,[r3,#8]
 2171 01a4 1A68     	 ldr r2,[r3]
 2172 01a6 7B68     	 ldr r3,[r7,#4]
 2173 01a8 B3F8B630 	 ldrh r3,[r3,#182]
 2174 01ac 1046     	 mov r0,r2
 2175 01ae 0121     	 movs r1,#1
 2176 01b0 1A46     	 mov r2,r3
 2177 01b2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 591:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 592:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 593:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2178              	 .loc 4 593 0
 2179 01b6 7B68     	 ldr r3,[r7,#4]
 2180 01b8 DB68     	 ldr r3,[r3,#12]
 2181 01ba 1A68     	 ldr r2,[r3]
 2182 01bc 7B68     	 ldr r3,[r7,#4]
 2183 01be B3F8BE30 	 ldrh r3,[r3,#190]
 2184 01c2 1046     	 mov r0,r2
 2185 01c4 0021     	 movs r1,#0
 2186 01c6 1A46     	 mov r2,r3
 2187 01c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 594:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 595:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2188              	 .loc 4 595 0
 2189 01cc 7B68     	 ldr r3,[r7,#4]
 2190 01ce DB68     	 ldr r3,[r3,#12]
 2191 01d0 1968     	 ldr r1,[r3]
 596:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 597:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2192              	 .loc 4 597 0
 2193 01d2 7B68     	 ldr r3,[r7,#4]
 2194 01d4 B3F8B620 	 ldrh r2,[r3,#182]
 2195 01d8 7B68     	 ldr r3,[r7,#4]
 2196 01da B3F8AE30 	 ldrh r3,[r3,#174]
 595:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2197              	 .loc 4 595 0
 2198 01de D31A     	 subs r3,r2,r3
 2199 01e0 9BB2     	 uxth r3,r3
 2200 01e2 0846     	 mov r0,r1
 2201 01e4 0121     	 movs r1,#1
 2202 01e6 1A46     	 mov r2,r3
 2203 01e8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 598:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 599:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2204              	 .loc 4 599 0
 2205 01ec 7B68     	 ldr r3,[r7,#4]
 2206 01ee 1B69     	 ldr r3,[r3,#16]
 2207 01f0 1A68     	 ldr r2,[r3]
 2208 01f2 7B68     	 ldr r3,[r7,#4]
 2209 01f4 B3F8B830 	 ldrh r3,[r3,#184]
 2210 01f8 1046     	 mov r0,r2
 2211 01fa 0021     	 movs r1,#0
 2212 01fc 1A46     	 mov r2,r3
 2213 01fe FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 600:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 601:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2214              	 .loc 4 601 0
 2215 0202 7B68     	 ldr r3,[r7,#4]
 2216 0204 1B69     	 ldr r3,[r3,#16]
 2217 0206 1968     	 ldr r1,[r3]
 602:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 603:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2218              	 .loc 4 603 0
 2219 0208 7B68     	 ldr r3,[r7,#4]
 2220 020a B3F8BC20 	 ldrh r2,[r3,#188]
 2221 020e 7B68     	 ldr r3,[r7,#4]
 2222 0210 B3F8C230 	 ldrh r3,[r3,#194]
 601:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2223              	 .loc 4 601 0
 2224 0214 1344     	 add r3,r3,r2
 2225 0216 9BB2     	 uxth r3,r3
 2226 0218 0846     	 mov r0,r1
 2227 021a 0121     	 movs r1,#1
 2228 021c 1A46     	 mov r2,r3
 2229 021e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 604:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2230              	 .loc 4 604 0
 2231 0222 99E1     	 b .L65
 2232              	.L72:
 605:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 606:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2233              	 .loc 4 606 0
 2234 0224 7B68     	 ldr r3,[r7,#4]
 2235 0226 9B68     	 ldr r3,[r3,#8]
 2236 0228 1A68     	 ldr r2,[r3]
 2237 022a 7B68     	 ldr r3,[r7,#4]
 2238 022c B3F8BE30 	 ldrh r3,[r3,#190]
 2239 0230 1046     	 mov r0,r2
 2240 0232 0021     	 movs r1,#0
 2241 0234 1A46     	 mov r2,r3
 2242 0236 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 607:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 608:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2243              	 .loc 4 608 0
 2244 023a 7B68     	 ldr r3,[r7,#4]
 2245 023c 9B68     	 ldr r3,[r3,#8]
 2246 023e 1968     	 ldr r1,[r3]
 609:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 610:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2247              	 .loc 4 610 0
 2248 0240 7B68     	 ldr r3,[r7,#4]
 2249 0242 B3F8B620 	 ldrh r2,[r3,#182]
 2250 0246 7B68     	 ldr r3,[r7,#4]
 2251 0248 B3F8AE30 	 ldrh r3,[r3,#174]
 608:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2252              	 .loc 4 608 0
 2253 024c D31A     	 subs r3,r2,r3
 2254 024e 9BB2     	 uxth r3,r3
 2255 0250 0846     	 mov r0,r1
 2256 0252 0121     	 movs r1,#1
 2257 0254 1A46     	 mov r2,r3
 2258 0256 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 611:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 612:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2259              	 .loc 4 612 0
 2260 025a 7B68     	 ldr r3,[r7,#4]
 2261 025c DB68     	 ldr r3,[r3,#12]
 2262 025e 1968     	 ldr r1,[r3]
 613:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 614:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2263              	 .loc 4 614 0
 2264 0260 7B68     	 ldr r3,[r7,#4]
 2265 0262 B3F8B820 	 ldrh r2,[r3,#184]
 2266 0266 7B68     	 ldr r3,[r7,#4]
 2267 0268 B3F8C230 	 ldrh r3,[r3,#194]
 612:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2268              	 .loc 4 612 0
 2269 026c 1344     	 add r3,r3,r2
 2270 026e 9BB2     	 uxth r3,r3
 2271 0270 0846     	 mov r0,r1
 2272 0272 0021     	 movs r1,#0
 2273 0274 1A46     	 mov r2,r3
 2274 0276 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 615:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2275              	 .loc 4 615 0
 2276 027a 7B68     	 ldr r3,[r7,#4]
 2277 027c DB68     	 ldr r3,[r3,#12]
 2278 027e 1A68     	 ldr r2,[r3]
 2279 0280 7B68     	 ldr r3,[r7,#4]
 2280 0282 B3F8B630 	 ldrh r3,[r3,#182]
 2281 0286 1046     	 mov r0,r2
 2282 0288 0121     	 movs r1,#1
 2283 028a 1A46     	 mov r2,r3
 2284 028c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 616:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 617:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 618:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2285              	 .loc 4 618 0
 2286 0290 7B68     	 ldr r3,[r7,#4]
 2287 0292 1B69     	 ldr r3,[r3,#16]
 2288 0294 1A68     	 ldr r2,[r3]
 2289 0296 7B68     	 ldr r3,[r7,#4]
 2290 0298 B3F8B830 	 ldrh r3,[r3,#184]
 2291 029c 1046     	 mov r0,r2
 2292 029e 0021     	 movs r1,#0
 2293 02a0 1A46     	 mov r2,r3
 2294 02a2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 619:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 620:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2295              	 .loc 4 620 0
 2296 02a6 7B68     	 ldr r3,[r7,#4]
 2297 02a8 1B69     	 ldr r3,[r3,#16]
 2298 02aa 1968     	 ldr r1,[r3]
 621:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 622:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2299              	 .loc 4 622 0
 2300 02ac 7B68     	 ldr r3,[r7,#4]
 2301 02ae B3F8BC20 	 ldrh r2,[r3,#188]
 2302 02b2 7B68     	 ldr r3,[r7,#4]
 2303 02b4 B3F8C230 	 ldrh r3,[r3,#194]
 620:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2304              	 .loc 4 620 0
 2305 02b8 1344     	 add r3,r3,r2
 2306 02ba 9BB2     	 uxth r3,r3
 2307 02bc 0846     	 mov r0,r1
 2308 02be 0121     	 movs r1,#1
 2309 02c0 1A46     	 mov r2,r3
 2310 02c2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 623:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2311              	 .loc 4 623 0
 2312 02c6 47E1     	 b .L65
 2313              	.L73:
 624:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 625:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2314              	 .loc 4 625 0
 2315 02c8 7B68     	 ldr r3,[r7,#4]
 2316 02ca 9B68     	 ldr r3,[r3,#8]
 2317 02cc 1A68     	 ldr r2,[r3]
 2318 02ce 7B68     	 ldr r3,[r7,#4]
 2319 02d0 B3F8B830 	 ldrh r3,[r3,#184]
 2320 02d4 1046     	 mov r0,r2
 2321 02d6 0021     	 movs r1,#0
 2322 02d8 1A46     	 mov r2,r3
 2323 02da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 626:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 627:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2324              	 .loc 4 627 0
 2325 02de 7B68     	 ldr r3,[r7,#4]
 2326 02e0 9B68     	 ldr r3,[r3,#8]
 2327 02e2 1968     	 ldr r1,[r3]
 628:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 629:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2328              	 .loc 4 629 0
 2329 02e4 7B68     	 ldr r3,[r7,#4]
 2330 02e6 B3F8BC20 	 ldrh r2,[r3,#188]
 2331 02ea 7B68     	 ldr r3,[r7,#4]
 2332 02ec B3F8C230 	 ldrh r3,[r3,#194]
 627:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2333              	 .loc 4 627 0
 2334 02f0 1344     	 add r3,r3,r2
 2335 02f2 9BB2     	 uxth r3,r3
 2336 02f4 0846     	 mov r0,r1
 2337 02f6 0121     	 movs r1,#1
 2338 02f8 1A46     	 mov r2,r3
 2339 02fa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 630:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 631:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2340              	 .loc 4 631 0
 2341 02fe 7B68     	 ldr r3,[r7,#4]
 2342 0300 DB68     	 ldr r3,[r3,#12]
 2343 0302 1968     	 ldr r1,[r3]
 632:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 633:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2344              	 .loc 4 633 0
 2345 0304 7B68     	 ldr r3,[r7,#4]
 2346 0306 B3F8B820 	 ldrh r2,[r3,#184]
 2347 030a 7B68     	 ldr r3,[r7,#4]
 2348 030c B3F8C230 	 ldrh r3,[r3,#194]
 631:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2349              	 .loc 4 631 0
 2350 0310 1344     	 add r3,r3,r2
 2351 0312 9BB2     	 uxth r3,r3
 2352 0314 0846     	 mov r0,r1
 2353 0316 0021     	 movs r1,#0
 2354 0318 1A46     	 mov r2,r3
 2355 031a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 634:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2356              	 .loc 4 634 0
 2357 031e 7B68     	 ldr r3,[r7,#4]
 2358 0320 DB68     	 ldr r3,[r3,#12]
 2359 0322 1A68     	 ldr r2,[r3]
 2360 0324 7B68     	 ldr r3,[r7,#4]
 2361 0326 B3F8B630 	 ldrh r3,[r3,#182]
 2362 032a 1046     	 mov r0,r2
 2363 032c 0121     	 movs r1,#1
 2364 032e 1A46     	 mov r2,r3
 2365 0330 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 635:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 636:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 637:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2366              	 .loc 4 637 0
 2367 0334 7B68     	 ldr r3,[r7,#4]
 2368 0336 1B69     	 ldr r3,[r3,#16]
 2369 0338 1A68     	 ldr r2,[r3]
 2370 033a 7B68     	 ldr r3,[r7,#4]
 2371 033c B3F8BE30 	 ldrh r3,[r3,#190]
 2372 0340 1046     	 mov r0,r2
 2373 0342 0021     	 movs r1,#0
 2374 0344 1A46     	 mov r2,r3
 2375 0346 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 638:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 639:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2376              	 .loc 4 639 0
 2377 034a 7B68     	 ldr r3,[r7,#4]
 2378 034c 1B69     	 ldr r3,[r3,#16]
 2379 034e 1968     	 ldr r1,[r3]
 640:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 641:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2380              	 .loc 4 641 0
 2381 0350 7B68     	 ldr r3,[r7,#4]
 2382 0352 B3F8B620 	 ldrh r2,[r3,#182]
 2383 0356 7B68     	 ldr r3,[r7,#4]
 2384 0358 B3F8AE30 	 ldrh r3,[r3,#174]
 639:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2385              	 .loc 4 639 0
 2386 035c D31A     	 subs r3,r2,r3
 2387 035e 9BB2     	 uxth r3,r3
 2388 0360 0846     	 mov r0,r1
 2389 0362 0121     	 movs r1,#1
 2390 0364 1A46     	 mov r2,r3
 2391 0366 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 642:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2392              	 .loc 4 642 0
 2393 036a F5E0     	 b .L65
 2394              	.L74:
 643:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 644:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2395              	 .loc 4 644 0
 2396 036c 7B68     	 ldr r3,[r7,#4]
 2397 036e 9B68     	 ldr r3,[r3,#8]
 2398 0370 1A68     	 ldr r2,[r3]
 2399 0372 7B68     	 ldr r3,[r7,#4]
 2400 0374 B3F8B830 	 ldrh r3,[r3,#184]
 2401 0378 1046     	 mov r0,r2
 2402 037a 0021     	 movs r1,#0
 2403 037c 1A46     	 mov r2,r3
 2404 037e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 645:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 646:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2405              	 .loc 4 646 0
 2406 0382 7B68     	 ldr r3,[r7,#4]
 2407 0384 9B68     	 ldr r3,[r3,#8]
 2408 0386 1968     	 ldr r1,[r3]
 647:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 648:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2409              	 .loc 4 648 0
 2410 0388 7B68     	 ldr r3,[r7,#4]
 2411 038a B3F8BC20 	 ldrh r2,[r3,#188]
 2412 038e 7B68     	 ldr r3,[r7,#4]
 2413 0390 B3F8C230 	 ldrh r3,[r3,#194]
 646:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2414              	 .loc 4 646 0
 2415 0394 1344     	 add r3,r3,r2
 2416 0396 9BB2     	 uxth r3,r3
 2417 0398 0846     	 mov r0,r1
 2418 039a 0121     	 movs r1,#1
 2419 039c 1A46     	 mov r2,r3
 2420 039e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 649:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 650:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2421              	 .loc 4 650 0
 2422 03a2 7B68     	 ldr r3,[r7,#4]
 2423 03a4 DB68     	 ldr r3,[r3,#12]
 2424 03a6 1A68     	 ldr r2,[r3]
 2425 03a8 7B68     	 ldr r3,[r7,#4]
 2426 03aa B3F8BE30 	 ldrh r3,[r3,#190]
 2427 03ae 1046     	 mov r0,r2
 2428 03b0 0021     	 movs r1,#0
 2429 03b2 1A46     	 mov r2,r3
 2430 03b4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 651:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 652:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2431              	 .loc 4 652 0
 2432 03b8 7B68     	 ldr r3,[r7,#4]
 2433 03ba DB68     	 ldr r3,[r3,#12]
 2434 03bc 1968     	 ldr r1,[r3]
 653:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 654:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2435              	 .loc 4 654 0
 2436 03be 7B68     	 ldr r3,[r7,#4]
 2437 03c0 B3F8B620 	 ldrh r2,[r3,#182]
 2438 03c4 7B68     	 ldr r3,[r7,#4]
 2439 03c6 B3F8AE30 	 ldrh r3,[r3,#174]
 652:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2440              	 .loc 4 652 0
 2441 03ca D31A     	 subs r3,r2,r3
 2442 03cc 9BB2     	 uxth r3,r3
 2443 03ce 0846     	 mov r0,r1
 2444 03d0 0121     	 movs r1,#1
 2445 03d2 1A46     	 mov r2,r3
 2446 03d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 655:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 656:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2447              	 .loc 4 656 0
 2448 03d8 7B68     	 ldr r3,[r7,#4]
 2449 03da 1B69     	 ldr r3,[r3,#16]
 2450 03dc 1968     	 ldr r1,[r3]
 657:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 658:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2451              	 .loc 4 658 0
 2452 03de 7B68     	 ldr r3,[r7,#4]
 2453 03e0 B3F8B820 	 ldrh r2,[r3,#184]
 2454 03e4 7B68     	 ldr r3,[r7,#4]
 2455 03e6 B3F8C230 	 ldrh r3,[r3,#194]
 656:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2456              	 .loc 4 656 0
 2457 03ea 1344     	 add r3,r3,r2
 2458 03ec 9BB2     	 uxth r3,r3
 2459 03ee 0846     	 mov r0,r1
 2460 03f0 0021     	 movs r1,#0
 2461 03f2 1A46     	 mov r2,r3
 2462 03f4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 659:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2463              	 .loc 4 659 0
 2464 03f8 7B68     	 ldr r3,[r7,#4]
 2465 03fa 1B69     	 ldr r3,[r3,#16]
 2466 03fc 1A68     	 ldr r2,[r3]
 2467 03fe 7B68     	 ldr r3,[r7,#4]
 2468 0400 B3F8B630 	 ldrh r3,[r3,#182]
 2469 0404 1046     	 mov r0,r2
 2470 0406 0121     	 movs r1,#1
 2471 0408 1A46     	 mov r2,r3
 2472 040a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 660:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 661:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2473              	 .loc 4 661 0
 2474 040e A3E0     	 b .L65
 2475              	.L75:
 662:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 663:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2476              	 .loc 4 663 0
 2477 0410 7B68     	 ldr r3,[r7,#4]
 2478 0412 9B68     	 ldr r3,[r3,#8]
 2479 0414 1A68     	 ldr r2,[r3]
 2480 0416 7B68     	 ldr r3,[r7,#4]
 2481 0418 B3F8BE30 	 ldrh r3,[r3,#190]
 2482 041c 1046     	 mov r0,r2
 2483 041e 0021     	 movs r1,#0
 2484 0420 1A46     	 mov r2,r3
 2485 0422 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 664:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 665:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2486              	 .loc 4 665 0
 2487 0426 7B68     	 ldr r3,[r7,#4]
 2488 0428 9B68     	 ldr r3,[r3,#8]
 2489 042a 1968     	 ldr r1,[r3]
 666:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 667:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2490              	 .loc 4 667 0
 2491 042c 7B68     	 ldr r3,[r7,#4]
 2492 042e B3F8B620 	 ldrh r2,[r3,#182]
 2493 0432 7B68     	 ldr r3,[r7,#4]
 2494 0434 B3F8AE30 	 ldrh r3,[r3,#174]
 665:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2495              	 .loc 4 665 0
 2496 0438 D31A     	 subs r3,r2,r3
 2497 043a 9BB2     	 uxth r3,r3
 2498 043c 0846     	 mov r0,r1
 2499 043e 0121     	 movs r1,#1
 2500 0440 1A46     	 mov r2,r3
 2501 0442 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 668:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 669:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2502              	 .loc 4 669 0
 2503 0446 7B68     	 ldr r3,[r7,#4]
 2504 0448 DB68     	 ldr r3,[r3,#12]
 2505 044a 1A68     	 ldr r2,[r3]
 2506 044c 7B68     	 ldr r3,[r7,#4]
 2507 044e B3F8B830 	 ldrh r3,[r3,#184]
 2508 0452 1046     	 mov r0,r2
 2509 0454 0021     	 movs r1,#0
 2510 0456 1A46     	 mov r2,r3
 2511 0458 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 670:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 671:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2512              	 .loc 4 671 0
 2513 045c 7B68     	 ldr r3,[r7,#4]
 2514 045e DB68     	 ldr r3,[r3,#12]
 2515 0460 1968     	 ldr r1,[r3]
 672:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 673:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2516              	 .loc 4 673 0
 2517 0462 7B68     	 ldr r3,[r7,#4]
 2518 0464 B3F8BC20 	 ldrh r2,[r3,#188]
 2519 0468 7B68     	 ldr r3,[r7,#4]
 2520 046a B3F8C230 	 ldrh r3,[r3,#194]
 671:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2521              	 .loc 4 671 0
 2522 046e 1344     	 add r3,r3,r2
 2523 0470 9BB2     	 uxth r3,r3
 2524 0472 0846     	 mov r0,r1
 2525 0474 0121     	 movs r1,#1
 2526 0476 1A46     	 mov r2,r3
 2527 0478 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 674:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 675:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2528              	 .loc 4 675 0
 2529 047c 7B68     	 ldr r3,[r7,#4]
 2530 047e 1B69     	 ldr r3,[r3,#16]
 2531 0480 1968     	 ldr r1,[r3]
 676:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 677:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2532              	 .loc 4 677 0
 2533 0482 7B68     	 ldr r3,[r7,#4]
 2534 0484 B3F8B820 	 ldrh r2,[r3,#184]
 2535 0488 7B68     	 ldr r3,[r7,#4]
 2536 048a B3F8C230 	 ldrh r3,[r3,#194]
 675:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2537              	 .loc 4 675 0
 2538 048e 1344     	 add r3,r3,r2
 2539 0490 9BB2     	 uxth r3,r3
 2540 0492 0846     	 mov r0,r1
 2541 0494 0021     	 movs r1,#0
 2542 0496 1A46     	 mov r2,r3
 2543 0498 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 678:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2544              	 .loc 4 678 0
 2545 049c 7B68     	 ldr r3,[r7,#4]
 2546 049e 1B69     	 ldr r3,[r3,#16]
 2547 04a0 1A68     	 ldr r2,[r3]
 2548 04a2 7B68     	 ldr r3,[r7,#4]
 2549 04a4 B3F8B630 	 ldrh r3,[r3,#182]
 2550 04a8 1046     	 mov r0,r2
 2551 04aa 0121     	 movs r1,#1
 2552 04ac 1A46     	 mov r2,r3
 2553 04ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 679:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 680:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2554              	 .loc 4 680 0
 2555 04b2 51E0     	 b .L65
 2556              	.L69:
 681:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 682:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2557              	 .loc 4 682 0
 2558 04b4 7B68     	 ldr r3,[r7,#4]
 2559 04b6 9B68     	 ldr r3,[r3,#8]
 2560 04b8 1968     	 ldr r1,[r3]
 683:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 684:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2561              	 .loc 4 684 0
 2562 04ba 7B68     	 ldr r3,[r7,#4]
 2563 04bc B3F8B820 	 ldrh r2,[r3,#184]
 2564 04c0 7B68     	 ldr r3,[r7,#4]
 2565 04c2 B3F8C230 	 ldrh r3,[r3,#194]
 682:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2566              	 .loc 4 682 0
 2567 04c6 1344     	 add r3,r3,r2
 2568 04c8 9BB2     	 uxth r3,r3
 2569 04ca 0846     	 mov r0,r1
 2570 04cc 0021     	 movs r1,#0
 2571 04ce 1A46     	 mov r2,r3
 2572 04d0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 685:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2573              	 .loc 4 685 0
 2574 04d4 7B68     	 ldr r3,[r7,#4]
 2575 04d6 9B68     	 ldr r3,[r3,#8]
 2576 04d8 1A68     	 ldr r2,[r3]
 2577 04da 7B68     	 ldr r3,[r7,#4]
 2578 04dc B3F8B630 	 ldrh r3,[r3,#182]
 2579 04e0 1046     	 mov r0,r2
 2580 04e2 0121     	 movs r1,#1
 2581 04e4 1A46     	 mov r2,r3
 2582 04e6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 686:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 687:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 688:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2583              	 .loc 4 688 0
 2584 04ea 7B68     	 ldr r3,[r7,#4]
 2585 04ec DB68     	 ldr r3,[r3,#12]
 2586 04ee 1A68     	 ldr r2,[r3]
 2587 04f0 7B68     	 ldr r3,[r7,#4]
 2588 04f2 B3F8B830 	 ldrh r3,[r3,#184]
 2589 04f6 1046     	 mov r0,r2
 2590 04f8 0021     	 movs r1,#0
 2591 04fa 1A46     	 mov r2,r3
 2592 04fc FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 689:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 690:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2593              	 .loc 4 690 0
 2594 0500 7B68     	 ldr r3,[r7,#4]
 2595 0502 DB68     	 ldr r3,[r3,#12]
 2596 0504 1968     	 ldr r1,[r3]
 691:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 692:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2597              	 .loc 4 692 0
 2598 0506 7B68     	 ldr r3,[r7,#4]
 2599 0508 B3F8BC20 	 ldrh r2,[r3,#188]
 2600 050c 7B68     	 ldr r3,[r7,#4]
 2601 050e B3F8C230 	 ldrh r3,[r3,#194]
 690:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2602              	 .loc 4 690 0
 2603 0512 1344     	 add r3,r3,r2
 2604 0514 9BB2     	 uxth r3,r3
 2605 0516 0846     	 mov r0,r1
 2606 0518 0121     	 movs r1,#1
 2607 051a 1A46     	 mov r2,r3
 2608 051c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 693:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 694:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2609              	 .loc 4 694 0
 2610 0520 7B68     	 ldr r3,[r7,#4]
 2611 0522 1B69     	 ldr r3,[r3,#16]
 2612 0524 1A68     	 ldr r2,[r3]
 2613 0526 7B68     	 ldr r3,[r7,#4]
 2614 0528 B3F8BE30 	 ldrh r3,[r3,#190]
 2615 052c 1046     	 mov r0,r2
 2616 052e 0021     	 movs r1,#0
 2617 0530 1A46     	 mov r2,r3
 2618 0532 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 695:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 696:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2619              	 .loc 4 696 0
 2620 0536 7B68     	 ldr r3,[r7,#4]
 2621 0538 1B69     	 ldr r3,[r3,#16]
 2622 053a 1968     	 ldr r1,[r3]
 697:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 698:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2623              	 .loc 4 698 0
 2624 053c 7B68     	 ldr r3,[r7,#4]
 2625 053e B3F8B620 	 ldrh r2,[r3,#182]
 2626 0542 7B68     	 ldr r3,[r7,#4]
 2627 0544 B3F8AE30 	 ldrh r3,[r3,#174]
 696:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2628              	 .loc 4 696 0
 2629 0548 D31A     	 subs r3,r2,r3
 2630 054a 9BB2     	 uxth r3,r3
 2631 054c 0846     	 mov r0,r1
 2632 054e 0121     	 movs r1,#1
 2633 0550 1A46     	 mov r2,r3
 2634 0552 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 699:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2635              	 .loc 4 699 0
 2636 0556 00BF     	 nop
 2637              	.L65:
 700:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 701:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 702:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 2638              	 .loc 4 702 0
 2639 0558 1037     	 adds r7,r7,#16
 2640              	.LCFI140:
 2641              	 .cfi_def_cfa_offset 8
 2642 055a BD46     	 mov sp,r7
 2643              	.LCFI141:
 2644              	 .cfi_def_cfa_register 13
 2645              	 
 2646 055c 80BD     	 pop {r7,pc}
 2647              	 .cfi_endproc
 2648              	.LFE246:
 2650 055e 00BF     	 .section .text.PWM_SVM_Calc4av7segmentCompVal,"ax",%progbits
 2651              	 .align 2
 2652              	 .global PWM_SVM_Calc4av7segmentCompVal
 2653              	 .thumb
 2654              	 .thumb_func
 2656              	PWM_SVM_Calc4av7segmentCompVal:
 2657              	.LFB247:
 703:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 704:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 7-segment of Pseudo zero ve
 705:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 706:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Calc4av7segmentCompVal(PWM_SVM_t* const HandlePtr)
 707:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 2658              	 .loc 4 707 0
 2659              	 .cfi_startproc
 2660              	 
 2661              	 
 2662 0000 80B5     	 push {r7,lr}
 2663              	.LCFI142:
 2664              	 .cfi_def_cfa_offset 8
 2665              	 .cfi_offset 7,-8
 2666              	 .cfi_offset 14,-4
 2667 0002 84B0     	 sub sp,sp,#16
 2668              	.LCFI143:
 2669              	 .cfi_def_cfa_offset 24
 2670 0004 00AF     	 add r7,sp,#0
 2671              	.LCFI144:
 2672              	 .cfi_def_cfa_register 7
 2673 0006 7860     	 str r0,[r7,#4]
 708:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cr1s;
 709:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cr2s;
 710:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = HandlePtr->ta + HandlePtr->tmin;
 2674              	 .loc 4 710 0
 2675 0008 7B68     	 ldr r3,[r7,#4]
 2676 000a B3F8AE20 	 ldrh r2,[r3,#174]
 2677 000e 7B68     	 ldr r3,[r7,#4]
 2678 0010 B3F8C230 	 ldrh r3,[r3,#194]
 2679 0014 1344     	 add r3,r3,r2
 2680 0016 9AB2     	 uxth r2,r3
 2681 0018 7B68     	 ldr r3,[r7,#4]
 2682 001a A3F8AE20 	 strh r2,[r3,#174]
 711:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = HandlePtr->tb + HandlePtr->tmin;
 2683              	 .loc 4 711 0
 2684 001e 7B68     	 ldr r3,[r7,#4]
 2685 0020 B3F8B020 	 ldrh r2,[r3,#176]
 2686 0024 7B68     	 ldr r3,[r7,#4]
 2687 0026 B3F8C230 	 ldrh r3,[r3,#194]
 2688 002a 1344     	 add r3,r3,r2
 2689 002c 9AB2     	 uxth r2,r3
 2690 002e 7B68     	 ldr r3,[r7,#4]
 2691 0030 A3F8B020 	 strh r2,[r3,#176]
 712:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 713:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculation of intermediate compare value parameters*/
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = (uint16_t)(
 715:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2692              	 .loc 4 715 0
 2693 0034 7B68     	 ldr r3,[r7,#4]
 2694 0036 D3F89C30 	 ldr r3,[r3,#156]
 2695 003a 9AB2     	 uxth r2,r3
 2696 003c 7B68     	 ldr r3,[r7,#4]
 2697 003e B3F8AE10 	 ldrh r1,[r3,#174]
 716:../Dave/Generated/PWM_SVM/pwm_svm.c ****  (uint16_t) HandlePtr->tb + (2U * HandlePtr->tmin)));
 2698              	 .loc 4 716 0
 2699 0042 7B68     	 ldr r3,[r7,#4]
 2700 0044 B3F8B030 	 ldrh r3,[r3,#176]
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2701              	 .loc 4 714 0
 2702 0048 0B44     	 add r3,r3,r1
 2703 004a 99B2     	 uxth r1,r3
 2704              	 .loc 4 716 0
 2705 004c 7B68     	 ldr r3,[r7,#4]
 2706 004e B3F8C230 	 ldrh r3,[r3,#194]
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2707              	 .loc 4 714 0
 2708 0052 5B00     	 lsls r3,r3,#1
 2709 0054 9BB2     	 uxth r3,r3
 2710 0056 0B44     	 add r3,r3,r1
 2711 0058 9BB2     	 uxth r3,r3
 2712 005a D31A     	 subs r3,r2,r3
 2713 005c 9AB2     	 uxth r2,r3
 2714 005e 7B68     	 ldr r3,[r7,#4]
 2715 0060 A3F8BC20 	 strh r2,[r3,#188]
 717:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 718:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t) HandlePtr->v_tb2 >> 2U;
 2716              	 .loc 4 718 0
 2717 0064 7B68     	 ldr r3,[r7,#4]
 2718 0066 B3F8BC30 	 ldrh r3,[r3,#188]
 2719 006a 9B08     	 lsrs r3,r3,#2
 2720 006c 9AB2     	 uxth r2,r3
 2721 006e 7B68     	 ldr r3,[r7,#4]
 2722 0070 A3F8B820 	 strh r2,[r3,#184]
 719:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = (uint16_t)(HandlePtr->v_tb2 + (2U * HandlePtr->tmin));
 2723              	 .loc 4 719 0
 2724 0074 7B68     	 ldr r3,[r7,#4]
 2725 0076 B3F8BC20 	 ldrh r2,[r3,#188]
 2726 007a 7B68     	 ldr r3,[r7,#4]
 2727 007c B3F8C230 	 ldrh r3,[r3,#194]
 2728 0080 5B00     	 lsls r3,r3,#1
 2729 0082 9BB2     	 uxth r3,r3
 2730 0084 1344     	 add r3,r3,r2
 2731 0086 9AB2     	 uxth r2,r3
 2732 0088 7B68     	 ldr r3,[r7,#4]
 2733 008a A3F8BA20 	 strh r2,[r3,#186]
 720:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period - (uint16_t) HandlePtr->v_tb;
 2734              	 .loc 4 720 0
 2735 008e 7B68     	 ldr r3,[r7,#4]
 2736 0090 D3F89C30 	 ldr r3,[r3,#156]
 2737 0094 9AB2     	 uxth r2,r3
 2738 0096 7B68     	 ldr r3,[r7,#4]
 2739 0098 B3F8B830 	 ldrh r3,[r3,#184]
 2740 009c D31A     	 subs r3,r2,r3
 2741 009e 9AB2     	 uxth r2,r3
 2742 00a0 7B68     	 ldr r3,[r7,#4]
 2743 00a2 A3F8B620 	 strh r2,[r3,#182]
 721:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 722:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate and update compare value of current trigger slice for dc link current measurement*/
 723:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 2744              	 .loc 4 723 0
 2745 00a6 7B68     	 ldr r3,[r7,#4]
 2746 00a8 1B68     	 ldr r3,[r3]
 2747 00aa 1B7C     	 ldrb r3,[r3,#16]
 2748 00ac 012B     	 cmp r3,#1
 2749 00ae 2ED1     	 bne .L78
 724:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 725:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr1s = (uint32_t) HandlePtr->v_ta - ((uint32_t)(HandlePtr->ta) + ((uint32_t) HandlePtr->tb >> 1
 2750              	 .loc 4 725 0
 2751 00b0 7B68     	 ldr r3,[r7,#4]
 2752 00b2 B3F8B630 	 ldrh r3,[r3,#182]
 2753 00b6 1A46     	 mov r2,r3
 2754 00b8 7B68     	 ldr r3,[r7,#4]
 2755 00ba B3F8AE30 	 ldrh r3,[r3,#174]
 2756 00be 1946     	 mov r1,r3
 2757 00c0 7B68     	 ldr r3,[r7,#4]
 2758 00c2 B3F8B030 	 ldrh r3,[r3,#176]
 2759 00c6 5B08     	 lsrs r3,r3,#1
 2760 00c8 9BB2     	 uxth r3,r3
 2761 00ca 0B44     	 add r3,r3,r1
 2762 00cc D31A     	 subs r3,r2,r3
 2763 00ce FB60     	 str r3,[r7,#12]
 726:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr2s = (uint32_t) HandlePtr->v_ta - ((uint32_t) HandlePtr->ta >> 1U);
 2764              	 .loc 4 726 0
 2765 00d0 7B68     	 ldr r3,[r7,#4]
 2766 00d2 B3F8B630 	 ldrh r3,[r3,#182]
 2767 00d6 1A46     	 mov r2,r3
 2768 00d8 7B68     	 ldr r3,[r7,#4]
 2769 00da B3F8AE30 	 ldrh r3,[r3,#174]
 2770 00de 5B08     	 lsrs r3,r3,#1
 2771 00e0 9BB2     	 uxth r3,r3
 2772 00e2 D31A     	 subs r3,r2,r3
 2773 00e4 BB60     	 str r3,[r7,#8]
 727:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2774              	 .loc 4 727 0
 2775 00e6 7B68     	 ldr r3,[r7,#4]
 2776 00e8 5B69     	 ldr r3,[r3,#20]
 2777 00ea 1A68     	 ldr r2,[r3]
 2778 00ec FB68     	 ldr r3,[r7,#12]
 2779 00ee 9BB2     	 uxth r3,r3
 2780 00f0 1046     	 mov r0,r2
 2781 00f2 0021     	 movs r1,#0
 2782 00f4 1A46     	 mov r2,r3
 2783 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 728:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) cr1s);
 729:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2784              	 .loc 4 729 0
 2785 00fa 7B68     	 ldr r3,[r7,#4]
 2786 00fc 5B69     	 ldr r3,[r3,#20]
 2787 00fe 1A68     	 ldr r2,[r3]
 2788 0100 BB68     	 ldr r3,[r7,#8]
 2789 0102 9BB2     	 uxth r3,r3
 2790 0104 1046     	 mov r0,r2
 2791 0106 0121     	 movs r1,#1
 2792 0108 1A46     	 mov r2,r3
 2793 010a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 2794              	.L78:
 730:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) cr2s);
 731:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 732:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare registers based on sector number*/
 733:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 2795              	 .loc 4 733 0
 2796 010e 7B68     	 ldr r3,[r7,#4]
 2797 0110 D3F8A430 	 ldr r3,[r3,#164]
 2798 0114 03F00703 	 and r3,r3,#7
 2799 0118 042B     	 cmp r3,#4
 2800 011a 00F2CA81 	 bhi .L79
 2801 011e 01A2     	 adr r2,.L81
 2802 0120 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2803              	 .p2align 2
 2804              	.L81:
 2805 0124 39010000 	 .word .L80+1
 2806 0128 EB010000 	 .word .L82+1
 2807 012c 9D020000 	 .word .L83+1
 2808 0130 4F030000 	 .word .L84+1
 2809 0134 01040000 	 .word .L85+1
 2810              	 .p2align 1
 2811              	.L80:
 734:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 735:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 736:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2812              	 .loc 4 736 0
 2813 0138 7B68     	 ldr r3,[r7,#4]
 2814 013a 9B68     	 ldr r3,[r3,#8]
 2815 013c 1968     	 ldr r1,[r3]
 737:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 738:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 2816              	 .loc 4 738 0
 2817 013e 7B68     	 ldr r3,[r7,#4]
 2818 0140 B3F8B820 	 ldrh r2,[r3,#184]
 2819 0144 7B68     	 ldr r3,[r7,#4]
 2820 0146 B3F8C230 	 ldrh r3,[r3,#194]
 2821 014a 5B00     	 lsls r3,r3,#1
 2822 014c 9BB2     	 uxth r3,r3
 736:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2823              	 .loc 4 736 0
 2824 014e 1344     	 add r3,r3,r2
 2825 0150 9BB2     	 uxth r3,r3
 2826 0152 0846     	 mov r0,r1
 2827 0154 0021     	 movs r1,#0
 2828 0156 1A46     	 mov r2,r3
 2829 0158 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 739:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2830              	 .loc 4 739 0
 2831 015c 7B68     	 ldr r3,[r7,#4]
 2832 015e 9B68     	 ldr r3,[r3,#8]
 2833 0160 1A68     	 ldr r2,[r3]
 2834 0162 7B68     	 ldr r3,[r7,#4]
 2835 0164 B3F8B630 	 ldrh r3,[r3,#182]
 2836 0168 1046     	 mov r0,r2
 2837 016a 0121     	 movs r1,#1
 2838 016c 1A46     	 mov r2,r3
 2839 016e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 740:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 741:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 742:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2840              	 .loc 4 742 0
 2841 0172 7B68     	 ldr r3,[r7,#4]
 2842 0174 DB68     	 ldr r3,[r3,#12]
 2843 0176 1968     	 ldr r1,[r3]
 743:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 744:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2844              	 .loc 4 744 0
 2845 0178 7B68     	 ldr r3,[r7,#4]
 2846 017a B3F8B820 	 ldrh r2,[r3,#184]
 2847 017e 7B68     	 ldr r3,[r7,#4]
 2848 0180 B3F8C230 	 ldrh r3,[r3,#194]
 742:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2849              	 .loc 4 742 0
 2850 0184 1344     	 add r3,r3,r2
 2851 0186 9BB2     	 uxth r3,r3
 2852 0188 0846     	 mov r0,r1
 2853 018a 0021     	 movs r1,#0
 2854 018c 1A46     	 mov r2,r3
 2855 018e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 745:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2856              	 .loc 4 745 0
 2857 0192 7B68     	 ldr r3,[r7,#4]
 2858 0194 DB68     	 ldr r3,[r3,#12]
 2859 0196 1968     	 ldr r1,[r3]
 746:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 747:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2860              	 .loc 4 747 0
 2861 0198 7B68     	 ldr r3,[r7,#4]
 2862 019a B3F8B620 	 ldrh r2,[r3,#182]
 2863 019e 7B68     	 ldr r3,[r7,#4]
 2864 01a0 B3F8AE30 	 ldrh r3,[r3,#174]
 745:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2865              	 .loc 4 745 0
 2866 01a4 D31A     	 subs r3,r2,r3
 2867 01a6 9BB2     	 uxth r3,r3
 2868 01a8 0846     	 mov r0,r1
 2869 01aa 0121     	 movs r1,#1
 2870 01ac 1A46     	 mov r2,r3
 2871 01ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 748:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 749:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2872              	 .loc 4 749 0
 2873 01b2 7B68     	 ldr r3,[r7,#4]
 2874 01b4 1B69     	 ldr r3,[r3,#16]
 2875 01b6 1A68     	 ldr r2,[r3]
 2876 01b8 7B68     	 ldr r3,[r7,#4]
 2877 01ba B3F8B830 	 ldrh r3,[r3,#184]
 2878 01be 1046     	 mov r0,r2
 2879 01c0 0021     	 movs r1,#0
 2880 01c2 1A46     	 mov r2,r3
 2881 01c4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 750:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 751:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2882              	 .loc 4 751 0
 2883 01c8 7B68     	 ldr r3,[r7,#4]
 2884 01ca 1B69     	 ldr r3,[r3,#16]
 2885 01cc 1968     	 ldr r1,[r3]
 752:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 753:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 2886              	 .loc 4 753 0
 2887 01ce 7B68     	 ldr r3,[r7,#4]
 2888 01d0 B3F8BA20 	 ldrh r2,[r3,#186]
 2889 01d4 7B68     	 ldr r3,[r7,#4]
 2890 01d6 B3F8B830 	 ldrh r3,[r3,#184]
 751:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2891              	 .loc 4 751 0
 2892 01da D31A     	 subs r3,r2,r3
 2893 01dc 9BB2     	 uxth r3,r3
 2894 01de 0846     	 mov r0,r1
 2895 01e0 0121     	 movs r1,#1
 2896 01e2 1A46     	 mov r2,r3
 2897 01e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 754:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2898              	 .loc 4 754 0
 2899 01e8 BCE1     	 b .L77
 2900              	.L82:
 755:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 756:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2901              	 .loc 4 756 0
 2902 01ea 7B68     	 ldr r3,[r7,#4]
 2903 01ec 9B68     	 ldr r3,[r3,#8]
 2904 01ee 1968     	 ldr r1,[r3]
 757:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 758:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2905              	 .loc 4 758 0
 2906 01f0 7B68     	 ldr r3,[r7,#4]
 2907 01f2 B3F8B820 	 ldrh r2,[r3,#184]
 2908 01f6 7B68     	 ldr r3,[r7,#4]
 2909 01f8 B3F8C230 	 ldrh r3,[r3,#194]
 756:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2910              	 .loc 4 756 0
 2911 01fc 1344     	 add r3,r3,r2
 2912 01fe 9BB2     	 uxth r3,r3
 2913 0200 0846     	 mov r0,r1
 2914 0202 0021     	 movs r1,#0
 2915 0204 1A46     	 mov r2,r3
 2916 0206 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 759:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2917              	 .loc 4 759 0
 2918 020a 7B68     	 ldr r3,[r7,#4]
 2919 020c 9B68     	 ldr r3,[r3,#8]
 2920 020e 1968     	 ldr r1,[r3]
 760:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 761:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2921              	 .loc 4 761 0
 2922 0210 7B68     	 ldr r3,[r7,#4]
 2923 0212 B3F8B620 	 ldrh r2,[r3,#182]
 2924 0216 7B68     	 ldr r3,[r7,#4]
 2925 0218 B3F8AE30 	 ldrh r3,[r3,#174]
 759:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2926              	 .loc 4 759 0
 2927 021c D31A     	 subs r3,r2,r3
 2928 021e 9BB2     	 uxth r3,r3
 2929 0220 0846     	 mov r0,r1
 2930 0222 0121     	 movs r1,#1
 2931 0224 1A46     	 mov r2,r3
 2932 0226 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 762:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 763:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2933              	 .loc 4 763 0
 2934 022a 7B68     	 ldr r3,[r7,#4]
 2935 022c DB68     	 ldr r3,[r3,#12]
 2936 022e 1968     	 ldr r1,[r3]
 764:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 765:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 2937              	 .loc 4 765 0
 2938 0230 7B68     	 ldr r3,[r7,#4]
 2939 0232 B3F8B820 	 ldrh r2,[r3,#184]
 2940 0236 7B68     	 ldr r3,[r7,#4]
 2941 0238 B3F8C230 	 ldrh r3,[r3,#194]
 2942 023c 5B00     	 lsls r3,r3,#1
 2943 023e 9BB2     	 uxth r3,r3
 763:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2944              	 .loc 4 763 0
 2945 0240 1344     	 add r3,r3,r2
 2946 0242 9BB2     	 uxth r3,r3
 2947 0244 0846     	 mov r0,r1
 2948 0246 0021     	 movs r1,#0
 2949 0248 1A46     	 mov r2,r3
 2950 024a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 766:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2951              	 .loc 4 766 0
 2952 024e 7B68     	 ldr r3,[r7,#4]
 2953 0250 DB68     	 ldr r3,[r3,#12]
 2954 0252 1A68     	 ldr r2,[r3]
 2955 0254 7B68     	 ldr r3,[r7,#4]
 2956 0256 B3F8B630 	 ldrh r3,[r3,#182]
 2957 025a 1046     	 mov r0,r2
 2958 025c 0121     	 movs r1,#1
 2959 025e 1A46     	 mov r2,r3
 2960 0260 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 767:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 768:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 769:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2961              	 .loc 4 769 0
 2962 0264 7B68     	 ldr r3,[r7,#4]
 2963 0266 1B69     	 ldr r3,[r3,#16]
 2964 0268 1A68     	 ldr r2,[r3]
 2965 026a 7B68     	 ldr r3,[r7,#4]
 2966 026c B3F8B830 	 ldrh r3,[r3,#184]
 2967 0270 1046     	 mov r0,r2
 2968 0272 0021     	 movs r1,#0
 2969 0274 1A46     	 mov r2,r3
 2970 0276 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 770:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 771:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2971              	 .loc 4 771 0
 2972 027a 7B68     	 ldr r3,[r7,#4]
 2973 027c 1B69     	 ldr r3,[r3,#16]
 2974 027e 1968     	 ldr r1,[r3]
 772:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 773:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 2975              	 .loc 4 773 0
 2976 0280 7B68     	 ldr r3,[r7,#4]
 2977 0282 B3F8BA20 	 ldrh r2,[r3,#186]
 2978 0286 7B68     	 ldr r3,[r7,#4]
 2979 0288 B3F8B830 	 ldrh r3,[r3,#184]
 771:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2980              	 .loc 4 771 0
 2981 028c D31A     	 subs r3,r2,r3
 2982 028e 9BB2     	 uxth r3,r3
 2983 0290 0846     	 mov r0,r1
 2984 0292 0121     	 movs r1,#1
 2985 0294 1A46     	 mov r2,r3
 2986 0296 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 774:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2987              	 .loc 4 774 0
 2988 029a 63E1     	 b .L77
 2989              	.L83:
 775:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 776:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2990              	 .loc 4 776 0
 2991 029c 7B68     	 ldr r3,[r7,#4]
 2992 029e 9B68     	 ldr r3,[r3,#8]
 2993 02a0 1A68     	 ldr r2,[r3]
 2994 02a2 7B68     	 ldr r3,[r7,#4]
 2995 02a4 B3F8B830 	 ldrh r3,[r3,#184]
 2996 02a8 1046     	 mov r0,r2
 2997 02aa 0021     	 movs r1,#0
 2998 02ac 1A46     	 mov r2,r3
 2999 02ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 777:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 778:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3000              	 .loc 4 778 0
 3001 02b2 7B68     	 ldr r3,[r7,#4]
 3002 02b4 9B68     	 ldr r3,[r3,#8]
 3003 02b6 1968     	 ldr r1,[r3]
 779:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 780:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 3004              	 .loc 4 780 0
 3005 02b8 7B68     	 ldr r3,[r7,#4]
 3006 02ba B3F8BA20 	 ldrh r2,[r3,#186]
 3007 02be 7B68     	 ldr r3,[r7,#4]
 3008 02c0 B3F8B830 	 ldrh r3,[r3,#184]
 778:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3009              	 .loc 4 778 0
 3010 02c4 D31A     	 subs r3,r2,r3
 3011 02c6 9BB2     	 uxth r3,r3
 3012 02c8 0846     	 mov r0,r1
 3013 02ca 0121     	 movs r1,#1
 3014 02cc 1A46     	 mov r2,r3
 3015 02ce FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 781:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 782:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3016              	 .loc 4 782 0
 3017 02d2 7B68     	 ldr r3,[r7,#4]
 3018 02d4 DB68     	 ldr r3,[r3,#12]
 3019 02d6 1968     	 ldr r1,[r3]
 783:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 784:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3020              	 .loc 4 784 0
 3021 02d8 7B68     	 ldr r3,[r7,#4]
 3022 02da B3F8B820 	 ldrh r2,[r3,#184]
 3023 02de 7B68     	 ldr r3,[r7,#4]
 3024 02e0 B3F8C230 	 ldrh r3,[r3,#194]
 3025 02e4 5B00     	 lsls r3,r3,#1
 3026 02e6 9BB2     	 uxth r3,r3
 782:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3027              	 .loc 4 782 0
 3028 02e8 1344     	 add r3,r3,r2
 3029 02ea 9BB2     	 uxth r3,r3
 3030 02ec 0846     	 mov r0,r1
 3031 02ee 0021     	 movs r1,#0
 3032 02f0 1A46     	 mov r2,r3
 3033 02f2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 785:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3034              	 .loc 4 785 0
 3035 02f6 7B68     	 ldr r3,[r7,#4]
 3036 02f8 DB68     	 ldr r3,[r3,#12]
 3037 02fa 1A68     	 ldr r2,[r3]
 3038 02fc 7B68     	 ldr r3,[r7,#4]
 3039 02fe B3F8B630 	 ldrh r3,[r3,#182]
 3040 0302 1046     	 mov r0,r2
 3041 0304 0121     	 movs r1,#1
 3042 0306 1A46     	 mov r2,r3
 3043 0308 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 786:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 787:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 788:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3044              	 .loc 4 788 0
 3045 030c 7B68     	 ldr r3,[r7,#4]
 3046 030e 1B69     	 ldr r3,[r3,#16]
 3047 0310 1968     	 ldr r1,[r3]
 789:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 790:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3048              	 .loc 4 790 0
 3049 0312 7B68     	 ldr r3,[r7,#4]
 3050 0314 B3F8B820 	 ldrh r2,[r3,#184]
 3051 0318 7B68     	 ldr r3,[r7,#4]
 3052 031a B3F8C230 	 ldrh r3,[r3,#194]
 788:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3053              	 .loc 4 788 0
 3054 031e 1344     	 add r3,r3,r2
 3055 0320 9BB2     	 uxth r3,r3
 3056 0322 0846     	 mov r0,r1
 3057 0324 0021     	 movs r1,#0
 3058 0326 1A46     	 mov r2,r3
 3059 0328 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 791:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3060              	 .loc 4 791 0
 3061 032c 7B68     	 ldr r3,[r7,#4]
 3062 032e 1B69     	 ldr r3,[r3,#16]
 3063 0330 1968     	 ldr r1,[r3]
 792:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 793:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 3064              	 .loc 4 793 0
 3065 0332 7B68     	 ldr r3,[r7,#4]
 3066 0334 B3F8B620 	 ldrh r2,[r3,#182]
 3067 0338 7B68     	 ldr r3,[r7,#4]
 3068 033a B3F8AE30 	 ldrh r3,[r3,#174]
 791:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3069              	 .loc 4 791 0
 3070 033e D31A     	 subs r3,r2,r3
 3071 0340 9BB2     	 uxth r3,r3
 3072 0342 0846     	 mov r0,r1
 3073 0344 0121     	 movs r1,#1
 3074 0346 1A46     	 mov r2,r3
 3075 0348 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 794:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3076              	 .loc 4 794 0
 3077 034c 0AE1     	 b .L77
 3078              	.L84:
 795:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 796:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3079              	 .loc 4 796 0
 3080 034e 7B68     	 ldr r3,[r7,#4]
 3081 0350 9B68     	 ldr r3,[r3,#8]
 3082 0352 1A68     	 ldr r2,[r3]
 3083 0354 7B68     	 ldr r3,[r7,#4]
 3084 0356 B3F8B830 	 ldrh r3,[r3,#184]
 3085 035a 1046     	 mov r0,r2
 3086 035c 0021     	 movs r1,#0
 3087 035e 1A46     	 mov r2,r3
 3088 0360 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 797:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 798:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3089              	 .loc 4 798 0
 3090 0364 7B68     	 ldr r3,[r7,#4]
 3091 0366 9B68     	 ldr r3,[r3,#8]
 3092 0368 1968     	 ldr r1,[r3]
 799:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 800:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 3093              	 .loc 4 800 0
 3094 036a 7B68     	 ldr r3,[r7,#4]
 3095 036c B3F8BA20 	 ldrh r2,[r3,#186]
 3096 0370 7B68     	 ldr r3,[r7,#4]
 3097 0372 B3F8B830 	 ldrh r3,[r3,#184]
 798:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3098              	 .loc 4 798 0
 3099 0376 D31A     	 subs r3,r2,r3
 3100 0378 9BB2     	 uxth r3,r3
 3101 037a 0846     	 mov r0,r1
 3102 037c 0121     	 movs r1,#1
 3103 037e 1A46     	 mov r2,r3
 3104 0380 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 801:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 802:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3105              	 .loc 4 802 0
 3106 0384 7B68     	 ldr r3,[r7,#4]
 3107 0386 DB68     	 ldr r3,[r3,#12]
 3108 0388 1968     	 ldr r1,[r3]
 803:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 804:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3109              	 .loc 4 804 0
 3110 038a 7B68     	 ldr r3,[r7,#4]
 3111 038c B3F8B820 	 ldrh r2,[r3,#184]
 3112 0390 7B68     	 ldr r3,[r7,#4]
 3113 0392 B3F8C230 	 ldrh r3,[r3,#194]
 802:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3114              	 .loc 4 802 0
 3115 0396 1344     	 add r3,r3,r2
 3116 0398 9BB2     	 uxth r3,r3
 3117 039a 0846     	 mov r0,r1
 3118 039c 0021     	 movs r1,#0
 3119 039e 1A46     	 mov r2,r3
 3120 03a0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 805:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3121              	 .loc 4 805 0
 3122 03a4 7B68     	 ldr r3,[r7,#4]
 3123 03a6 DB68     	 ldr r3,[r3,#12]
 3124 03a8 1968     	 ldr r1,[r3]
 806:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 807:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3125              	 .loc 4 807 0
 3126 03aa 7B68     	 ldr r3,[r7,#4]
 3127 03ac B3F8B620 	 ldrh r2,[r3,#182]
 3128 03b0 7B68     	 ldr r3,[r7,#4]
 3129 03b2 B3F8AE30 	 ldrh r3,[r3,#174]
 805:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3130              	 .loc 4 805 0
 3131 03b6 D31A     	 subs r3,r2,r3
 3132 03b8 9BB2     	 uxth r3,r3
 3133 03ba 0846     	 mov r0,r1
 3134 03bc 0121     	 movs r1,#1
 3135 03be 1A46     	 mov r2,r3
 3136 03c0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 808:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 809:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3137              	 .loc 4 809 0
 3138 03c4 7B68     	 ldr r3,[r7,#4]
 3139 03c6 1B69     	 ldr r3,[r3,#16]
 3140 03c8 1968     	 ldr r1,[r3]
 810:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 811:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3141              	 .loc 4 811 0
 3142 03ca 7B68     	 ldr r3,[r7,#4]
 3143 03cc B3F8B820 	 ldrh r2,[r3,#184]
 3144 03d0 7B68     	 ldr r3,[r7,#4]
 3145 03d2 B3F8C230 	 ldrh r3,[r3,#194]
 3146 03d6 5B00     	 lsls r3,r3,#1
 3147 03d8 9BB2     	 uxth r3,r3
 809:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3148              	 .loc 4 809 0
 3149 03da 1344     	 add r3,r3,r2
 3150 03dc 9BB2     	 uxth r3,r3
 3151 03de 0846     	 mov r0,r1
 3152 03e0 0021     	 movs r1,#0
 3153 03e2 1A46     	 mov r2,r3
 3154 03e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 812:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3155              	 .loc 4 812 0
 3156 03e8 7B68     	 ldr r3,[r7,#4]
 3157 03ea 1B69     	 ldr r3,[r3,#16]
 3158 03ec 1A68     	 ldr r2,[r3]
 3159 03ee 7B68     	 ldr r3,[r7,#4]
 3160 03f0 B3F8B630 	 ldrh r3,[r3,#182]
 3161 03f4 1046     	 mov r0,r2
 3162 03f6 0121     	 movs r1,#1
 3163 03f8 1A46     	 mov r2,r3
 3164 03fa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 813:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 814:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3165              	 .loc 4 814 0
 3166 03fe B1E0     	 b .L77
 3167              	.L85:
 815:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 816:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3168              	 .loc 4 816 0
 3169 0400 7B68     	 ldr r3,[r7,#4]
 3170 0402 9B68     	 ldr r3,[r3,#8]
 3171 0404 1968     	 ldr r1,[r3]
 817:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 818:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tmin);
 3172              	 .loc 4 818 0
 3173 0406 7B68     	 ldr r3,[r7,#4]
 3174 0408 B3F8B820 	 ldrh r2,[r3,#184]
 3175 040c 7B68     	 ldr r3,[r7,#4]
 3176 040e B3F8C230 	 ldrh r3,[r3,#194]
 816:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3177              	 .loc 4 816 0
 3178 0412 1344     	 add r3,r3,r2
 3179 0414 9BB2     	 uxth r3,r3
 3180 0416 0846     	 mov r0,r1
 3181 0418 0021     	 movs r1,#0
 3182 041a 1A46     	 mov r2,r3
 3183 041c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 819:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3184              	 .loc 4 819 0
 3185 0420 7B68     	 ldr r3,[r7,#4]
 3186 0422 9B68     	 ldr r3,[r3,#8]
 3187 0424 1968     	 ldr r1,[r3]
 820:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 821:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3188              	 .loc 4 821 0
 3189 0426 7B68     	 ldr r3,[r7,#4]
 3190 0428 B3F8B620 	 ldrh r2,[r3,#182]
 3191 042c 7B68     	 ldr r3,[r7,#4]
 3192 042e B3F8AE30 	 ldrh r3,[r3,#174]
 819:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3193              	 .loc 4 819 0
 3194 0432 D31A     	 subs r3,r2,r3
 3195 0434 9BB2     	 uxth r3,r3
 3196 0436 0846     	 mov r0,r1
 3197 0438 0121     	 movs r1,#1
 3198 043a 1A46     	 mov r2,r3
 3199 043c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 822:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 823:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3200              	 .loc 4 823 0
 3201 0440 7B68     	 ldr r3,[r7,#4]
 3202 0442 DB68     	 ldr r3,[r3,#12]
 3203 0444 1A68     	 ldr r2,[r3]
 3204 0446 7B68     	 ldr r3,[r7,#4]
 3205 0448 B3F8B830 	 ldrh r3,[r3,#184]
 3206 044c 1046     	 mov r0,r2
 3207 044e 0021     	 movs r1,#0
 3208 0450 1A46     	 mov r2,r3
 3209 0452 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 824:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 825:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3210              	 .loc 4 825 0
 3211 0456 7B68     	 ldr r3,[r7,#4]
 3212 0458 DB68     	 ldr r3,[r3,#12]
 3213 045a 1968     	 ldr r1,[r3]
 826:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 827:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - (uint16_t) HandlePtr->v_tb);
 3214              	 .loc 4 827 0
 3215 045c 7B68     	 ldr r3,[r7,#4]
 3216 045e B3F8BA20 	 ldrh r2,[r3,#186]
 3217 0462 7B68     	 ldr r3,[r7,#4]
 3218 0464 B3F8B830 	 ldrh r3,[r3,#184]
 825:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3219              	 .loc 4 825 0
 3220 0468 D31A     	 subs r3,r2,r3
 3221 046a 9BB2     	 uxth r3,r3
 3222 046c 0846     	 mov r0,r1
 3223 046e 0121     	 movs r1,#1
 3224 0470 1A46     	 mov r2,r3
 3225 0472 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 828:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 829:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3226              	 .loc 4 829 0
 3227 0476 7B68     	 ldr r3,[r7,#4]
 3228 0478 1B69     	 ldr r3,[r3,#16]
 3229 047a 1968     	 ldr r1,[r3]
 830:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 831:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3230              	 .loc 4 831 0
 3231 047c 7B68     	 ldr r3,[r7,#4]
 3232 047e B3F8B820 	 ldrh r2,[r3,#184]
 3233 0482 7B68     	 ldr r3,[r7,#4]
 3234 0484 B3F8C230 	 ldrh r3,[r3,#194]
 3235 0488 5B00     	 lsls r3,r3,#1
 3236 048a 9BB2     	 uxth r3,r3
 829:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3237              	 .loc 4 829 0
 3238 048c 1344     	 add r3,r3,r2
 3239 048e 9BB2     	 uxth r3,r3
 3240 0490 0846     	 mov r0,r1
 3241 0492 0021     	 movs r1,#0
 3242 0494 1A46     	 mov r2,r3
 3243 0496 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 832:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3244              	 .loc 4 832 0
 3245 049a 7B68     	 ldr r3,[r7,#4]
 3246 049c 1B69     	 ldr r3,[r3,#16]
 3247 049e 1A68     	 ldr r2,[r3]
 3248 04a0 7B68     	 ldr r3,[r7,#4]
 3249 04a2 B3F8B630 	 ldrh r3,[r3,#182]
 3250 04a6 1046     	 mov r0,r2
 3251 04a8 0121     	 movs r1,#1
 3252 04aa 1A46     	 mov r2,r3
 3253 04ac FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 833:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 834:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3254              	 .loc 4 834 0
 3255 04b0 58E0     	 b .L77
 3256              	.L79:
 835:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 836:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3257              	 .loc 4 836 0
 3258 04b2 7B68     	 ldr r3,[r7,#4]
 3259 04b4 9B68     	 ldr r3,[r3,#8]
 3260 04b6 1968     	 ldr r1,[r3]
 837:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 838:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3261              	 .loc 4 838 0
 3262 04b8 7B68     	 ldr r3,[r7,#4]
 3263 04ba B3F8B820 	 ldrh r2,[r3,#184]
 3264 04be 7B68     	 ldr r3,[r7,#4]
 3265 04c0 B3F8C230 	 ldrh r3,[r3,#194]
 3266 04c4 5B00     	 lsls r3,r3,#1
 3267 04c6 9BB2     	 uxth r3,r3
 836:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3268              	 .loc 4 836 0
 3269 04c8 1344     	 add r3,r3,r2
 3270 04ca 9BB2     	 uxth r3,r3
 3271 04cc 0846     	 mov r0,r1
 3272 04ce 0021     	 movs r1,#0
 3273 04d0 1A46     	 mov r2,r3
 3274 04d2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 839:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3275              	 .loc 4 839 0
 3276 04d6 7B68     	 ldr r3,[r7,#4]
 3277 04d8 9B68     	 ldr r3,[r3,#8]
 3278 04da 1A68     	 ldr r2,[r3]
 3279 04dc 7B68     	 ldr r3,[r7,#4]
 3280 04de B3F8B630 	 ldrh r3,[r3,#182]
 3281 04e2 1046     	 mov r0,r2
 3282 04e4 0121     	 movs r1,#1
 3283 04e6 1A46     	 mov r2,r3
 3284 04e8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 840:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 841:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 842:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3285              	 .loc 4 842 0
 3286 04ec 7B68     	 ldr r3,[r7,#4]
 3287 04ee DB68     	 ldr r3,[r3,#12]
 3288 04f0 1A68     	 ldr r2,[r3]
 3289 04f2 7B68     	 ldr r3,[r7,#4]
 3290 04f4 B3F8B830 	 ldrh r3,[r3,#184]
 3291 04f8 1046     	 mov r0,r2
 3292 04fa 0021     	 movs r1,#0
 3293 04fc 1A46     	 mov r2,r3
 3294 04fe FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 843:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 844:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3295              	 .loc 4 844 0
 3296 0502 7B68     	 ldr r3,[r7,#4]
 3297 0504 DB68     	 ldr r3,[r3,#12]
 3298 0506 1968     	 ldr r1,[r3]
 845:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 846:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - (uint16_t) HandlePtr->v_tb);
 3299              	 .loc 4 846 0
 3300 0508 7B68     	 ldr r3,[r7,#4]
 3301 050a B3F8BA20 	 ldrh r2,[r3,#186]
 3302 050e 7B68     	 ldr r3,[r7,#4]
 3303 0510 B3F8B830 	 ldrh r3,[r3,#184]
 844:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3304              	 .loc 4 844 0
 3305 0514 D31A     	 subs r3,r2,r3
 3306 0516 9BB2     	 uxth r3,r3
 3307 0518 0846     	 mov r0,r1
 3308 051a 0121     	 movs r1,#1
 3309 051c 1A46     	 mov r2,r3
 3310 051e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 847:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 848:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3311              	 .loc 4 848 0
 3312 0522 7B68     	 ldr r3,[r7,#4]
 3313 0524 1B69     	 ldr r3,[r3,#16]
 3314 0526 1968     	 ldr r1,[r3]
 849:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 850:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tmin);
 3315              	 .loc 4 850 0
 3316 0528 7B68     	 ldr r3,[r7,#4]
 3317 052a B3F8B820 	 ldrh r2,[r3,#184]
 3318 052e 7B68     	 ldr r3,[r7,#4]
 3319 0530 B3F8C230 	 ldrh r3,[r3,#194]
 848:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3320              	 .loc 4 848 0
 3321 0534 1344     	 add r3,r3,r2
 3322 0536 9BB2     	 uxth r3,r3
 3323 0538 0846     	 mov r0,r1
 3324 053a 0021     	 movs r1,#0
 3325 053c 1A46     	 mov r2,r3
 3326 053e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 851:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3327              	 .loc 4 851 0
 3328 0542 7B68     	 ldr r3,[r7,#4]
 3329 0544 1B69     	 ldr r3,[r3,#16]
 3330 0546 1968     	 ldr r1,[r3]
 852:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 853:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3331              	 .loc 4 853 0
 3332 0548 7B68     	 ldr r3,[r7,#4]
 3333 054a B3F8B620 	 ldrh r2,[r3,#182]
 3334 054e 7B68     	 ldr r3,[r7,#4]
 3335 0550 B3F8AE30 	 ldrh r3,[r3,#174]
 851:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3336              	 .loc 4 851 0
 3337 0554 D31A     	 subs r3,r2,r3
 3338 0556 9BB2     	 uxth r3,r3
 3339 0558 0846     	 mov r0,r1
 3340 055a 0121     	 movs r1,#1
 3341 055c 1A46     	 mov r2,r3
 3342 055e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 854:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3343              	 .loc 4 854 0
 3344 0562 00BF     	 nop
 3345              	.L77:
 855:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 856:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3346              	 .loc 4 856 0
 3347 0564 1037     	 adds r7,r7,#16
 3348              	.LCFI145:
 3349              	 .cfi_def_cfa_offset 8
 3350 0566 BD46     	 mov sp,r7
 3351              	.LCFI146:
 3352              	 .cfi_def_cfa_register 13
 3353              	 
 3354 0568 80BD     	 pop {r7,pc}
 3355              	 .cfi_endproc
 3356              	.LFE247:
 3358 056a 00BF     	 .section .ram_code
 3359              	 .align 2
 3360              	 .global PWM_SVM_TimecalcUsingLUT
 3361              	 .thumb
 3362              	 .thumb_func
 3364              	PWM_SVM_TimecalcUsingLUT:
 3365              	.LFB248:
 857:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 858:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if defined (MATH)
 859:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 860:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM Segment Time calculation using CORDIC
 861:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 862:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_TimecalcUsingCORDIC(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
 863:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 864:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cosx_amp;
 865:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sinx_amp;
 866:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cosx;
 867:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sinx;
 868:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tacord_tmp;
 869:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tbcord_tmp;
 870:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Angle_tmp;
 871:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sine_inv;
 872:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t ta_tb,ta;
 873:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Dividend_Sine, Divisor_Sine;
 874:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 875:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_lTimecalcUsingCORDIC:NULL Handle Pointer",
 876:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (HandlePtr != (PWM_SVM_t *)NULL));
 877:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 878:../Dave/Generated/PWM_SVM/pwm_svm.c ****   Angle_tmp =Angle & (uint32_t)0xFFFFFF;
 879:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 880:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector = ((uint32_t)((Angle_tmp * 6U) >> 24U) & 7U);
 881:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate sector angle*/
 882:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector_angle = (uint32_t)((Angle_tmp) - (uint32_t)(HandlePtr->sector * PWM_SVM_SIXTYDE
 883:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 884:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Clearing previous values of CORDX,CORDY and CORDZ Registers*/
 885:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->STATC = 0U;
 886:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 887:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Set CORDIC to Circular Operating Mode and Rotation Mode,
 888:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * Auto start of calculation after write access to X parameter data register,
 889:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * X result data format to Unsigned, when read,
 890:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * After the last iteration of calculation the X & Y values are divided by 1
 891:../Dave/Generated/PWM_SVM/pwm_svm.c ****    */
 892:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CON = (uint32_t)0x2A;
 893:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 894:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Input sector angle*/
 895:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDZ = (uint32_t)(HandlePtr->sector_angle << ((uint32_t)MATH_CORDZ_DATA_Pos));
 896:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 897:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Set the Y value to zero*/
 898:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDY =  (uint32_t)(0U << MATH_CORDY_DATA_Pos);
 899:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 900:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Load the amplitude value */
 901:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDX =  (uint32_t)(1024 << MATH_CORDX_DATA_Pos);
 902:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 903:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Checking busy status of CORDIC calculation*/
 904:../Dave/Generated/PWM_SVM/pwm_svm.c ****   while (MATH->STATC & 0x1U)
 905:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 906:../Dave/Generated/PWM_SVM/pwm_svm.c ****   };
 907:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 908:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Reading cordic X result which is costheta X amplitude*/
 909:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx_amp = (MATH->CORRX >> MATH_CORDX_DATA_Pos);
 910:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx     = (cosx_amp * PWM_SVM_KCOSSCALE)>>10;
 911:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx_amp = cosx * Amplitude;
 912:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Reading cordic Y result which is sintheta X amplitude*/
 913:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx_amp = (MATH->CORRY >> MATH_CORDY_DATA_Pos);
 914:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx     = (sinx_amp * PWM_SVM_KSINSCALE)>>10;
 915:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx_amp = sinx * Amplitude;
 916:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 917:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint16_t)Amplitude > (HandlePtr->max_amplitude))
 918:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 919:../Dave/Generated/PWM_SVM/pwm_svm.c ****     Amplitude = HandlePtr->max_amplitude;
 920:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 921:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 922:../Dave/Generated/PWM_SVM/pwm_svm.c ****    /* Multiply Result value with sinscale to eliminate gain factor K*/
 923:../Dave/Generated/PWM_SVM/pwm_svm.c ****    tacord_tmp = (uint32_t)(sinx_amp>>14U);
 924:../Dave/Generated/PWM_SVM/pwm_svm.c ****    HandlePtr->ta = (uint16_t)((tacord_tmp * (uint32_t)HandlePtr->confighandle_ptr->amplitude_scale)
 925:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 926:../Dave/Generated/PWM_SVM/pwm_svm.c ****    /* Multiply Result value with cosscale to eliminate gain factor K*
 927:../Dave/Generated/PWM_SVM/pwm_svm.c ****     * sin(60-Angle) = (Sqrt(3)*cos(angle) - sin(angle))/2
 928:../Dave/Generated/PWM_SVM/pwm_svm.c ****     */
 929:../Dave/Generated/PWM_SVM/pwm_svm.c ****    tbcord_tmp = (uint32_t)((cosx_amp - sinx_amp))>>15U;
 930:../Dave/Generated/PWM_SVM/pwm_svm.c ****    HandlePtr->tb = (uint16_t)((tbcord_tmp * (uint32_t)HandlePtr->confighandle_ptr->amplitude_scale)
 931:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 932:../Dave/Generated/PWM_SVM/pwm_svm.c ****   ta_tb = HandlePtr->ta + HandlePtr->tb;
 933:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->t0 = HandlePtr->period - ta_tb;
 934:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 935:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (ta_tb > (HandlePtr->period))
 936:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 937:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->over_modulation_enable == 1U)
 938:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 939:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 940:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Above Ta and Tb are not used for SVM PWM.*/
 941:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 942:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Dividend_Sine = HandlePtr->period * (sinx >> 14U);
 943:../Dave/Generated/PWM_SVM/pwm_svm.c ****       sine_inv = (cosx - sinx) >> 15U;
 944:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Divisor_Sine  = sinx + sine_inv;
 945:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
 946:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Divider Unit (DIV) #2 for T2 of Over-Modulation *###*/
 947:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Unsigned Div. Dividend << SHIFT_OVERMODULATION, Quotient >> SHIFT_OVERMODULATION, Divisor 
 948:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DIVCON = (0x00008004 | (PWM_SVM_SHIFT_OVERMODULATION << 16U) | (PWM_SVM_SHIFT_OVERMODUL
 949:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVD = Dividend_Sine;
 950:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVS = Divisor_Sine;
 951:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #else
 952:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = (Dividend_Sine/Divisor_Sine);
 953:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
 954:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* CPU computes the following simultaneously when DIV #2 is computing ###*/
 955:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->t0 = 0;
 956:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta_tb = HandlePtr->period;                /* Make sure below T0/2 >= 0.*/
 957:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
 958:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Results of DIV #2 for T2 of Over-Modulation ###*/
 959:../Dave/Generated/PWM_SVM/pwm_svm.c ****       while (MATH->DIVST) continue;          /* Wait if DIV is still running calculation.*/
 960:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = MATH->QUOT;     /* Read DIV Quotient result. T2 = Ts x sin(theta) / (sin(theta)+sin(60-t
 961:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
 962:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = ta;
 963:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Ta + Tb = PERIOD_REG for Vref on SVM Hexagon edges.*/
 964:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = HandlePtr->period - HandlePtr->ta;
 965:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 966:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 967:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 968:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* If ta and tb values are less then zero, reset these values to zero */
 969:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta > HandlePtr->period)
 970:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 971:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = 0U;
 972:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 973:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb > HandlePtr->period)
 974:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 975:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = 0U;
 976:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 977:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 978:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 979:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_LUT_ENABLE)
 980:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 981:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM Segment Time calculation using Look up table
 982:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 983:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_TimecalcUsingLUT(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
 984:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3366              	 .loc 4 984 0
 3367              	 .cfi_startproc
 3368              	 
 3369              	 
 3370              	 
 3371 0278 80B4     	 push {r7}
 3372              	.LCFI147:
 3373              	 .cfi_def_cfa_offset 4
 3374              	 .cfi_offset 7,-4
 3375 027a 8BB0     	 sub sp,sp,#44
 3376              	.LCFI148:
 3377              	 .cfi_def_cfa_offset 48
 3378 027c 00AF     	 add r7,sp,#0
 3379              	.LCFI149:
 3380              	 .cfi_def_cfa_register 7
 3381 027e F860     	 str r0,[r7,#12]
 3382 0280 0B46     	 mov r3,r1
 3383 0282 7A60     	 str r2,[r7,#4]
 3384 0284 7B81     	 strh r3,[r7,#10]
 985:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t angletemp;
 986:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t ta_tb,ta;
 987:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Dividend_Sine, Divisor_Sine;        /*Ts x sin(θrel), sin(θrel)+sin(60°-θrel)*/
 988:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_lTimecalcUsingLUT:NULL Handle Pointer",
 989:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (HandlePtr != (PWM_SVM_t *)NULL));
 990:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 991:../Dave/Generated/PWM_SVM/pwm_svm.c ****   angletemp = (uint32_t)((Angle & (uint32_t)0xFFFFFF) >> 14U) * 6U;
 3385              	 .loc 4 991 0
 3386 0286 7B68     	 ldr r3,[r7,#4]
 3387 0288 23F07F43 	 bic r3,r3,#-16777216
 3388 028c 9A0B     	 lsrs r2,r3,#14
 3389 028e 1346     	 mov r3,r2
 3390 0290 5B00     	 lsls r3,r3,#1
 3391 0292 1344     	 add r3,r3,r2
 3392 0294 5B00     	 lsls r3,r3,#1
 3393 0296 7B62     	 str r3,[r7,#36]
 992:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector_angle = (uint32_t)(angletemp & (uint32_t) 0x003FF);
 3394              	 .loc 4 992 0
 3395 0298 7B6A     	 ldr r3,[r7,#36]
 3396 029a C3F30902 	 ubfx r2,r3,#0,#10
 3397 029e FB68     	 ldr r3,[r7,#12]
 3398 02a0 C3F8A820 	 str r2,[r3,#168]
 993:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector = (uint32_t)((angletemp >> 10U) & 7U);
 3399              	 .loc 4 993 0
 3400 02a4 7B6A     	 ldr r3,[r7,#36]
 3401 02a6 9B0A     	 lsrs r3,r3,#10
 3402 02a8 03F00702 	 and r2,r3,#7
 3403 02ac FB68     	 ldr r3,[r7,#12]
 3404 02ae C3F8A420 	 str r2,[r3,#164]
 994:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint16_t)Amplitude > (HandlePtr->max_amplitude))
 3405              	 .loc 4 994 0
 3406 02b2 FB68     	 ldr r3,[r7,#12]
 3407 02b4 B3F8C630 	 ldrh r3,[r3,#198]
 3408 02b8 7A89     	 ldrh r2,[r7,#10]
 3409 02ba 9A42     	 cmp r2,r3
 3410 02bc 03D9     	 bls .L88
 995:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 996:../Dave/Generated/PWM_SVM/pwm_svm.c ****     Amplitude = HandlePtr->max_amplitude;
 3411              	 .loc 4 996 0
 3412 02be FB68     	 ldr r3,[r7,#12]
 3413 02c0 B3F8C630 	 ldrh r3,[r3,#198]
 3414 02c4 7B81     	 strh r3,[r7,#10]
 3415              	.L88:
 997:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 998:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = (uint16_t)((Amplitude* Sinus60_tab[1023U - HandlePtr->sector_angle])>> 15U);
 3416              	 .loc 4 998 0
 3417 02c6 7A89     	 ldrh r2,[r7,#10]
 3418 02c8 FB68     	 ldr r3,[r7,#12]
 3419 02ca D3F8A830 	 ldr r3,[r3,#168]
 3420 02ce C3F57F73 	 rsb r3,r3,#1020
 3421 02d2 0333     	 adds r3,r3,#3
 3422 02d4 4949     	 ldr r1,.L90
 3423 02d6 31F81330 	 ldrh r3,[r1,r3,lsl#1]
 3424 02da 03FB02F3 	 mul r3,r3,r2
 3425 02de DB13     	 asrs r3,r3,#15
 3426 02e0 9AB2     	 uxth r2,r3
 3427 02e2 FB68     	 ldr r3,[r7,#12]
 3428 02e4 A3F8B020 	 strh r2,[r3,#176]
 999:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = (uint16_t)((HandlePtr->tb * HandlePtr->confighandle_ptr->amplitude_scale) >> 10U)
 3429              	 .loc 4 999 0
 3430 02e8 FB68     	 ldr r3,[r7,#12]
 3431 02ea B3F8B030 	 ldrh r3,[r3,#176]
 3432 02ee 1A46     	 mov r2,r3
 3433 02f0 FB68     	 ldr r3,[r7,#12]
 3434 02f2 1B68     	 ldr r3,[r3]
 3435 02f4 B3F84230 	 ldrh r3,[r3,#66]
 3436 02f8 03FB02F3 	 mul r3,r3,r2
 3437 02fc 9B12     	 asrs r3,r3,#10
 3438 02fe 9AB2     	 uxth r2,r3
 3439 0300 FB68     	 ldr r3,[r7,#12]
 3440 0302 A3F8B020 	 strh r2,[r3,#176]
1000:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1001:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = (uint16_t)((Amplitude* Sinus60_tab[HandlePtr->sector_angle])>> 15U);
 3441              	 .loc 4 1001 0
 3442 0306 7B89     	 ldrh r3,[r7,#10]
 3443 0308 FA68     	 ldr r2,[r7,#12]
 3444 030a D2F8A820 	 ldr r2,[r2,#168]
 3445 030e 3B49     	 ldr r1,.L90
 3446 0310 31F81220 	 ldrh r2,[r1,r2,lsl#1]
 3447 0314 02FB03F3 	 mul r3,r2,r3
 3448 0318 DB13     	 asrs r3,r3,#15
 3449 031a 9AB2     	 uxth r2,r3
 3450 031c FB68     	 ldr r3,[r7,#12]
 3451 031e A3F8AE20 	 strh r2,[r3,#174]
1002:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = (uint16_t)((HandlePtr->ta * HandlePtr->confighandle_ptr->amplitude_scale) >> 10U)
 3452              	 .loc 4 1002 0
 3453 0322 FB68     	 ldr r3,[r7,#12]
 3454 0324 B3F8AE30 	 ldrh r3,[r3,#174]
 3455 0328 1A46     	 mov r2,r3
 3456 032a FB68     	 ldr r3,[r7,#12]
 3457 032c 1B68     	 ldr r3,[r3]
 3458 032e B3F84230 	 ldrh r3,[r3,#66]
 3459 0332 03FB02F3 	 mul r3,r3,r2
 3460 0336 9B12     	 asrs r3,r3,#10
 3461 0338 9AB2     	 uxth r2,r3
 3462 033a FB68     	 ldr r3,[r7,#12]
 3463 033c A3F8AE20 	 strh r2,[r3,#174]
1003:../Dave/Generated/PWM_SVM/pwm_svm.c ****   ta_tb = HandlePtr->ta + HandlePtr->tb;
 3464              	 .loc 4 1003 0
 3465 0340 FB68     	 ldr r3,[r7,#12]
 3466 0342 B3F8AE20 	 ldrh r2,[r3,#174]
 3467 0346 FB68     	 ldr r3,[r7,#12]
 3468 0348 B3F8B030 	 ldrh r3,[r3,#176]
 3469 034c 1344     	 add r3,r3,r2
 3470 034e 7B84     	 strh r3,[r7,#34]
1004:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->t0 = (uint16_t)(HandlePtr->period - ta_tb);
 3471              	 .loc 4 1004 0
 3472 0350 FB68     	 ldr r3,[r7,#12]
 3473 0352 D3F89C30 	 ldr r3,[r3,#156]
 3474 0356 9AB2     	 uxth r2,r3
 3475 0358 7B8C     	 ldrh r3,[r7,#34]
 3476 035a D31A     	 subs r3,r2,r3
 3477 035c 9AB2     	 uxth r2,r3
 3478 035e FB68     	 ldr r3,[r7,#12]
 3479 0360 A3F8AC20 	 strh r2,[r3,#172]
1005:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1006:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (ta_tb > (HandlePtr->period))
 3480              	 .loc 4 1006 0
 3481 0364 7A8C     	 ldrh r2,[r7,#34]
 3482 0366 FB68     	 ldr r3,[r7,#12]
 3483 0368 D3F89C30 	 ldr r3,[r3,#156]
 3484 036c 9A42     	 cmp r2,r3
 3485 036e 3FD9     	 bls .L87
1007:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1008:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->over_modulation_enable == 1U)
 3486              	 .loc 4 1008 0
 3487 0370 FB68     	 ldr r3,[r7,#12]
 3488 0372 B3F8C830 	 ldrh r3,[r3,#200]
 3489 0376 012B     	 cmp r3,#1
 3490 0378 3AD1     	 bne .L87
1009:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1010:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1011:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Above Ta and Tb are not used for SVM PWM.*/
1012:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1013:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Calculate new T1 and T2 of maximum Vref on SVM Hexagon edges,
1014:../Dave/Generated/PWM_SVM/pwm_svm.c ****        * where T0 = 0 (i.e.: T1+T2 = PERIOD_REG). Relative angle θrel kept the same.
1015:../Dave/Generated/PWM_SVM/pwm_svm.c ****        */
1016:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Dividend_Sine = HandlePtr->period * Sinus60_tab[HandlePtr->sector_angle];
 3491              	 .loc 4 1016 0
 3492 037a FB68     	 ldr r3,[r7,#12]
 3493 037c D3F89C30 	 ldr r3,[r3,#156]
 3494 0380 FA68     	 ldr r2,[r7,#12]
 3495 0382 D2F8A820 	 ldr r2,[r2,#168]
 3496 0386 1D49     	 ldr r1,.L90
 3497 0388 31F81220 	 ldrh r2,[r1,r2,lsl#1]
 3498 038c 02FB03F3 	 mul r3,r2,r3
 3499 0390 FB61     	 str r3,[r7,#28]
1017:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Divisor_Sine  = Sinus60_tab[HandlePtr->sector_angle] + Sinus60_tab[1023U - HandlePtr->sector_
 3500              	 .loc 4 1017 0
 3501 0392 FB68     	 ldr r3,[r7,#12]
 3502 0394 D3F8A830 	 ldr r3,[r3,#168]
 3503 0398 184A     	 ldr r2,.L90
 3504 039a 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 3505 039e 1946     	 mov r1,r3
 3506 03a0 FB68     	 ldr r3,[r7,#12]
 3507 03a2 D3F8A830 	 ldr r3,[r3,#168]
 3508 03a6 C3F57F73 	 rsb r3,r3,#1020
 3509 03aa 0333     	 adds r3,r3,#3
 3510 03ac 134A     	 ldr r2,.L90
 3511 03ae 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 3512 03b2 0B44     	 add r3,r3,r1
 3513 03b4 BB61     	 str r3,[r7,#24]
1018:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
1019:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Divider Unit (DIV) #2 for T2 of Over-Modulation *###*/
1020:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Unsigned Div. Dividend << SHIFT_OVERMODULATION, Quotient >> SHIFT_OVERMODULATION, Divisor 
1021:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DIVCON = (0x00008004 | (PWM_SVM_SHIFT_OVERMODULATION << 16U) | (PWM_SVM_SHIFT_OVERMODUL
1022:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVD = Dividend_Sine;
1023:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVS = Divisor_Sine;
1024:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #else
1025:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = (uint16_t)(Dividend_Sine/Divisor_Sine);
 3514              	 .loc 4 1025 0
 3515 03b6 FA69     	 ldr r2,[r7,#28]
 3516 03b8 BB69     	 ldr r3,[r7,#24]
 3517 03ba B2FBF3F3 	 udiv r3,r2,r3
 3518 03be FB82     	 strh r3,[r7,#22]
1026:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
1027:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* CPU computes the following simultaneously when DIV #2 is computing ###*/
1028:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->t0 = 0U;
 3519              	 .loc 4 1028 0
 3520 03c0 FB68     	 ldr r3,[r7,#12]
 3521 03c2 0022     	 movs r2,#0
 3522 03c4 A3F8AC20 	 strh r2,[r3,#172]
1029:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta_tb = (uint16_t)HandlePtr->period;                /* Make sure below T0/2 >= 0.*/
 3523              	 .loc 4 1029 0
 3524 03c8 FB68     	 ldr r3,[r7,#12]
 3525 03ca D3F89C30 	 ldr r3,[r3,#156]
 3526 03ce 7B84     	 strh r3,[r7,#34]
1030:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
1031:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Results of DIV #2 for T2 of Over-Modulation ###*/
1032:../Dave/Generated/PWM_SVM/pwm_svm.c ****       while (MATH->DIVST) continue;          /* Wait if DIV is still running calculation.*/
1033:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = MATH->QUOT;     /* Read DIV Quotient result. T2 = Ts x sin(theta) / (sin(theta)+sin(60-t
1034:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
1035:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = ta;
 3527              	 .loc 4 1035 0
 3528 03d0 FB68     	 ldr r3,[r7,#12]
 3529 03d2 FA8A     	 ldrh r2,[r7,#22]
 3530 03d4 A3F8AE20 	 strh r2,[r3,#174]
1036:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Ta + Tb = PERIOD_REG for Vref on SVM Hexagon edges.*/
1037:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = (uint16_t)(HandlePtr->period - HandlePtr->ta);
 3531              	 .loc 4 1037 0
 3532 03d8 FB68     	 ldr r3,[r7,#12]
 3533 03da D3F89C30 	 ldr r3,[r3,#156]
 3534 03de 9AB2     	 uxth r2,r3
 3535 03e0 FB68     	 ldr r3,[r7,#12]
 3536 03e2 B3F8AE30 	 ldrh r3,[r3,#174]
 3537 03e6 D31A     	 subs r3,r2,r3
 3538 03e8 9AB2     	 uxth r2,r3
 3539 03ea FB68     	 ldr r3,[r7,#12]
 3540 03ec A3F8B020 	 strh r2,[r3,#176]
 3541              	.L87:
1038:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1039:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1040:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1041:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3542              	 .loc 4 1041 0
 3543 03f0 2C37     	 adds r7,r7,#44
 3544              	.LCFI150:
 3545              	 .cfi_def_cfa_offset 4
 3546 03f2 BD46     	 mov sp,r7
 3547              	.LCFI151:
 3548              	 .cfi_def_cfa_register 13
 3549              	 
 3550 03f4 5DF8047B 	 ldr r7,[sp],#4
 3551              	.LCFI152:
 3552              	 .cfi_restore 7
 3553              	 .cfi_def_cfa_offset 0
 3554 03f8 7047     	 bx lr
 3555              	.L91:
 3556 03fa 00BF     	 .align 2
 3557              	.L90:
 3558 03fc 00000000 	 .word Sinus60_tab
 3559              	 .cfi_endproc
 3560              	.LFE248:
 3562              	 .section .text.PWM_SVM_GetAppVersion,"ax",%progbits
 3563              	 .align 2
 3564              	 .global PWM_SVM_GetAppVersion
 3565              	 .thumb
 3566              	 .thumb_func
 3568              	PWM_SVM_GetAppVersion:
 3569              	.LFB249:
1042:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1043:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*******************************************************************************
1044:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **                      Public Function Definitions                           **
1045:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *******************************************************************************/
1046:../Dave/Generated/PWM_SVM/pwm_svm.c **** /* App API to retrieve the App version info */
1047:../Dave/Generated/PWM_SVM/pwm_svm.c **** DAVE_APP_VERSION_t PWM_SVM_GetAppVersion(void)
1048:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3570              	 .loc 4 1048 0
 3571              	 .cfi_startproc
 3572              	 
 3573              	 
 3574              	 
 3575 0000 80B4     	 push {r7}
 3576              	.LCFI153:
 3577              	 .cfi_def_cfa_offset 4
 3578              	 .cfi_offset 7,-4
 3579 0002 83B0     	 sub sp,sp,#12
 3580              	.LCFI154:
 3581              	 .cfi_def_cfa_offset 16
 3582 0004 00AF     	 add r7,sp,#0
 3583              	.LCFI155:
 3584              	 .cfi_def_cfa_register 7
1049:../Dave/Generated/PWM_SVM/pwm_svm.c ****   DAVE_APP_VERSION_t version;
1050:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1051:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.major = PWM_SVM_MAJOR_VERSION;
 3585              	 .loc 4 1051 0
 3586 0006 0423     	 movs r3,#4
 3587 0008 3B70     	 strb r3,[r7]
1052:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.minor = PWM_SVM_MINOR_VERSION;
 3588              	 .loc 4 1052 0
 3589 000a 0023     	 movs r3,#0
 3590 000c 7B70     	 strb r3,[r7,#1]
1053:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.patch = PWM_SVM_PATCH_VERSION;
 3591              	 .loc 4 1053 0
 3592 000e 1623     	 movs r3,#22
 3593 0010 BB70     	 strb r3,[r7,#2]
1054:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1055:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return version;
 3594              	 .loc 4 1055 0
 3595 0012 3B1D     	 adds r3,r7,#4
 3596 0014 3A46     	 mov r2,r7
 3597 0016 1268     	 ldr r2,[r2]
 3598 0018 1146     	 mov r1,r2
 3599 001a 1980     	 strh r1,[r3]
 3600 001c 0233     	 adds r3,r3,#2
 3601 001e 120C     	 lsrs r2,r2,#16
 3602 0020 1A70     	 strb r2,[r3]
 3603 0022 0023     	 movs r3,#0
 3604 0024 3A79     	 ldrb r2,[r7,#4]
 3605 0026 62F30703 	 bfi r3,r2,#0,#8
 3606 002a 7A79     	 ldrb r2,[r7,#5]
 3607 002c 62F30F23 	 bfi r3,r2,#8,#8
 3608 0030 BA79     	 ldrb r2,[r7,#6]
 3609 0032 62F31743 	 bfi r3,r2,#16,#8
1056:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3610              	 .loc 4 1056 0
 3611 0036 1846     	 mov r0,r3
 3612 0038 0C37     	 adds r7,r7,#12
 3613              	.LCFI156:
 3614              	 .cfi_def_cfa_offset 4
 3615 003a BD46     	 mov sp,r7
 3616              	.LCFI157:
 3617              	 .cfi_def_cfa_register 13
 3618              	 
 3619 003c 5DF8047B 	 ldr r7,[sp],#4
 3620              	.LCFI158:
 3621              	 .cfi_restore 7
 3622              	 .cfi_def_cfa_offset 0
 3623 0040 7047     	 bx lr
 3624              	 .cfi_endproc
 3625              	.LFE249:
 3627 0042 00BF     	 .section .text.PWM_SVM_Init,"ax",%progbits
 3628              	 .align 2
 3629              	 .global PWM_SVM_Init
 3630              	 .thumb
 3631              	 .thumb_func
 3633              	PWM_SVM_Init:
 3634              	.LFB250:
1057:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1058:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1059:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function initializes the peripherals and SVM structure 
1060:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * required for the SVM algorithm.
1061:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1062:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_Init(PWM_SVM_t* const HandlePtr)
1063:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3635              	 .loc 4 1063 0
 3636              	 .cfi_startproc
 3637              	 
 3638              	 
 3639 0000 80B5     	 push {r7,lr}
 3640              	.LCFI159:
 3641              	 .cfi_def_cfa_offset 8
 3642              	 .cfi_offset 7,-8
 3643              	 .cfi_offset 14,-4
 3644 0002 86B0     	 sub sp,sp,#24
 3645              	.LCFI160:
 3646              	 .cfi_def_cfa_offset 32
 3647 0004 00AF     	 add r7,sp,#0
 3648              	.LCFI161:
 3649              	 .cfi_def_cfa_register 7
 3650 0006 7860     	 str r0,[r7,#4]
1064:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count = 0U;
 3651              	 .loc 4 1064 0
 3652 0008 0023     	 movs r3,#0
 3653 000a 7B61     	 str r3,[r7,#20]
1065:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t phase_count = 0U;
 3654              	 .loc 4 1065 0
 3655 000c 0023     	 movs r3,#0
 3656 000e 3B61     	 str r3,[r7,#16]
1066:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = (PWM_SVM_STATUS_t) PWM_SVM_STATUS_SUCCESS;
 3657              	 .loc 4 1066 0
 3658 0010 0023     	 movs r3,#0
 3659 0012 FB73     	 strb r3,[r7,#15]
1067:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 3660              	 .loc 4 1067 0
 3661 0014 7B68     	 ldr r3,[r7,#4]
 3662 0016 1B68     	 ldr r3,[r3]
 3663 0018 BB60     	 str r3,[r7,#8]
1068:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Init:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1069:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_STATE_t) PWM_SVM_UNINITIALIZED == HandlePtr->state)
 3664              	 .loc 4 1069 0
 3665 001a 7B68     	 ldr r3,[r7,#4]
 3666 001c 93F89030 	 ldrb r3,[r3,#144]
 3667 0020 002B     	 cmp r3,#0
 3668 0022 40F03381 	 bne .L95
1070:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1071:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = (PWM_SVM_STATUS_t) GLOBAL_CCU8_Init(HandlePtr->globalccu8_handle_ptr);
 3669              	 .loc 4 1071 0
 3670 0026 7B68     	 ldr r3,[r7,#4]
 3671 0028 9B6E     	 ldr r3,[r3,#104]
 3672 002a 1846     	 mov r0,r3
 3673 002c FFF7FEFF 	 bl GLOBAL_CCU8_Init
 3674 0030 0346     	 mov r3,r0
 3675 0032 FB73     	 strb r3,[r7,#15]
1072:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for all three phases output*/
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (phase_count = 0U; phase_count < PWM_SVM_PHASE_IO_MAX; phase_count++)
 3676              	 .loc 4 1073 0
 3677 0034 0023     	 movs r3,#0
 3678 0036 3B61     	 str r3,[r7,#16]
 3679 0038 16E0     	 b .L96
 3680              	.L97:
1074:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1075:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->pwmoutpin_ptr[phase_count]->port, HandlePtr->pwmoutpin_ptr[phase_cou
 3681              	 .loc 4 1075 0 discriminator 3
 3682 003a 7B68     	 ldr r3,[r7,#4]
 3683 003c 3A69     	 ldr r2,[r7,#16]
 3684 003e 0832     	 adds r2,r2,#8
 3685 0040 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3686 0044 1868     	 ldr r0,[r3]
 3687 0046 7B68     	 ldr r3,[r7,#4]
 3688 0048 3A69     	 ldr r2,[r7,#16]
 3689 004a 0832     	 adds r2,r2,#8
 3690 004c 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3691 0050 1979     	 ldrb r1,[r3,#4]
 3692 0052 7B68     	 ldr r3,[r7,#4]
 3693 0054 3A69     	 ldr r2,[r7,#16]
 3694 0056 0E32     	 adds r2,r2,#14
 3695 0058 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3696 005c 1A46     	 mov r2,r3
 3697 005e FFF7FEFF 	 bl XMC_GPIO_Init
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3698              	 .loc 4 1073 0 discriminator 3
 3699 0062 3B69     	 ldr r3,[r7,#16]
 3700 0064 0133     	 adds r3,r3,#1
 3701 0066 3B61     	 str r3,[r7,#16]
 3702              	.L96:
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3703              	 .loc 4 1073 0 is_stmt 0 discriminator 1
 3704 0068 3B69     	 ldr r3,[r7,#16]
 3705 006a 052B     	 cmp r3,#5
 3706 006c E5D9     	 bls .L97
1076:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->pwmoutconfig_ptr[phase_count]);
1077:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1078:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for trap input*/
1079:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((uint8_t) true == svmptr->enable_trap)
 3707              	 .loc 4 1079 0 is_stmt 1
 3708 006e BB68     	 ldr r3,[r7,#8]
 3709 0070 93F84730 	 ldrb r3,[r3,#71]
 3710 0074 012B     	 cmp r3,#1
 3711 0076 1AD1     	 bne .L98
1080:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1081:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin, HandlePtr->trapincon
 3712              	 .loc 4 1081 0
 3713 0078 7B68     	 ldr r3,[r7,#4]
 3714 007a 1B6D     	 ldr r3,[r3,#80]
 3715 007c 1968     	 ldr r1,[r3]
 3716 007e 7B68     	 ldr r3,[r7,#4]
 3717 0080 1B6D     	 ldr r3,[r3,#80]
 3718 0082 1A79     	 ldrb r2,[r3,#4]
 3719 0084 7B68     	 ldr r3,[r7,#4]
 3720 0086 5B6D     	 ldr r3,[r3,#84]
 3721 0088 0846     	 mov r0,r1
 3722 008a 1146     	 mov r1,r2
 3723 008c 1A46     	 mov r2,r3
 3724 008e FFF7FEFF 	 bl XMC_GPIO_Init
1082:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_SetHardwareControl(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin,
 3725              	 .loc 4 1082 0
 3726 0092 7B68     	 ldr r3,[r7,#4]
 3727 0094 1B6D     	 ldr r3,[r3,#80]
 3728 0096 1968     	 ldr r1,[r3]
 3729 0098 7B68     	 ldr r3,[r7,#4]
 3730 009a 1B6D     	 ldr r3,[r3,#80]
 3731 009c 1A79     	 ldrb r2,[r3,#4]
1083:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->trap_hwsel);
 3732              	 .loc 4 1083 0
 3733 009e 7B68     	 ldr r3,[r7,#4]
 3734 00a0 1B68     	 ldr r3,[r3]
1082:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_SetHardwareControl(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin,
 3735              	 .loc 4 1082 0
 3736 00a2 9B7C     	 ldrb r3,[r3,#18]
 3737 00a4 0846     	 mov r0,r1
 3738 00a6 1146     	 mov r1,r2
 3739 00a8 1A46     	 mov r2,r3
 3740 00aa FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 3741              	.L98:
1084:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1085:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1086:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for inverter enable pin output*/
1087:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (svmptr->inverter_pin > (PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_NOTREQUIRED)
 3742              	 .loc 4 1087 0
 3743 00ae BB68     	 ldr r3,[r7,#8]
 3744 00b0 DB7C     	 ldrb r3,[r3,#19]
 3745 00b2 002B     	 cmp r3,#0
 3746 00b4 0CD0     	 beq .L99
1088:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1089:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin,
 3747              	 .loc 4 1089 0
 3748 00b6 7B68     	 ldr r3,[r7,#4]
 3749 00b8 9B6D     	 ldr r3,[r3,#88]
 3750 00ba 1968     	 ldr r1,[r3]
 3751 00bc 7B68     	 ldr r3,[r7,#4]
 3752 00be 9B6D     	 ldr r3,[r3,#88]
 3753 00c0 1A79     	 ldrb r2,[r3,#4]
 3754 00c2 7B68     	 ldr r3,[r7,#4]
 3755 00c4 DB6D     	 ldr r3,[r3,#92]
 3756 00c6 0846     	 mov r0,r1
 3757 00c8 1146     	 mov r1,r2
 3758 00ca 1A46     	 mov r2,r3
 3759 00cc FFF7FEFF 	 bl XMC_GPIO_Init
 3760              	.L99:
1090:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->inverterpinconfig_ptr);
1091:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1092:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1093:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Inverter Enable pin level is set to passive level.*/
1094:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_InverterDisable(HandlePtr);
 3761              	 .loc 4 1094 0
 3762 00d0 7868     	 ldr r0,[r7,#4]
 3763 00d2 FFF7FEFF 	 bl PWM_SVM_InverterDisable
1095:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1096:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Phase configurations */
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 3764              	 .loc 4 1097 0
 3765 00d6 0023     	 movs r3,#0
 3766 00d8 7B61     	 str r3,[r7,#20]
 3767 00da A4E0     	 b .L100
 3768              	.L102:
1098:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1099:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_CompareInit(HandlePtr->phase_ptr[count]->slice_ptr, HandlePtr->phase_configini
 3769              	 .loc 4 1099 0
 3770 00dc 7B68     	 ldr r3,[r7,#4]
 3771 00de 7A69     	 ldr r2,[r7,#20]
 3772 00e0 0232     	 adds r2,r2,#2
 3773 00e2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3774 00e6 1A68     	 ldr r2,[r3]
 3775 00e8 7B68     	 ldr r3,[r7,#4]
 3776 00ea 9B69     	 ldr r3,[r3,#24]
 3777 00ec 1046     	 mov r0,r2
 3778 00ee 1946     	 mov r1,r3
 3779 00f0 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
1100:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1101:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure dead time */
1102:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_DeadTimeInit(HandlePtr->phase_ptr[count]->slice_ptr, HandlePtr->deadtimeconfig
 3780              	 .loc 4 1102 0
 3781 00f4 7B68     	 ldr r3,[r7,#4]
 3782 00f6 7A69     	 ldr r2,[r7,#20]
 3783 00f8 0232     	 adds r2,r2,#2
 3784 00fa 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3785 00fe 1A68     	 ldr r2,[r3]
 3786 0100 7B68     	 ldr r3,[r7,#4]
 3787 0102 DB6E     	 ldr r3,[r3,#108]
 3788 0104 1046     	 mov r0,r2
 3789 0106 1946     	 mov r1,r3
 3790 0108 FFF7FEFF 	 bl XMC_CCU8_SLICE_DeadTimeInit
1103:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1104:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Configure external start to event 0 */
1105:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[count]->slice_ptr,
 3791              	 .loc 4 1105 0
 3792 010c 7B68     	 ldr r3,[r7,#4]
 3793 010e 7A69     	 ldr r2,[r7,#20]
 3794 0110 0232     	 adds r2,r2,#2
 3795 0112 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3796 0116 1A68     	 ldr r2,[r3]
 3797 0118 7B68     	 ldr r3,[r7,#4]
 3798 011a 5B6E     	 ldr r3,[r3,#100]
 3799 011c 1046     	 mov r0,r2
 3800 011e 0121     	 movs r1,#1
 3801 0120 1A46     	 mov r2,r3
 3802 0122 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
1106:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_EVENT_t) XMC_CCU8_SLICE_EVENT_0, HandlePtr->startconfig_ptr);
1107:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* if trap is enabled, Enable Trap for all the three phases
1108:../Dave/Generated/PWM_SVM/pwm_svm.c ****        map the external trap functionality to event 2 */
1109:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint8_t) true == svmptr->enable_trap)
 3803              	 .loc 4 1109 0
 3804 0126 BB68     	 ldr r3,[r7,#8]
 3805 0128 93F84730 	 ldrb r3,[r3,#71]
 3806 012c 012B     	 cmp r3,#1
 3807 012e 21D1     	 bne .L101
1110:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1111:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_EVENT_
 3808              	 .loc 4 1111 0
 3809 0130 7B68     	 ldr r3,[r7,#4]
 3810 0132 7A69     	 ldr r2,[r7,#20]
 3811 0134 0232     	 adds r2,r2,#2
 3812 0136 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3813 013a 1A68     	 ldr r2,[r3]
 3814 013c 7B68     	 ldr r3,[r7,#4]
 3815 013e 1B6E     	 ldr r3,[r3,#96]
 3816 0140 1046     	 mov r0,r2
 3817 0142 0321     	 movs r1,#3
 3818 0144 1A46     	 mov r2,r3
 3819 0146 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
1112:../Dave/Generated/PWM_SVM/pwm_svm.c ****             HandlePtr->trapconfig_ptr);
1113:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_TrapConfig(HandlePtr->phase_ptr[count]->slice_ptr, svmptr->trap_exit_mode,
 3820              	 .loc 4 1113 0
 3821 014a 7B68     	 ldr r3,[r7,#4]
 3822 014c 7A69     	 ldr r2,[r7,#20]
 3823 014e 0232     	 adds r2,r2,#2
 3824 0150 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3825 0154 1968     	 ldr r1,[r3]
 3826 0156 BB68     	 ldr r3,[r7,#8]
 3827 0158 5A7C     	 ldrb r2,[r3,#17]
1114:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (bool)svmptr->trap_sync_pwm);
 3828              	 .loc 4 1114 0
 3829 015a BB68     	 ldr r3,[r7,#8]
 3830 015c 93F84830 	 ldrb r3,[r3,#72]
1113:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (bool)svmptr->trap_sync_pwm);
 3831              	 .loc 4 1113 0
 3832 0160 002B     	 cmp r3,#0
 3833 0162 14BF     	 ite ne
 3834 0164 0123     	 movne r3,#1
 3835 0166 0023     	 moveq r3,#0
 3836 0168 DBB2     	 uxtb r3,r3
 3837 016a 0846     	 mov r0,r1
 3838 016c 1146     	 mov r1,r2
 3839 016e 1A46     	 mov r2,r3
 3840 0170 FFF7FEFF 	 bl XMC_CCU8_SLICE_TrapConfig
 3841              	.L101:
1115:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1116:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1117:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program period  value of the timer  */
1118:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[count]->slice_ptr, (uint16_t) HandleP
 3842              	 .loc 4 1118 0 discriminator 2
 3843 0174 7B68     	 ldr r3,[r7,#4]
 3844 0176 7A69     	 ldr r2,[r7,#20]
 3845 0178 0232     	 adds r2,r2,#2
 3846 017a 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3847 017e 1A68     	 ldr r2,[r3]
 3848 0180 7B68     	 ldr r3,[r7,#4]
 3849 0182 D3F89C30 	 ldr r3,[r3,#156]
 3850 0186 9BB2     	 uxth r3,r3
 3851 0188 1046     	 mov r0,r2
 3852 018a 1946     	 mov r1,r3
 3853 018c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1119:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program timer compare value for channel 1 or channel 2*/
1120:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[count]->slice_ptr,
 3854              	 .loc 4 1120 0 discriminator 2
 3855 0190 7B68     	 ldr r3,[r7,#4]
 3856 0192 7A69     	 ldr r2,[r7,#20]
 3857 0194 0232     	 adds r2,r2,#2
 3858 0196 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3859 019a 1B68     	 ldr r3,[r3]
 3860 019c 1846     	 mov r0,r3
 3861 019e 0021     	 movs r1,#0
 3862 01a0 0022     	 movs r2,#0
 3863 01a2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
1121:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, 0U);
1122:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program timer compare value for channel 1 or channel 2*/
1123:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[count]->slice_ptr,
 3864              	 .loc 4 1123 0 discriminator 2
 3865 01a6 7B68     	 ldr r3,[r7,#4]
 3866 01a8 7A69     	 ldr r2,[r7,#20]
 3867 01aa 0232     	 adds r2,r2,#2
 3868 01ac 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3869 01b0 1B68     	 ldr r3,[r3]
 3870 01b2 1846     	 mov r0,r3
 3871 01b4 0121     	 movs r1,#1
 3872 01b6 0022     	 movs r2,#0
 3873 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
1124:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, 0U);
1125:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Configures status ST1, ST2 mapping to STy */
1126:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_ConfigureStatusBitOutput(HandlePtr->phase_ptr[count]->slice_ptr,
 3874              	 .loc 4 1126 0 discriminator 2
 3875 01bc 7B68     	 ldr r3,[r7,#4]
 3876 01be 7A69     	 ldr r2,[r7,#20]
 3877 01c0 0232     	 adds r2,r2,#2
 3878 01c2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3879 01c6 1968     	 ldr r1,[r3]
1127:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_st_map[count]);
 3880              	 .loc 4 1127 0 discriminator 2
 3881 01c8 7B68     	 ldr r3,[r7,#4]
 3882 01ca 1A68     	 ldr r2,[r3]
1126:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_st_map[count]);
 3883              	 .loc 4 1126 0 discriminator 2
 3884 01cc 7B69     	 ldr r3,[r7,#20]
 3885 01ce 1344     	 add r3,r3,r2
 3886 01d0 0833     	 adds r3,r3,#8
 3887 01d2 1B79     	 ldrb r3,[r3,#4]
 3888 01d4 0846     	 mov r0,r1
 3889 01d6 1946     	 mov r1,r3
 3890 01d8 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureStatusBitOutput
1128:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1129:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Bind period match event to an NVIC node  */
1130:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->phase_ptr[count]->slice_ptr->SRS |= svmptr->event_sr_selector[count];
 3891              	 .loc 4 1130 0 discriminator 2
 3892 01dc 7B68     	 ldr r3,[r7,#4]
 3893 01de 7A69     	 ldr r2,[r7,#20]
 3894 01e0 0232     	 adds r2,r2,#2
 3895 01e2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3896 01e6 1B68     	 ldr r3,[r3]
 3897 01e8 7A68     	 ldr r2,[r7,#4]
 3898 01ea 7969     	 ldr r1,[r7,#20]
 3899 01ec 0231     	 adds r1,r1,#2
 3900 01ee 52F82120 	 ldr r2,[r2,r1,lsl#2]
 3901 01f2 1268     	 ldr r2,[r2]
 3902 01f4 D2F8A810 	 ldr r1,[r2,#168]
 3903 01f8 BA68     	 ldr r2,[r7,#8]
 3904 01fa 7869     	 ldr r0,[r7,#20]
 3905 01fc 0A30     	 adds r0,r0,#10
 3906 01fe 52F82020 	 ldr r2,[r2,r0,lsl#2]
 3907 0202 0A43     	 orrs r2,r2,r1
 3908 0204 C3F8A820 	 str r2,[r3,#168]
1131:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1132:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* enable module clock by clearing idle bit*/
1133:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_EnableClock(HandlePtr->global_ptr, HandlePtr->phase_ptr[count]->slice_number);
 3909              	 .loc 4 1133 0 discriminator 2
 3910 0208 7B68     	 ldr r3,[r7,#4]
 3911 020a 5968     	 ldr r1,[r3,#4]
 3912 020c 7B68     	 ldr r3,[r7,#4]
 3913 020e 7A69     	 ldr r2,[r7,#20]
 3914 0210 0232     	 adds r2,r2,#2
 3915 0212 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3916 0216 1B79     	 ldrb r3,[r3,#4]
 3917 0218 0846     	 mov r0,r1
 3918 021a 1946     	 mov r1,r3
 3919 021c FFF7FEFF 	 bl XMC_CCU8_EnableClock
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3920              	 .loc 4 1097 0 discriminator 2
 3921 0220 7B69     	 ldr r3,[r7,#20]
 3922 0222 0133     	 adds r3,r3,#1
 3923 0224 7B61     	 str r3,[r7,#20]
 3924              	.L100:
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3925              	 .loc 4 1097 0 is_stmt 0 discriminator 1
 3926 0226 7B69     	 ldr r3,[r7,#20]
 3927 0228 022B     	 cmp r3,#2
 3928 022a 7FF657AF 	 bls .L102
1134:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1135:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1136:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lEnableEvent(HandlePtr);
 3929              	 .loc 4 1136 0 is_stmt 1
 3930 022e 7868     	 ldr r0,[r7,#4]
 3931 0230 FFF7FEFF 	 bl PWM_SVM_lEnableEvent
1137:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1138:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Current trigger slice configurations */
1139:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
1140:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t)PWM_SVM_NONE != svmptr->current_measurement)
1141:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1142:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lCurrentTrigSliceInit(HandlePtr);
1143:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1144:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1145:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1146:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if defined (MATH)
1147:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Ungate Math coprocessor*/
1148:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MATH);
1149:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1150:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1151:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, svmptr->shadow_transfer_mask);
 3932              	 .loc 4 1151 0
 3933 0234 7B68     	 ldr r3,[r7,#4]
 3934 0236 5A68     	 ldr r2,[r3,#4]
 3935 0238 BB68     	 ldr r3,[r7,#8]
 3936 023a 5B6A     	 ldr r3,[r3,#36]
 3937 023c 1046     	 mov r0,r2
 3938 023e 1946     	 mov r1,r3
 3939 0240 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1152:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1153:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* update dead time variable*/
1154:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_rising_edge = HandlePtr->deadtimeconfig_ptr->channel1_st_rising_edge_counte
 3940              	 .loc 4 1154 0
 3941 0244 7B68     	 ldr r3,[r7,#4]
 3942 0246 DB6E     	 ldr r3,[r3,#108]
 3943 0248 1B79     	 ldrb r3,[r3,#4]
 3944 024a 1A46     	 mov r2,r3
 3945 024c 7B68     	 ldr r3,[r7,#4]
 3946 024e C3F89420 	 str r2,[r3,#148]
1155:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_falling_edge = HandlePtr->deadtimeconfig_ptr->channel1_st_falling_edge_coun
 3947              	 .loc 4 1155 0
 3948 0252 7B68     	 ldr r3,[r7,#4]
 3949 0254 DB6E     	 ldr r3,[r3,#108]
 3950 0256 5B79     	 ldrb r3,[r3,#5]
 3951 0258 1A46     	 mov r2,r3
 3952 025a 7B68     	 ldr r3,[r7,#4]
 3953 025c C3F89820 	 str r2,[r3,#152]
1156:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_div = (XMC_CCU8_SLICE_DTC_DIV_t) HandlePtr->deadtimeconfig_ptr->div;
 3954              	 .loc 4 1156 0
 3955 0260 7B68     	 ldr r3,[r7,#4]
 3956 0262 DB6E     	 ldr r3,[r3,#108]
 3957 0264 1B78     	 ldrb r3,[r3]
 3958 0266 C3F38113 	 ubfx r3,r3,#6,#2
 3959 026a DBB2     	 uxtb r3,r3
 3960 026c 1A46     	 mov r2,r3
 3961 026e 7B68     	 ldr r3,[r7,#4]
 3962 0270 83F89120 	 strb r2,[r3,#145]
1157:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1158:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_STATUS_t) PWM_SVM_STATUS_FAILURE != status)
 3963              	 .loc 4 1158 0
 3964 0274 FB7B     	 ldrb r3,[r7,#15]
 3965 0276 012B     	 cmp r3,#1
 3966 0278 06D0     	 beq .L103
1159:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1160:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_SUCCESS;
 3967              	 .loc 4 1160 0
 3968 027a 0023     	 movs r3,#0
 3969 027c FB73     	 strb r3,[r7,#15]
1161:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->state = (PWM_SVM_STATE_t) PWM_SVM_INITIALIZED;
 3970              	 .loc 4 1161 0
 3971 027e 7B68     	 ldr r3,[r7,#4]
 3972 0280 0122     	 movs r2,#1
 3973 0282 83F89020 	 strb r2,[r3,#144]
 3974 0286 01E0     	 b .L95
 3975              	.L103:
1162:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1163:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1164:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1165:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_FAILURE;
 3976              	 .loc 4 1165 0
 3977 0288 0123     	 movs r3,#1
 3978 028a FB73     	 strb r3,[r7,#15]
 3979              	.L95:
1166:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1167:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1168:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1169:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 3980              	 .loc 4 1169 0
 3981 028c FB7B     	 ldrb r3,[r7,#15]
1170:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3982              	 .loc 4 1170 0
 3983 028e 1846     	 mov r0,r3
 3984 0290 1837     	 adds r7,r7,#24
 3985              	.LCFI162:
 3986              	 .cfi_def_cfa_offset 8
 3987 0292 BD46     	 mov sp,r7
 3988              	.LCFI163:
 3989              	 .cfi_def_cfa_register 13
 3990              	 
 3991 0294 80BD     	 pop {r7,pc}
 3992              	 .cfi_endproc
 3993              	.LFE250:
 3995 0296 00BF     	 .section .text.PWM_SVM_Start,"ax",%progbits
 3996              	 .align 2
 3997              	 .global PWM_SVM_Start
 3998              	 .thumb
 3999              	 .thumb_func
 4001              	PWM_SVM_Start:
 4002              	.LFB251:
1171:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1172:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1173:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function starts the CCU8 slices used to generate SVM.
1174:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1175:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Start(PWM_SVM_t* const HandlePtr)
1176:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4003              	 .loc 4 1176 0
 4004              	 .cfi_startproc
 4005              	 
 4006              	 
 4007 0000 80B5     	 push {r7,lr}
 4008              	.LCFI164:
 4009              	 .cfi_def_cfa_offset 8
 4010              	 .cfi_offset 7,-8
 4011              	 .cfi_offset 14,-4
 4012 0002 84B0     	 sub sp,sp,#16
 4013              	.LCFI165:
 4014              	 .cfi_def_cfa_offset 24
 4015 0004 00AF     	 add r7,sp,#0
 4016              	.LCFI166:
 4017              	 .cfi_def_cfa_register 7
 4018 0006 7860     	 str r0,[r7,#4]
1177:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count = 0U;
 4019              	 .loc 4 1177 0
 4020 0008 0023     	 movs r3,#0
 4021 000a FB60     	 str r3,[r7,#12]
1178:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4022              	 .loc 4 1178 0
 4023 000c 7B68     	 ldr r3,[r7,#4]
 4024 000e 1B68     	 ldr r3,[r3]
 4025 0010 BB60     	 str r3,[r7,#8]
1179:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Start:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1180:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 4026              	 .loc 4 1180 0
 4027 0012 7B68     	 ldr r3,[r7,#4]
 4028 0014 93F89030 	 ldrb r3,[r3,#144]
 4029 0018 012B     	 cmp r3,#1
 4030 001a 05D0     	 beq .L106
1181:../Dave/Generated/PWM_SVM/pwm_svm.c ****       || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 4031              	 .loc 4 1181 0
 4032 001c 7B68     	 ldr r3,[r7,#4]
 4033 001e 93F89030 	 ldrb r3,[r3,#144]
 4034 0022 032B     	 cmp r3,#3
 4035 0024 40F03381 	 bne .L105
 4036              	.L106:
1182:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1183:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = 0U;
 4037              	 .loc 4 1183 0
 4038 0028 7B68     	 ldr r3,[r7,#4]
 4039 002a 0022     	 movs r2,#0
 4040 002c A3F8AE20 	 strh r2,[r3,#174]
1184:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = 0U;
 4041              	 .loc 4 1184 0
 4042 0030 7B68     	 ldr r3,[r7,#4]
 4043 0032 0022     	 movs r2,#0
 4044 0034 A3F8B020 	 strh r2,[r3,#176]
1185:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 4045              	 .loc 4 1185 0
 4046 0038 7B68     	 ldr r3,[r7,#4]
 4047 003a 0022     	 movs r2,#0
 4048 003c A3F8B220 	 strh r2,[r3,#178]
1186:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = 0U;
 4049              	 .loc 4 1186 0
 4050 0040 7B68     	 ldr r3,[r7,#4]
 4051 0042 0022     	 movs r2,#0
 4052 0044 A3F8B420 	 strh r2,[r3,#180]
1187:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = 0U;
 4053              	 .loc 4 1187 0
 4054 0048 7B68     	 ldr r3,[r7,#4]
 4055 004a 0022     	 movs r2,#0
 4056 004c A3F8B620 	 strh r2,[r3,#182]
1188:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = 0U;
 4057              	 .loc 4 1188 0
 4058 0050 7B68     	 ldr r3,[r7,#4]
 4059 0052 0022     	 movs r2,#0
 4060 0054 A3F8B820 	 strh r2,[r3,#184]
1189:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta2 = 0U;
 4061              	 .loc 4 1189 0
 4062 0058 7B68     	 ldr r3,[r7,#4]
 4063 005a 0022     	 movs r2,#0
 4064 005c A3F8BA20 	 strh r2,[r3,#186]
1190:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = 0U;
 4065              	 .loc 4 1190 0
 4066 0060 7B68     	 ldr r3,[r7,#4]
 4067 0062 0022     	 movs r2,#0
 4068 0064 A3F8BC20 	 strh r2,[r3,#188]
1191:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->sector = 0U;
 4069              	 .loc 4 1191 0
 4070 0068 7B68     	 ldr r3,[r7,#4]
 4071 006a 0022     	 movs r2,#0
 4072 006c C3F8A420 	 str r2,[r3,#164]
1192:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->subsector = 0U;
 4073              	 .loc 4 1192 0
 4074 0070 7B68     	 ldr r3,[r7,#4]
 4075 0072 0022     	 movs r2,#0
 4076 0074 A3F8C020 	 strh r2,[r3,#192]
1193:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1194:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable Inverter*/
1195:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_InverterEnable(HandlePtr);
 4077              	 .loc 4 1195 0
 4078 0078 7868     	 ldr r0,[r7,#4]
 4079 007a FFF7FEFF 	 bl PWM_SVM_InverterEnable
1196:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4080              	 .loc 4 1197 0
 4081 007e 0023     	 movs r3,#0
 4082 0080 FB60     	 str r3,[r7,#12]
 4083 0082 26E0     	 b .L108
 4084              	.L110:
1198:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1199:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* if trap is enabled, Enable Trap for all the three phases
1200:../Dave/Generated/PWM_SVM/pwm_svm.c ****        map the external trap functionality to event 2 */
1201:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint8_t) true == svmptr->enable_trap)
 4085              	 .loc 4 1201 0
 4086 0084 BB68     	 ldr r3,[r7,#8]
 4087 0086 93F84730 	 ldrb r3,[r3,#71]
 4088 008a 012B     	 cmp r3,#1
 4089 008c 13D1     	 bne .L109
1202:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1203:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVE
 4090              	 .loc 4 1203 0
 4091 008e 7B68     	 ldr r3,[r7,#4]
 4092 0090 FA68     	 ldr r2,[r7,#12]
 4093 0092 0232     	 adds r2,r2,#2
 4094 0094 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4095 0098 1B68     	 ldr r3,[r3]
 4096 009a 1846     	 mov r0,r3
 4097 009c 0A21     	 movs r1,#10
 4098 009e FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1204:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRA
 4099              	 .loc 4 1204 0
 4100 00a2 7B68     	 ldr r3,[r7,#4]
 4101 00a4 FA68     	 ldr r2,[r7,#12]
 4102 00a6 0232     	 adds r2,r2,#2
 4103 00a8 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4104 00ac 1B68     	 ldr r3,[r3]
 4105 00ae 1846     	 mov r0,r3
 4106 00b0 0B21     	 movs r1,#11
 4107 00b2 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 4108              	.L109:
1205:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1206:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure the Start trigger function*/
1207:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[count]->slice_ptr,
 4109              	 .loc 4 1207 0 discriminator 2
 4110 00b6 7B68     	 ldr r3,[r7,#4]
 4111 00b8 FA68     	 ldr r2,[r7,#12]
 4112 00ba 0232     	 adds r2,r2,#2
 4113 00bc 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4114 00c0 1B68     	 ldr r3,[r3]
 4115 00c2 1846     	 mov r0,r3
 4116 00c4 0121     	 movs r1,#1
 4117 00c6 0122     	 movs r2,#1
 4118 00c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4119              	 .loc 4 1197 0 discriminator 2
 4120 00cc FB68     	 ldr r3,[r7,#12]
 4121 00ce 0133     	 adds r3,r3,#1
 4122 00d0 FB60     	 str r3,[r7,#12]
 4123              	.L108:
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4124              	 .loc 4 1197 0 is_stmt 0 discriminator 1
 4125 00d2 FB68     	 ldr r3,[r7,#12]
 4126 00d4 022B     	 cmp r3,#2
 4127 00d6 D5D9     	 bls .L110
1208:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_EVENT_t) XMC_CCU8_SLICE_EVENT_0,
1209:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1210:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1211:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1212:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((uint8_t) true == svmptr->enable_trap)
 4128              	 .loc 4 1212 0 is_stmt 1
 4129 00d8 BB68     	 ldr r3,[r7,#8]
 4130 00da 93F84730 	 ldrb r3,[r3,#71]
 4131 00de 012B     	 cmp r3,#1
 4132 00e0 29D1     	 bne .L111
1213:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1214:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase u out 0 and 1*/
1215:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[0]->slice_ptr,
 4133              	 .loc 4 1215 0
 4134 00e2 7B68     	 ldr r3,[r7,#4]
 4135 00e4 9B68     	 ldr r3,[r3,#8]
 4136 00e6 1A68     	 ldr r2,[r3]
1216:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4137              	 .loc 4 1216 0
 4138 00e8 BB68     	 ldr r3,[r7,#8]
 4139 00ea 1B7D     	 ldrb r3,[r3,#20]
 4140 00ec 1946     	 mov r1,r3
 4141 00ee BB68     	 ldr r3,[r7,#8]
 4142 00f0 1B7D     	 ldrb r3,[r3,#20]
 4143 00f2 5B00     	 lsls r3,r3,#1
1215:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4144              	 .loc 4 1215 0
 4145 00f4 0B43     	 orrs r3,r3,r1
 4146 00f6 1046     	 mov r0,r2
 4147 00f8 1946     	 mov r1,r3
 4148 00fa FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
1217:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1218:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase v out 0 and 1*/
1219:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[1]->slice_ptr,
 4149              	 .loc 4 1219 0
 4150 00fe 7B68     	 ldr r3,[r7,#4]
 4151 0100 DB68     	 ldr r3,[r3,#12]
 4152 0102 1A68     	 ldr r2,[r3]
1220:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4153              	 .loc 4 1220 0
 4154 0104 BB68     	 ldr r3,[r7,#8]
 4155 0106 5B7D     	 ldrb r3,[r3,#21]
 4156 0108 1946     	 mov r1,r3
 4157 010a BB68     	 ldr r3,[r7,#8]
 4158 010c 5B7D     	 ldrb r3,[r3,#21]
 4159 010e 5B00     	 lsls r3,r3,#1
1219:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4160              	 .loc 4 1219 0
 4161 0110 0B43     	 orrs r3,r3,r1
 4162 0112 1046     	 mov r0,r2
 4163 0114 1946     	 mov r1,r3
 4164 0116 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
1221:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1222:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase w out 0 and 1*/
1223:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[2]->slice_ptr,
 4165              	 .loc 4 1223 0
 4166 011a 7B68     	 ldr r3,[r7,#4]
 4167 011c 1B69     	 ldr r3,[r3,#16]
 4168 011e 1A68     	 ldr r2,[r3]
1224:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4169              	 .loc 4 1224 0
 4170 0120 BB68     	 ldr r3,[r7,#8]
 4171 0122 9B7D     	 ldrb r3,[r3,#22]
 4172 0124 1946     	 mov r1,r3
 4173 0126 BB68     	 ldr r3,[r7,#8]
 4174 0128 9B7D     	 ldrb r3,[r3,#22]
 4175 012a 5B00     	 lsls r3,r3,#1
1223:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4176              	 .loc 4 1223 0
 4177 012c 0B43     	 orrs r3,r3,r1
 4178 012e 1046     	 mov r0,r2
 4179 0130 1946     	 mov r1,r3
 4180 0132 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
 4181              	.L111:
1225:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1226:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1227:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*enable module clock by clearing idle bit if any of current measurement is selected */
1228:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4182              	 .loc 4 1228 0
 4183 0136 BB68     	 ldr r3,[r7,#8]
 4184 0138 1B7C     	 ldrb r3,[r3,#16]
 4185 013a 002B     	 cmp r3,#0
 4186 013c 75D0     	 beq .L112
1229:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1230:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_C
 4187              	 .loc 4 1230 0
 4188 013e 7B68     	 ldr r3,[r7,#4]
 4189 0140 5B69     	 ldr r3,[r3,#20]
 4190 0142 1B68     	 ldr r3,[r3]
 4191 0144 1846     	 mov r0,r3
 4192 0146 0121     	 movs r1,#1
 4193 0148 0122     	 movs r2,#1
 4194 014a FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1231:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1232:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1233:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* offset for current measurement trigger */
1234:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == svmptr->current_measurement)
 4195              	 .loc 4 1234 0
 4196 014e BB68     	 ldr r3,[r7,#8]
 4197 0150 1B7C     	 ldrb r3,[r3,#16]
 4198 0152 012B     	 cmp r3,#1
 4199 0154 33D1     	 bne .L113
1235:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1236:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[0]->slice_ptr,
 4200              	 .loc 4 1236 0
 4201 0156 7B68     	 ldr r3,[r7,#4]
 4202 0158 9B68     	 ldr r3,[r3,#8]
 4203 015a 1968     	 ldr r1,[r3]
1237:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4204              	 .loc 4 1237 0
 4205 015c 7B68     	 ldr r3,[r7,#4]
 4206 015e B3F8C230 	 ldrh r3,[r3,#194]
 4207 0162 5B08     	 lsrs r3,r3,#1
 4208 0164 9AB2     	 uxth r2,r3
 4209 0166 BB68     	 ldr r3,[r7,#8]
 4210 0168 B3F84030 	 ldrh r3,[r3,#64]
1236:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4211              	 .loc 4 1236 0
 4212 016c 1344     	 add r3,r3,r2
 4213 016e 9BB2     	 uxth r3,r3
 4214 0170 0846     	 mov r0,r1
 4215 0172 1946     	 mov r1,r3
 4216 0174 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1238:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4217              	 .loc 4 1238 0
 4218 0178 7B68     	 ldr r3,[r7,#4]
 4219 017a DB68     	 ldr r3,[r3,#12]
 4220 017c 1968     	 ldr r1,[r3]
1239:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4221              	 .loc 4 1239 0
 4222 017e 7B68     	 ldr r3,[r7,#4]
 4223 0180 B3F8C230 	 ldrh r3,[r3,#194]
 4224 0184 5B08     	 lsrs r3,r3,#1
 4225 0186 9AB2     	 uxth r2,r3
 4226 0188 BB68     	 ldr r3,[r7,#8]
 4227 018a B3F84030 	 ldrh r3,[r3,#64]
1238:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4228              	 .loc 4 1238 0
 4229 018e 1344     	 add r3,r3,r2
 4230 0190 9BB2     	 uxth r3,r3
 4231 0192 0846     	 mov r0,r1
 4232 0194 1946     	 mov r1,r3
 4233 0196 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1240:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4234              	 .loc 4 1240 0
 4235 019a 7B68     	 ldr r3,[r7,#4]
 4236 019c 1B69     	 ldr r3,[r3,#16]
 4237 019e 1968     	 ldr r1,[r3]
1241:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4238              	 .loc 4 1241 0
 4239 01a0 7B68     	 ldr r3,[r7,#4]
 4240 01a2 B3F8C230 	 ldrh r3,[r3,#194]
 4241 01a6 5B08     	 lsrs r3,r3,#1
 4242 01a8 9AB2     	 uxth r2,r3
 4243 01aa BB68     	 ldr r3,[r7,#8]
 4244 01ac B3F84030 	 ldrh r3,[r3,#64]
1240:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4245              	 .loc 4 1240 0
 4246 01b0 1344     	 add r3,r3,r2
 4247 01b2 9BB2     	 uxth r3,r3
 4248 01b4 0846     	 mov r0,r1
 4249 01b6 1946     	 mov r1,r3
 4250 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
 4251 01bc 35E0     	 b .L112
 4252              	.L113:
1242:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1243:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else
1244:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[0]->slice_ptr,
 4253              	 .loc 4 1245 0
 4254 01be 7B68     	 ldr r3,[r7,#4]
 4255 01c0 9B68     	 ldr r3,[r3,#8]
 4256 01c2 1968     	 ldr r1,[r3]
1246:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4257              	 .loc 4 1246 0
 4258 01c4 7B68     	 ldr r3,[r7,#4]
 4259 01c6 D3F89430 	 ldr r3,[r3,#148]
 4260 01ca 9BB2     	 uxth r3,r3
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4261              	 .loc 4 1245 0
 4262 01cc DBB2     	 uxtb r3,r3
 4263 01ce 9AB2     	 uxth r2,r3
1247:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4264              	 .loc 4 1247 0
 4265 01d0 BB68     	 ldr r3,[r7,#8]
 4266 01d2 B3F84030 	 ldrh r3,[r3,#64]
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4267              	 .loc 4 1245 0
 4268 01d6 1344     	 add r3,r3,r2
 4269 01d8 9BB2     	 uxth r3,r3
 4270 01da 0846     	 mov r0,r1
 4271 01dc 1946     	 mov r1,r3
 4272 01de FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4273              	 .loc 4 1248 0
 4274 01e2 7B68     	 ldr r3,[r7,#4]
 4275 01e4 DB68     	 ldr r3,[r3,#12]
 4276 01e6 1968     	 ldr r1,[r3]
1249:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4277              	 .loc 4 1249 0
 4278 01e8 7B68     	 ldr r3,[r7,#4]
 4279 01ea D3F89430 	 ldr r3,[r3,#148]
 4280 01ee 9BB2     	 uxth r3,r3
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4281              	 .loc 4 1248 0
 4282 01f0 DBB2     	 uxtb r3,r3
 4283 01f2 9AB2     	 uxth r2,r3
1250:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4284              	 .loc 4 1250 0
 4285 01f4 BB68     	 ldr r3,[r7,#8]
 4286 01f6 B3F84030 	 ldrh r3,[r3,#64]
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4287              	 .loc 4 1248 0
 4288 01fa 1344     	 add r3,r3,r2
 4289 01fc 9BB2     	 uxth r3,r3
 4290 01fe 0846     	 mov r0,r1
 4291 0200 1946     	 mov r1,r3
 4292 0202 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4293              	 .loc 4 1251 0
 4294 0206 7B68     	 ldr r3,[r7,#4]
 4295 0208 1B69     	 ldr r3,[r3,#16]
 4296 020a 1968     	 ldr r1,[r3]
1252:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge ) & (uint16_t) 0xFF)
 4297              	 .loc 4 1252 0
 4298 020c 7B68     	 ldr r3,[r7,#4]
 4299 020e D3F89430 	 ldr r3,[r3,#148]
 4300 0212 9BB2     	 uxth r3,r3
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4301              	 .loc 4 1251 0
 4302 0214 DBB2     	 uxtb r3,r3
 4303 0216 9AB2     	 uxth r2,r3
1253:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4304              	 .loc 4 1253 0
 4305 0218 BB68     	 ldr r3,[r7,#8]
 4306 021a B3F84030 	 ldrh r3,[r3,#64]
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4307              	 .loc 4 1251 0
 4308 021e 1344     	 add r3,r3,r2
 4309 0220 9BB2     	 uxth r3,r3
 4310 0222 0846     	 mov r0,r1
 4311 0224 1946     	 mov r1,r3
 4312 0226 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
 4313              	.L112:
1254:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1255:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1256:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1257:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* synchronous start of CCU8 slices */
1258:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_SCU_SetCcuTriggerHigh((uint32_t)(svmptr->sync_start_mask));
 4314              	 .loc 4 1258 0
 4315 022a BB68     	 ldr r3,[r7,#8]
 4316 022c 1B6A     	 ldr r3,[r3,#32]
 4317 022e 1846     	 mov r0,r3
 4318 0230 FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerHigh
1259:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1260:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* disable the Start trigger function*/
1261:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[0]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4319              	 .loc 4 1261 0
 4320 0234 7B68     	 ldr r3,[r7,#4]
 4321 0236 9B68     	 ldr r3,[r3,#8]
 4322 0238 1B68     	 ldr r3,[r3]
 4323 023a 1846     	 mov r0,r3
 4324 023c 0021     	 movs r1,#0
 4325 023e 0122     	 movs r2,#1
 4326 0240 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1262:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1263:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[1]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4327              	 .loc 4 1263 0
 4328 0244 7B68     	 ldr r3,[r7,#4]
 4329 0246 DB68     	 ldr r3,[r3,#12]
 4330 0248 1B68     	 ldr r3,[r3]
 4331 024a 1846     	 mov r0,r3
 4332 024c 0021     	 movs r1,#0
 4333 024e 0122     	 movs r2,#1
 4334 0250 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1264:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1265:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[2]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4335              	 .loc 4 1265 0
 4336 0254 7B68     	 ldr r3,[r7,#4]
 4337 0256 1B69     	 ldr r3,[r3,#16]
 4338 0258 1B68     	 ldr r3,[r3]
 4339 025a 1846     	 mov r0,r3
 4340 025c 0021     	 movs r1,#0
 4341 025e 0122     	 movs r2,#1
 4342 0260 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1266:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1267:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4343              	 .loc 4 1267 0
 4344 0264 BB68     	 ldr r3,[r7,#8]
 4345 0266 1B7C     	 ldrb r3,[r3,#16]
 4346 0268 002B     	 cmp r3,#0
 4347 026a 07D0     	 beq .L114
1268:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1269:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_C
 4348              	 .loc 4 1269 0
 4349 026c 7B68     	 ldr r3,[r7,#4]
 4350 026e 5B69     	 ldr r3,[r3,#20]
 4351 0270 1B68     	 ldr r3,[r3]
 4352 0272 1846     	 mov r0,r3
 4353 0274 0021     	 movs r1,#0
 4354 0276 0122     	 movs r2,#1
 4355 0278 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
 4356              	.L114:
1270:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1271:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1272:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1273:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* disable synchronous start of CCU8 slices */
1274:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_SCU_SetCcuTriggerLow((uint32_t)(svmptr->sync_start_mask));
 4357              	 .loc 4 1274 0
 4358 027c BB68     	 ldr r3,[r7,#8]
 4359 027e 1B6A     	 ldr r3,[r3,#32]
 4360 0280 1846     	 mov r0,r3
 4361 0282 FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerLow
1275:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1276:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* change the state to RUNNING*/
1277:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->state = PWM_SVM_RUNNING;
 4362              	 .loc 4 1277 0
 4363 0286 7B68     	 ldr r3,[r7,#4]
 4364 0288 0222     	 movs r2,#2
 4365 028a 83F89020 	 strb r2,[r3,#144]
 4366              	.L105:
1278:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1279:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4367              	 .loc 4 1279 0
 4368 028e 1037     	 adds r7,r7,#16
 4369              	.LCFI167:
 4370              	 .cfi_def_cfa_offset 8
 4371 0290 BD46     	 mov sp,r7
 4372              	.LCFI168:
 4373              	 .cfi_def_cfa_register 13
 4374              	 
 4375 0292 80BD     	 pop {r7,pc}
 4376              	 .cfi_endproc
 4377              	.LFE251:
 4379              	 .section .text.PWM_SVM_Stop,"ax",%progbits
 4380              	 .align 2
 4381              	 .global PWM_SVM_Stop
 4382              	 .thumb
 4383              	 .thumb_func
 4385              	PWM_SVM_Stop:
 4386              	.LFB252:
1280:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1281:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1282:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function stops the CCU8 slices used to generate SVM.
1283:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1284:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Stop(PWM_SVM_t* const HandlePtr)
1285:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4387              	 .loc 4 1285 0
 4388              	 .cfi_startproc
 4389              	 
 4390              	 
 4391 0000 80B5     	 push {r7,lr}
 4392              	.LCFI169:
 4393              	 .cfi_def_cfa_offset 8
 4394              	 .cfi_offset 7,-8
 4395              	 .cfi_offset 14,-4
 4396 0002 84B0     	 sub sp,sp,#16
 4397              	.LCFI170:
 4398              	 .cfi_def_cfa_offset 24
 4399 0004 00AF     	 add r7,sp,#0
 4400              	.LCFI171:
 4401              	 .cfi_def_cfa_register 7
 4402 0006 7860     	 str r0,[r7,#4]
1286:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1287:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4403              	 .loc 4 1287 0
 4404 0008 7B68     	 ldr r3,[r7,#4]
 4405 000a 1B68     	 ldr r3,[r3]
 4406 000c BB60     	 str r3,[r7,#8]
1288:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Stop:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1289:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin level is set to passive level.*/
1290:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_InverterDisable(HandlePtr);
 4407              	 .loc 4 1290 0
 4408 000e 7868     	 ldr r0,[r7,#4]
 4409 0010 FFF7FEFF 	 bl PWM_SVM_InverterDisable
1291:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1292:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Disable trap */
1293:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) 1 == svmptr->enable_trap)
 4410              	 .loc 4 1293 0
 4411 0014 BB68     	 ldr r3,[r7,#8]
 4412 0016 93F84730 	 ldrb r3,[r3,#71]
 4413 001a 012B     	 cmp r3,#1
 4414 001c 3ED1     	 bne .L116
1294:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1295:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase u out 0 and 1*/
1296:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[0]->slice_ptr,
 4415              	 .loc 4 1296 0
 4416 001e 7B68     	 ldr r3,[r7,#4]
 4417 0020 9B68     	 ldr r3,[r3,#8]
 4418 0022 1A68     	 ldr r2,[r3]
1297:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4419              	 .loc 4 1297 0
 4420 0024 BB68     	 ldr r3,[r7,#8]
 4421 0026 1B7D     	 ldrb r3,[r3,#20]
 4422 0028 1946     	 mov r1,r3
 4423 002a BB68     	 ldr r3,[r7,#8]
 4424 002c 1B7D     	 ldrb r3,[r3,#20]
 4425 002e 5B00     	 lsls r3,r3,#1
1296:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4426              	 .loc 4 1296 0
 4427 0030 0B43     	 orrs r3,r3,r1
 4428 0032 1046     	 mov r0,r2
 4429 0034 1946     	 mov r1,r3
 4430 0036 FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1298:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1299:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase v out 0 and 1*/
1300:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[1]->slice_ptr,
 4431              	 .loc 4 1300 0
 4432 003a 7B68     	 ldr r3,[r7,#4]
 4433 003c DB68     	 ldr r3,[r3,#12]
 4434 003e 1A68     	 ldr r2,[r3]
1301:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4435              	 .loc 4 1301 0
 4436 0040 BB68     	 ldr r3,[r7,#8]
 4437 0042 5B7D     	 ldrb r3,[r3,#21]
 4438 0044 1946     	 mov r1,r3
 4439 0046 BB68     	 ldr r3,[r7,#8]
 4440 0048 5B7D     	 ldrb r3,[r3,#21]
 4441 004a 5B00     	 lsls r3,r3,#1
1300:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4442              	 .loc 4 1300 0
 4443 004c 0B43     	 orrs r3,r3,r1
 4444 004e 1046     	 mov r0,r2
 4445 0050 1946     	 mov r1,r3
 4446 0052 FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1302:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1303:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase w out 0 and 1*/
1304:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[2]->slice_ptr,
 4447              	 .loc 4 1304 0
 4448 0056 7B68     	 ldr r3,[r7,#4]
 4449 0058 1B69     	 ldr r3,[r3,#16]
 4450 005a 1A68     	 ldr r2,[r3]
1305:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4451              	 .loc 4 1305 0
 4452 005c BB68     	 ldr r3,[r7,#8]
 4453 005e 9B7D     	 ldrb r3,[r3,#22]
 4454 0060 1946     	 mov r1,r3
 4455 0062 BB68     	 ldr r3,[r7,#8]
 4456 0064 9B7D     	 ldrb r3,[r3,#22]
 4457 0066 5B00     	 lsls r3,r3,#1
1304:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4458              	 .loc 4 1304 0
 4459 0068 0B43     	 orrs r3,r3,r1
 4460 006a 1046     	 mov r0,r2
 4461 006c 1946     	 mov r1,r3
 4462 006e FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1306:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1307:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[0]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4463              	 .loc 4 1307 0
 4464 0072 7B68     	 ldr r3,[r7,#4]
 4465 0074 9B68     	 ldr r3,[r3,#8]
 4466 0076 1B68     	 ldr r3,[r3]
 4467 0078 1846     	 mov r0,r3
 4468 007a 0B21     	 movs r1,#11
 4469 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1308:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[1]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4470              	 .loc 4 1308 0
 4471 0080 7B68     	 ldr r3,[r7,#4]
 4472 0082 DB68     	 ldr r3,[r3,#12]
 4473 0084 1B68     	 ldr r3,[r3]
 4474 0086 1846     	 mov r0,r3
 4475 0088 0B21     	 movs r1,#11
 4476 008a FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1309:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[2]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4477              	 .loc 4 1309 0
 4478 008e 7B68     	 ldr r3,[r7,#4]
 4479 0090 1B69     	 ldr r3,[r3,#16]
 4480 0092 1B68     	 ldr r3,[r3]
 4481 0094 1846     	 mov r0,r3
 4482 0096 0B21     	 movs r1,#11
 4483 0098 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 4484              	.L116:
1310:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1311:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1312:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* stop all three phases */
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4485              	 .loc 4 1313 0
 4486 009c 0023     	 movs r3,#0
 4487 009e FB60     	 str r3,[r7,#12]
 4488 00a0 0BE0     	 b .L117
 4489              	.L118:
1314:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1315:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StopTimer(HandlePtr->phase_ptr[count]->slice_ptr);
 4490              	 .loc 4 1315 0 discriminator 3
 4491 00a2 7B68     	 ldr r3,[r7,#4]
 4492 00a4 FA68     	 ldr r2,[r7,#12]
 4493 00a6 0232     	 adds r2,r2,#2
 4494 00a8 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4495 00ac 1B68     	 ldr r3,[r3]
 4496 00ae 1846     	 mov r0,r3
 4497 00b0 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 4498              	 .loc 4 1313 0 discriminator 3
 4499 00b4 FB68     	 ldr r3,[r7,#12]
 4500 00b6 0133     	 adds r3,r3,#1
 4501 00b8 FB60     	 str r3,[r7,#12]
 4502              	.L117:
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 4503              	 .loc 4 1313 0 is_stmt 0 discriminator 1
 4504 00ba FB68     	 ldr r3,[r7,#12]
 4505 00bc 022B     	 cmp r3,#2
 4506 00be F0D9     	 bls .L118
1316:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1317:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4507              	 .loc 4 1317 0 is_stmt 1
 4508 00c0 BB68     	 ldr r3,[r7,#8]
 4509 00c2 1B7C     	 ldrb r3,[r3,#16]
 4510 00c4 002B     	 cmp r3,#0
 4511 00c6 05D0     	 beq .L119
1318:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1319:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StopTimer(HandlePtr->phase_ptr[3]->slice_ptr);
 4512              	 .loc 4 1319 0
 4513 00c8 7B68     	 ldr r3,[r7,#4]
 4514 00ca 5B69     	 ldr r3,[r3,#20]
 4515 00cc 1B68     	 ldr r3,[r3]
 4516 00ce 1846     	 mov r0,r3
 4517 00d0 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 4518              	.L119:
1320:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1321:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1322:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_SCU_SetCcuTriggerLow((uint32_t) svmptr->sync_start_mask);
 4519              	 .loc 4 1322 0
 4520 00d4 BB68     	 ldr r3,[r7,#8]
 4521 00d6 1B6A     	 ldr r3,[r3,#32]
 4522 00d8 1846     	 mov r0,r3
 4523 00da FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerLow
1323:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->state = (PWM_SVM_STATE_t) PWM_SVM_STOPPED;
 4524              	 .loc 4 1323 0
 4525 00de 7B68     	 ldr r3,[r7,#4]
 4526 00e0 0322     	 movs r2,#3
 4527 00e2 83F89020 	 strb r2,[r3,#144]
1324:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1325:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4528              	 .loc 4 1325 0
 4529 00e6 1037     	 adds r7,r7,#16
 4530              	.LCFI172:
 4531              	 .cfi_def_cfa_offset 8
 4532 00e8 BD46     	 mov sp,r7
 4533              	.LCFI173:
 4534              	 .cfi_def_cfa_register 13
 4535              	 
 4536 00ea 80BD     	 pop {r7,pc}
 4537              	 .cfi_endproc
 4538              	.LFE252:
 4540              	 .section .ram_code
 4541              	 .align 2
 4542              	 .global PWM_SVM_SVMUpdate
 4543              	 .thumb
 4544              	 .thumb_func
 4546              	PWM_SVM_SVMUpdate:
 4547              	.LFB253:
1326:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1327:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1328:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This is the SVM algorithm for sinusoidal commutation.
1329:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * It updates the compare registers of the CCU8 slices as per calculated
1330:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * duty cycle.
1331:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1332:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_SVMUpdate(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
1333:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4548              	 .loc 4 1333 0
 4549              	 .cfi_startproc
 4550              	 
 4551              	 
 4552 0400 80B5     	 push {r7,lr}
 4553              	.LCFI174:
 4554              	 .cfi_def_cfa_offset 8
 4555              	 .cfi_offset 7,-8
 4556              	 .cfi_offset 14,-4
 4557 0402 86B0     	 sub sp,sp,#24
 4558              	.LCFI175:
 4559              	 .cfi_def_cfa_offset 32
 4560 0404 00AF     	 add r7,sp,#0
 4561              	.LCFI176:
 4562              	 .cfi_def_cfa_register 7
 4563 0406 F860     	 str r0,[r7,#12]
 4564 0408 0B46     	 mov r3,r1
 4565 040a 7A60     	 str r2,[r7,#4]
 4566 040c 7B81     	 strh r3,[r7,#10]
1334:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4567              	 .loc 4 1334 0
 4568 040e FB68     	 ldr r3,[r7,#12]
 4569 0410 1B68     	 ldr r3,[r3]
 4570 0412 7B61     	 str r3,[r7,#20]
1335:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SVMUpdate:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1336:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1337:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*This function calculates segment time ta, tb using CORDIC or LUT as per UI configuration */
1338:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->seg_time_calc_ptr(HandlePtr, (uint16_t) Amplitude, (uint32_t) Angle);
 4571              	 .loc 4 1338 0
 4572 0414 FB68     	 ldr r3,[r7,#12]
 4573 0416 D3F88C30 	 ldr r3,[r3,#140]
 4574 041a 7A89     	 ldrh r2,[r7,#10]
 4575 041c F868     	 ldr r0,[r7,#12]
 4576 041e 1146     	 mov r1,r2
 4577 0420 7A68     	 ldr r2,[r7,#4]
 4578 0422 9847     	 blx r3
1339:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*This function calculates and updates compare values in compare register*/
1340:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->svm_schemesel_ptr(HandlePtr);
 4579              	 .loc 4 1340 0
 4580 0424 FB68     	 ldr r3,[r7,#12]
 4581 0426 D3F88830 	 ldr r3,[r3,#136]
 4582 042a F868     	 ldr r0,[r7,#12]
 4583 042c 9847     	 blx r3
1341:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1342:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the shadow transfer for all three slice*/
1343:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->global_ptr->GCSS |= svmptr->shadow_transfer_mask;
 4584              	 .loc 4 1343 0
 4585 042e FB68     	 ldr r3,[r7,#12]
 4586 0430 5B68     	 ldr r3,[r3,#4]
 4587 0432 FA68     	 ldr r2,[r7,#12]
 4588 0434 5268     	 ldr r2,[r2,#4]
 4589 0436 1169     	 ldr r1,[r2,#16]
 4590 0438 7A69     	 ldr r2,[r7,#20]
 4591 043a 526A     	 ldr r2,[r2,#36]
 4592 043c 0A43     	 orrs r2,r2,r1
 4593 043e 1A61     	 str r2,[r3,#16]
1344:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4594              	 .loc 4 1344 0
 4595 0440 1837     	 adds r7,r7,#24
 4596              	.LCFI177:
 4597              	 .cfi_def_cfa_offset 8
 4598 0442 BD46     	 mov sp,r7
 4599              	.LCFI178:
 4600              	 .cfi_def_cfa_register 13
 4601              	 
 4602 0444 80BD     	 pop {r7,pc}
 4603              	 .cfi_endproc
 4604              	.LFE253:
 4606 0446 00BF     	 .section .text.PWM_SVM_SetPWMFrequency,"ax",%progbits
 4607              	 .align 2
 4608              	 .global PWM_SVM_SetPWMFrequency
 4609              	 .thumb
 4610              	 .thumb_func
 4612              	PWM_SVM_SetPWMFrequency:
 4613              	.LFB254:
1345:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1346:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1347:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API updates the PWM Frequency in terms of hertz*/
1348:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetPWMFrequency(PWM_SVM_t* const HandlePtr, uint32_t Frequency)
1349:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4614              	 .loc 4 1349 0
 4615              	 .cfi_startproc
 4616              	 
 4617              	 
 4618 0000 80B5     	 push {r7,lr}
 4619              	.LCFI179:
 4620              	 .cfi_def_cfa_offset 8
 4621              	 .cfi_offset 7,-8
 4622              	 .cfi_offset 14,-4
 4623 0002 88B0     	 sub sp,sp,#32
 4624              	.LCFI180:
 4625              	 .cfi_def_cfa_offset 40
 4626 0004 00AF     	 add r7,sp,#0
 4627              	.LCFI181:
 4628              	 .cfi_def_cfa_register 7
 4629 0006 7860     	 str r0,[r7,#4]
 4630 0008 3960     	 str r1,[r7]
1350:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t pwm_time;
1351:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t period;
1352:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1353:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t max_amplitude_count;
1354:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_FAILURE;
 4631              	 .loc 4 1354 0
 4632 000a 0123     	 movs r3,#1
 4633 000c FB74     	 strb r3,[r7,#19]
1355:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4634              	 .loc 4 1355 0
 4635 000e 7B68     	 ldr r3,[r7,#4]
 4636 0010 1B68     	 ldr r3,[r3]
 4637 0012 FB60     	 str r3,[r7,#12]
1356:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetPWMFrequency:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1357:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1358:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 4638              	 .loc 4 1358 0
 4639 0014 7B68     	 ldr r3,[r7,#4]
 4640 0016 93F89030 	 ldrb r3,[r3,#144]
 4641 001a 012B     	 cmp r3,#1
 4642 001c 04D0     	 beq .L122
1359:../Dave/Generated/PWM_SVM/pwm_svm.c ****       || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 4643              	 .loc 4 1359 0
 4644 001e 7B68     	 ldr r3,[r7,#4]
 4645 0020 93F89030 	 ldrb r3,[r3,#144]
 4646 0024 032B     	 cmp r3,#3
 4647 0026 7ED1     	 bne .L123
 4648              	.L122:
1360:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1361:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((Frequency > HandlePtr->confighandle_ptr->period_min) && (Frequency <= HandlePtr->confighan
 4649              	 .loc 4 1361 0
 4650 0028 7B68     	 ldr r3,[r7,#4]
 4651 002a 1B68     	 ldr r3,[r3]
 4652 002c DA6B     	 ldr r2,[r3,#60]
 4653 002e 3B68     	 ldr r3,[r7]
 4654 0030 9A42     	 cmp r2,r3
 4655 0032 76D2     	 bcs .L124
 4656              	 .loc 4 1361 0 is_stmt 0 discriminator 1
 4657 0034 7B68     	 ldr r3,[r7,#4]
 4658 0036 1B68     	 ldr r3,[r3]
 4659 0038 9A6B     	 ldr r2,[r3,#56]
 4660 003a 3B68     	 ldr r3,[r7]
 4661 003c 9A42     	 cmp r2,r3
 4662 003e 70D3     	 bcc .L124
1362:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1363:../Dave/Generated/PWM_SVM/pwm_svm.c ****       pwm_time = (uint32_t)((svmptr->module_freq) / Frequency);
 4663              	 .loc 4 1363 0 is_stmt 1
 4664 0040 FB68     	 ldr r3,[r7,#12]
 4665 0042 DA69     	 ldr r2,[r3,#28]
 4666 0044 3B68     	 ldr r3,[r7]
 4667 0046 B2FBF3F3 	 udiv r3,r2,r3
 4668 004a BB60     	 str r3,[r7,#8]
1364:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1365:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == HandlePtr->phase_configinit_ptr->timer_m
 4669              	 .loc 4 1365 0
 4670 004c 7B68     	 ldr r3,[r7,#4]
 4671 004e 9B69     	 ldr r3,[r3,#24]
 4672 0050 1B78     	 ldrb r3,[r3]
 4673 0052 03F00103 	 and r3,r3,#1
 4674 0056 DBB2     	 uxtb r3,r3
 4675 0058 002B     	 cmp r3,#0
 4676 005a 03D1     	 bne .L125
1366:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1367:../Dave/Generated/PWM_SVM/pwm_svm.c ****         period = (uint32_t)(pwm_time - 1U);
 4677              	 .loc 4 1367 0
 4678 005c BB68     	 ldr r3,[r7,#8]
 4679 005e 013B     	 subs r3,r3,#1
 4680 0060 FB61     	 str r3,[r7,#28]
 4681 0062 03E0     	 b .L126
 4682              	.L125:
1368:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1369:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else /*CENTER_ALIGNED - hence half of the calculated period value is used*/
1370:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1371:../Dave/Generated/PWM_SVM/pwm_svm.c ****         period = (uint32_t)((pwm_time >> 1U) - 1U);
 4683              	 .loc 4 1371 0
 4684 0064 BB68     	 ldr r3,[r7,#8]
 4685 0066 5B08     	 lsrs r3,r3,#1
 4686 0068 013B     	 subs r3,r3,#1
 4687 006a FB61     	 str r3,[r7,#28]
 4688              	.L126:
1372:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1373:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*set max amplitude for pseudo null vector based on scheme*/
1374:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_SVMCONFIG_t) PWM_SVM_PSEUDONULL_3ACTIVE == HandlePtr->svm_config)
 4689              	 .loc 4 1374 0
 4690 006c 7B68     	 ldr r3,[r7,#4]
 4691 006e 93F89230 	 ldrb r3,[r3,#146]
 4692 0072 042B     	 cmp r3,#4
 4693 0074 0AD1     	 bne .L127
1375:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1376:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 
 4694              	 .loc 4 1376 0
 4695 0076 7B68     	 ldr r3,[r7,#4]
 4696 0078 B3F8C430 	 ldrh r3,[r3,#196]
 4697 007c 1A46     	 mov r2,r3
 4698 007e 1346     	 mov r3,r2
 4699 0080 5B00     	 lsls r3,r3,#1
 4700 0082 1344     	 add r3,r3,r2
 4701 0084 C3F58043 	 rsb r3,r3,#16384
 4702 0088 7B61     	 str r3,[r7,#20]
 4703 008a 13E0     	 b .L128
 4704              	.L127:
1377:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1378:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else if ((PWM_SVM_SVMCONFIG_t) PWM_SVM_PSEUDONULL_4ACTIVE == HandlePtr->svm_config)
 4705              	 .loc 4 1378 0
 4706 008c 7B68     	 ldr r3,[r7,#4]
 4707 008e 93F89230 	 ldrb r3,[r3,#146]
 4708 0092 052B     	 cmp r3,#5
 4709 0094 0BD1     	 bne .L129
1379:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1380:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 
 4710              	 .loc 4 1380 0
 4711 0096 7B68     	 ldr r3,[r7,#4]
 4712 0098 B3F8C430 	 ldrh r3,[r3,#196]
 4713 009c 1A46     	 mov r2,r3
 4714 009e 1346     	 mov r3,r2
 4715 00a0 9B07     	 lsls r3,r3,#30
 4716 00a2 9B1A     	 subs r3,r3,r2
 4717 00a4 9B00     	 lsls r3,r3,#2
 4718 00a6 03F58043 	 add r3,r3,#16384
 4719 00aa 7B61     	 str r3,[r7,#20]
 4720 00ac 02E0     	 b .L128
 4721              	.L129:
1381:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1382:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else
1383:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1384:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t) PWM_SVM_MAX_AMPLITUDE;
 4722              	 .loc 4 1384 0
 4723 00ae 4FF48043 	 mov r3,#16384
 4724 00b2 7B61     	 str r3,[r7,#20]
 4725              	.L128:
1385:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1386:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*update the calcualted period value in period register*/
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4726              	 .loc 4 1387 0
 4727 00b4 0023     	 movs r3,#0
 4728 00b6 BB61     	 str r3,[r7,#24]
 4729 00b8 0EE0     	 b .L130
 4730              	.L131:
1388:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1389:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[count]->slice_ptr, (uint16_t) perio
 4731              	 .loc 4 1389 0 discriminator 3
 4732 00ba 7B68     	 ldr r3,[r7,#4]
 4733 00bc BA69     	 ldr r2,[r7,#24]
 4734 00be 0232     	 adds r2,r2,#2
 4735 00c0 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4736 00c4 1A68     	 ldr r2,[r3]
 4737 00c6 FB69     	 ldr r3,[r7,#28]
 4738 00c8 9BB2     	 uxth r3,r3
 4739 00ca 1046     	 mov r0,r2
 4740 00cc 1946     	 mov r1,r3
 4741 00ce FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
 4742              	 .loc 4 1387 0 discriminator 3
 4743 00d2 BB69     	 ldr r3,[r7,#24]
 4744 00d4 0133     	 adds r3,r3,#1
 4745 00d6 BB61     	 str r3,[r7,#24]
 4746              	.L130:
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
 4747              	 .loc 4 1387 0 is_stmt 0 discriminator 1
 4748 00d8 BB69     	 ldr r3,[r7,#24]
 4749 00da 022B     	 cmp r3,#2
 4750 00dc EDD9     	 bls .L131
1390:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1391:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 4751              	 .loc 4 1391 0 is_stmt 1
 4752 00de 7B68     	 ldr r3,[r7,#4]
 4753 00e0 1B68     	 ldr r3,[r3]
 4754 00e2 1B7C     	 ldrb r3,[r3,#16]
 4755 00e4 002B     	 cmp r3,#0
 4756 00e6 08D0     	 beq .L132
1392:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1393:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) period);
 4757              	 .loc 4 1393 0
 4758 00e8 7B68     	 ldr r3,[r7,#4]
 4759 00ea 5B69     	 ldr r3,[r3,#20]
 4760 00ec 1A68     	 ldr r2,[r3]
 4761 00ee FB69     	 ldr r3,[r7,#28]
 4762 00f0 9BB2     	 uxth r3,r3
 4763 00f2 1046     	 mov r0,r2
 4764 00f4 1946     	 mov r1,r3
 4765 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 4766              	.L132:
1394:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1395:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1396:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Enable the shadow transfer for all three slice*/
1397:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, svmptr->shadow_transfer_mask);
 4767              	 .loc 4 1397 0
 4768 00fa 7B68     	 ldr r3,[r7,#4]
 4769 00fc 5A68     	 ldr r2,[r3,#4]
 4770 00fe FB68     	 ldr r3,[r7,#12]
 4771 0100 5B6A     	 ldr r3,[r3,#36]
 4772 0102 1046     	 mov r0,r2
 4773 0104 1946     	 mov r1,r3
 4774 0106 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1398:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* update dynamic handle parameters */
1399:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->period = (uint32_t) period;
 4775              	 .loc 4 1399 0
 4776 010a 7B68     	 ldr r3,[r7,#4]
 4777 010c FA69     	 ldr r2,[r7,#28]
 4778 010e C3F89C20 	 str r2,[r3,#156]
1400:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->max_amplitude = (uint16_t) max_amplitude_count;
 4779              	 .loc 4 1400 0
 4780 0112 7B69     	 ldr r3,[r7,#20]
 4781 0114 9AB2     	 uxth r2,r3
 4782 0116 7B68     	 ldr r3,[r7,#4]
 4783 0118 A3F8C620 	 strh r2,[r3,#198]
1401:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_SUCCESS;
 4784              	 .loc 4 1401 0
 4785 011c 0023     	 movs r3,#0
 4786 011e FB74     	 strb r3,[r7,#19]
 4787 0120 01E0     	 b .L123
 4788              	.L124:
1402:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1403:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1404:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1405:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_INVALID_PARAM;
 4789              	 .loc 4 1405 0
 4790 0122 0223     	 movs r3,#2
 4791 0124 FB74     	 strb r3,[r7,#19]
 4792              	.L123:
1406:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1407:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1408:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return status;
 4793              	 .loc 4 1408 0
 4794 0126 FB7C     	 ldrb r3,[r7,#19]
1409:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4795              	 .loc 4 1409 0
 4796 0128 1846     	 mov r0,r3
 4797 012a 2037     	 adds r7,r7,#32
 4798              	.LCFI182:
 4799              	 .cfi_def_cfa_offset 8
 4800 012c BD46     	 mov sp,r7
 4801              	.LCFI183:
 4802              	 .cfi_def_cfa_register 13
 4803              	 
 4804 012e 80BD     	 pop {r7,pc}
 4805              	 .cfi_endproc
 4806              	.LFE254:
 4808              	 .section .text.PWM_SVM_GetPWMFrequency,"ax",%progbits
 4809              	 .align 2
 4810              	 .global PWM_SVM_GetPWMFrequency
 4811              	 .thumb
 4812              	 .thumb_func
 4814              	PWM_SVM_GetPWMFrequency:
 4815              	.LFB255:
1410:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1411:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the PWM Frequency in terms of hertz*/
1412:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetPWMFrequency(PWM_SVM_t* const HandlePtr)
1413:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4816              	 .loc 4 1413 0
 4817              	 .cfi_startproc
 4818              	 
 4819              	 
 4820              	 
 4821 0000 80B4     	 push {r7}
 4822              	.LCFI184:
 4823              	 .cfi_def_cfa_offset 4
 4824              	 .cfi_offset 7,-4
 4825 0002 85B0     	 sub sp,sp,#20
 4826              	.LCFI185:
 4827              	 .cfi_def_cfa_offset 24
 4828 0004 00AF     	 add r7,sp,#0
 4829              	.LCFI186:
 4830              	 .cfi_def_cfa_register 7
 4831 0006 7860     	 str r0,[r7,#4]
1414:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t frequency;
1415:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4832              	 .loc 4 1415 0
 4833 0008 7B68     	 ldr r3,[r7,#4]
 4834 000a 1B68     	 ldr r3,[r3]
 4835 000c BB60     	 str r3,[r7,#8]
1416:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetPWMFrequency:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1417:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1418:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate the frequency based on timer mode*/
1419:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == HandlePtr->phase_configinit_ptr->timer_mode)
 4836              	 .loc 4 1419 0
 4837 000e 7B68     	 ldr r3,[r7,#4]
 4838 0010 9B69     	 ldr r3,[r3,#24]
 4839 0012 1B78     	 ldrb r3,[r3]
 4840 0014 03F00103 	 and r3,r3,#1
 4841 0018 DBB2     	 uxtb r3,r3
 4842 001a 002B     	 cmp r3,#0
 4843 001c 09D1     	 bne .L135
1420:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1421:../Dave/Generated/PWM_SVM/pwm_svm.c ****     frequency = (uint32_t)((uint32_t) svmptr->module_freq / ((uint32_t) HandlePtr->period + 1U));
 4844              	 .loc 4 1421 0
 4845 001e BB68     	 ldr r3,[r7,#8]
 4846 0020 DA69     	 ldr r2,[r3,#28]
 4847 0022 7B68     	 ldr r3,[r7,#4]
 4848 0024 D3F89C30 	 ldr r3,[r3,#156]
 4849 0028 0133     	 adds r3,r3,#1
 4850 002a B2FBF3F3 	 udiv r3,r2,r3
 4851 002e FB60     	 str r3,[r7,#12]
 4852 0030 09E0     	 b .L136
 4853              	.L135:
1422:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1423:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1424:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1425:../Dave/Generated/PWM_SVM/pwm_svm.c ****     frequency = (uint32_t)((uint32_t) svmptr->module_freq / (((uint32_t) HandlePtr->period + 1U) <<
 4854              	 .loc 4 1425 0
 4855 0032 BB68     	 ldr r3,[r7,#8]
 4856 0034 DA69     	 ldr r2,[r3,#28]
 4857 0036 7B68     	 ldr r3,[r7,#4]
 4858 0038 D3F89C30 	 ldr r3,[r3,#156]
 4859 003c 0133     	 adds r3,r3,#1
 4860 003e 5B00     	 lsls r3,r3,#1
 4861 0040 B2FBF3F3 	 udiv r3,r2,r3
 4862 0044 FB60     	 str r3,[r7,#12]
 4863              	.L136:
1426:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1427:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*return the calculated frequency*/
1428:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (frequency);
 4864              	 .loc 4 1428 0
 4865 0046 FB68     	 ldr r3,[r7,#12]
1429:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4866              	 .loc 4 1429 0
 4867 0048 1846     	 mov r0,r3
 4868 004a 1437     	 adds r7,r7,#20
 4869              	.LCFI187:
 4870              	 .cfi_def_cfa_offset 4
 4871 004c BD46     	 mov sp,r7
 4872              	.LCFI188:
 4873              	 .cfi_def_cfa_register 13
 4874              	 
 4875 004e 5DF8047B 	 ldr r7,[sp],#4
 4876              	.LCFI189:
 4877              	 .cfi_restore 7
 4878              	 .cfi_def_cfa_offset 0
 4879 0052 7047     	 bx lr
 4880              	 .cfi_endproc
 4881              	.LFE255:
 4883              	 .section .text.PWM_SVM_SetDeadTime,"ax",%progbits
 4884              	 .align 2
 4885              	 .global PWM_SVM_SetDeadTime
 4886              	 .thumb
 4887              	 .thumb_func
 4889              	PWM_SVM_SetDeadTime:
 4890              	.LFB256:
1430:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1431:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API updates the ccu8 pwm phase deadtime dynamically*/
1432:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API sets the dead time value in terms of nano seconds*/
1433:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetDeadTime(PWM_SVM_t* const HandlePtr, uint32_t DeadTimeRisingEdge,
1434:../Dave/Generated/PWM_SVM/pwm_svm.c ****                                      uint32_t DeadTimeFallingEdge)
1435:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4891              	 .loc 4 1435 0
 4892              	 .cfi_startproc
 4893              	 
 4894              	 
 4895 0000 80B5     	 push {r7,lr}
 4896              	.LCFI190:
 4897              	 .cfi_def_cfa_offset 8
 4898              	 .cfi_offset 7,-8
 4899              	 .cfi_offset 14,-4
 4900 0002 8AB0     	 sub sp,sp,#40
 4901              	.LCFI191:
 4902              	 .cfi_def_cfa_offset 48
 4903 0004 00AF     	 add r7,sp,#0
 4904              	.LCFI192:
 4905              	 .cfi_def_cfa_register 7
 4906 0006 F860     	 str r0,[r7,#12]
 4907 0008 B960     	 str r1,[r7,#8]
 4908 000a 7A60     	 str r2,[r7,#4]
1436:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime_count;
1437:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1438:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime_max;
1439:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 4909              	 .loc 4 1439 0
 4910 000c 0023     	 movs r3,#0
 4911 000e FB76     	 strb r3,[r7,#27]
1440:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_DTC_DIV_t prescaler = HandlePtr->deadtime_div;
 4912              	 .loc 4 1440 0
 4913 0010 FB68     	 ldr r3,[r7,#12]
 4914 0012 93F89130 	 ldrb r3,[r3,#145]
 4915 0016 BB76     	 strb r3,[r7,#26]
1441:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4916              	 .loc 4 1441 0
 4917 0018 FB68     	 ldr r3,[r7,#12]
 4918 001a 1B68     	 ldr r3,[r3]
 4919 001c 3B61     	 str r3,[r7,#16]
1442:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = ((svmptr->module_freq >> (uint32_t) prescaler) / PWM_SVM_MILLISECCONV)
 4920              	 .loc 4 1442 0
 4921 001e 3B69     	 ldr r3,[r7,#16]
 4922 0020 DA69     	 ldr r2,[r3,#28]
 4923 0022 BB7E     	 ldrb r3,[r7,#26]
 4924 0024 22FA03F3 	 lsr r3,r2,r3
 4925 0028 484A     	 ldr r2,.L151
 4926 002a A2FB0323 	 umull r2,r3,r2,r3
 4927 002e 9B09     	 lsrs r3,r3,#6
 4928 0030 7B61     	 str r3,[r7,#20]
1443:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1444:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Check for maximum dead time */
1445:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (DeadTimeRisingEdge > DeadTimeFallingEdge)
 4929              	 .loc 4 1445 0
 4930 0032 BA68     	 ldr r2,[r7,#8]
 4931 0034 7B68     	 ldr r3,[r7,#4]
 4932 0036 9A42     	 cmp r2,r3
 4933 0038 02D9     	 bls .L139
1446:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1447:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_max = DeadTimeRisingEdge;
 4934              	 .loc 4 1447 0
 4935 003a BB68     	 ldr r3,[r7,#8]
 4936 003c FB61     	 str r3,[r7,#28]
 4937 003e 01E0     	 b .L140
 4938              	.L139:
1448:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1449:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1450:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1451:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_max = DeadTimeFallingEdge;
 4939              	 .loc 4 1451 0
 4940 0040 7B68     	 ldr r3,[r7,#4]
 4941 0042 FB61     	 str r3,[r7,#28]
 4942              	.L140:
1452:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1453:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((deadtime_max > PWM_SVM_DEADTIME_LOWERLIMIT) && (deadtime_max <= PWM_SVM_DEADTIME_UPPERLIMIT)
 4943              	 .loc 4 1453 0
 4944 0044 FB69     	 ldr r3,[r7,#28]
 4945 0046 322B     	 cmp r3,#50
 4946 0048 79D9     	 bls .L141
 4947              	 .loc 4 1453 0 is_stmt 0 discriminator 1
 4948 004a FB69     	 ldr r3,[r7,#28]
 4949 004c 41F28832 	 movw r2,#5000
 4950 0050 9342     	 cmp r3,r2
 4951 0052 74D8     	 bhi .L141
1454:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1455:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_count = (uint32_t)((deadtime_max * dead_time_scale) / PWM_SVM_MICROSECCONV);
 4952              	 .loc 4 1455 0 is_stmt 1
 4953 0054 FB69     	 ldr r3,[r7,#28]
 4954 0056 7A69     	 ldr r2,[r7,#20]
 4955 0058 02FB03F3 	 mul r3,r2,r3
 4956 005c 3C4A     	 ldr r2,.L151+4
 4957 005e A2FB0323 	 umull r2,r3,r2,r3
 4958 0062 9B0C     	 lsrs r3,r3,#18
 4959 0064 7B62     	 str r3,[r7,#36]
1456:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     while ((deadtime_count > PWM_SVM_DEADTIME_REG_MAX) && ((uint32_t) prescaler <= PWM_SVM_DEADTIME
 4960              	 .loc 4 1457 0
 4961 0066 15E0     	 b .L142
 4962              	.L144:
1458:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1459:../Dave/Generated/PWM_SVM/pwm_svm.c ****       prescaler++;
 4963              	 .loc 4 1459 0
 4964 0068 BB7E     	 ldrb r3,[r7,#26]
 4965 006a 0133     	 adds r3,r3,#1
 4966 006c BB76     	 strb r3,[r7,#26]
1460:../Dave/Generated/PWM_SVM/pwm_svm.c ****       dead_time_scale = ((svmptr->module_freq >> (uint32_t) prescaler) / PWM_SVM_MILLISECCONV);
 4967              	 .loc 4 1460 0
 4968 006e 3B69     	 ldr r3,[r7,#16]
 4969 0070 DA69     	 ldr r2,[r3,#28]
 4970 0072 BB7E     	 ldrb r3,[r7,#26]
 4971 0074 22FA03F3 	 lsr r3,r2,r3
 4972 0078 344A     	 ldr r2,.L151
 4973 007a A2FB0323 	 umull r2,r3,r2,r3
 4974 007e 9B09     	 lsrs r3,r3,#6
 4975 0080 7B61     	 str r3,[r7,#20]
1461:../Dave/Generated/PWM_SVM/pwm_svm.c ****       deadtime_count = (uint32_t)((deadtime_max * dead_time_scale) / PWM_SVM_MICROSECCONV);
 4976              	 .loc 4 1461 0
 4977 0082 FB69     	 ldr r3,[r7,#28]
 4978 0084 7A69     	 ldr r2,[r7,#20]
 4979 0086 02FB03F3 	 mul r3,r2,r3
 4980 008a 314A     	 ldr r2,.L151+4
 4981 008c A2FB0323 	 umull r2,r3,r2,r3
 4982 0090 9B0C     	 lsrs r3,r3,#18
 4983 0092 7B62     	 str r3,[r7,#36]
 4984              	.L142:
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4985              	 .loc 4 1457 0
 4986 0094 7B6A     	 ldr r3,[r7,#36]
 4987 0096 FF2B     	 cmp r3,#255
 4988 0098 02D9     	 bls .L143
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4989              	 .loc 4 1457 0 is_stmt 0 discriminator 1
 4990 009a BB7E     	 ldrb r3,[r7,#26]
 4991 009c 032B     	 cmp r3,#3
 4992 009e E3D9     	 bls .L144
 4993              	.L143:
1462:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1463:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1464:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (DeadTimeRisingEdge > DeadTimeFallingEdge)
 4994              	 .loc 4 1464 0 is_stmt 1
 4995 00a0 BA68     	 ldr r2,[r7,#8]
 4996 00a2 7B68     	 ldr r3,[r7,#4]
 4997 00a4 9A42     	 cmp r2,r3
 4998 00a6 0FD9     	 bls .L145
1465:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1466:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_rising_edge = deadtime_count;
 4999              	 .loc 4 1466 0
 5000 00a8 FB68     	 ldr r3,[r7,#12]
 5001 00aa 7A6A     	 ldr r2,[r7,#36]
 5002 00ac C3F89420 	 str r2,[r3,#148]
1467:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_falling_edge = (uint32_t)((DeadTimeFallingEdge * dead_time_scale) / PWM_S
 5003              	 .loc 4 1467 0
 5004 00b0 7B68     	 ldr r3,[r7,#4]
 5005 00b2 7A69     	 ldr r2,[r7,#20]
 5006 00b4 02FB03F3 	 mul r3,r2,r3
 5007 00b8 254A     	 ldr r2,.L151+4
 5008 00ba A2FB0323 	 umull r2,r3,r2,r3
 5009 00be 9A0C     	 lsrs r2,r3,#18
 5010 00c0 FB68     	 ldr r3,[r7,#12]
 5011 00c2 C3F89820 	 str r2,[r3,#152]
 5012 00c6 0EE0     	 b .L146
 5013              	.L145:
1468:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1469:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1470:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1471:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_falling_edge = deadtime_count;
 5014              	 .loc 4 1471 0
 5015 00c8 FB68     	 ldr r3,[r7,#12]
 5016 00ca 7A6A     	 ldr r2,[r7,#36]
 5017 00cc C3F89820 	 str r2,[r3,#152]
1472:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_rising_edge = (uint32_t)((DeadTimeRisingEdge * dead_time_scale) / PWM_SVM
 5018              	 .loc 4 1472 0
 5019 00d0 BB68     	 ldr r3,[r7,#8]
 5020 00d2 7A69     	 ldr r2,[r7,#20]
 5021 00d4 02FB03F3 	 mul r3,r2,r3
 5022 00d8 1D4A     	 ldr r2,.L151+4
 5023 00da A2FB0323 	 umull r2,r3,r2,r3
 5024 00de 9A0C     	 lsrs r2,r3,#18
 5025 00e0 FB68     	 ldr r3,[r7,#12]
 5026 00e2 C3F89420 	 str r2,[r3,#148]
 5027              	.L146:
1473:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1474:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1475:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*configure the calculated deadtime*/
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 5028              	 .loc 4 1476 0
 5029 00e6 0023     	 movs r3,#0
 5030 00e8 3B62     	 str r3,[r7,#32]
 5031 00ea 20E0     	 b .L147
 5032              	.L148:
1477:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1478:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure dead time */
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetDeadTimeValue(HandlePtr->phase_ptr[count]->slice_ptr,
 5033              	 .loc 4 1479 0 discriminator 3
 5034 00ec FB68     	 ldr r3,[r7,#12]
 5035 00ee 3A6A     	 ldr r2,[r7,#32]
 5036 00f0 0232     	 adds r2,r2,#2
 5037 00f2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5038 00f6 1868     	 ldr r0,[r3]
1480:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5039              	 .loc 4 1480 0 discriminator 3
 5040 00f8 FB68     	 ldr r3,[r7,#12]
 5041 00fa 1B68     	 ldr r3,[r3]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5042              	 .loc 4 1479 0 discriminator 3
 5043 00fc 197A     	 ldrb r1,[r3,#8]
 5044              	 .loc 4 1480 0 discriminator 3
 5045 00fe FB68     	 ldr r3,[r7,#12]
 5046 0100 D3F89430 	 ldr r3,[r3,#148]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5047              	 .loc 4 1479 0 discriminator 3
 5048 0104 DAB2     	 uxtb r2,r3
1481:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint8_t) HandlePtr->deadtime_falling_edge);
 5049              	 .loc 4 1481 0 discriminator 3
 5050 0106 FB68     	 ldr r3,[r7,#12]
 5051 0108 D3F89830 	 ldr r3,[r3,#152]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5052              	 .loc 4 1479 0 discriminator 3
 5053 010c DBB2     	 uxtb r3,r3
 5054 010e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimeValue
1482:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetDeadTimePrescaler(HandlePtr->phase_ptr[count]->slice_ptr, (XMC_CCU8_SLICE_D
 5055              	 .loc 4 1482 0 discriminator 3
 5056 0112 FB68     	 ldr r3,[r7,#12]
 5057 0114 3A6A     	 ldr r2,[r7,#32]
 5058 0116 0232     	 adds r2,r2,#2
 5059 0118 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5060 011c 1A68     	 ldr r2,[r3]
 5061 011e BB7E     	 ldrb r3,[r7,#26]
 5062 0120 1046     	 mov r0,r2
 5063 0122 1946     	 mov r1,r3
 5064 0124 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimePrescaler
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5065              	 .loc 4 1476 0 discriminator 3
 5066 0128 3B6A     	 ldr r3,[r7,#32]
 5067 012a 0133     	 adds r3,r3,#1
 5068 012c 3B62     	 str r3,[r7,#32]
 5069              	.L147:
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5070              	 .loc 4 1476 0 is_stmt 0 discriminator 1
 5071 012e 3B6A     	 ldr r3,[r7,#32]
 5072 0130 022B     	 cmp r3,#2
 5073 0132 DBD9     	 bls .L148
1483:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1484:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1485:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_div = prescaler;
 5074              	 .loc 4 1485 0 is_stmt 1
 5075 0134 FB68     	 ldr r3,[r7,#12]
 5076 0136 BA7E     	 ldrb r2,[r7,#26]
 5077 0138 83F89120 	 strb r2,[r3,#145]
 5078 013c 01E0     	 b .L149
 5079              	.L141:
1486:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1487:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1488:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1489:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5080              	 .loc 4 1489 0
 5081 013e 0223     	 movs r3,#2
 5082 0140 FB76     	 strb r3,[r7,#27]
 5083              	.L149:
1490:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1491:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return status;
 5084              	 .loc 4 1491 0
 5085 0142 FB7E     	 ldrb r3,[r7,#27]
1492:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5086              	 .loc 4 1492 0
 5087 0144 1846     	 mov r0,r3
 5088 0146 2837     	 adds r7,r7,#40
 5089              	.LCFI193:
 5090              	 .cfi_def_cfa_offset 8
 5091 0148 BD46     	 mov sp,r7
 5092              	.LCFI194:
 5093              	 .cfi_def_cfa_register 13
 5094              	 
 5095 014a 80BD     	 pop {r7,pc}
 5096              	.L152:
 5097              	 .align 2
 5098              	.L151:
 5099 014c D34D6210 	 .word 274877907
 5100 0150 83DE1B43 	 .word 1125899907
 5101              	 .cfi_endproc
 5102              	.LFE256:
 5104              	 .section .text.PWM_SVM_GetRisingEdgeDeadTime,"ax",%progbits
 5105              	 .align 2
 5106              	 .global PWM_SVM_GetRisingEdgeDeadTime
 5107              	 .thumb
 5108              	 .thumb_func
 5110              	PWM_SVM_GetRisingEdgeDeadTime:
 5111              	.LFB257:
1493:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1494:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the rising edge dead time */
1495:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetRisingEdgeDeadTime(PWM_SVM_t* const HandlePtr)
1496:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5112              	 .loc 4 1496 0
 5113              	 .cfi_startproc
 5114              	 
 5115              	 
 5116              	 
 5117 0000 80B4     	 push {r7}
 5118              	.LCFI195:
 5119              	 .cfi_def_cfa_offset 4
 5120              	 .cfi_offset 7,-4
 5121 0002 85B0     	 sub sp,sp,#20
 5122              	.LCFI196:
 5123              	 .cfi_def_cfa_offset 24
 5124 0004 00AF     	 add r7,sp,#0
 5125              	.LCFI197:
 5126              	 .cfi_def_cfa_register 7
 5127 0006 7860     	 str r0,[r7,#4]
1497:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime;
1498:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = (PWM_SVM_NANOSECCONV
1499:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5128              	 .loc 4 1499 0
 5129 0008 7B68     	 ldr r3,[r7,#4]
 5130 000a 1B68     	 ldr r3,[r3]
 5131 000c DB69     	 ldr r3,[r3,#28]
 5132 000e 0F4A     	 ldr r2,.L155
 5133 0010 A2FB0323 	 umull r2,r3,r2,r3
 5134 0014 9B09     	 lsrs r3,r3,#6
 5135 0016 7A68     	 ldr r2,[r7,#4]
 5136 0018 92F89120 	 ldrb r2,[r2,#145]
 5137 001c D340     	 lsrs r3,r3,r2
1498:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5138              	 .loc 4 1498 0
 5139 001e 0C4A     	 ldr r2,.L155+4
 5140 0020 B2FBF3F3 	 udiv r3,r2,r3
 5141 0024 FB60     	 str r3,[r7,#12]
1500:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetRisingEdgeDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL)
1501:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* calculate the deadtime from dead time count*/
1502:../Dave/Generated/PWM_SVM/pwm_svm.c ****   deadtime = (uint32_t)((HandlePtr->deadtime_rising_edge * dead_time_scale) / PWM_SVM_MILLISECCONV)
 5142              	 .loc 4 1502 0
 5143 0026 7B68     	 ldr r3,[r7,#4]
 5144 0028 D3F89430 	 ldr r3,[r3,#148]
 5145 002c FA68     	 ldr r2,[r7,#12]
 5146 002e 02FB03F3 	 mul r3,r2,r3
 5147 0032 064A     	 ldr r2,.L155
 5148 0034 A2FB0323 	 umull r2,r3,r2,r3
 5149 0038 9B09     	 lsrs r3,r3,#6
 5150 003a BB60     	 str r3,[r7,#8]
1503:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (deadtime);
 5151              	 .loc 4 1503 0
 5152 003c BB68     	 ldr r3,[r7,#8]
1504:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5153              	 .loc 4 1504 0
 5154 003e 1846     	 mov r0,r3
 5155 0040 1437     	 adds r7,r7,#20
 5156              	.LCFI198:
 5157              	 .cfi_def_cfa_offset 4
 5158 0042 BD46     	 mov sp,r7
 5159              	.LCFI199:
 5160              	 .cfi_def_cfa_register 13
 5161              	 
 5162 0044 5DF8047B 	 ldr r7,[sp],#4
 5163              	.LCFI200:
 5164              	 .cfi_restore 7
 5165              	 .cfi_def_cfa_offset 0
 5166 0048 7047     	 bx lr
 5167              	.L156:
 5168 004a 00BF     	 .align 2
 5169              	.L155:
 5170 004c D34D6210 	 .word 274877907
 5171 0050 00CA9A3B 	 .word 1000000000
 5172              	 .cfi_endproc
 5173              	.LFE257:
 5175              	 .section .text.PWM_SVM_GetFallingEdgeDeadTime,"ax",%progbits
 5176              	 .align 2
 5177              	 .global PWM_SVM_GetFallingEdgeDeadTime
 5178              	 .thumb
 5179              	 .thumb_func
 5181              	PWM_SVM_GetFallingEdgeDeadTime:
 5182              	.LFB258:
1505:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1506:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the falling edge dead time*/
1507:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetFallingEdgeDeadTime(PWM_SVM_t* const HandlePtr)
1508:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5183              	 .loc 4 1508 0
 5184              	 .cfi_startproc
 5185              	 
 5186              	 
 5187              	 
 5188 0000 80B4     	 push {r7}
 5189              	.LCFI201:
 5190              	 .cfi_def_cfa_offset 4
 5191              	 .cfi_offset 7,-4
 5192 0002 85B0     	 sub sp,sp,#20
 5193              	.LCFI202:
 5194              	 .cfi_def_cfa_offset 24
 5195 0004 00AF     	 add r7,sp,#0
 5196              	.LCFI203:
 5197              	 .cfi_def_cfa_register 7
 5198 0006 7860     	 str r0,[r7,#4]
1509:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime;
1510:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = (PWM_SVM_NANOSECCONV
1511:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5199              	 .loc 4 1511 0
 5200 0008 7B68     	 ldr r3,[r7,#4]
 5201 000a 1B68     	 ldr r3,[r3]
 5202 000c DB69     	 ldr r3,[r3,#28]
 5203 000e 0F4A     	 ldr r2,.L159
 5204 0010 A2FB0323 	 umull r2,r3,r2,r3
 5205 0014 9B09     	 lsrs r3,r3,#6
 5206 0016 7A68     	 ldr r2,[r7,#4]
 5207 0018 92F89120 	 ldrb r2,[r2,#145]
 5208 001c D340     	 lsrs r3,r3,r2
1510:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5209              	 .loc 4 1510 0
 5210 001e 0C4A     	 ldr r2,.L159+4
 5211 0020 B2FBF3F3 	 udiv r3,r2,r3
 5212 0024 FB60     	 str r3,[r7,#12]
1512:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetFallingEdgeDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL
1513:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* calculate the deadtime from dead time count*/
1514:../Dave/Generated/PWM_SVM/pwm_svm.c ****   deadtime = (uint32_t)((HandlePtr->deadtime_falling_edge * dead_time_scale) / PWM_SVM_MILLISECCONV
 5213              	 .loc 4 1514 0
 5214 0026 7B68     	 ldr r3,[r7,#4]
 5215 0028 D3F89830 	 ldr r3,[r3,#152]
 5216 002c FA68     	 ldr r2,[r7,#12]
 5217 002e 02FB03F3 	 mul r3,r2,r3
 5218 0032 064A     	 ldr r2,.L159
 5219 0034 A2FB0323 	 umull r2,r3,r2,r3
 5220 0038 9B09     	 lsrs r3,r3,#6
 5221 003a BB60     	 str r3,[r7,#8]
1515:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (deadtime);
 5222              	 .loc 4 1515 0
 5223 003c BB68     	 ldr r3,[r7,#8]
1516:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5224              	 .loc 4 1516 0
 5225 003e 1846     	 mov r0,r3
 5226 0040 1437     	 adds r7,r7,#20
 5227              	.LCFI204:
 5228              	 .cfi_def_cfa_offset 4
 5229 0042 BD46     	 mov sp,r7
 5230              	.LCFI205:
 5231              	 .cfi_def_cfa_register 13
 5232              	 
 5233 0044 5DF8047B 	 ldr r7,[sp],#4
 5234              	.LCFI206:
 5235              	 .cfi_restore 7
 5236              	 .cfi_def_cfa_offset 0
 5237 0048 7047     	 bx lr
 5238              	.L160:
 5239 004a 00BF     	 .align 2
 5240              	.L159:
 5241 004c D34D6210 	 .word 274877907
 5242 0050 00CA9A3B 	 .word 1000000000
 5243              	 .cfi_endproc
 5244              	.LFE258:
 5246              	 .section .text.PWM_SVM_SetTmin,"ax",%progbits
 5247              	 .align 2
 5248              	 .global PWM_SVM_SetTmin
 5249              	 .thumb
 5250              	 .thumb_func
 5252              	PWM_SVM_SetTmin:
 5253              	.LFB259:
1517:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1518:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API sets the Tmin value in terms of nano seconds*/
1519:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetTmin(PWM_SVM_t* const HandlePtr, uint32_t Tmin)
1520:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5254              	 .loc 4 1520 0
 5255              	 .cfi_startproc
 5256              	 
 5257              	 
 5258              	 
 5259 0000 80B4     	 push {r7}
 5260              	.LCFI207:
 5261              	 .cfi_def_cfa_offset 4
 5262              	 .cfi_offset 7,-4
 5263 0002 85B0     	 sub sp,sp,#20
 5264              	.LCFI208:
 5265              	 .cfi_def_cfa_offset 24
 5266 0004 00AF     	 add r7,sp,#0
 5267              	.LCFI209:
 5268              	 .cfi_def_cfa_register 7
 5269 0006 7860     	 str r0,[r7,#4]
 5270 0008 3960     	 str r1,[r7]
1521:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tmin_scale = (uint32_t)(HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV)
 5271              	 .loc 4 1521 0
 5272 000a 7B68     	 ldr r3,[r7,#4]
 5273 000c 1B68     	 ldr r3,[r3]
 5274 000e DB69     	 ldr r3,[r3,#28]
 5275 0010 104A     	 ldr r2,.L165
 5276 0012 A2FB0323 	 umull r2,r3,r2,r3
 5277 0016 9B09     	 lsrs r3,r3,#6
 5278 0018 BB60     	 str r3,[r7,#8]
1522:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 5279              	 .loc 4 1522 0
 5280 001a 0023     	 movs r3,#0
 5281 001c FB73     	 strb r3,[r7,#15]
1523:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetTmin:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1524:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (Tmin <= PWM_SVM_TMIN_LIMIT)
 5282              	 .loc 4 1524 0
 5283 001e 3B68     	 ldr r3,[r7]
 5284 0020 41F28832 	 movw r2,#5000
 5285 0024 9342     	 cmp r3,r2
 5286 0026 0CD8     	 bhi .L162
1525:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1526:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* calculate the Tmin to Tmin count*/
1527:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tmin = (uint16_t)(((uint32_t)(Tmin * tmin_scale)) / PWM_SVM_MICROSECCONV);
 5287              	 .loc 4 1527 0
 5288 0028 3B68     	 ldr r3,[r7]
 5289 002a BA68     	 ldr r2,[r7,#8]
 5290 002c 02FB03F3 	 mul r3,r2,r3
 5291 0030 094A     	 ldr r2,.L165+4
 5292 0032 A2FB0323 	 umull r2,r3,r2,r3
 5293 0036 9B0C     	 lsrs r3,r3,#18
 5294 0038 9AB2     	 uxth r2,r3
 5295 003a 7B68     	 ldr r3,[r7,#4]
 5296 003c A3F8C220 	 strh r2,[r3,#194]
 5297 0040 01E0     	 b .L163
 5298              	.L162:
1528:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1529:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1530:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1531:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5299              	 .loc 4 1531 0
 5300 0042 0223     	 movs r3,#2
 5301 0044 FB73     	 strb r3,[r7,#15]
 5302              	.L163:
1532:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1533:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 5303              	 .loc 4 1533 0
 5304 0046 FB7B     	 ldrb r3,[r7,#15]
1534:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5305              	 .loc 4 1534 0
 5306 0048 1846     	 mov r0,r3
 5307 004a 1437     	 adds r7,r7,#20
 5308              	.LCFI210:
 5309              	 .cfi_def_cfa_offset 4
 5310 004c BD46     	 mov sp,r7
 5311              	.LCFI211:
 5312              	 .cfi_def_cfa_register 13
 5313              	 
 5314 004e 5DF8047B 	 ldr r7,[sp],#4
 5315              	.LCFI212:
 5316              	 .cfi_restore 7
 5317              	 .cfi_def_cfa_offset 0
 5318 0052 7047     	 bx lr
 5319              	.L166:
 5320              	 .align 2
 5321              	.L165:
 5322 0054 D34D6210 	 .word 274877907
 5323 0058 83DE1B43 	 .word 1125899907
 5324              	 .cfi_endproc
 5325              	.LFE259:
 5327              	 .section .text.PWM_SVM_GetTmin,"ax",%progbits
 5328              	 .align 2
 5329              	 .global PWM_SVM_GetTmin
 5330              	 .thumb
 5331              	 .thumb_func
 5333              	PWM_SVM_GetTmin:
 5334              	.LFB260:
1535:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1536:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*returns the Tmin value in terms of nano second*/
1537:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetTmin(PWM_SVM_t* const HandlePtr)
1538:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5335              	 .loc 4 1538 0
 5336              	 .cfi_startproc
 5337              	 
 5338              	 
 5339              	 
 5340 0000 80B4     	 push {r7}
 5341              	.LCFI213:
 5342              	 .cfi_def_cfa_offset 4
 5343              	 .cfi_offset 7,-4
 5344 0002 85B0     	 sub sp,sp,#20
 5345              	.LCFI214:
 5346              	 .cfi_def_cfa_offset 24
 5347 0004 00AF     	 add r7,sp,#0
 5348              	.LCFI215:
 5349              	 .cfi_def_cfa_register 7
 5350 0006 7860     	 str r0,[r7,#4]
1539:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tmin_scale = (PWM_SVM_NANOSECCONV / (HandlePtr->confighandle_ptr->module_freq /
 5351              	 .loc 4 1539 0
 5352 0008 7B68     	 ldr r3,[r7,#4]
 5353 000a 1B68     	 ldr r3,[r3]
 5354 000c DB69     	 ldr r3,[r3,#28]
 5355 000e 0C4A     	 ldr r2,.L169
 5356 0010 A2FB0323 	 umull r2,r3,r2,r3
 5357 0014 9B09     	 lsrs r3,r3,#6
 5358 0016 0B4A     	 ldr r2,.L169+4
 5359 0018 B2FBF3F3 	 udiv r3,r2,r3
 5360 001c FB60     	 str r3,[r7,#12]
1540:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_MILLISECCONV));
1541:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetTmin:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1542:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (uint32_t)(((uint32_t) HandlePtr->tmin * tmin_scale) / PWM_SVM_MILLISECCONV);
 5361              	 .loc 4 1542 0
 5362 001e 7B68     	 ldr r3,[r7,#4]
 5363 0020 B3F8C230 	 ldrh r3,[r3,#194]
 5364 0024 1A46     	 mov r2,r3
 5365 0026 FB68     	 ldr r3,[r7,#12]
 5366 0028 03FB02F3 	 mul r3,r3,r2
 5367 002c 044A     	 ldr r2,.L169
 5368 002e A2FB0323 	 umull r2,r3,r2,r3
 5369 0032 9B09     	 lsrs r3,r3,#6
1543:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5370              	 .loc 4 1543 0
 5371 0034 1846     	 mov r0,r3
 5372 0036 1437     	 adds r7,r7,#20
 5373              	.LCFI216:
 5374              	 .cfi_def_cfa_offset 4
 5375 0038 BD46     	 mov sp,r7
 5376              	.LCFI217:
 5377              	 .cfi_def_cfa_register 13
 5378              	 
 5379 003a 5DF8047B 	 ldr r7,[sp],#4
 5380              	.LCFI218:
 5381              	 .cfi_restore 7
 5382              	 .cfi_def_cfa_offset 0
 5383 003e 7047     	 bx lr
 5384              	.L170:
 5385              	 .align 2
 5386              	.L169:
 5387 0040 D34D6210 	 .word 274877907
 5388 0044 00CA9A3B 	 .word 1000000000
 5389              	 .cfi_endproc
 5390              	.LFE260:
 5392              	 .section .text.PWM_SVM_SetSVMScheme,"ax",%progbits
 5393              	 .align 2
 5394              	 .global PWM_SVM_SetSVMScheme
 5395              	 .thumb
 5396              	 .thumb_func
 5398              	PWM_SVM_SetSVMScheme:
 5399              	.LFB261:
1544:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1545:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API modifies the SVM scheme dynamically*/
1546:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetSVMScheme(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1547:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5400              	 .loc 4 1547 0
 5401              	 .cfi_startproc
 5402              	 
 5403              	 
 5404 0000 80B5     	 push {r7,lr}
 5405              	.LCFI219:
 5406              	 .cfi_def_cfa_offset 8
 5407              	 .cfi_offset 7,-8
 5408              	 .cfi_offset 14,-4
 5409 0002 84B0     	 sub sp,sp,#16
 5410              	.LCFI220:
 5411              	 .cfi_def_cfa_offset 24
 5412 0004 00AF     	 add r7,sp,#0
 5413              	.LCFI221:
 5414              	 .cfi_def_cfa_register 7
 5415 0006 7860     	 str r0,[r7,#4]
 5416 0008 0B46     	 mov r3,r1
 5417 000a FB70     	 strb r3,[r7,#3]
1548:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 5418              	 .loc 4 1548 0
 5419 000c 0023     	 movs r3,#0
 5420 000e FB73     	 strb r3,[r7,#15]
1549:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetSVMScheme:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1550:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((Scheme == PWM_SVM_7SEG_SYMM) || (Scheme == PWM_SVM_5SEG_SYMM))
 5421              	 .loc 4 1550 0
 5422 0010 FB78     	 ldrb r3,[r7,#3]
 5423 0012 002B     	 cmp r3,#0
 5424 0014 02D0     	 beq .L172
 5425              	 .loc 4 1550 0 is_stmt 0 discriminator 1
 5426 0016 FB78     	 ldrb r3,[r7,#3]
 5427 0018 022B     	 cmp r3,#2
 5428 001a 1BD1     	 bne .L173
 5429              	.L172:
1551:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1552:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* It is possible to change the SVM scheme in RUNNING state if timer counting and compare mode 
1553:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_RUNNING == HandlePtr->state))
 5430              	 .loc 4 1553 0 is_stmt 1
 5431 001c 7B68     	 ldr r3,[r7,#4]
 5432 001e 93F89030 	 ldrb r3,[r3,#144]
 5433 0022 022B     	 cmp r3,#2
 5434 0024 05D1     	 bne .L174
1554:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1555:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lDynamicSVMSchemeModification(HandlePtr, Scheme);
 5435              	 .loc 4 1555 0
 5436 0026 FB78     	 ldrb r3,[r7,#3]
 5437 0028 7868     	 ldr r0,[r7,#4]
 5438 002a 1946     	 mov r1,r3
 5439 002c FFF7FEFF 	 bl PWM_SVM_lDynamicSVMSchemeModification
 5440 0030 0FE0     	 b .L175
 5441              	.L174:
1556:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1557:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* when PWM is stopped, SVM scheme can be changed without any constraint */
1558:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 5442              	 .loc 4 1558 0
 5443 0032 7B68     	 ldr r3,[r7,#4]
 5444 0034 93F89030 	 ldrb r3,[r3,#144]
 5445 0038 012B     	 cmp r3,#1
 5446 003a 04D0     	 beq .L176
1559:../Dave/Generated/PWM_SVM/pwm_svm.c ****         || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 5447              	 .loc 4 1559 0
 5448 003c 7B68     	 ldr r3,[r7,#4]
 5449 003e 93F89030 	 ldrb r3,[r3,#144]
 5450 0042 032B     	 cmp r3,#3
 5451 0044 05D1     	 bne .L175
 5452              	.L176:
1560:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1561:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lStaticSVMSchemeModification(HandlePtr, Scheme);
 5453              	 .loc 4 1561 0
 5454 0046 FB78     	 ldrb r3,[r7,#3]
 5455 0048 7868     	 ldr r0,[r7,#4]
 5456 004a 1946     	 mov r1,r3
 5457 004c FFF7FEFF 	 bl PWM_SVM_lStaticSVMSchemeModification
1553:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5458              	 .loc 4 1553 0
 5459 0050 02E0     	 b .L177
 5460              	.L175:
 5461 0052 01E0     	 b .L177
 5462              	.L173:
1562:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1563:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1564:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1565:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Do Nothing*/
1566:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1567:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1568:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1569:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1570:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5463              	 .loc 4 1570 0
 5464 0054 0223     	 movs r3,#2
 5465 0056 FB73     	 strb r3,[r7,#15]
 5466              	.L177:
1571:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1572:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 5467              	 .loc 4 1572 0
 5468 0058 FB7B     	 ldrb r3,[r7,#15]
1573:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5469              	 .loc 4 1573 0
 5470 005a 1846     	 mov r0,r3
 5471 005c 1037     	 adds r7,r7,#16
 5472              	.LCFI222:
 5473              	 .cfi_def_cfa_offset 8
 5474 005e BD46     	 mov sp,r7
 5475              	.LCFI223:
 5476              	 .cfi_def_cfa_register 13
 5477              	 
 5478 0060 80BD     	 pop {r7,pc}
 5479              	 .cfi_endproc
 5480              	.LFE261:
 5482 0062 00BF     	 .section .text.PWM_SVM_lDynamicSVMSchemeModification,"ax",%progbits
 5483              	 .align 2
 5484              	 .global PWM_SVM_lDynamicSVMSchemeModification
 5485              	 .thumb
 5486              	 .thumb_func
 5488              	PWM_SVM_lDynamicSVMSchemeModification:
 5489              	.LFB262:
1574:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1575:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lDynamicSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1576:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5490              	 .loc 4 1576 0
 5491              	 .cfi_startproc
 5492              	 
 5493              	 
 5494 0000 80B5     	 push {r7,lr}
 5495              	.LCFI224:
 5496              	 .cfi_def_cfa_offset 8
 5497              	 .cfi_offset 7,-8
 5498              	 .cfi_offset 14,-4
 5499 0002 82B0     	 sub sp,sp,#8
 5500              	.LCFI225:
 5501              	 .cfi_def_cfa_offset 16
 5502 0004 00AF     	 add r7,sp,#0
 5503              	.LCFI226:
 5504              	 .cfi_def_cfa_register 7
 5505 0006 7860     	 str r0,[r7,#4]
 5506 0008 0B46     	 mov r3,r1
 5507 000a FB70     	 strb r3,[r7,#3]
1577:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (Scheme)
 5508              	 .loc 4 1577 0
 5509 000c FB78     	 ldrb r3,[r7,#3]
 5510 000e 052B     	 cmp r3,#5
 5511 0010 00F2BF80 	 bhi .L179
 5512 0014 01A2     	 adr r2,.L182
 5513 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 5514 001a 00BF     	 .p2align 2
 5515              	.L182:
 5516 001c 35000000 	 .word .L181+1
 5517 0020 B5000000 	 .word .L183+1
 5518 0024 CB000000 	 .word .L184+1
 5519 0028 05010000 	 .word .L185+1
 5520 002c 23010000 	 .word .L186+1
 5521 0030 5B010000 	 .word .L187+1
 5522              	 .p2align 1
 5523              	.L181:
1578:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1579:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_7SEG_SYMM:
1580:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 5 segment symmetric*/
1581:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_5SEG_SYMM == HandlePtr->svm_config))
 5524              	 .loc 4 1581 0
 5525 0034 7B68     	 ldr r3,[r7,#4]
 5526 0036 93F89230 	 ldrb r3,[r3,#146]
 5527 003a 022B     	 cmp r3,#2
 5528 003c 39D1     	 bne .L188
1582:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1583:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*if DC link configure compare match event and bind to NVIC node accordingly*/
1584:../Dave/Generated/PWM_SVM/pwm_svm.c ****         if (PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 5529              	 .loc 4 1584 0
 5530 003e 7B68     	 ldr r3,[r7,#4]
 5531 0040 1B68     	 ldr r3,[r3]
 5532 0042 1B7C     	 ldrb r3,[r3,#16]
 5533 0044 012B     	 cmp r3,#1
 5534 0046 2BD1     	 bne .L189
1585:../Dave/Generated/PWM_SVM/pwm_svm.c ****         {
1586:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5535              	 .loc 4 1586 0
 5536 0048 7B68     	 ldr r3,[r7,#4]
 5537 004a 5B69     	 ldr r3,[r3,#20]
 5538 004c 1B68     	 ldr r3,[r3]
 5539 004e 1846     	 mov r0,r3
 5540 0050 0221     	 movs r1,#2
 5541 0052 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1587:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
1588:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5542              	 .loc 4 1588 0
 5543 0056 7B68     	 ldr r3,[r7,#4]
 5544 0058 5B69     	 ldr r3,[r3,#20]
 5545 005a 1B68     	 ldr r3,[r3]
 5546 005c 1846     	 mov r0,r3
 5547 005e 0321     	 movs r1,#3
 5548 0060 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1589:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1590:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5549              	 .loc 4 1590 0
 5550 0064 7B68     	 ldr r3,[r7,#4]
 5551 0066 5B69     	 ldr r3,[r3,#20]
 5552 0068 1B68     	 ldr r3,[r3]
 5553 006a 1846     	 mov r0,r3
 5554 006c 0421     	 movs r1,#4
 5555 006e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1591:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
1592:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5556              	 .loc 4 1592 0
 5557 0072 7B68     	 ldr r3,[r7,#4]
 5558 0074 5B69     	 ldr r3,[r3,#20]
 5559 0076 1B68     	 ldr r3,[r3]
 5560 0078 1846     	 mov r0,r3
 5561 007a 0521     	 movs r1,#5
 5562 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1593:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1594:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_SetInterruptNode(HandlePtr->phase_ptr[3]->slice_ptr,
 5563              	 .loc 4 1594 0
 5564 0080 7B68     	 ldr r3,[r7,#4]
 5565 0082 5B69     	 ldr r3,[r3,#20]
 5566 0084 1A68     	 ldr r2,[r3]
1595:../Dave/Generated/PWM_SVM/pwm_svm.c ****               XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
1596:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_SR_ID_t)(
1597:../Dave/Generated/PWM_SVM/pwm_svm.c ****                   (HandlePtr->confighandle_ptr->event_sr_selector[0] >> CCU8_CC8_SRS_CM1SR_Pos) & (
 5567              	 .loc 4 1597 0
 5568 0086 7B68     	 ldr r3,[r7,#4]
 5569 0088 1B68     	 ldr r3,[r3]
 5570 008a 9B6A     	 ldr r3,[r3,#40]
 5571 008c 9B08     	 lsrs r3,r3,#2
1594:../Dave/Generated/PWM_SVM/pwm_svm.c ****               XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
 5572              	 .loc 4 1594 0
 5573 008e DBB2     	 uxtb r3,r3
 5574 0090 03F00303 	 and r3,r3,#3
 5575 0094 DBB2     	 uxtb r3,r3
 5576 0096 1046     	 mov r0,r2
 5577 0098 0421     	 movs r1,#4
 5578 009a 1A46     	 mov r2,r3
 5579 009c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 5580              	.L189:
1598:../Dave/Generated/PWM_SVM/pwm_svm.c ****         }
1599:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the scheme*/
1600:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5581              	 .loc 4 1600 0
 5582 00a0 7B68     	 ldr r3,[r7,#4]
 5583 00a2 FA78     	 ldrb r2,[r7,#3]
 5584 00a4 83F89220 	 strb r2,[r3,#146]
1601:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym7;
 5585              	 .loc 4 1601 0
 5586 00a8 7B68     	 ldr r3,[r7,#4]
 5587 00aa 3B4A     	 ldr r2,.L195
 5588 00ac C3F88820 	 str r2,[r3,#136]
1602:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1603:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5589              	 .loc 4 1603 0
 5590 00b0 6FE0     	 b .L179
 5591              	.L188:
 5592 00b2 6EE0     	 b .L179
 5593              	.L183:
1604:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_7SEG_ASYMM:
1605:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 5 segment asymmetric*/
1606:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_5SEG_ASYMM == HandlePtr->svm_config))
 5594              	 .loc 4 1606 0
 5595 00b4 7B68     	 ldr r3,[r7,#4]
 5596 00b6 93F89230 	 ldrb r3,[r3,#146]
 5597 00ba 032B     	 cmp r3,#3
 5598 00bc 04D1     	 bne .L190
1607:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1608:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5599              	 .loc 4 1608 0
 5600 00be 7B68     	 ldr r3,[r7,#4]
 5601 00c0 FA78     	 ldrb r2,[r7,#3]
 5602 00c2 83F89220 	 strb r2,[r3,#146]
1609:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1610:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5603              	 .loc 4 1610 0
 5604 00c6 64E0     	 b .L179
 5605              	.L190:
 5606 00c8 63E0     	 b .L179
 5607              	.L184:
1611:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1612:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_5SEG_SYMM:
1613:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 7 segment asymmetric*/
1614:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_7SEG_SYMM == HandlePtr->svm_config))
 5608              	 .loc 4 1614 0
 5609 00ca 7B68     	 ldr r3,[r7,#4]
 5610 00cc 93F89230 	 ldrb r3,[r3,#146]
 5611 00d0 002B     	 cmp r3,#0
 5612 00d2 16D1     	 bne .L191
1615:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1616:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*disable two of compare match event as it is not required for 5 segment*/
1617:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_DisableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5613              	 .loc 4 1617 0
 5614 00d4 7B68     	 ldr r3,[r7,#4]
 5615 00d6 5B69     	 ldr r3,[r3,#20]
 5616 00d8 1B68     	 ldr r3,[r3]
 5617 00da 1846     	 mov r0,r3
 5618 00dc 0321     	 movs r1,#3
 5619 00de FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableEvent
1618:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1619:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_DisableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5620              	 .loc 4 1619 0
 5621 00e2 7B68     	 ldr r3,[r7,#4]
 5622 00e4 5B69     	 ldr r3,[r3,#20]
 5623 00e6 1B68     	 ldr r3,[r3]
 5624 00e8 1846     	 mov r0,r3
 5625 00ea 0521     	 movs r1,#5
 5626 00ec FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableEvent
1620:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1621:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5627              	 .loc 4 1621 0
 5628 00f0 7B68     	 ldr r3,[r7,#4]
 5629 00f2 FA78     	 ldrb r2,[r7,#3]
 5630 00f4 83F89220 	 strb r2,[r3,#146]
1622:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym5;
 5631              	 .loc 4 1622 0
 5632 00f8 7B68     	 ldr r3,[r7,#4]
 5633 00fa 284A     	 ldr r2,.L195+4
 5634 00fc C3F88820 	 str r2,[r3,#136]
1623:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1624:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5635              	 .loc 4 1624 0
 5636 0100 47E0     	 b .L179
 5637              	.L191:
 5638 0102 46E0     	 b .L179
 5639              	.L185:
1625:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1626:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_5SEG_ASYMM:
1627:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 7 segment asymmetric*/
1628:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_7SEG_ASYMM == HandlePtr->svm_config))
 5640              	 .loc 4 1628 0
 5641 0104 7B68     	 ldr r3,[r7,#4]
 5642 0106 93F89230 	 ldrb r3,[r3,#146]
 5643 010a 012B     	 cmp r3,#1
 5644 010c 08D1     	 bne .L192
1629:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1630:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5645              	 .loc 4 1630 0
 5646 010e 7B68     	 ldr r3,[r7,#4]
 5647 0110 FA78     	 ldrb r2,[r7,#3]
 5648 0112 83F89220 	 strb r2,[r3,#146]
1631:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym5;
 5649              	 .loc 4 1631 0
 5650 0116 7B68     	 ldr r3,[r7,#4]
 5651 0118 214A     	 ldr r2,.L195+8
 5652 011a C3F88820 	 str r2,[r3,#136]
1632:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1633:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5653              	 .loc 4 1633 0
 5654 011e 38E0     	 b .L179
 5655              	.L192:
 5656 0120 37E0     	 b .L179
 5657              	.L186:
1634:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1635:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_PSEUDONULL_3ACTIVE:
1636:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is pseudo null 4 active v
1637:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_PSEUDONULL_4ACTIVE == HandlePtr->svm_config))
 5658              	 .loc 4 1637 0
 5659 0122 7B68     	 ldr r3,[r7,#4]
 5660 0124 93F89230 	 ldrb r3,[r3,#146]
 5661 0128 052B     	 cmp r3,#5
 5662 012a 15D1     	 bne .L193
1638:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1639:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)(
1640:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 * (uint32_t) HandlePtr->tmin_
 5663              	 .loc 4 1640 0
 5664 012c 7B68     	 ldr r3,[r7,#4]
 5665 012e B3F8C430 	 ldrh r3,[r3,#196]
1639:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 * (uint32_t) HandlePtr->tmin_
 5666              	 .loc 4 1639 0
 5667 0132 1A46     	 mov r2,r3
 5668 0134 5200     	 lsls r2,r2,#1
 5669 0136 1344     	 add r3,r3,r2
 5670 0138 9BB2     	 uxth r3,r3
 5671 013a C3F58043 	 rsb r3,r3,#16384
 5672 013e 9AB2     	 uxth r2,r3
 5673 0140 7B68     	 ldr r3,[r7,#4]
 5674 0142 A3F8C620 	 strh r2,[r3,#198]
1641:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5675              	 .loc 4 1641 0
 5676 0146 7B68     	 ldr r3,[r7,#4]
 5677 0148 FA78     	 ldrb r2,[r7,#3]
 5678 014a 83F89220 	 strb r2,[r3,#146]
1642:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc3av5segmentCompVal;
 5679              	 .loc 4 1642 0
 5680 014e 7B68     	 ldr r3,[r7,#4]
 5681 0150 144A     	 ldr r2,.L195+12
 5682 0152 C3F88820 	 str r2,[r3,#136]
1643:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1644:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5683              	 .loc 4 1644 0
 5684 0156 1CE0     	 b .L179
 5685              	.L193:
 5686 0158 1BE0     	 b .L179
 5687              	.L187:
1645:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1646:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_PSEUDONULL_4ACTIVE:
1647:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is pseudo null 3 active v
1648:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_PSEUDONULL_3ACTIVE == HandlePtr->svm_config))
 5688              	 .loc 4 1648 0
 5689 015a 7B68     	 ldr r3,[r7,#4]
 5690 015c 93F89230 	 ldrb r3,[r3,#146]
 5691 0160 042B     	 cmp r3,#4
 5692 0162 15D1     	 bne .L194
1649:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1650:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)(
1651:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) HandlePtr->tmin_
 5693              	 .loc 4 1651 0
 5694 0164 7B68     	 ldr r3,[r7,#4]
 5695 0166 B3F8C430 	 ldrh r3,[r3,#196]
1650:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) HandlePtr->tmin_
 5696              	 .loc 4 1650 0
 5697 016a 1A46     	 mov r2,r3
 5698 016c 9203     	 lsls r2,r2,#14
 5699 016e D31A     	 subs r3,r2,r3
 5700 0170 9B00     	 lsls r3,r3,#2
 5701 0172 9BB2     	 uxth r3,r3
 5702 0174 03F58043 	 add r3,r3,#16384
 5703 0178 9AB2     	 uxth r2,r3
 5704 017a 7B68     	 ldr r3,[r7,#4]
 5705 017c A3F8C620 	 strh r2,[r3,#198]
1652:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5706              	 .loc 4 1652 0
 5707 0180 7B68     	 ldr r3,[r7,#4]
 5708 0182 FA78     	 ldrb r2,[r7,#3]
 5709 0184 83F89220 	 strb r2,[r3,#146]
1653:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc4av7segmentCompVal;
 5710              	 .loc 4 1653 0
 5711 0188 7B68     	 ldr r3,[r7,#4]
 5712 018a 074A     	 ldr r2,.L195+16
 5713 018c C3F88820 	 str r2,[r3,#136]
 5714              	.L194:
1654:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1655:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5715              	 .loc 4 1655 0
 5716 0190 00BF     	 nop
 5717              	.L179:
1656:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1657:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5718              	 .loc 4 1657 0
 5719 0192 0837     	 adds r7,r7,#8
 5720              	.LCFI227:
 5721              	 .cfi_def_cfa_offset 8
 5722 0194 BD46     	 mov sp,r7
 5723              	.LCFI228:
 5724              	 .cfi_def_cfa_register 13
 5725              	 
 5726 0196 80BD     	 pop {r7,pc}
 5727              	.L196:
 5728              	 .align 2
 5729              	.L195:
 5730 0198 00000000 	 .word PWM_SVM_CalCmpValueSym7
 5731 019c 00000000 	 .word PWM_SVM_CalCmpValueSym5
 5732 01a0 00000000 	 .word PWM_SVM_CalCmpValueAsym5
 5733 01a4 00000000 	 .word PWM_SVM_Calc3av5segmentCompVal
 5734 01a8 00000000 	 .word PWM_SVM_Calc4av7segmentCompVal
 5735              	 .cfi_endproc
 5736              	.LFE262:
 5738              	 .section .text.PWM_SVM_lCAPeriodValueConfig,"ax",%progbits
 5739              	 .align 2
 5740              	 .global PWM_SVM_lCAPeriodValueConfig
 5741              	 .thumb
 5742              	 .thumb_func
 5744              	PWM_SVM_lCAPeriodValueConfig:
 5745              	.LFB263:
1658:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1659:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCAPeriodValueConfig(PWM_SVM_t* const HandlePtr)
1660:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5746              	 .loc 4 1660 0
 5747              	 .cfi_startproc
 5748              	 
 5749              	 
 5750 0000 80B5     	 push {r7,lr}
 5751              	.LCFI229:
 5752              	 .cfi_def_cfa_offset 8
 5753              	 .cfi_offset 7,-8
 5754              	 .cfi_offset 14,-4
 5755 0002 82B0     	 sub sp,sp,#8
 5756              	.LCFI230:
 5757              	 .cfi_def_cfa_offset 16
 5758 0004 00AF     	 add r7,sp,#0
 5759              	.LCFI231:
 5760              	 .cfi_def_cfa_register 7
 5761 0006 7860     	 str r0,[r7,#4]
1661:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_5SEG_ASYMM < HandlePtr->svm_config))
 5762              	 .loc 4 1661 0
 5763 0008 7B68     	 ldr r3,[r7,#4]
 5764 000a 93F89230 	 ldrb r3,[r3,#146]
 5765 000e 032B     	 cmp r3,#3
 5766 0010 47D9     	 bls .L197
1662:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1663:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->period = ((HandlePtr->period + 1U) >> 1U) - 1U;
 5767              	 .loc 4 1663 0
 5768 0012 7B68     	 ldr r3,[r7,#4]
 5769 0014 D3F89C30 	 ldr r3,[r3,#156]
 5770 0018 0133     	 adds r3,r3,#1
 5771 001a 5B08     	 lsrs r3,r3,#1
 5772 001c 5A1E     	 subs r2,r3,#1
 5773 001e 7B68     	 ldr r3,[r7,#4]
 5774 0020 C3F89C20 	 str r2,[r3,#156]
1664:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[0]->slice_ptr, (uint16_t) HandlePtr->pe
 5775              	 .loc 4 1664 0
 5776 0024 7B68     	 ldr r3,[r7,#4]
 5777 0026 9B68     	 ldr r3,[r3,#8]
 5778 0028 1A68     	 ldr r2,[r3]
 5779 002a 7B68     	 ldr r3,[r7,#4]
 5780 002c D3F89C30 	 ldr r3,[r3,#156]
 5781 0030 9BB2     	 uxth r3,r3
 5782 0032 1046     	 mov r0,r2
 5783 0034 1946     	 mov r1,r3
 5784 0036 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1665:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[1]->slice_ptr, (uint16_t) HandlePtr->pe
 5785              	 .loc 4 1665 0
 5786 003a 7B68     	 ldr r3,[r7,#4]
 5787 003c DB68     	 ldr r3,[r3,#12]
 5788 003e 1A68     	 ldr r2,[r3]
 5789 0040 7B68     	 ldr r3,[r7,#4]
 5790 0042 D3F89C30 	 ldr r3,[r3,#156]
 5791 0046 9BB2     	 uxth r3,r3
 5792 0048 1046     	 mov r0,r2
 5793 004a 1946     	 mov r1,r3
 5794 004c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1666:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[2]->slice_ptr, (uint16_t) HandlePtr->pe
 5795              	 .loc 4 1666 0
 5796 0050 7B68     	 ldr r3,[r7,#4]
 5797 0052 1B69     	 ldr r3,[r3,#16]
 5798 0054 1A68     	 ldr r2,[r3]
 5799 0056 7B68     	 ldr r3,[r7,#4]
 5800 0058 D3F89C30 	 ldr r3,[r3,#156]
 5801 005c 9BB2     	 uxth r3,r3
 5802 005e 1046     	 mov r0,r2
 5803 0060 1946     	 mov r1,r3
 5804 0062 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1667:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 5805              	 .loc 4 1667 0
 5806 0066 7B68     	 ldr r3,[r7,#4]
 5807 0068 1B68     	 ldr r3,[r3]
 5808 006a 1B7C     	 ldrb r3,[r3,#16]
 5809 006c 002B     	 cmp r3,#0
 5810 006e 0AD0     	 beq .L199
1668:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1669:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->
 5811              	 .loc 4 1669 0
 5812 0070 7B68     	 ldr r3,[r7,#4]
 5813 0072 5B69     	 ldr r3,[r3,#20]
 5814 0074 1A68     	 ldr r2,[r3]
 5815 0076 7B68     	 ldr r3,[r7,#4]
 5816 0078 D3F89C30 	 ldr r3,[r3,#156]
 5817 007c 9BB2     	 uxth r3,r3
 5818 007e 1046     	 mov r0,r2
 5819 0080 1946     	 mov r1,r3
 5820 0082 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 5821              	.L199:
1670:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1671:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1672:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, HandlePtr->confighandle_ptr->shadow_transf
 5822              	 .loc 4 1672 0
 5823 0086 7B68     	 ldr r3,[r7,#4]
 5824 0088 5A68     	 ldr r2,[r3,#4]
 5825 008a 7B68     	 ldr r3,[r7,#4]
 5826 008c 1B68     	 ldr r3,[r3]
 5827 008e 5B6A     	 ldr r3,[r3,#36]
 5828 0090 1046     	 mov r0,r2
 5829 0092 1946     	 mov r1,r3
 5830 0094 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1673:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->max_amplitude = (uint16_t)PWM_SVM_MAX_AMPLITUDE;
 5831              	 .loc 4 1673 0
 5832 0098 7B68     	 ldr r3,[r7,#4]
 5833 009a 4FF48042 	 mov r2,#16384
 5834 009e A3F8C620 	 strh r2,[r3,#198]
 5835              	.L197:
1674:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1675:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5836              	 .loc 4 1675 0
 5837 00a2 0837     	 adds r7,r7,#8
 5838              	.LCFI232:
 5839              	 .cfi_def_cfa_offset 8
 5840 00a4 BD46     	 mov sp,r7
 5841              	.LCFI233:
 5842              	 .cfi_def_cfa_register 13
 5843              	 
 5844 00a6 80BD     	 pop {r7,pc}
 5845              	 .cfi_endproc
 5846              	.LFE263:
 5848              	 .section .text.PWM_SVM_lEAPeriodValueConfig,"ax",%progbits
 5849              	 .align 2
 5850              	 .global PWM_SVM_lEAPeriodValueConfig
 5851              	 .thumb
 5852              	 .thumb_func
 5854              	PWM_SVM_lEAPeriodValueConfig:
 5855              	.LFB264:
1676:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1677:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEAPeriodValueConfig(PWM_SVM_t* const HandlePtr)
1678:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5856              	 .loc 4 1678 0
 5857              	 .cfi_startproc
 5858              	 
 5859              	 
 5860 0000 80B5     	 push {r7,lr}
 5861              	.LCFI234:
 5862              	 .cfi_def_cfa_offset 8
 5863              	 .cfi_offset 7,-8
 5864              	 .cfi_offset 14,-4
 5865 0002 82B0     	 sub sp,sp,#8
 5866              	.LCFI235:
 5867              	 .cfi_def_cfa_offset 16
 5868 0004 00AF     	 add r7,sp,#0
 5869              	.LCFI236:
 5870              	 .cfi_def_cfa_register 7
 5871 0006 7860     	 str r0,[r7,#4]
1679:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->svm_config <= PWM_SVM_5SEG_ASYMM)
 5872              	 .loc 4 1679 0
 5873 0008 7B68     	 ldr r3,[r7,#4]
 5874 000a 93F89230 	 ldrb r3,[r3,#146]
 5875 000e 032B     	 cmp r3,#3
 5876 0010 41D8     	 bhi .L200
1680:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1681:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->period = (HandlePtr->period << 1U) + 1U;
 5877              	 .loc 4 1681 0
 5878 0012 7B68     	 ldr r3,[r7,#4]
 5879 0014 D3F89C30 	 ldr r3,[r3,#156]
 5880 0018 5B00     	 lsls r3,r3,#1
 5881 001a 5A1C     	 adds r2,r3,#1
 5882 001c 7B68     	 ldr r3,[r7,#4]
 5883 001e C3F89C20 	 str r2,[r3,#156]
1682:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[0]->slice_ptr, (uint16_t) HandlePtr->pe
 5884              	 .loc 4 1682 0
 5885 0022 7B68     	 ldr r3,[r7,#4]
 5886 0024 9B68     	 ldr r3,[r3,#8]
 5887 0026 1A68     	 ldr r2,[r3]
 5888 0028 7B68     	 ldr r3,[r7,#4]
 5889 002a D3F89C30 	 ldr r3,[r3,#156]
 5890 002e 9BB2     	 uxth r3,r3
 5891 0030 1046     	 mov r0,r2
 5892 0032 1946     	 mov r1,r3
 5893 0034 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1683:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[1]->slice_ptr, (uint16_t) HandlePtr->pe
 5894              	 .loc 4 1683 0
 5895 0038 7B68     	 ldr r3,[r7,#4]
 5896 003a DB68     	 ldr r3,[r3,#12]
 5897 003c 1A68     	 ldr r2,[r3]
 5898 003e 7B68     	 ldr r3,[r7,#4]
 5899 0040 D3F89C30 	 ldr r3,[r3,#156]
 5900 0044 9BB2     	 uxth r3,r3
 5901 0046 1046     	 mov r0,r2
 5902 0048 1946     	 mov r1,r3
 5903 004a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1684:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[2]->slice_ptr, (uint16_t) HandlePtr->pe
 5904              	 .loc 4 1684 0
 5905 004e 7B68     	 ldr r3,[r7,#4]
 5906 0050 1B69     	 ldr r3,[r3,#16]
 5907 0052 1A68     	 ldr r2,[r3]
 5908 0054 7B68     	 ldr r3,[r7,#4]
 5909 0056 D3F89C30 	 ldr r3,[r3,#156]
 5910 005a 9BB2     	 uxth r3,r3
 5911 005c 1046     	 mov r0,r2
 5912 005e 1946     	 mov r1,r3
 5913 0060 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1685:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 5914              	 .loc 4 1685 0
 5915 0064 7B68     	 ldr r3,[r7,#4]
 5916 0066 1B68     	 ldr r3,[r3]
 5917 0068 1B7C     	 ldrb r3,[r3,#16]
 5918 006a 002B     	 cmp r3,#0
 5919 006c 0AD0     	 beq .L202
1686:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1687:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->
 5920              	 .loc 4 1687 0
 5921 006e 7B68     	 ldr r3,[r7,#4]
 5922 0070 5B69     	 ldr r3,[r3,#20]
 5923 0072 1A68     	 ldr r2,[r3]
 5924 0074 7B68     	 ldr r3,[r7,#4]
 5925 0076 D3F89C30 	 ldr r3,[r3,#156]
 5926 007a 9BB2     	 uxth r3,r3
 5927 007c 1046     	 mov r0,r2
 5928 007e 1946     	 mov r1,r3
 5929 0080 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 5930              	.L202:
1688:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1689:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1690:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, HandlePtr->confighandle_ptr->shadow_transf
 5931              	 .loc 4 1690 0
 5932 0084 7B68     	 ldr r3,[r7,#4]
 5933 0086 5A68     	 ldr r2,[r3,#4]
 5934 0088 7B68     	 ldr r3,[r7,#4]
 5935 008a 1B68     	 ldr r3,[r3]
 5936 008c 5B6A     	 ldr r3,[r3,#36]
 5937 008e 1046     	 mov r0,r2
 5938 0090 1946     	 mov r1,r3
 5939 0092 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 5940              	.L200:
1691:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1692:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5941              	 .loc 4 1692 0
 5942 0096 0837     	 adds r7,r7,#8
 5943              	.LCFI237:
 5944              	 .cfi_def_cfa_offset 8
 5945 0098 BD46     	 mov sp,r7
 5946              	.LCFI238:
 5947              	 .cfi_def_cfa_register 13
 5948              	 
 5949 009a 80BD     	 pop {r7,pc}
 5950              	 .cfi_endproc
 5951              	.LFE264:
 5953              	 .section .text.PWM_SVM_lStaticSVMSchemeModification,"ax",%progbits
 5954              	 .align 2
 5955              	 .global PWM_SVM_lStaticSVMSchemeModification
 5956              	 .thumb
 5957              	 .thumb_func
 5959              	PWM_SVM_lStaticSVMSchemeModification:
 5960              	.LFB265:
1693:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1694:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lStaticSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1695:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5961              	 .loc 4 1695 0
 5962              	 .cfi_startproc
 5963              	 
 5964              	 
 5965 0000 80B5     	 push {r7,lr}
 5966              	.LCFI239:
 5967              	 .cfi_def_cfa_offset 8
 5968              	 .cfi_offset 7,-8
 5969              	 .cfi_offset 14,-4
 5970 0002 82B0     	 sub sp,sp,#8
 5971              	.LCFI240:
 5972              	 .cfi_def_cfa_offset 16
 5973 0004 00AF     	 add r7,sp,#0
 5974              	.LCFI241:
 5975              	 .cfi_def_cfa_register 7
 5976 0006 7860     	 str r0,[r7,#4]
 5977 0008 0B46     	 mov r3,r1
 5978 000a FB70     	 strb r3,[r7,#3]
1696:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1697:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Optimized slice consumption should be unchecked for change of SVM scheme */
1698:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) false == HandlePtr->confighandle_ptr->enable_optimized_slice)
 5979              	 .loc 4 1698 0
 5980 000c 7B68     	 ldr r3,[r7,#4]
 5981 000e 1B68     	 ldr r3,[r3]
 5982 0010 93F84630 	 ldrb r3,[r3,#70]
 5983 0014 002B     	 cmp r3,#0
 5984 0016 40F06F81 	 bne .L203
1699:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1700:../Dave/Generated/PWM_SVM/pwm_svm.c ****     switch (Scheme)
 5985              	 .loc 4 1700 0
 5986 001a FB78     	 ldrb r3,[r7,#3]
 5987 001c 052B     	 cmp r3,#5
 5988 001e 00F26781 	 bhi .L205
 5989 0022 01A2     	 adr r2,.L207
 5990 0024 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 5991              	 .p2align 2
 5992              	.L207:
 5993 0028 41000000 	 .word .L206+1
 5994 002c E5000000 	 .word .L208+1
 5995 0030 43010000 	 .word .L209+1
 5996 0034 A1010000 	 .word .L210+1
 5997 0038 FF010000 	 .word .L211+1
 5998 003c 77020000 	 .word .L212+1
 5999              	 .p2align 1
 6000              	.L206:
1701:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1702:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_7SEG_SYMM:
1703:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1704:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6001              	 .loc 4 1704 0
 6002 0040 7B68     	 ldr r3,[r7,#4]
 6003 0042 9B68     	 ldr r3,[r3,#8]
 6004 0044 1B68     	 ldr r3,[r3]
 6005 0046 1846     	 mov r0,r3
 6006 0048 0121     	 movs r1,#1
 6007 004a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1705:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1706:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6008              	 .loc 4 1706 0
 6009 004e 7B68     	 ldr r3,[r7,#4]
 6010 0050 DB68     	 ldr r3,[r3,#12]
 6011 0052 1B68     	 ldr r3,[r3]
 6012 0054 1846     	 mov r0,r3
 6013 0056 0121     	 movs r1,#1
 6014 0058 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1707:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1708:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6015              	 .loc 4 1708 0
 6016 005c 7B68     	 ldr r3,[r7,#4]
 6017 005e 1B69     	 ldr r3,[r3,#16]
 6018 0060 1B68     	 ldr r3,[r3]
 6019 0062 1846     	 mov r0,r3
 6020 0064 0121     	 movs r1,#1
 6021 0066 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1709:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1710:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1711:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6022              	 .loc 4 1711 0
 6023 006a 7868     	 ldr r0,[r7,#4]
 6024 006c FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1712:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to symmetric*/
1713:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6025              	 .loc 4 1713 0
 6026 0070 7B68     	 ldr r3,[r7,#4]
 6027 0072 9B68     	 ldr r3,[r3,#8]
 6028 0074 1B68     	 ldr r3,[r3]
 6029 0076 1846     	 mov r0,r3
 6030 0078 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1714:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6031              	 .loc 4 1714 0
 6032 007c 7B68     	 ldr r3,[r7,#4]
 6033 007e DB68     	 ldr r3,[r3,#12]
 6034 0080 1B68     	 ldr r3,[r3]
 6035 0082 1846     	 mov r0,r3
 6036 0084 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1715:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6037              	 .loc 4 1715 0
 6038 0088 7B68     	 ldr r3,[r7,#4]
 6039 008a 1B69     	 ldr r3,[r3,#16]
 6040 008c 1B68     	 ldr r3,[r3]
 6041 008e 1846     	 mov r0,r3
 6042 0090 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1716:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1717:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*enable compare match event and bind to respective node*/
1718:../Dave/Generated/PWM_SVM/pwm_svm.c ****         if (PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 6043              	 .loc 4 1718 0
 6044 0094 7B68     	 ldr r3,[r7,#4]
 6045 0096 1B68     	 ldr r3,[r3]
 6046 0098 1B7C     	 ldrb r3,[r3,#16]
 6047 009a 012B     	 cmp r3,#1
 6048 009c 1DD1     	 bne .L213
1719:../Dave/Generated/PWM_SVM/pwm_svm.c ****         {
1720:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 6049              	 .loc 4 1720 0
 6050 009e 7B68     	 ldr r3,[r7,#4]
 6051 00a0 5B69     	 ldr r3,[r3,#20]
 6052 00a2 1B68     	 ldr r3,[r3]
 6053 00a4 1846     	 mov r0,r3
 6054 00a6 0321     	 movs r1,#3
 6055 00a8 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1721:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1722:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 6056              	 .loc 4 1722 0
 6057 00ac 7B68     	 ldr r3,[r7,#4]
 6058 00ae 5B69     	 ldr r3,[r3,#20]
 6059 00b0 1B68     	 ldr r3,[r3]
 6060 00b2 1846     	 mov r0,r3
 6061 00b4 0521     	 movs r1,#5
 6062 00b6 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1723:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1724:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_SetInterruptNode(HandlePtr->phase_ptr[3]->slice_ptr,
 6063              	 .loc 4 1724 0
 6064 00ba 7B68     	 ldr r3,[r7,#4]
 6065 00bc 5B69     	 ldr r3,[r3,#20]
 6066 00be 1A68     	 ldr r2,[r3]
1725:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
1726:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_SR_ID_t)(
1727:../Dave/Generated/PWM_SVM/pwm_svm.c ****                   (HandlePtr->confighandle_ptr->event_sr_selector[3] >> CCU8_CC8_SRS_CM1SR_Pos) & 0
 6067              	 .loc 4 1727 0
 6068 00c0 7B68     	 ldr r3,[r7,#4]
 6069 00c2 1B68     	 ldr r3,[r3]
 6070 00c4 5B6B     	 ldr r3,[r3,#52]
 6071 00c6 9B08     	 lsrs r3,r3,#2
1724:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
 6072              	 .loc 4 1724 0
 6073 00c8 DBB2     	 uxtb r3,r3
 6074 00ca 03F00303 	 and r3,r3,#3
 6075 00ce DBB2     	 uxtb r3,r3
 6076 00d0 1046     	 mov r0,r2
 6077 00d2 0421     	 movs r1,#4
 6078 00d4 1A46     	 mov r2,r3
 6079 00d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 6080              	.L213:
1728:../Dave/Generated/PWM_SVM/pwm_svm.c ****         }
1729:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym7;
 6081              	 .loc 4 1729 0
 6082 00da 7B68     	 ldr r3,[r7,#4]
 6083 00dc 884A     	 ldr r2,.L214
 6084 00de C3F88820 	 str r2,[r3,#136]
1730:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6085              	 .loc 4 1730 0
 6086 00e2 05E1     	 b .L205
 6087              	.L208:
1731:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1732:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_7SEG_ASYMM:
1733:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1734:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6088              	 .loc 4 1734 0
 6089 00e4 7B68     	 ldr r3,[r7,#4]
 6090 00e6 9B68     	 ldr r3,[r3,#8]
 6091 00e8 1B68     	 ldr r3,[r3]
 6092 00ea 1846     	 mov r0,r3
 6093 00ec 0121     	 movs r1,#1
 6094 00ee FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1735:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1736:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6095              	 .loc 4 1736 0
 6096 00f2 7B68     	 ldr r3,[r7,#4]
 6097 00f4 DB68     	 ldr r3,[r3,#12]
 6098 00f6 1B68     	 ldr r3,[r3]
 6099 00f8 1846     	 mov r0,r3
 6100 00fa 0121     	 movs r1,#1
 6101 00fc FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1737:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1738:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6102              	 .loc 4 1738 0
 6103 0100 7B68     	 ldr r3,[r7,#4]
 6104 0102 1B69     	 ldr r3,[r3,#16]
 6105 0104 1B68     	 ldr r3,[r3]
 6106 0106 1846     	 mov r0,r3
 6107 0108 0121     	 movs r1,#1
 6108 010a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1739:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1740:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1741:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6109              	 .loc 4 1741 0
 6110 010e 7868     	 ldr r0,[r7,#4]
 6111 0110 FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1742:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to asymmetric*/
1743:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6112              	 .loc 4 1743 0
 6113 0114 7B68     	 ldr r3,[r7,#4]
 6114 0116 9B68     	 ldr r3,[r3,#8]
 6115 0118 1B68     	 ldr r3,[r3]
 6116 011a 1846     	 mov r0,r3
 6117 011c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1744:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6118              	 .loc 4 1744 0
 6119 0120 7B68     	 ldr r3,[r7,#4]
 6120 0122 DB68     	 ldr r3,[r3,#12]
 6121 0124 1B68     	 ldr r3,[r3]
 6122 0126 1846     	 mov r0,r3
 6123 0128 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1745:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6124              	 .loc 4 1745 0
 6125 012c 7B68     	 ldr r3,[r7,#4]
 6126 012e 1B69     	 ldr r3,[r3,#16]
 6127 0130 1B68     	 ldr r3,[r3]
 6128 0132 1846     	 mov r0,r3
 6129 0134 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1746:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym7;
 6130              	 .loc 4 1746 0
 6131 0138 7B68     	 ldr r3,[r7,#4]
 6132 013a 724A     	 ldr r2,.L214+4
 6133 013c C3F88820 	 str r2,[r3,#136]
1747:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6134              	 .loc 4 1747 0
 6135 0140 D6E0     	 b .L205
 6136              	.L209:
1748:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1749:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_5SEG_SYMM:
1750:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1751:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6137              	 .loc 4 1751 0
 6138 0142 7B68     	 ldr r3,[r7,#4]
 6139 0144 9B68     	 ldr r3,[r3,#8]
 6140 0146 1B68     	 ldr r3,[r3]
 6141 0148 1846     	 mov r0,r3
 6142 014a 0121     	 movs r1,#1
 6143 014c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1752:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1753:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6144              	 .loc 4 1753 0
 6145 0150 7B68     	 ldr r3,[r7,#4]
 6146 0152 DB68     	 ldr r3,[r3,#12]
 6147 0154 1B68     	 ldr r3,[r3]
 6148 0156 1846     	 mov r0,r3
 6149 0158 0121     	 movs r1,#1
 6150 015a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1754:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1755:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6151              	 .loc 4 1755 0
 6152 015e 7B68     	 ldr r3,[r7,#4]
 6153 0160 1B69     	 ldr r3,[r3,#16]
 6154 0162 1B68     	 ldr r3,[r3]
 6155 0164 1846     	 mov r0,r3
 6156 0166 0121     	 movs r1,#1
 6157 0168 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1756:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1757:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1758:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6158              	 .loc 4 1758 0
 6159 016c 7868     	 ldr r0,[r7,#4]
 6160 016e FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1759:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to symmetric*/
1760:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6161              	 .loc 4 1760 0
 6162 0172 7B68     	 ldr r3,[r7,#4]
 6163 0174 9B68     	 ldr r3,[r3,#8]
 6164 0176 1B68     	 ldr r3,[r3]
 6165 0178 1846     	 mov r0,r3
 6166 017a FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1761:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6167              	 .loc 4 1761 0
 6168 017e 7B68     	 ldr r3,[r7,#4]
 6169 0180 DB68     	 ldr r3,[r3,#12]
 6170 0182 1B68     	 ldr r3,[r3]
 6171 0184 1846     	 mov r0,r3
 6172 0186 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1762:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6173              	 .loc 4 1762 0
 6174 018a 7B68     	 ldr r3,[r7,#4]
 6175 018c 1B69     	 ldr r3,[r3,#16]
 6176 018e 1B68     	 ldr r3,[r3]
 6177 0190 1846     	 mov r0,r3
 6178 0192 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1763:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym5;
 6179              	 .loc 4 1763 0
 6180 0196 7B68     	 ldr r3,[r7,#4]
 6181 0198 5B4A     	 ldr r2,.L214+8
 6182 019a C3F88820 	 str r2,[r3,#136]
1764:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6183              	 .loc 4 1764 0
 6184 019e A7E0     	 b .L205
 6185              	.L210:
1765:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1766:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_5SEG_ASYMM:
1767:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1768:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6186              	 .loc 4 1768 0
 6187 01a0 7B68     	 ldr r3,[r7,#4]
 6188 01a2 9B68     	 ldr r3,[r3,#8]
 6189 01a4 1B68     	 ldr r3,[r3]
 6190 01a6 1846     	 mov r0,r3
 6191 01a8 0121     	 movs r1,#1
 6192 01aa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1769:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1770:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6193              	 .loc 4 1770 0
 6194 01ae 7B68     	 ldr r3,[r7,#4]
 6195 01b0 DB68     	 ldr r3,[r3,#12]
 6196 01b2 1B68     	 ldr r3,[r3]
 6197 01b4 1846     	 mov r0,r3
 6198 01b6 0121     	 movs r1,#1
 6199 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1771:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1772:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6200              	 .loc 4 1772 0
 6201 01bc 7B68     	 ldr r3,[r7,#4]
 6202 01be 1B69     	 ldr r3,[r3,#16]
 6203 01c0 1B68     	 ldr r3,[r3]
 6204 01c2 1846     	 mov r0,r3
 6205 01c4 0121     	 movs r1,#1
 6206 01c6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1773:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1774:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1775:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6207              	 .loc 4 1775 0
 6208 01ca 7868     	 ldr r0,[r7,#4]
 6209 01cc FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1776:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1777:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6210              	 .loc 4 1777 0
 6211 01d0 7B68     	 ldr r3,[r7,#4]
 6212 01d2 9B68     	 ldr r3,[r3,#8]
 6213 01d4 1B68     	 ldr r3,[r3]
 6214 01d6 1846     	 mov r0,r3
 6215 01d8 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1778:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6216              	 .loc 4 1778 0
 6217 01dc 7B68     	 ldr r3,[r7,#4]
 6218 01de DB68     	 ldr r3,[r3,#12]
 6219 01e0 1B68     	 ldr r3,[r3]
 6220 01e2 1846     	 mov r0,r3
 6221 01e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1779:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6222              	 .loc 4 1779 0
 6223 01e8 7B68     	 ldr r3,[r7,#4]
 6224 01ea 1B69     	 ldr r3,[r3,#16]
 6225 01ec 1B68     	 ldr r3,[r3]
 6226 01ee 1846     	 mov r0,r3
 6227 01f0 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1780:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym5;
 6228              	 .loc 4 1780 0
 6229 01f4 7B68     	 ldr r3,[r7,#4]
 6230 01f6 454A     	 ldr r2,.L214+12
 6231 01f8 C3F88820 	 str r2,[r3,#136]
1781:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6232              	 .loc 4 1781 0
 6233 01fc 78E0     	 b .L205
 6234              	.L211:
1782:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1783:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_PSEUDONULL_3ACTIVE:
1784:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to edge aligned*/
1785:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6235              	 .loc 4 1785 0
 6236 01fe 7B68     	 ldr r3,[r7,#4]
 6237 0200 9B68     	 ldr r3,[r3,#8]
 6238 0202 1B68     	 ldr r3,[r3]
 6239 0204 1846     	 mov r0,r3
 6240 0206 0021     	 movs r1,#0
 6241 0208 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1786:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1787:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6242              	 .loc 4 1787 0
 6243 020c 7B68     	 ldr r3,[r7,#4]
 6244 020e DB68     	 ldr r3,[r3,#12]
 6245 0210 1B68     	 ldr r3,[r3]
 6246 0212 1846     	 mov r0,r3
 6247 0214 0021     	 movs r1,#0
 6248 0216 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1788:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1789:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6249              	 .loc 4 1789 0
 6250 021a 7B68     	 ldr r3,[r7,#4]
 6251 021c 1B69     	 ldr r3,[r3,#16]
 6252 021e 1B68     	 ldr r3,[r3]
 6253 0220 1846     	 mov r0,r3
 6254 0222 0021     	 movs r1,#0
 6255 0224 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1790:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1791:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1792:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lEAPeriodValueConfig(HandlePtr);
 6256              	 .loc 4 1792 0
 6257 0228 7868     	 ldr r0,[r7,#4]
 6258 022a FFF7FEFF 	 bl PWM_SVM_lEAPeriodValueConfig
1793:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_
 6259              	 .loc 4 1793 0
 6260 022e 7B68     	 ldr r3,[r7,#4]
 6261 0230 B3F8C430 	 ldrh r3,[r3,#196]
 6262 0234 1A46     	 mov r2,r3
 6263 0236 5200     	 lsls r2,r2,#1
 6264 0238 1344     	 add r3,r3,r2
 6265 023a 9BB2     	 uxth r3,r3
 6266 023c C3F58043 	 rsb r3,r3,#16384
 6267 0240 9AB2     	 uxth r2,r3
 6268 0242 7B68     	 ldr r3,[r7,#4]
 6269 0244 A3F8C620 	 strh r2,[r3,#198]
1794:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6270              	 .loc 4 1794 0
 6271 0248 7B68     	 ldr r3,[r7,#4]
 6272 024a 9B68     	 ldr r3,[r3,#8]
 6273 024c 1B68     	 ldr r3,[r3]
 6274 024e 1846     	 mov r0,r3
 6275 0250 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1795:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6276              	 .loc 4 1795 0
 6277 0254 7B68     	 ldr r3,[r7,#4]
 6278 0256 DB68     	 ldr r3,[r3,#12]
 6279 0258 1B68     	 ldr r3,[r3]
 6280 025a 1846     	 mov r0,r3
 6281 025c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1796:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6282              	 .loc 4 1796 0
 6283 0260 7B68     	 ldr r3,[r7,#4]
 6284 0262 1B69     	 ldr r3,[r3,#16]
 6285 0264 1B68     	 ldr r3,[r3]
 6286 0266 1846     	 mov r0,r3
 6287 0268 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1797:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc3av5segmentCompVal;
 6288              	 .loc 4 1797 0
 6289 026c 7B68     	 ldr r3,[r7,#4]
 6290 026e 284A     	 ldr r2,.L214+16
 6291 0270 C3F88820 	 str r2,[r3,#136]
1798:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6292              	 .loc 4 1798 0
 6293 0274 3CE0     	 b .L205
 6294              	.L212:
1799:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1800:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_PSEUDONULL_4ACTIVE:
1801:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to edge aligned*/
1802:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6295              	 .loc 4 1802 0
 6296 0276 7B68     	 ldr r3,[r7,#4]
 6297 0278 9B68     	 ldr r3,[r3,#8]
 6298 027a 1B68     	 ldr r3,[r3]
 6299 027c 1846     	 mov r0,r3
 6300 027e 0021     	 movs r1,#0
 6301 0280 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1803:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1804:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6302              	 .loc 4 1804 0
 6303 0284 7B68     	 ldr r3,[r7,#4]
 6304 0286 DB68     	 ldr r3,[r3,#12]
 6305 0288 1B68     	 ldr r3,[r3]
 6306 028a 1846     	 mov r0,r3
 6307 028c 0021     	 movs r1,#0
 6308 028e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1805:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1806:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6309              	 .loc 4 1806 0
 6310 0292 7B68     	 ldr r3,[r7,#4]
 6311 0294 1B69     	 ldr r3,[r3,#16]
 6312 0296 1B68     	 ldr r3,[r3]
 6313 0298 1846     	 mov r0,r3
 6314 029a 0021     	 movs r1,#0
 6315 029c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1807:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1808:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1809:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lEAPeriodValueConfig(HandlePtr);
 6316              	 .loc 4 1809 0
 6317 02a0 7868     	 ldr r0,[r7,#4]
 6318 02a2 FFF7FEFF 	 bl PWM_SVM_lEAPeriodValueConfig
1810:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude =
1811:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) Handl
 6319              	 .loc 4 1811 0
 6320 02a6 7B68     	 ldr r3,[r7,#4]
 6321 02a8 B3F8C430 	 ldrh r3,[r3,#196]
 6322 02ac 1A46     	 mov r2,r3
 6323 02ae 9203     	 lsls r2,r2,#14
 6324 02b0 D31A     	 subs r3,r2,r3
 6325 02b2 9B00     	 lsls r3,r3,#2
 6326 02b4 9BB2     	 uxth r3,r3
 6327 02b6 03F58043 	 add r3,r3,#16384
 6328 02ba 9AB2     	 uxth r2,r3
1810:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude =
 6329              	 .loc 4 1810 0
 6330 02bc 7B68     	 ldr r3,[r7,#4]
 6331 02be A3F8C620 	 strh r2,[r3,#198]
1812:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6332              	 .loc 4 1812 0
 6333 02c2 7B68     	 ldr r3,[r7,#4]
 6334 02c4 9B68     	 ldr r3,[r3,#8]
 6335 02c6 1B68     	 ldr r3,[r3]
 6336 02c8 1846     	 mov r0,r3
 6337 02ca FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1813:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6338              	 .loc 4 1813 0
 6339 02ce 7B68     	 ldr r3,[r7,#4]
 6340 02d0 DB68     	 ldr r3,[r3,#12]
 6341 02d2 1B68     	 ldr r3,[r3]
 6342 02d4 1846     	 mov r0,r3
 6343 02d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1814:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6344              	 .loc 4 1814 0
 6345 02da 7B68     	 ldr r3,[r7,#4]
 6346 02dc 1B69     	 ldr r3,[r3,#16]
 6347 02de 1B68     	 ldr r3,[r3]
 6348 02e0 1846     	 mov r0,r3
 6349 02e2 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1815:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc4av7segmentCompVal;
 6350              	 .loc 4 1815 0
 6351 02e6 7B68     	 ldr r3,[r7,#4]
 6352 02e8 0A4A     	 ldr r2,.L214+20
 6353 02ea C3F88820 	 str r2,[r3,#136]
1816:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6354              	 .loc 4 1816 0
 6355 02ee 00BF     	 nop
 6356              	.L205:
1817:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1818:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*set the scheme*/
1819:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->svm_config = Scheme;
 6357              	 .loc 4 1819 0
 6358 02f0 7B68     	 ldr r3,[r7,#4]
 6359 02f2 FA78     	 ldrb r2,[r7,#3]
 6360 02f4 83F89220 	 strb r2,[r3,#146]
 6361              	.L203:
1820:../Dave/Generated/PWM_SVM/pwm_svm.c ****   } /* END OF if (false == HandlePtr->enable_optimized_slice) */
1821:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6362              	 .loc 4 1821 0
 6363 02f8 0837     	 adds r7,r7,#8
 6364              	.LCFI242:
 6365              	 .cfi_def_cfa_offset 8
 6366 02fa BD46     	 mov sp,r7
 6367              	.LCFI243:
 6368              	 .cfi_def_cfa_register 13
 6369              	 
 6370 02fc 80BD     	 pop {r7,pc}
 6371              	.L215:
 6372 02fe 00BF     	 .align 2
 6373              	.L214:
 6374 0300 00000000 	 .word PWM_SVM_CalCmpValueSym7
 6375 0304 00000000 	 .word PWM_SVM_CalCmpValueAsym7
 6376 0308 00000000 	 .word PWM_SVM_CalCmpValueSym5
 6377 030c 00000000 	 .word PWM_SVM_CalCmpValueAsym5
 6378 0310 00000000 	 .word PWM_SVM_Calc3av5segmentCompVal
 6379 0314 00000000 	 .word PWM_SVM_Calc4av7segmentCompVal
 6380              	 .cfi_endproc
 6381              	.LFE265:
 6383              	 .section .text.PWM_SVM_GetSVMScheme,"ax",%progbits
 6384              	 .align 2
 6385              	 .global PWM_SVM_GetSVMScheme
 6386              	 .thumb
 6387              	 .thumb_func
 6389              	PWM_SVM_GetSVMScheme:
 6390              	.LFB266:
1822:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the SVM scheme*/
1823:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_SVMCONFIG_t PWM_SVM_GetSVMScheme(PWM_SVM_t* const HandlePtr)
1824:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 6391              	 .loc 4 1824 0
 6392              	 .cfi_startproc
 6393              	 
 6394              	 
 6395              	 
 6396 0000 80B4     	 push {r7}
 6397              	.LCFI244:
 6398              	 .cfi_def_cfa_offset 4
 6399              	 .cfi_offset 7,-4
 6400 0002 83B0     	 sub sp,sp,#12
 6401              	.LCFI245:
 6402              	 .cfi_def_cfa_offset 16
 6403 0004 00AF     	 add r7,sp,#0
 6404              	.LCFI246:
 6405              	 .cfi_def_cfa_register 7
 6406 0006 7860     	 str r0,[r7,#4]
1825:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetSVMScheme:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1826:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (HandlePtr->svm_config);
 6407              	 .loc 4 1826 0
 6408 0008 7B68     	 ldr r3,[r7,#4]
 6409 000a 93F89230 	 ldrb r3,[r3,#146]
1827:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6410              	 .loc 4 1827 0
 6411 000e 1846     	 mov r0,r3
 6412 0010 0C37     	 adds r7,r7,#12
 6413              	.LCFI247:
 6414              	 .cfi_def_cfa_offset 4
 6415 0012 BD46     	 mov sp,r7
 6416              	.LCFI248:
 6417              	 .cfi_def_cfa_register 13
 6418              	 
 6419 0014 5DF8047B 	 ldr r7,[sp],#4
 6420              	.LCFI249:
 6421              	 .cfi_restore 7
 6422              	 .cfi_def_cfa_offset 0
 6423 0018 7047     	 bx lr
 6424              	 .cfi_endproc
 6425              	.LFE266:
 6427 001a 00BF     	 .text
 6428              	.Letext0:
 6429              	 .file 5 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 6430              	 .file 6 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 6431              	 .file 7 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/XMC4400.h"
 6432              	 .file 8 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc4_scu.h"
 6433              	 .file 9 "F:/GitHub Projects/FH Luzern/BAT/BAT/Dave/Generated/DAVE_Common.h"
 6434              	 .file 10 "../Dave/Generated/PWM_SVM/../GLOBAL_CCU8/global_ccu8.h"
 6435              	 .file 11 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc4_gpio.h"
 6436              	 .file 12 "../Dave/Generated/PWM_SVM/pwm_svm.h"
 6437              	 .file 13 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/core_cm4.h"
 6438              	 .file 14 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/system_XMC4400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm_svm.c
    {standard input}:20     .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:71     .text.XMC_CCU8_SLICE_EnableTrap:00000000 $t
    {standard input}:75     .text.XMC_CCU8_SLICE_EnableTrap:00000000 XMC_CCU8_SLICE_EnableTrap
    {standard input}:119    .text.XMC_CCU8_SLICE_DisableTrap:00000000 $t
    {standard input}:123    .text.XMC_CCU8_SLICE_DisableTrap:00000000 XMC_CCU8_SLICE_DisableTrap
    {standard input}:168    .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:172    .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:211    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:215    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:255    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 $t
    {standard input}:259    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 XMC_CCU8_SLICE_SetTimerValue
    {standard input}:300    .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:304    .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:350    .text.XMC_CCU8_SLICE_DisableEvent:00000000 $t
    {standard input}:354    .text.XMC_CCU8_SLICE_DisableEvent:00000000 XMC_CCU8_SLICE_DisableEvent
    {standard input}:401    .text.XMC_CCU8_SLICE_ClearEvent:00000000 $t
    {standard input}:405    .text.XMC_CCU8_SLICE_ClearEvent:00000000 XMC_CCU8_SLICE_ClearEvent
    {standard input}:451    .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode:00000000 $t
    {standard input}:455    .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode:00000000 XMC_CCU8_SLICE_EnableAsymmetricCompareMode
    {standard input}:496    .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode:00000000 $t
    {standard input}:500    .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode:00000000 XMC_CCU8_SLICE_EnableSymmetricCompareMode
    {standard input}:541    .text.XMC_SCU_SetCcuTriggerHigh:00000000 $t
    {standard input}:545    .text.XMC_SCU_SetCcuTriggerHigh:00000000 XMC_SCU_SetCcuTriggerHigh
    {standard input}:587    .text.XMC_SCU_SetCcuTriggerHigh:00000020 $d
    {standard input}:592    .text.XMC_SCU_SetCcuTriggerLow:00000000 $t
    {standard input}:596    .text.XMC_SCU_SetCcuTriggerLow:00000000 XMC_SCU_SetCcuTriggerLow
    {standard input}:638    .text.XMC_SCU_SetCcuTriggerLow:00000020 $d
    {standard input}:643    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:647    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:691    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:695    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:738    .text.PWM_SVM_lEnableEvent:00000000 $t
    {standard input}:743    .text.PWM_SVM_lEnableEvent:00000000 PWM_SVM_lEnableEvent
    {standard input}:803    .text.PWM_SVM_InverterDisable:00000000 $t
    {standard input}:808    .text.PWM_SVM_InverterDisable:00000000 PWM_SVM_InverterDisable
    {standard input}:873    .text.PWM_SVM_InverterEnable:00000000 $t
    {standard input}:878    .text.PWM_SVM_InverterEnable:00000000 PWM_SVM_InverterEnable
    {standard input}:943    .ram_code:00000000 $t
    {standard input}:947    .ram_code:00000000 PWM_SVM_lSymCompValUpdate
    {standard input}:975    .ram_code:00000020 $d
    {standard input}:980    .ram_code:00000034 $t
    {standard input}:1149   .text.PWM_SVM_lAsymCompValUpdate:00000000 $t
    {standard input}:1153   .text.PWM_SVM_lAsymCompValUpdate:00000000 PWM_SVM_lAsymCompValUpdate
    {standard input}:1181   .text.PWM_SVM_lAsymCompValUpdate:00000020 $d
    {standard input}:1186   .text.PWM_SVM_lAsymCompValUpdate:00000034 $t
    {standard input}:1492   .ram_code:00000160 PWM_SVM_CalCmpValueSym7
    {standard input}:1588   .ram_code:000001f8 PWM_SVM_CalCmpValueSym5
    {standard input}:1670   .text.PWM_SVM_CalCmpValueAsym7:00000000 $t
    {standard input}:1675   .text.PWM_SVM_CalCmpValueAsym7:00000000 PWM_SVM_CalCmpValueAsym7
    {standard input}:1836   .text.PWM_SVM_CalCmpValueAsym5:00000000 $t
    {standard input}:1841   .text.PWM_SVM_CalCmpValueAsym5:00000000 PWM_SVM_CalCmpValueAsym5
    {standard input}:1963   .text.PWM_SVM_Calc3av5segmentCompVal:00000000 $t
    {standard input}:1968   .text.PWM_SVM_Calc3av5segmentCompVal:00000000 PWM_SVM_Calc3av5segmentCompVal
    {standard input}:2145   .text.PWM_SVM_Calc3av5segmentCompVal:0000016c $d
    {standard input}:2150   .text.PWM_SVM_Calc3av5segmentCompVal:00000180 $t
    {standard input}:2651   .text.PWM_SVM_Calc4av7segmentCompVal:00000000 $t
    {standard input}:2656   .text.PWM_SVM_Calc4av7segmentCompVal:00000000 PWM_SVM_Calc4av7segmentCompVal
    {standard input}:2805   .text.PWM_SVM_Calc4av7segmentCompVal:00000124 $d
    {standard input}:2810   .text.PWM_SVM_Calc4av7segmentCompVal:00000138 $t
    {standard input}:3364   .ram_code:00000278 PWM_SVM_TimecalcUsingLUT
    {standard input}:3558   .ram_code:000003fc $d
    {standard input}:3563   .text.PWM_SVM_GetAppVersion:00000000 $t
    {standard input}:3568   .text.PWM_SVM_GetAppVersion:00000000 PWM_SVM_GetAppVersion
    {standard input}:3628   .text.PWM_SVM_Init:00000000 $t
    {standard input}:3633   .text.PWM_SVM_Init:00000000 PWM_SVM_Init
    {standard input}:3996   .text.PWM_SVM_Start:00000000 $t
    {standard input}:4001   .text.PWM_SVM_Start:00000000 PWM_SVM_Start
    {standard input}:4380   .text.PWM_SVM_Stop:00000000 $t
    {standard input}:4385   .text.PWM_SVM_Stop:00000000 PWM_SVM_Stop
    {standard input}:4541   .ram_code:00000400 $t
    {standard input}:4546   .ram_code:00000400 PWM_SVM_SVMUpdate
    {standard input}:4607   .text.PWM_SVM_SetPWMFrequency:00000000 $t
    {standard input}:4612   .text.PWM_SVM_SetPWMFrequency:00000000 PWM_SVM_SetPWMFrequency
    {standard input}:4809   .text.PWM_SVM_GetPWMFrequency:00000000 $t
    {standard input}:4814   .text.PWM_SVM_GetPWMFrequency:00000000 PWM_SVM_GetPWMFrequency
    {standard input}:4884   .text.PWM_SVM_SetDeadTime:00000000 $t
    {standard input}:4889   .text.PWM_SVM_SetDeadTime:00000000 PWM_SVM_SetDeadTime
    {standard input}:5099   .text.PWM_SVM_SetDeadTime:0000014c $d
    {standard input}:5105   .text.PWM_SVM_GetRisingEdgeDeadTime:00000000 $t
    {standard input}:5110   .text.PWM_SVM_GetRisingEdgeDeadTime:00000000 PWM_SVM_GetRisingEdgeDeadTime
    {standard input}:5170   .text.PWM_SVM_GetRisingEdgeDeadTime:0000004c $d
    {standard input}:5176   .text.PWM_SVM_GetFallingEdgeDeadTime:00000000 $t
    {standard input}:5181   .text.PWM_SVM_GetFallingEdgeDeadTime:00000000 PWM_SVM_GetFallingEdgeDeadTime
    {standard input}:5241   .text.PWM_SVM_GetFallingEdgeDeadTime:0000004c $d
    {standard input}:5247   .text.PWM_SVM_SetTmin:00000000 $t
    {standard input}:5252   .text.PWM_SVM_SetTmin:00000000 PWM_SVM_SetTmin
    {standard input}:5322   .text.PWM_SVM_SetTmin:00000054 $d
    {standard input}:5328   .text.PWM_SVM_GetTmin:00000000 $t
    {standard input}:5333   .text.PWM_SVM_GetTmin:00000000 PWM_SVM_GetTmin
    {standard input}:5387   .text.PWM_SVM_GetTmin:00000040 $d
    {standard input}:5393   .text.PWM_SVM_SetSVMScheme:00000000 $t
    {standard input}:5398   .text.PWM_SVM_SetSVMScheme:00000000 PWM_SVM_SetSVMScheme
    {standard input}:5488   .text.PWM_SVM_lDynamicSVMSchemeModification:00000000 PWM_SVM_lDynamicSVMSchemeModification
    {standard input}:5959   .text.PWM_SVM_lStaticSVMSchemeModification:00000000 PWM_SVM_lStaticSVMSchemeModification
    {standard input}:5483   .text.PWM_SVM_lDynamicSVMSchemeModification:00000000 $t
    {standard input}:5516   .text.PWM_SVM_lDynamicSVMSchemeModification:0000001c $d
    {standard input}:5522   .text.PWM_SVM_lDynamicSVMSchemeModification:00000034 $t
    {standard input}:5730   .text.PWM_SVM_lDynamicSVMSchemeModification:00000198 $d
    {standard input}:5739   .text.PWM_SVM_lCAPeriodValueConfig:00000000 $t
    {standard input}:5744   .text.PWM_SVM_lCAPeriodValueConfig:00000000 PWM_SVM_lCAPeriodValueConfig
    {standard input}:5849   .text.PWM_SVM_lEAPeriodValueConfig:00000000 $t
    {standard input}:5854   .text.PWM_SVM_lEAPeriodValueConfig:00000000 PWM_SVM_lEAPeriodValueConfig
    {standard input}:5954   .text.PWM_SVM_lStaticSVMSchemeModification:00000000 $t
    {standard input}:5993   .text.PWM_SVM_lStaticSVMSchemeModification:00000028 $d
    {standard input}:5999   .text.PWM_SVM_lStaticSVMSchemeModification:00000040 $t
    {standard input}:6374   .text.PWM_SVM_lStaticSVMSchemeModification:00000300 $d
    {standard input}:6384   .text.PWM_SVM_GetSVMScheme:00000000 $t
    {standard input}:6389   .text.PWM_SVM_GetSVMScheme:00000000 PWM_SVM_GetSVMScheme
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CCU8_SLICE_SetTimerCompareMatch
Sinus60_tab
GLOBAL_CCU8_Init
XMC_GPIO_Init
XMC_GPIO_SetHardwareControl
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_DeadTimeInit
XMC_CCU8_SLICE_ConfigureEvent
XMC_CCU8_SLICE_TrapConfig
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SLICE_ConfigureStatusBitOutput
XMC_CCU8_SLICE_StartConfig
XMC_CCU8_SLICE_SetDeadTimeValue
XMC_CCU8_SLICE_SetDeadTimePrescaler
XMC_CCU8_SLICE_SetInterruptNode
XMC_CCU8_SLICE_SetTimerCountingMode
