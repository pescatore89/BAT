   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "uart_config_conf.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_SetInputSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_SetInputSource:
  25              	.LFB137:
  26              	 .file 1 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_usic.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2017-09-08
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** */
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   };
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   };
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** }
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** }
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** 
 688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** /**
 689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *
 699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****  */
 708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 709 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
  45 000c 1346     	 mov r3,r2
  46 000e BB70     	 strb r3,[r7,#2]
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
  47              	 .loc 1 710 0
  48 0010 F878     	 ldrb r0,[r7,#3]
  49 0012 FB78     	 ldrb r3,[r7,#3]
  50 0014 7A68     	 ldr r2,[r7,#4]
  51 0016 0633     	 adds r3,r3,#6
  52 0018 9B00     	 lsls r3,r3,#2
  53 001a 1344     	 add r3,r3,r2
  54 001c 5B68     	 ldr r3,[r3,#4]
  55 001e 23F00702 	 bic r2,r3,#7
 711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
  56              	 .loc 1 711 0
  57 0022 BB78     	 ldrb r3,[r7,#2]
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
  58              	 .loc 1 710 0
  59 0024 1A43     	 orrs r2,r2,r3
  60 0026 7968     	 ldr r1,[r7,#4]
  61 0028 831D     	 adds r3,r0,#6
  62 002a 9B00     	 lsls r3,r3,#2
  63 002c 0B44     	 add r3,r3,r1
  64 002e 5A60     	 str r2,[r3,#4]
 712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_usic.h **** }
  65              	 .loc 1 712 0
  66 0030 0C37     	 adds r7,r7,#12
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 4
  69 0032 BD46     	 mov sp,r7
  70              	.LCFI4:
  71              	 .cfi_def_cfa_register 13
  72              	 
  73 0034 5DF8047B 	 ldr r7,[sp],#4
  74              	.LCFI5:
  75              	 .cfi_restore 7
  76              	 .cfi_def_cfa_offset 0
  77 0038 7047     	 bx lr
  78              	 .cfi_endproc
  79              	.LFE137:
  81 003a 00BF     	 .section .text.XMC_UART_CH_SetSamplePoint,"ax",%progbits
  82              	 .align 2
  83              	 .thumb
  84              	 .thumb_func
  86              	XMC_UART_CH_SetSamplePoint:
  87              	.LFB208:
  88              	 .file 2 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_uart.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @file xmc_uart.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @date 2017-10-25
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Initial
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *      
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-05-20:
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Description updated <br>
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_TriggerServiceRequest() and XMC_UART_CH_SelectInterruptNodePointer <br>
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-06-20:
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-09-01:
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_EVENT_t enum for supporting XMC_UART_CH_EnableEvent() and XMC_UART_CH
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *       for supporting multiple events configuration <br>
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 2016-05-20:
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableDataTransmission() and XMC_UART_CH_DisableDataTransmission()
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 2017-10-25:
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableMasterClock() and XMC_UART_CH_DisableMasterClock()
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @endcond 
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #ifndef XMC_UART_H
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART_H
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * HEADER FILES
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #include "xmc_usic.h"
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup XMClib XMC Peripheral Library
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup UART
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @brief Universal Asynchronous Receiver/Transmitter (UART) driver for XMC microcontroller family.
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The UART driver uses Universal Serial Interface Channel(USIC) module to implement UART protocol.
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * It provides APIs to configure USIC channel for UART communication. The driver enables the user
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * in getting the status of UART protocol events, configuring interrupt service requests, protocol
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * related parameter configuration etc.
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver features:
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Configuration structure XMC_UART_CH_CONFIG_t and initialization function XMC_UART_CH_Init()
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Enumeration of events with their bit masks @ref XMC_UART_CH_EVENT_t, @ref XMC_UART_CH_STATUS_
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows the selection of input source for the DX0 input stage using the API XMC_UART_CH_SetInp
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows configuration of baudrate using XMC_UART_CH_SetBaudrate() and configuration of data le
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  XMC_UART_CH_SetWordLength() and XMC_UART_CH_SetFrameLength()
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Provides the status of UART protocol events, XMC_UART_CH_GetStatusFlag()
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows transmission of data using XMC_UART_CH_Transmit() and gets received data using XMC_UAR
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * MACROS
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC0)
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH0 XMC_USIC0_CH0 /**< USIC0 channel 0 base address */
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH1 XMC_USIC0_CH1 /**< USIC0 channel 1 base address */
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC1)
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH0 XMC_USIC1_CH0 /**< USIC1 channel 0 base address */
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH1 XMC_USIC1_CH1 /**< USIC1 channel 1 base address */
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC2)
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH0 XMC_USIC2_CH0 /**< USIC2 channel 0 base address */
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH1 XMC_USIC2_CH1 /**< USIC2 channel 1 base address */
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * ENUMS
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver status
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_OK,     /**< UART driver status : OK*/
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_ERROR,  /**< UART driver status : ERROR */
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_BUSY    /**< UART driver status : BUSY */
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_t;
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** * UART portocol status. The enum values can be used for getting the status of UART channel.
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** *
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** */
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS_FLAG
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE = USIC_CH_PSR_ASCMode_TXIDLE_Msk,                 /**< 
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEPTION_IDLE = USIC_CH_PSR_ASCMode_RXIDLE_Msk,                    /**< 
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED = USIC_CH_PSR_ASCMode_SBD_Msk,       /**< 
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_COLLISION_DETECTED = USIC_CH_PSR_ASCMode_COL_Msk,                   /**< 
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_NOISE_DETECTED = USIC_CH_PSR_ASCMode_RNS_Msk,              /**< 
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_0 = USIC_CH_PSR_ASCMode_FER0_Msk,          /**< 
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_1 = USIC_CH_PSR_ASCMode_FER1_Msk,          /**< 
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_FRAME_FINISHED = USIC_CH_PSR_ASCMode_RFF_Msk,               /**< 
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMITTER_FRAME_FINISHED = USIC_CH_PSR_ASCMode_TFF_Msk,           /**< 
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY = USIC_CH_PSR_ASCMode_BUSY_Msk,                /**< 
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_ASCMode_RSIF_Msk,           /**< 
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_ASCMode_DLIF_Msk,                /**< 
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_ASCMode_TSIF_Msk,           /**< 
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_ASCMode_TBIF_Msk,          /**< 
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_RIF_Msk,                   /**< 
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_AIF_Msk,       /**< 
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_ASCMode_BRGIF_Msk      /**< 
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_FLAG_t;
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** * UART configuration events. The enums can be used for configuring events using the CCR register.
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** */
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_CH_UART_EVENT
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_SYNCHRONIZATION_BREAK = USIC_CH_PCR_ASCMode_SBIEN_Msk, /**< Event synchronizati
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_COLLISION = USIC_CH_PCR_ASCMode_CDEN_Msk,              /**< Event collision */
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVER_NOISE = USIC_CH_PCR_ASCMode_RNIEN_Msk,        /**< Event receiver nois
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FORMAT_ERROR = USIC_CH_PCR_ASCMode_FEIEN_Msk,          /**< Event format error 
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FRAME_FINISHED = USIC_CH_PCR_ASCMode_FFIEN_Msk         /**< Event frame finishe
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_EVENT_t;
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * UART Input sampling frequency options
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT_SAMPLING_FREQ
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FPERIPH            = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH,    
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_D
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_SAMPLING_FREQ_t;
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * UART input stages
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD = 0UL   /**< UART input stage DX0*/
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #if UC_FAMILY == XMC1
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   ,
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD1 = 3UL, /**< UART input stage DX3*/
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD2 = 5UL  /**< UART input stage DX5*/
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_t;
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * UART channel interrupt node pointers
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INTERRUPT_NODE_POINTER
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEI
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTER
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTO
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INTERRUPT_NODE_POINTER_t;
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * DATA STRUCTURES
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * UART initialization structure
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** */
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** typedef struct XMC_UART_CH_CONFIG
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   uint32_t baudrate;                         /**< Desired baudrate. \b Range: minimum= 100, maximum
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t data_bits;                         /**< Number of bits for the data field. Value configur
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 16*/
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t frame_length;                      /**< Indicates nmber of bits in a frame. Configured as
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 63*/
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t stop_bits;                         /**< Number of stop bits. \b Range: minimum= 1, maximu
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t oversampling;						           /**< Number of samples for a symbol(DCTQ).\b Range: minimum
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;     /**< Parity mode. \b Range: @ref XMC_USIC_CH_PARITY_MO
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                                                   @ref XMC_USIC_CH_PARITY_MODE_ODD*/
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_CONFIG_t;
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * API PROTOTYPES
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #ifdef __cplusplus
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** extern "C" {
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1,XMC_UART1_CH0, XMC_UART1_CH1,XMC_UART2_CH0, XM
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param config Constant pointer to UART configuration structure of type @ref XMC_UART_CH_CONFIG_t
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status of initializing the USIC channel for UART protocol.\n
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: @ref XMC_UART_CH_STATUS_OK if initialization is successful.\n
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *                    @ref XMC_UART_CH_STATUS_ERROR if configuration of baudrate failed.
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Initializes the USIC channel for UART protocol.\n\n
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * During the initialization, USIC channel is enabled, baudrate is configured with the defined over
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * in the intialization structure. If the oversampling value is set to 0 in the structure, the defa
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * is considered. Sampling point for each symbol is configured at the half of sampling period. Symb
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * majority decision among 3 samples. 
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length is configured with the number of data bits. If the value of \a frame_length is 0, th
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * is set to the same value as word length. If \a frame_length is greater than 0, it is set as the 
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Parity mode is set to the value configured for \a parity_mode.
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The USIC channel should be set to UART mode by calling the XMC_UART_CH_Start() API after the ini
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Start(), XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Init(XMC_USIC_CH_t *const channel, const XMC_UART_CH_CONFIG_t *const config);
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the USIC channel operation mode to UART mode.\n\n
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is set to 2(UART mode). This API should be called after configurin
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * the USIC channel. Transmission and reception can happen only when the UART mode is set. 
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * This is an inline function.
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_Start(XMC_USIC_CH_t *const channel)
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->CCR = (uint32_t)(((channel->CCR) & (~USIC_CH_CCR_MODE_Msk)) | (uint32_t)XMC_USIC_CH_OPER
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status to indicate if the communication channel is stopped successf
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_OK if the communication channel is stopped.
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_BUSY if the communication channel is busy.
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Stops the UART communication.\n\n
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is reset. This disables the communication.
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Before starting the communication again, the channel has to be reconfigured.
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init() \n\n\n
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_Stop(XMC_USIC_CH_t *const channel);
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1 ,XMC_UART1_CH0, XMC_UART1_CH1, XMC_UART2_CH0,
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param rate Desired baudrate. \n
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *           \b Range: minimum value = 100, maximum value depends on the peripheral clock frequency
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 This can be related to the number of samples for each logic state of the data signal.\n
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 \b Range: 4 to 32. Value should be chosen based on the protocol used.
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status indicating the baudrate configuration.\n
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 			     \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description:</b><br>
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the bus speed in bits per second.\n\n
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Derives the values of \a STEP and PDIV to arrive at the optimum realistic speed possible.
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \a oversampling is the number of samples to be taken for each symbol of UART protocol.
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Default \a oversampling of 16 is considered if the input \a oversampling is less than 4. It is r
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * a minimum oversampling of 4 for UART.
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init(), XMC_UART_CH_Stop()
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  data Data to be transmitted. \n 
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: 16 bit unsigned data within the range 0 to 65535. Actual size of
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          data transmitted depends on the configured number of bits for the UART protocol in the 
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Transmits data over serial communication channel using UART protocol.\n\n
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either put to the transmit FIFO or to TBUF register.
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Before putting data to TBUF, the API waits for TBUF to finish shifting its contents to shift reg
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * So user can continuously execute the API without checking for TBUF busy status. Based on the num
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * data bits configured, the lower significant bits will be extracted for transmission.
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: When FIFO is not configured, the API waits for the TBUF to be available. 
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * This makes the execution a blocking call.
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetReceivedData() \n\n\n
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data);
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return uint16_t Received data over UART communication channel.
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides one word of data received over UART communication channel.\n\n
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either read from the receive FIFO or RBUF register.
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Before returning the value, there is no check for data validity. User should check the appropria
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * data receive flags(standard receive/alternative receive/FIFO standard receive/FIFO alternative r
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * before executing the API. Reading from an empty receive FIFO can generate a receive error event.
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetStatusFlag(), XMC_UART_CH_Transmit() \n\n\n
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** uint16_t XMC_UART_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  word_length Data word length. \n
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 16.
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the data word length in number of bits.\n\n
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length can range from 1 to 16. It indicates the number of data bits in a data word.
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a word_length will be decremented by 1 before setting the value to \a SCTR registe
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * If the UART data bits is more than 16, then the frame length should be set to the actual number 
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * word length should be configured with the number of bits expected in each transaction. For examp
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * for UART communication is 20 bits, then the frame length should be set as 20. Word length can be
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * transmit and receive handling. If data is stored as 8bit array, then the word length can be set 
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * a full message of UART data should be transmitted/ received as 3 data words.
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetFrameLength() \n\n\n
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetWordLength(channel, word_length);
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  frame_length Number of data bits in each UART frame. \n
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 64.
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the number of data bits for UART communication.\n\n
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The frame length is configured by setting the input value to \a SCTR register.
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a frame_length will be decremented by 1, before setting it to the register.
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Frame length should not be set to 64 for UART communication.
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetWordLength() \n\n\n
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetFrameLength(channel, frame_length);
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Event bitmasks to enable. Use the type @ref XMC_UART_CH_EVENT_t for naming events.
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Enables interrupt events for UART communication.\n\n
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @ref XMC_UART_CH_EVENT_t enumerates multiple event bitmasks. These enumerations can be used as i
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are configured by setting bits in the CCR register.
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(), XMC_UART_CH_SetInterruptNodePointer(), XMC_UART_CH_GetStatusFlag() \
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Bitmask of events to disable. Use the type @ref XMC_UART_CH_EVENT_t for naming eve
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Disables the interrupt events by clearing the bits in CCR register.\n\n
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EVENT_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as i
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_ClearStatusFlag(), XMC_UART_CH_EnableEvent() \n\n\n
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number for generating protocol interrupts.\n
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: 0 to 5.
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for UART channel protocol events.\n\n
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * For all the protocol events enlisted in the enumeration XMC_UART_CH_EVENT_t, one common
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * interrupt gets generated. The service request connects the interrupt node to the UART 
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * protocol events.
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                                                          const uint8_t service_request)
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, 
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                                               (uint32_t)service_request);
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: @ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  			@ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number.\n
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: 0 to 5.
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for USIC channel events. \n\n
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const XMC_UART_CH_INTERRUPT_NODE_POINTE
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const uint32_t service_request)
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 		                                       (uint32_t)service_request);
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@r
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 			\b Range: 0 to 5.
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Trigger a UART interrupt service request.\n\n
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * When the UART service request is triggered, the NVIC interrupt associated with it will be
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * generated if enabled.
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SelectInterruptNodePointer() \n\n\n
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return Status of UART channel events. \n 
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides the status of UART channel events.\n\n
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Status provided by the API represents the status of multiple events at their bit positions. The 
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * obtained using the enumeration XMC_UART_CH_STATUS_FLAG_t. Event status is obtained by reading
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * the register PSR_ASCMode.
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent(),  XMC_UART_CH_ClearStatusFlag()\n\n\n
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE uint32_t XMC_UART_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   return channel->PSR_ASCMode;
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param flag UART events to be cleared. \n
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Clears the status of UART channel events.\n\n
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_STATUS_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as 
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are cleared by setting the bitmask to the PSCR register.
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(),  XMC_UART_CH_GetStatusFlag()\n\n\n
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PSCR = flag;
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param input UART channel input stage of type @ref XMC_UART_CH_INPUT_t. \n 
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: @ref XMC_UART_CH_INPUT_RXD (for DX0),
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_INPUT_RXD1 (for DX3), @ref XMC_UART_CH_INPUT_RXD2 (for DX5).
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param source Input source select for the input stage. The table provided below maps the decimal
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * </tr></table>
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets input soource for the UART communication.\n\n
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * It is used for configuring the input stage for data reception.
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. 
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The API can be used for the input stages DX0, DX3 and DX5. 
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableInputInversion() \n\n\n
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_UART_CH_INP
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~(USIC_CH_DX0CR_INSW_Msk|USIC_CH_DX0CR_
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param pulse_length Length of the zero pulse in number of time quanta. \n 
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: 0 to 7.
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the length of zero pulse in number of time quanta. Value 0 indicates one time quanta.\n\n
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Maximum possible is 8 time quanta with the value configured as 7.\n
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The value is set to PCR_ASCMode register.
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableInputInversion(), XMC_UART_CH_SetSamplePoint() \n\n\n
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** */
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetPulseLength(XMC_USIC_CH_t *const channel, const uint8_t pulse_l
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode = (uint32_t)(channel->PCR_ASCMode & (~USIC_CH_PCR_ASCMode_PL_Msk)) |
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                          ((uint32_t)pulse_length << USIC_CH_PCR_ASCMode_PL_Pos);
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Enables the generation of the master clock MCLK.\n\n
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_USIC_CH_SetMclkOutputPassiveLevel()\n\n\n
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** */
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_EnableMasterClock(XMC_USIC_CH_t *const channel)
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode |= USIC_CH_PCR_ASCMode_MCLK_Msk;
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Disables the generation of the master clock MCLK.\n\n
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_USIC_CH_SetMclkOutputPassiveLevel()\n\n\n
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** */
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_DisableMasterClock(XMC_USIC_CH_t *const channel)
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode &= (uint32_t)~USIC_CH_PCR_ASCMode_MCLK_Msk;
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** 
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** /**
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @param sample_point Sample point among the number of samples. \n
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: minimum= 0, maximum= \a oversampling (DCTQ).
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  *
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the sample point among the multiple samples for each UART symbol.\n\n
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * The sample point is the one sample among number of samples set as oversampling. The value should
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * the oversampling value. XMC_UART_CH_Init() sets the sample point to the sample at the centre. Fo
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * example if the oversampling is 16, then the sample point is set to 9.
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableInputInversion(), XMC_UART_CH_SetSamplePoint() \n\n\n
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****  */
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetSamplePoint(XMC_USIC_CH_t *const channel, const uint32_t sample
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** {
  89              	 .loc 2 661 0
  90              	 .cfi_startproc
  91              	 
  92              	 
  93              	 
  94 0000 80B4     	 push {r7}
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 4
  97              	 .cfi_offset 7,-4
  98 0002 83B0     	 sub sp,sp,#12
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 16
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 7
 104 0006 7860     	 str r0,[r7,#4]
 105 0008 3960     	 str r1,[r7]
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode = (uint32_t)((channel->PCR_ASCMode & (uint32_t)(~USIC_CH_PCR_ASCMode_SP_Msk)
 106              	 .loc 2 662 0
 107 000a 7B68     	 ldr r3,[r7,#4]
 108 000c DB6B     	 ldr r3,[r3,#60]
 109 000e 23F4F852 	 bic r2,r3,#7936
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****                          (sample_point << USIC_CH_PCR_ASCMode_SP_Pos));
 110              	 .loc 2 663 0
 111 0012 3B68     	 ldr r3,[r7]
 112 0014 1B02     	 lsls r3,r3,#8
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode = (uint32_t)((channel->PCR_ASCMode & (uint32_t)(~USIC_CH_PCR_ASCMode_SP_Msk)
 113              	 .loc 2 662 0
 114 0016 1A43     	 orrs r2,r2,r3
 115 0018 7B68     	 ldr r3,[r7,#4]
 116 001a DA63     	 str r2,[r3,#60]
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_uart.h **** }
 117              	 .loc 2 664 0
 118 001c 0C37     	 adds r7,r7,#12
 119              	.LCFI9:
 120              	 .cfi_def_cfa_offset 4
 121 001e BD46     	 mov sp,r7
 122              	.LCFI10:
 123              	 .cfi_def_cfa_register 13
 124              	 
 125 0020 5DF8047B 	 ldr r7,[sp],#4
 126              	.LCFI11:
 127              	 .cfi_restore 7
 128              	 .cfi_def_cfa_offset 0
 129 0024 7047     	 bx lr
 130              	 .cfi_endproc
 131              	.LFE208:
 133              	 .global UART_CONFIG_0_channel_config
 134 0026 00BF     	 .section .rodata.UART_CONFIG_0_channel_config,"a",%progbits
 135              	 .align 2
 138              	UART_CONFIG_0_channel_config:
 139 0000 004B0000 	 .word 19200
 140 0004 08       	 .byte 8
 141 0005 08       	 .byte 8
 142 0006 02       	 .byte 2
 143 0007 10       	 .byte 16
 144 0008 0000     	 .short 0
 145 000a 0000     	 .space 2
 146              	 .global UART_CONFIG_0_config
 147              	 .section .rodata.UART_CONFIG_0_config,"a",%progbits
 148              	 .align 2
 151              	UART_CONFIG_0_config:
 152 0000 00000000 	 .word UART_CONFIG_0_channel_config
 153 0004 08       	 .byte 8
 154 0005 00       	 .byte 0
 155 0006 0000     	 .space 2
 156 0008 00000000 	 .word UART_CONFIG_0_lInit
 157 000c 00       	 .byte 0
 158 000d 00       	 .byte 0
 159 000e 00       	 .byte 0
 160 000f 00       	 .byte 0
 161 0010 00       	 .byte 0
 162 0011 000000   	 .space 3
 163              	 .global UART_CONFIG_0
 164              	 .section .data.UART_CONFIG_0,"aw",%progbits
 165              	 .align 2
 168              	UART_CONFIG_0:
 169 0000 00000248 	 .word 1208090624
 170 0004 00000000 	 .word UART_CONFIG_0_config
 171              	 .section .text.UART_CONFIG_0_lInit,"ax",%progbits
 172              	 .align 2
 173              	 .global UART_CONFIG_0_lInit
 174              	 .thumb
 175              	 .thumb_func
 177              	UART_CONFIG_0_lInit:
 178              	.LFB218:
 179              	 .file 3 "../Dave/Generated/UART_CONFIG/uart_config_conf.c"
   1:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /**************************************************************************************************
   2:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** * DAVE APP Name : UART_CONFIG       APP Version: 4.0.10
   3:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** *
   4:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** * NOTE:
   5:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** ***************************************************************************************************
   7:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
   8:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /**
   9:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * @file uart_config_conf.c
  10:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * @date 2017-11-10
  11:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  12:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * NOTE:
  13:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * This file is generated by DAVE-4. Any manual modification done to this file will be lost when th
  14:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * regenerated.
  15:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  16:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * @cond
  17:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  **************************************************************************************************
  18:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  19:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  20:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * All rights reserved.
  21:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  22:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * Redistribution and use in source and binary forms, with or without modification, are permitted p
  23:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * following conditions are met:
  24:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  25:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  26:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *   disclaimer.
  27:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  28:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  29:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  30:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  31:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  32:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *   products derived from this software without specific prior written permission.
  33:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  34:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  35:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  36:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  37:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  38:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  39:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  40:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  41:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  42:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  43:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * with Infineon Technologies AG (dave@infineon.com).
  44:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  **************************************************************************************************
  45:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  46:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * Change History
  47:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * --------------
  48:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  49:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * 2015-07-11:
  50:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *     - Initial version for DAVEv4
  51:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  52:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * 2015-08-19:
  53:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *     - Removed internal pad consumption
  54:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  55:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * 2015-08-28:
  56:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *     - Added support for BRG from external frequency input
  57:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  58:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * 2017-11-10:
  59:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *     - Renamed UART_CONFIG_t to UART_CH_CONFIG_t to avoid clash when using simultaneously UART an
  60:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  61:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * @endcond
  62:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  *
  63:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  */
  64:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /**************************************************************************************************
  65:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * HEADER FILES
  66:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  **************************************************************************************************
  67:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** #include "uart_config.h"
  68:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
  69:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /**************************************************************************************************
  70:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * EXTERN DECLARATIONS
  71:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  **************************************************************************************************
  72:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
  73:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
  74:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /**************************************************************************************************
  75:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * FUNCTION PROTOTYPES
  76:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  **************************************************************************************************
  77:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /* USIC channel initialization function */
  78:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** void UART_CONFIG_0_lInit(void);
  79:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
  80:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
  81:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /**************************************************************************************************
  82:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * DATA STRUCTURES
  83:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  **************************************************************************************************
  84:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
  85:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /* USIC channel configuration for UART */
  86:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** const XMC_UART_CH_CONFIG_t UART_CONFIG_0_channel_config =
  87:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** {
  88:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .baudrate      = 19200U,
  89:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .data_bits     = 8U,
  90:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .frame_length  = 8U,
  91:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .stop_bits     = 2U,
  92:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .oversampling  = 16U,
  93:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .parity_mode   = XMC_USIC_CH_PARITY_MODE_NONE
  94:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** };
  95:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
  96:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /* UART APP configuration structure */
  97:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** const UART_CONFIG_CONF_t UART_CONFIG_0_config = 
  98:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** {
  99:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .channel_config   = &UART_CONFIG_0_channel_config,
 100:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .sample_point = 8U,
 101:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .pulse_length = 0U,
 102:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .uart_config_init = UART_CONFIG_0_lInit,
 103:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .mode = UART_CONFIG_MODE_FULLDUPLEX,
 104:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .tx_fifo_size     = XMC_USIC_CH_FIFO_DISABLED,
 105:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .tx_fifo_limit     = 0U,
 106:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .rx_fifo_size     = XMC_USIC_CH_FIFO_DISABLED,
 107:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .rx_fifo_limit     = 0U
 108:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** };
 109:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
 110:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /* APP handle structure */
 111:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** UART_CH_CONFIG_t UART_CONFIG_0 = 
 112:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** {
 113:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .channel = XMC_UART1_CH0,
 114:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   .config  = &UART_CONFIG_0_config
 115:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** };
 116:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** 
 117:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /**************************************************************************************************
 118:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  * API IMPLEMENTATION
 119:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****  **************************************************************************************************
 120:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** /* Channel initialization function */
 121:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** void UART_CONFIG_0_lInit()
 122:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** {
 180              	 .loc 3 122 0
 181              	 .cfi_startproc
 182              	 
 183              	 
 184 0000 80B5     	 push {r7,lr}
 185              	.LCFI12:
 186              	 .cfi_def_cfa_offset 8
 187              	 .cfi_offset 7,-8
 188              	 .cfi_offset 14,-4
 189 0002 00AF     	 add r7,sp,#0
 190              	.LCFI13:
 191              	 .cfi_def_cfa_register 7
 123:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   /* Initialize USIC channel in UART mode */
 124:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   XMC_UART_CH_Init(XMC_UART1_CH0, &UART_CONFIG_0_channel_config);
 192              	 .loc 3 124 0
 193 0004 0948     	 ldr r0,.L4
 194 0006 0A49     	 ldr r1,.L4+4
 195 0008 FFF7FEFF 	 bl XMC_UART_CH_Init
 125:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   /* Set the Sample Point */
 126:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   XMC_UART_CH_SetSamplePoint(XMC_UART1_CH0, 8U);
 196              	 .loc 3 126 0
 197 000c 0748     	 ldr r0,.L4
 198 000e 0821     	 movs r1,#8
 199 0010 FFF7FEFF 	 bl XMC_UART_CH_SetSamplePoint
 127:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   /* Set input source for input stage dx0 (receive pin) */
 128:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   XMC_USIC_CH_SetInputSource(XMC_UART1_CH0, (XMC_USIC_CH_INPUT_t)XMC_UART_CH_INPUT_RXD, 0U);
 200              	 .loc 3 128 0
 201 0014 0548     	 ldr r0,.L4
 202 0016 0021     	 movs r1,#0
 203 0018 0022     	 movs r2,#0
 204 001a FFF7FEFF 	 bl XMC_USIC_CH_SetInputSource
 129:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   /* Set the service request line for the Data Lost, Baud Rate Generator and UART protocol events *
 130:../Dave/Generated/UART_CONFIG/uart_config_conf.c ****   XMC_USIC_CH_SetInterruptNodePointer(XMC_UART1_CH0, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, 2
 205              	 .loc 3 130 0
 206 001e 0348     	 ldr r0,.L4
 207 0020 1021     	 movs r1,#16
 208 0022 0222     	 movs r2,#2
 209 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetInterruptNodePointer
 131:../Dave/Generated/UART_CONFIG/uart_config_conf.c **** }
 210              	 .loc 3 131 0
 211 0028 80BD     	 pop {r7,pc}
 212              	.L5:
 213 002a 00BF     	 .align 2
 214              	.L4:
 215 002c 00000248 	 .word 1208090624
 216 0030 00000000 	 .word UART_CONFIG_0_channel_config
 217              	 .cfi_endproc
 218              	.LFE218:
 220              	 .text
 221              	.Letext0:
 222              	 .file 4 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 223              	 .file 5 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 224              	 .file 6 "../Dave/Generated/UART_CONFIG/uart_config.h"
 225              	 .file 7 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 uart_config_conf.c
    {standard input}:20     .text.XMC_USIC_CH_SetInputSource:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_SetInputSource:00000000 XMC_USIC_CH_SetInputSource
    {standard input}:82     .text.XMC_UART_CH_SetSamplePoint:00000000 $t
    {standard input}:86     .text.XMC_UART_CH_SetSamplePoint:00000000 XMC_UART_CH_SetSamplePoint
    {standard input}:138    .rodata.UART_CONFIG_0_channel_config:00000000 UART_CONFIG_0_channel_config
    {standard input}:135    .rodata.UART_CONFIG_0_channel_config:00000000 $d
    {standard input}:151    .rodata.UART_CONFIG_0_config:00000000 UART_CONFIG_0_config
    {standard input}:148    .rodata.UART_CONFIG_0_config:00000000 $d
    {standard input}:177    .text.UART_CONFIG_0_lInit:00000000 UART_CONFIG_0_lInit
    {standard input}:168    .data.UART_CONFIG_0:00000000 UART_CONFIG_0
    {standard input}:165    .data.UART_CONFIG_0:00000000 $d
    {standard input}:172    .text.UART_CONFIG_0_lInit:00000000 $t
    {standard input}:215    .text.UART_CONFIG_0_lInit:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_UART_CH_Init
XMC_USIC_CH_SetInterruptNodePointer
