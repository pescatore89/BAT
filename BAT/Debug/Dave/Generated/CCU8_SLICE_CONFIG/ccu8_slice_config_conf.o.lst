   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ccu8_slice_config_conf.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_EnableClock:
  25              	.LFB144:
  26              	 .file 1 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2017-09-15
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
1158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPCH_Msk;
1176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPCH_Msk;
1212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1328 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
1329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
  45              	 .loc 1 1332 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e DA68     	 ldr r2,[r3,#12]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 0121     	 movs r1,#1
  50 0014 01FA03F3 	 lsl r3,r1,r3
  51 0018 1A43     	 orrs r2,r2,r3
  52 001a 7B68     	 ldr r3,[r7,#4]
  53 001c DA60     	 str r2,[r3,#12]
1333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  54              	 .loc 1 1333 0
  55 001e 0C37     	 adds r7,r7,#12
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 0020 BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0022 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0026 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE144:
  70              	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatchChannel1,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:
  76              	.LFB167:
1334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Pointer", XMC_CCU8_IsVal
1401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
2005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
2024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
2181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  77              	 .loc 1 2222 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 83B0     	 sub sp,sp,#12
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
  93 0008 0B46     	 mov r3,r1
  94 000a 7B80     	 strh r3,[r7,#2]
2223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
  95              	 .loc 1 2224 0
  96 000c 7A88     	 ldrh r2,[r7,#2]
  97 000e 7B68     	 ldr r3,[r7,#4]
  98 0010 DA63     	 str r2,[r3,#60]
2225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  99              	 .loc 1 2225 0
 100 0012 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 0014 BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0016 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 001a 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE167:
 115              	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatchChannel2,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:
 121              	.LFB168:
2226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 122              	 .loc 1 2245 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126              	 
 127 0000 80B4     	 push {r7}
 128              	.LCFI12:
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	.LCFI13:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI14:
 136              	 .cfi_def_cfa_register 7
 137 0006 7860     	 str r0,[r7,#4]
 138 0008 0B46     	 mov r3,r1
 139 000a 7B80     	 strh r3,[r7,#2]
2246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
 140              	 .loc 1 2247 0
 141 000c 7A88     	 ldrh r2,[r7,#2]
 142 000e 7B68     	 ldr r3,[r7,#4]
 143 0010 5A64     	 str r2,[r3,#68]
2248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 144              	 .loc 1 2248 0
 145 0012 0C37     	 adds r7,r7,#12
 146              	.LCFI15:
 147              	 .cfi_def_cfa_offset 4
 148 0014 BD46     	 mov sp,r7
 149              	.LCFI16:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 0016 5DF8047B 	 ldr r7,[sp],#4
 153              	.LCFI17:
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 001a 7047     	 bx lr
 157              	 .cfi_endproc
 158              	.LFE168:
 160              	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 161              	 .align 2
 162              	 .thumb
 163              	 .thumb_func
 165              	XMC_CCU8_EnableShadowTransfer:
 166              	.LFB169:
2249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 167              	 .loc 1 2295 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171              	 
 172 0000 80B4     	 push {r7}
 173              	.LCFI18:
 174              	 .cfi_def_cfa_offset 4
 175              	 .cfi_offset 7,-4
 176 0002 83B0     	 sub sp,sp,#12
 177              	.LCFI19:
 178              	 .cfi_def_cfa_offset 16
 179 0004 00AF     	 add r7,sp,#0
 180              	.LCFI20:
 181              	 .cfi_def_cfa_register 7
 182 0006 7860     	 str r0,[r7,#4]
 183 0008 3960     	 str r1,[r7]
2296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 184              	 .loc 1 2297 0
 185 000a 7B68     	 ldr r3,[r7,#4]
 186 000c 3A68     	 ldr r2,[r7]
 187 000e 1A61     	 str r2,[r3,#16]
2298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 188              	 .loc 1 2298 0
 189 0010 0C37     	 adds r7,r7,#12
 190              	.LCFI21:
 191              	 .cfi_def_cfa_offset 4
 192 0012 BD46     	 mov sp,r7
 193              	.LCFI22:
 194              	 .cfi_def_cfa_register 13
 195              	 
 196 0014 5DF8047B 	 ldr r7,[sp],#4
 197              	.LCFI23:
 198              	 .cfi_restore 7
 199              	 .cfi_def_cfa_offset 0
 200 0018 7047     	 bx lr
 201              	 .cfi_endproc
 202              	.LFE169:
 204 001a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerValue,"ax",%progbits
 205              	 .align 2
 206              	 .thumb
 207              	 .thumb_func
 209              	XMC_CCU8_SLICE_SetTimerValue:
 210              	.LFB171:
2299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 211              	 .loc 1 2334 0
 212              	 .cfi_startproc
 213              	 
 214              	 
 215              	 
 216 0000 80B4     	 push {r7}
 217              	.LCFI24:
 218              	 .cfi_def_cfa_offset 4
 219              	 .cfi_offset 7,-4
 220 0002 83B0     	 sub sp,sp,#12
 221              	.LCFI25:
 222              	 .cfi_def_cfa_offset 16
 223 0004 00AF     	 add r7,sp,#0
 224              	.LCFI26:
 225              	 .cfi_def_cfa_register 7
 226 0006 7860     	 str r0,[r7,#4]
 227 0008 0B46     	 mov r3,r1
 228 000a 7B80     	 strh r3,[r7,#2]
2335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
 229              	 .loc 1 2336 0
 230 000c 7A88     	 ldrh r2,[r7,#2]
 231 000e 7B68     	 ldr r3,[r7,#4]
 232 0010 1A67     	 str r2,[r3,#112]
2337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 233              	 .loc 1 2337 0
 234 0012 0C37     	 adds r7,r7,#12
 235              	.LCFI27:
 236              	 .cfi_def_cfa_offset 4
 237 0014 BD46     	 mov sp,r7
 238              	.LCFI28:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 0016 5DF8047B 	 ldr r7,[sp],#4
 242              	.LCFI29:
 243              	 .cfi_restore 7
 244              	 .cfi_def_cfa_offset 0
 245 001a 7047     	 bx lr
 246              	 .cfi_endproc
 247              	.LFE171:
 249              	 .section .text.XMC_CCU8_SLICE_DisableCascadedShadowTransfer,"ax",%progbits
 250              	 .align 2
 251              	 .thumb
 252              	 .thumb_func
 254              	XMC_CCU8_SLICE_DisableCascadedShadowTransfer:
 255              	.LFB189:
2338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                      const uint8_t cmp_val)
2487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_COMPARE_CHANNEL_t c
2512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                             const XMC_CCU8_SLICE_COMPARE_CHANNEL_t 
2535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            uint32_t *val_ptr);
2602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
2624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS |= ((uint32_t) 1) << ((uint32_t) event);
2713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR |= ((uint32_t) 1) << ((uint32_t) event);
2733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
2755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   }
2756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event which must be bound to a service request line
2760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param sr The Service request line which is bound to the \b event
2761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Binds requested event to a service request line, by configuring CC8ySRS register with respective
2766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API binds the requested event with the requested service
2768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
2774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
2775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_SR_ID_t sr);
2776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out Output signal for which the passive level needs to be set.
2780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param level Output passive level for the \b out signal
2781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the passive level for the slice output, by setting CC8yPSL register.\n\n
2786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Defines the passive level for the timer slice output pin. Selects either level high is passive
2787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * or level low is passive. This is the level of the output before the compare match is value chang
2788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
2793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
2794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level);
2795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to dead time configuration data
2799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initializes Dead time configuration for the slice outputs, by configuring CC8yDC1R, CC8yDC2R, CC
2804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine programs dead time delays (rising & falling) and dead time clock prescaler.
2805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureDeadTime()<BR>  XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_S
2810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
2813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config);
2814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in asymmetric compare mode, by setting CC8yCHC.ASE bit.\n\n
2822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In asymmetric compare mode, the compare channels 1 & 2 are grouped to generate the PWM.This woul
2823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generate an inverted PWM at OUT0 & OUT1.
2824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Edge Aligned mode (counting up), the Status bit is set when a compare match of
2825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Compare channel-1 occurs and cleared when a compare match event of Compare channel-2 occurs.\n
2826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Center Aligned mode, the status bit is set when a compare match event of Compare channel-1 oc
2827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * counting up and cleared when a compare match event of Compare channel-2 occurs while counting do
2828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * External count direction function is enabled then the asymmetric mode of operation is not possib
2831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableSymmetricCompareMode()<BR> 
2834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableAsymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableAsymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSl
2838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC |= (uint32_t) CCU8_CC8_CHC_ASE_Msk;
2839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in symmetric(standard) compare mode, by clearing CC8yCHC.AS
2848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In symmetric compare mode, the compare channels 1 & 2 are independent of each other & each chann
2849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * PWM & inverted PWM at OUT0, OUT1, OUT2 & OUT3.
2850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableAsymmetricCompareMode().
2853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableSymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableSymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSli
2857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC &= ~((uint32_t) CCU8_CC8_CHC_ASE_Msk);
2858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask The Dead Time configuration mask.
2863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Do a bitwise OR operation on the following values depending on the need.
2864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x1:  Dead Time Enable for Compare Channel 1
2865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x2:  Dead Time Enable for Compare Channel 2
2866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x4:  Dead Time Enable for CC8yST1 path is enabled.
2867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x8:  Dead Time Enable for Inverted CC8yST1 path is enabled.
2868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x10: Dead Time Enable for CC8yST2 path is enabled.
2869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x20: Dead Time Enable for Inverted CC8yST2 path is enabled.
2870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0x3F]
2871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Activates or deactivates dead time for compare channel and ST path, by configuring CC8y.DC1R, CC
2874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8y.DTC registers.\n\n
2875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Use the provided masks to enable/disable the dead time for the compare channels and the ST signa
2876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to deactivate the dead time for all the options by passing a 0x0 as the mask.
2877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_SetDead
2882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask);
2885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Compare channel number
2889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param rise_value Programs rising edge delay
2890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0xFF]
2891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param fall_value Programs falling edge delay
2892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0xFF]
2893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the dead time for rising and falling edges, by updating CC8y.DC1R, CC8y.DC1R register
2898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will Configure the delay that is need either when the value changes from 0 to 1 (rising
2899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value changes from 1 to 0(falling edge). Directly accessed registers are CC8yDC1R, CC8yDC2R.
2900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_Configu
2903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
2906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const uint8_t rise_value,
2908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const uint8_t fall_value);
2909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
2912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val    Prescaler divider value
2913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures clock division factor for dead time generator, by configuring CC8yDTC.DTCC bit. 
2918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The Clock divider works on the timer clock. It is possible to scale the timer clock for the dead
2919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generator by a factor of 1/2/4/8. This selection is passed as an argument to the API.
2920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_Configu
2923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
2926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel which channel status has to be give as out
2930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures status ST1, ST2 mapping to STy, by configuring CC8yTC.STOS bits.\n\n
2935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine defines the output STy as a function of ST1 or ST2 or both ST1 & ST2.
2936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to make the CCU8x.STy signal to reflect the CC8y.ST1/CC8y.ST2 or a function of th
2937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
2942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
2944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Cascades the shadow transfer operation throughout the CCU8 timer slices, by setting CSE bit in S
2952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer enable bits needs to be set in all timer slices, that are being used in the 
2954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * at the same time. The shadow transfer enable bits, also need to be set for all slices even if th
2955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * some slices were not updated. It is possible to to cascade with the adjacent slices only. CC80 s
2956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * master to start the operation.
2957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() must be called to enable the shadow transfer of the all the slic
2960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * cascaded.
2961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfer()<BR>.
2964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
2965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableCascadedShadowTransfer(XMC_CCU8_SLICE_t *const slice)
2967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableCascadedShadowTransfer:Invalid Slice Pointer", XMC_CCU8_IsValidS
2969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC |= (uint32_t) CCU8_CC8_STC_CSE_Msk;
2970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the cascaded the shadow transfer operation, by clearing CSE bit in STC register.\n\n
2980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If in any slice the cascaded mode disabled, other slices from there onwards does not update the 
2982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableCascadedShadowTransfer()<BR>.
2985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
2986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableCascadedShadowTransfer(XMC_CCU8_SLICE_t *const slice)
2988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 256              	 .loc 1 2988 0
 257              	 .cfi_startproc
 258              	 
 259              	 
 260              	 
 261 0000 80B4     	 push {r7}
 262              	.LCFI30:
 263              	 .cfi_def_cfa_offset 4
 264              	 .cfi_offset 7,-4
 265 0002 83B0     	 sub sp,sp,#12
 266              	.LCFI31:
 267              	 .cfi_def_cfa_offset 16
 268 0004 00AF     	 add r7,sp,#0
 269              	.LCFI32:
 270              	 .cfi_def_cfa_register 7
 271 0006 7860     	 str r0,[r7,#4]
2989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableCascadedShadowTransfer:Invalid Slice Pointer", XMC_CCU8_IsValid
2990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC &= ~(uint32_t) CCU8_CC8_STC_CSE_Msk;
 272              	 .loc 1 2990 0
 273 0008 7B68     	 ldr r3,[r7,#4]
 274 000a D3F8B430 	 ldr r3,[r3,#180]
 275 000e 23F00102 	 bic r2,r3,#1
 276 0012 7B68     	 ldr r3,[r7,#4]
 277 0014 C3F8B420 	 str r2,[r3,#180]
2991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 278              	 .loc 1 2991 0
 279 0018 0C37     	 adds r7,r7,#12
 280              	.LCFI33:
 281              	 .cfi_def_cfa_offset 4
 282 001a BD46     	 mov sp,r7
 283              	.LCFI34:
 284              	 .cfi_def_cfa_register 13
 285              	 
 286 001c 5DF8047B 	 ldr r7,[sp],#4
 287              	.LCFI35:
 288              	 .cfi_restore 7
 289              	 .cfi_def_cfa_offset 0
 290 0020 7047     	 bx lr
 291              	 .cfi_endproc
 292              	.LFE189:
 294              	 .global CCU8_SLICE_CONFIG_0
 295 0022 00BF     	 .section .rodata.CCU8_SLICE_CONFIG_0,"a",%progbits
 296              	 .align 2
 299              	CCU8_SLICE_CONFIG_0:
 300 0000 00000000 	 .word CCU8_SLICE_CONFIG_0_lInit
 301 0004 00000000 	 .word GLOBAL_CCU8_0
 302 0008 00040240 	 .word 1073873920
 303 000c 03       	 .byte 3
 304 000d 000000   	 .space 3
 305              	 .global CCU8_SLICE_CONFIG_0_compare_config
 306              	 .section .rodata.CCU8_SLICE_CONFIG_0_compare_config,"a",%progbits
 307              	 .align 2
 310              	CCU8_SLICE_CONFIG_0_compare_config:
 311 0000 00       	 .byte 0
 312 0001 00       	 .byte 0
 313 0002 00       	 .byte 0
 314 0003 00       	 .byte 0
 315 0004 00       	 .byte 0
 316 0005 000000   	 .space 3
 317 0008 14       	 .byte 20
 318 0009 000000   	 .space 3
 319 000c F0       	 .byte 240
 320 000d 00       	 .byte 0
 321 000e 0000     	 .space 2
 322              	 .global CCU8_SLICE_CONFIG_0_event0_config
 323              	 .section .rodata.CCU8_SLICE_CONFIG_0_event0_config,"a",%progbits
 324              	 .align 2
 327              	CCU8_SLICE_CONFIG_0_event0_config:
 328 0000 00000000 	 .space 4
 329              	 .global CCU8_SLICE_CONFIG_0_event1_config
 330              	 .section .rodata.CCU8_SLICE_CONFIG_0_event1_config,"a",%progbits
 331              	 .align 2
 334              	CCU8_SLICE_CONFIG_0_event1_config:
 335 0000 00000000 	 .space 4
 336              	 .global CCU8_SLICE_CONFIG_0_event2_config
 337              	 .section .rodata.CCU8_SLICE_CONFIG_0_event2_config,"a",%progbits
 338              	 .align 2
 341              	CCU8_SLICE_CONFIG_0_event2_config:
 342 0000 00000000 	 .space 4
 343              	 .section .text.CCU8_SLICE_CONFIG_0_lInit,"ax",%progbits
 344              	 .align 2
 345              	 .thumb
 346              	 .thumb_func
 348              	CCU8_SLICE_CONFIG_0_lInit:
 349              	.LFB226:
 350              	 .file 2 "../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c"
   1:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** /**************************************************************************************************
   2:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** * DAVE APP Name : CCU8_SLICE_CONFIG       APP Version: 4.0.22
   3:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** *
   4:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** * NOTE:
   5:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** ***************************************************************************************************
   7:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 
   8:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** /**
   9:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * @file ccu8_slice_config_conf.c
  10:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * @date 2018-05-24
  11:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  12:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * NOTE:
  13:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * This file is generated by DAVE-4. Any manual modification done to this file will be lost when th
  14:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  15:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * @cond
  16:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  **************************************************************************************************
  17:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 
  18:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  19:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * All rights reserved.
  20:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  21:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  22:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * following conditions are met:
  23:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  24:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  25:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *   disclaimer.
  26:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  27:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  28:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  29:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  30:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  31:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *   products derived from this software without specific prior written permission.
  32:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  33:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  34:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  35:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  36:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  37:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  38:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  39:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  40:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  41:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  42:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * with Infineon Technologies AG (dave@infineon.com).
  43:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  **************************************************************************************************
  44:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  45:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * Change History
  46:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * --------------
  47:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  48:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2016-02-05:
  49:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Initial version<br>
  50:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2016-04-18:
  51:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Missing external event configuration on code generation is fixec<br>
  52:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2016-04-29:
  53:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - The ccu8_cc8_capture_ptr has been renamed to ccu8_cc8_slice_capture_ptr
  54:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *       in the config structure<br>
  55:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2016-06-21:
  56:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - First productive version
  57:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2017-03-17:
  58:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Fix channel output inversion control
  59:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2017-04-04:
  60:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Add initialization of TLS
  61:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2017-04-05:
  62:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Add initialization of timer value
  63:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2017-04-11:
  64:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Generate initialization of input event independently of whether they are used for any time
  65:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2017-11-10:
  66:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Fix C++ compilation issues
  67:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * 2018-05-24:
  68:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *     - Fix: setTimerValue() is only effective if it is called after enabling clk. 
  69:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  *
  70:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * @endcond
  71:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  */ 
  72:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 
  73:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** /**************************************************************************************************
  74:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  * HEADER FILES
  75:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  **************************************************************************************************
  76:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** #include "ccu8_slice_config.h"
  77:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 
  78:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 
  79:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** static CCU8_SLICE_CONFIG_STATUS_t CCU8_SLICE_CONFIG_0_lInit(void);
  80:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****         
  81:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** const CCU8_SLICE_CONFIG_t CCU8_SLICE_CONFIG_0 =
  82:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** {
  83:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .init = CCU8_SLICE_CONFIG_0_lInit,
  84:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .global = &GLOBAL_CCU8_0,
  85:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .slice_ptr = CCU80_CC83,
  86:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .slice_num = 3
  87:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** };
  88:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****         
  89:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** const XMC_CCU8_SLICE_COMPARE_CONFIG_t CCU8_SLICE_CONFIG_0_compare_config     =
  90:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** {
  91:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .timer_mode            = XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA,
  92:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .monoshot              = XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT,
  93:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .shadow_xfer_clear     = false,
  94:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .dither_timer_period   = false,
  95:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .dither_duty_cycle     = false,
  96:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .prescaler_mode        = XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL,  
  97:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .mcm_ch1_enable        = false,        
  98:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .mcm_ch2_enable        = false,
  99:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .slice_status          = XMC_CCU8_SLICE_STATUS_CHANNEL_1,
 100:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .prescaler_initval     = XMC_CCU8_SLICE_PRESCALER_1,
 101:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .float_limit           = XMC_CCU8_SLICE_PRESCALER_32768,
 102:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .dither_limit          = 0,
 103:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .passive_level_out0    = XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW,  
 104:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .passive_level_out1    = XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW,  
 105:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .passive_level_out2    = XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW,  
 106:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .passive_level_out3    = XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW,
 107:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .asymmetric_pwm        = false,
 108:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****             
 109:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .invert_out0           = false,
 110:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .invert_out1           = true, 
 111:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .invert_out2           = false,
 112:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .invert_out3           = true,
 113:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****                  
 114:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .timer_concatenation   = false
 115:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** };
 116:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****             
 117:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** const XMC_CCU8_SLICE_EVENT_CONFIG_t CCU8_SLICE_CONFIG_0_event0_config = 
 118:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** {
 119:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .mapped_input        = XMC_CCU8_SLICE_INPUT_A,
 120:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .edge                = XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE,
 121:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .level               = XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH,
 122:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .duration            = XMC_CCU8_SLICE_EVENT_FILTER_DISABLED                               
 123:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  };
 124:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****             
 125:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** const XMC_CCU8_SLICE_EVENT_CONFIG_t CCU8_SLICE_CONFIG_0_event1_config = 
 126:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** {
 127:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .mapped_input        = XMC_CCU8_SLICE_INPUT_A,
 128:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .edge                = XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE,
 129:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .level               = XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH,
 130:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .duration            = XMC_CCU8_SLICE_EVENT_FILTER_DISABLED                               
 131:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  };
 132:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****             
 133:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** const XMC_CCU8_SLICE_EVENT_CONFIG_t CCU8_SLICE_CONFIG_0_event2_config = 
 134:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** {
 135:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .mapped_input        = XMC_CCU8_SLICE_INPUT_A,
 136:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .edge                = XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE,
 137:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .level               = XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH,
 138:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   .duration            = XMC_CCU8_SLICE_EVENT_FILTER_DISABLED                               
 139:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  };
 140:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****             /* Channel initialization function */
 141:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** CCU8_SLICE_CONFIG_STATUS_t CCU8_SLICE_CONFIG_0_lInit(void)
 142:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** {
 351              	 .loc 2 142 0
 352              	 .cfi_startproc
 353              	 
 354              	 
 355 0000 80B5     	 push {r7,lr}
 356              	.LCFI36:
 357              	 .cfi_def_cfa_offset 8
 358              	 .cfi_offset 7,-8
 359              	 .cfi_offset 14,-4
 360 0002 00AF     	 add r7,sp,#0
 361              	.LCFI37:
 362              	 .cfi_def_cfa_register 7
 143:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****  	
 144:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   (void)GLOBAL_CCU8_Init(&GLOBAL_CCU8_0);
 363              	 .loc 2 144 0
 364 0004 2048     	 ldr r0,.L9
 365 0006 FFF7FEFF 	 bl GLOBAL_CCU8_Init
 145:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****    
 146:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* Configure CCU8x_CC8y slice as timer unit*/
 147:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_CompareInit(CCU80_CC83, &CCU8_SLICE_CONFIG_0_compare_config);
 366              	 .loc 2 147 0
 367 000a 2048     	 ldr r0,.L9+4
 368 000c 2049     	 ldr r1,.L9+8
 369 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
 148:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* Set timer compare register value */
 149:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(CCU80_CC83, (uint16_t)32768U); 
 370              	 .loc 2 149 0
 371 0012 1E48     	 ldr r0,.L9+4
 372 0014 4FF40041 	 mov r1,#32768
 373 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatchChannel1
 150:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(CCU80_CC83, (uint16_t)32768U); 
 374              	 .loc 2 150 0
 375 001c 1B48     	 ldr r0,.L9+4
 376 001e 4FF40041 	 mov r1,#32768
 377 0022 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
 151:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* Set timer period register value */
 152:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_SetTimerPeriodMatch(CCU80_CC83, (uint16_t)65535U);	
 378              	 .loc 2 152 0
 379 0026 1948     	 ldr r0,.L9+4
 380 0028 4FF6FF71 	 movw r1,#65535
 381 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 153:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 	  
 154:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 155:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 156:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* Register value update settings */
 157:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 158:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SetMultiChannelShadowTransferMode(CCU80, XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE
 382              	 .loc 2 158 0
 383 0030 1848     	 ldr r0,.L9+12
 384 0032 4FF00051 	 mov r1,#536870912
 385 0036 FFF7FEFF 	 bl XMC_CCU8_SetMultiChannelShadowTransferMode
 159:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 			   
 160:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 161:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_DisableCascadedShadowTransfer(CCU80_CC83);
 386              	 .loc 2 161 0
 387 003a 1448     	 ldr r0,.L9+4
 388 003c FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableCascadedShadowTransfer
 162:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 		
 163:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 164:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 165:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 166:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* Transfer value from shadow registers to actual timer registers */
 167:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_EnableShadowTransfer(CCU80, XMC_CCU8_SHADOW_TRANSFER_SLICE_3 |
 389              	 .loc 2 167 0
 390 0040 1448     	 ldr r0,.L9+12
 391 0042 4FF4E041 	 mov r1,#28672
 392 0046 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 168:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****                                                XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3 |
 169:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****                                                XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3);
 170:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* Events and function settings */
 171:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 172:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_ConfigureEvent(CCU80_CC83, XMC_CCU8_SLICE_EVENT_0, &CCU8_SLICE_CONFIG_0_event0_con
 393              	 .loc 2 172 0
 394 004a 1048     	 ldr r0,.L9+4
 395 004c 0121     	 movs r1,#1
 396 004e 124A     	 ldr r2,.L9+16
 397 0050 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 173:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 		
 174:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_ConfigureEvent(CCU80_CC83, XMC_CCU8_SLICE_EVENT_1, &CCU8_SLICE_CONFIG_0_event1_con
 398              	 .loc 2 174 0
 399 0054 0D48     	 ldr r0,.L9+4
 400 0056 0221     	 movs r1,#2
 401 0058 104A     	 ldr r2,.L9+20
 402 005a FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 175:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 		
 176:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_ConfigureEvent(CCU80_CC83, XMC_CCU8_SLICE_EVENT_2, &CCU8_SLICE_CONFIG_0_event2_con
 403              	 .loc 2 176 0
 404 005e 0B48     	 ldr r0,.L9+4
 405 0060 0321     	 movs r1,#3
 406 0062 0F4A     	 ldr r2,.L9+24
 407 0064 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 177:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 		
 178:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 179:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 180:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 181:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 182:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_DirectionConfig(CCU80_CC83, XMC_CCU8_SLICE_EVENT_2);
 408              	 .loc 2 182 0
 409 0068 0848     	 ldr r0,.L9+4
 410 006a 0321     	 movs r1,#3
 411 006c FFF7FEFF 	 bl XMC_CCU8_SLICE_DirectionConfig
 183:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 	  
 184:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 185:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 186:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 187:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 188:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 189:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 190:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 191:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 192:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 193:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 			
 194:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* clear IDLE mode for the slice*/
 195:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_EnableClock(CCU80, 3);	
 412              	 .loc 2 195 0
 413 0070 0848     	 ldr r0,.L9+12
 414 0072 0321     	 movs r1,#3
 415 0074 FFF7FEFF 	 bl XMC_CCU8_EnableClock
 196:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   /* Set initial value of timer */
 197:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   XMC_CCU8_SLICE_SetTimerValue(CCU80_CC83, (uint16_t)0U);
 416              	 .loc 2 197 0
 417 0078 0448     	 ldr r0,.L9+4
 418 007a 0021     	 movs r1,#0
 419 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
 198:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** 	
 199:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 200:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   
 201:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c ****   return CCU8_SLICE_CONFIG_STATUS_SUCCESS;
 420              	 .loc 2 201 0
 421 0080 0023     	 movs r3,#0
 202:../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config_conf.c **** }
 422              	 .loc 2 202 0
 423 0082 1846     	 mov r0,r3
 424 0084 80BD     	 pop {r7,pc}
 425              	.L10:
 426 0086 00BF     	 .align 2
 427              	.L9:
 428 0088 00000000 	 .word GLOBAL_CCU8_0
 429 008c 00040240 	 .word 1073873920
 430 0090 00000000 	 .word CCU8_SLICE_CONFIG_0_compare_config
 431 0094 00000240 	 .word 1073872896
 432 0098 00000000 	 .word CCU8_SLICE_CONFIG_0_event0_config
 433 009c 00000000 	 .word CCU8_SLICE_CONFIG_0_event1_config
 434 00a0 00000000 	 .word CCU8_SLICE_CONFIG_0_event2_config
 435              	 .cfi_endproc
 436              	.LFE226:
 438              	 .text
 439              	.Letext0:
 440              	 .file 3 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 441              	 .file 4 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 442              	 .file 5 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/XMC4400.h"
 443              	 .file 6 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc4_scu.h"
 444              	 .file 7 "../Dave/Generated/CCU8_SLICE_CONFIG/../GLOBAL_CCU8/global_ccu8.h"
 445              	 .file 8 "../Dave/Generated/CCU8_SLICE_CONFIG/ccu8_slice_config.h"
 446              	 .file 9 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/core_cm4.h"
 447              	 .file 10 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/system_XMC4400.h"
 448              	 .file 11 "../Dave/Generated/CCU8_SLICE_CONFIG/../GLOBAL_CCU8/global_ccu8_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ccu8_slice_config_conf.c
    {standard input}:20     .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:71     .text.XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:00000000 $t
    {standard input}:75     .text.XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:00000000 XMC_CCU8_SLICE_SetTimerCompareMatchChannel1
    {standard input}:116    .text.XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:00000000 $t
    {standard input}:120    .text.XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:00000000 XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
    {standard input}:161    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:165    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:205    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 $t
    {standard input}:209    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 XMC_CCU8_SLICE_SetTimerValue
    {standard input}:250    .text.XMC_CCU8_SLICE_DisableCascadedShadowTransfer:00000000 $t
    {standard input}:254    .text.XMC_CCU8_SLICE_DisableCascadedShadowTransfer:00000000 XMC_CCU8_SLICE_DisableCascadedShadowTransfer
    {standard input}:299    .rodata.CCU8_SLICE_CONFIG_0:00000000 CCU8_SLICE_CONFIG_0
    {standard input}:296    .rodata.CCU8_SLICE_CONFIG_0:00000000 $d
    {standard input}:348    .text.CCU8_SLICE_CONFIG_0_lInit:00000000 CCU8_SLICE_CONFIG_0_lInit
    {standard input}:310    .rodata.CCU8_SLICE_CONFIG_0_compare_config:00000000 CCU8_SLICE_CONFIG_0_compare_config
    {standard input}:307    .rodata.CCU8_SLICE_CONFIG_0_compare_config:00000000 $d
    {standard input}:327    .rodata.CCU8_SLICE_CONFIG_0_event0_config:00000000 CCU8_SLICE_CONFIG_0_event0_config
    {standard input}:324    .rodata.CCU8_SLICE_CONFIG_0_event0_config:00000000 $d
    {standard input}:334    .rodata.CCU8_SLICE_CONFIG_0_event1_config:00000000 CCU8_SLICE_CONFIG_0_event1_config
    {standard input}:331    .rodata.CCU8_SLICE_CONFIG_0_event1_config:00000000 $d
    {standard input}:341    .rodata.CCU8_SLICE_CONFIG_0_event2_config:00000000 CCU8_SLICE_CONFIG_0_event2_config
    {standard input}:338    .rodata.CCU8_SLICE_CONFIG_0_event2_config:00000000 $d
    {standard input}:344    .text.CCU8_SLICE_CONFIG_0_lInit:00000000 $t
    {standard input}:428    .text.CCU8_SLICE_CONFIG_0_lInit:00000088 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_CCU8_0
GLOBAL_CCU8_Init
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SetMultiChannelShadowTransferMode
XMC_CCU8_SLICE_ConfigureEvent
XMC_CCU8_SLICE_DirectionConfig
