   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm_ccu4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_EnableClock:
  25              	.LFB151:
  26              	 .file 1 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_ccu4.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @date 2017-09-15
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
 867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  27              	 .loc 1 950 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
  45              	 .loc 1 954 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e DA68     	 ldr r2,[r3,#12]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 0121     	 movs r1,#1
  50 0014 01FA03F3 	 lsl r3,r1,r3
  51 0018 1A43     	 orrs r2,r2,r3
  52 001a 7B68     	 ldr r3,[r7,#4]
  53 001c DA60     	 str r2,[r3,#12]
 955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  54              	 .loc 1 955 0
  55 001e 0C37     	 adds r7,r7,#12
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 0020 BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0022 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0026 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE151:
  70              	 .section .text.XMC_CCU4_SLICE_EnableTrap,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_CCU4_SLICE_EnableTrap:
  76              	.LFB154:
 956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.
 997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #else
1206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
1227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  77              	 .loc 1 1364 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 83B0     	 sub sp,sp,#12
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
1365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
  93              	 .loc 1 1366 0
  94 0008 7B68     	 ldr r3,[r7,#4]
  95 000a 5B69     	 ldr r3,[r3,#20]
  96 000c 43F40032 	 orr r2,r3,#131072
  97 0010 7B68     	 ldr r3,[r7,#4]
  98 0012 5A61     	 str r2,[r3,#20]
1367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  99              	 .loc 1 1367 0
 100 0014 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 0016 BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0018 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 001c 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE154:
 115 001e 00BF     	 .section .text.XMC_CCU4_SLICE_IsTimerRunning,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_CCU4_SLICE_IsTimerRunning:
 121              	.LFB156:
1368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 122              	 .loc 1 1401 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126              	 
 127 0000 80B4     	 push {r7}
 128              	.LCFI12:
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	.LCFI13:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI14:
 136              	 .cfi_def_cfa_register 7
 137 0006 7860     	 str r0,[r7,#4]
1402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
 138              	 .loc 1 1403 0
 139 0008 7B68     	 ldr r3,[r7,#4]
 140 000a 9B68     	 ldr r3,[r3,#8]
 141 000c 03F00103 	 and r3,r3,#1
 142 0010 002B     	 cmp r3,#0
 143 0012 14BF     	 ite ne
 144 0014 0123     	 movne r3,#1
 145 0016 0023     	 moveq r3,#0
 146 0018 DBB2     	 uxtb r3,r3
1404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 147              	 .loc 1 1404 0
 148 001a 1846     	 mov r0,r3
 149 001c 0C37     	 adds r7,r7,#12
 150              	.LCFI15:
 151              	 .cfi_def_cfa_offset 4
 152 001e BD46     	 mov sp,r7
 153              	.LCFI16:
 154              	 .cfi_def_cfa_register 13
 155              	 
 156 0020 5DF8047B 	 ldr r7,[sp],#4
 157              	.LCFI17:
 158              	 .cfi_restore 7
 159              	 .cfi_def_cfa_offset 0
 160 0024 7047     	 bx lr
 161              	 .cfi_endproc
 162              	.LFE156:
 164 0026 00BF     	 .section .text.XMC_CCU4_SLICE_StartTimer,"ax",%progbits
 165              	 .align 2
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_CCU4_SLICE_StartTimer:
 170              	.LFB158:
1405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 171              	 .loc 1 1439 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 80B4     	 push {r7}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 4
 179              	 .cfi_offset 7,-4
 180 0002 83B0     	 sub sp,sp,#12
 181              	.LCFI19:
 182              	 .cfi_def_cfa_offset 16
 183 0004 00AF     	 add r7,sp,#0
 184              	.LCFI20:
 185              	 .cfi_def_cfa_register 7
 186 0006 7860     	 str r0,[r7,#4]
1440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
 187              	 .loc 1 1441 0
 188 0008 7B68     	 ldr r3,[r7,#4]
 189 000a 0122     	 movs r2,#1
 190 000c DA60     	 str r2,[r3,#12]
1442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 191              	 .loc 1 1442 0
 192 000e 0C37     	 adds r7,r7,#12
 193              	.LCFI21:
 194              	 .cfi_def_cfa_offset 4
 195 0010 BD46     	 mov sp,r7
 196              	.LCFI22:
 197              	 .cfi_def_cfa_register 13
 198              	 
 199 0012 5DF8047B 	 ldr r7,[sp],#4
 200              	.LCFI23:
 201              	 .cfi_restore 7
 202              	 .cfi_def_cfa_offset 0
 203 0016 7047     	 bx lr
 204              	 .cfi_endproc
 205              	.LFE158:
 207              	 .section .text.XMC_CCU4_SLICE_StopTimer,"ax",%progbits
 208              	 .align 2
 209              	 .thumb
 210              	 .thumb_func
 212              	XMC_CCU4_SLICE_StopTimer:
 213              	.LFB159:
1443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 214              	 .loc 1 1457 0
 215              	 .cfi_startproc
 216              	 
 217              	 
 218              	 
 219 0000 80B4     	 push {r7}
 220              	.LCFI24:
 221              	 .cfi_def_cfa_offset 4
 222              	 .cfi_offset 7,-4
 223 0002 83B0     	 sub sp,sp,#12
 224              	.LCFI25:
 225              	 .cfi_def_cfa_offset 16
 226 0004 00AF     	 add r7,sp,#0
 227              	.LCFI26:
 228              	 .cfi_def_cfa_register 7
 229 0006 7860     	 str r0,[r7,#4]
1458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
 230              	 .loc 1 1459 0
 231 0008 7B68     	 ldr r3,[r7,#4]
 232 000a 0122     	 movs r2,#1
 233 000c 1A61     	 str r2,[r3,#16]
1460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 234              	 .loc 1 1460 0
 235 000e 0C37     	 adds r7,r7,#12
 236              	.LCFI27:
 237              	 .cfi_def_cfa_offset 4
 238 0010 BD46     	 mov sp,r7
 239              	.LCFI28:
 240              	 .cfi_def_cfa_register 13
 241              	 
 242 0012 5DF8047B 	 ldr r7,[sp],#4
 243              	.LCFI29:
 244              	 .cfi_restore 7
 245              	 .cfi_def_cfa_offset 0
 246 0016 7047     	 bx lr
 247              	 .cfi_endproc
 248              	.LFE159:
 250              	 .section .text.XMC_CCU4_SLICE_ClearTimer,"ax",%progbits
 251              	 .align 2
 252              	 .thumb
 253              	 .thumb_func
 255              	XMC_CCU4_SLICE_ClearTimer:
 256              	.LFB160:
1461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 257              	 .loc 1 1476 0
 258              	 .cfi_startproc
 259              	 
 260              	 
 261              	 
 262 0000 80B4     	 push {r7}
 263              	.LCFI30:
 264              	 .cfi_def_cfa_offset 4
 265              	 .cfi_offset 7,-4
 266 0002 83B0     	 sub sp,sp,#12
 267              	.LCFI31:
 268              	 .cfi_def_cfa_offset 16
 269 0004 00AF     	 add r7,sp,#0
 270              	.LCFI32:
 271              	 .cfi_def_cfa_register 7
 272 0006 7860     	 str r0,[r7,#4]
1477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
 273              	 .loc 1 1478 0
 274 0008 7B68     	 ldr r3,[r7,#4]
 275 000a 0222     	 movs r2,#2
 276 000c 1A61     	 str r2,[r3,#16]
1479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 277              	 .loc 1 1479 0
 278 000e 0C37     	 adds r7,r7,#12
 279              	.LCFI33:
 280              	 .cfi_def_cfa_offset 4
 281 0010 BD46     	 mov sp,r7
 282              	.LCFI34:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 0012 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI35:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0016 7047     	 bx lr
 290              	 .cfi_endproc
 291              	.LFE160:
 293              	 .section .text.XMC_CCU4_SLICE_SetTimerPeriodMatch,"ax",%progbits
 294              	 .align 2
 295              	 .thumb
 296              	 .thumb_func
 298              	XMC_CCU4_SLICE_SetTimerPeriodMatch:
 299              	.LFB165:
1480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 300              	 .loc 1 1611 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304              	 
 305 0000 80B4     	 push {r7}
 306              	.LCFI36:
 307              	 .cfi_def_cfa_offset 4
 308              	 .cfi_offset 7,-4
 309 0002 83B0     	 sub sp,sp,#12
 310              	.LCFI37:
 311              	 .cfi_def_cfa_offset 16
 312 0004 00AF     	 add r7,sp,#0
 313              	.LCFI38:
 314              	 .cfi_def_cfa_register 7
 315 0006 7860     	 str r0,[r7,#4]
 316 0008 0B46     	 mov r3,r1
 317 000a 7B80     	 strh r3,[r7,#2]
1612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
 318              	 .loc 1 1613 0
 319 000c 7A88     	 ldrh r2,[r7,#2]
 320 000e 7B68     	 ldr r3,[r7,#4]
 321 0010 5A63     	 str r2,[r3,#52]
1614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 322              	 .loc 1 1614 0
 323 0012 0C37     	 adds r7,r7,#12
 324              	.LCFI39:
 325              	 .cfi_def_cfa_offset 4
 326 0014 BD46     	 mov sp,r7
 327              	.LCFI40:
 328              	 .cfi_def_cfa_register 13
 329              	 
 330 0016 5DF8047B 	 ldr r7,[sp],#4
 331              	.LCFI41:
 332              	 .cfi_restore 7
 333              	 .cfi_def_cfa_offset 0
 334 001a 7047     	 bx lr
 335              	 .cfi_endproc
 336              	.LFE165:
 338              	 .section .text.XMC_CCU4_SLICE_GetTimerPeriodMatch,"ax",%progbits
 339              	 .align 2
 340              	 .thumb
 341              	 .thumb_func
 343              	XMC_CCU4_SLICE_GetTimerPeriodMatch:
 344              	.LFB166:
1615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 345              	 .loc 1 1636 0
 346              	 .cfi_startproc
 347              	 
 348              	 
 349              	 
 350 0000 80B4     	 push {r7}
 351              	.LCFI42:
 352              	 .cfi_def_cfa_offset 4
 353              	 .cfi_offset 7,-4
 354 0002 83B0     	 sub sp,sp,#12
 355              	.LCFI43:
 356              	 .cfi_def_cfa_offset 16
 357 0004 00AF     	 add r7,sp,#0
 358              	.LCFI44:
 359              	 .cfi_def_cfa_register 7
 360 0006 7860     	 str r0,[r7,#4]
1637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
 361              	 .loc 1 1638 0
 362 0008 7B68     	 ldr r3,[r7,#4]
 363 000a 1B6B     	 ldr r3,[r3,#48]
 364 000c 9BB2     	 uxth r3,r3
1639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 365              	 .loc 1 1639 0
 366 000e 1846     	 mov r0,r3
 367 0010 0C37     	 adds r7,r7,#12
 368              	.LCFI45:
 369              	 .cfi_def_cfa_offset 4
 370 0012 BD46     	 mov sp,r7
 371              	.LCFI46:
 372              	 .cfi_def_cfa_register 13
 373              	 
 374 0014 5DF8047B 	 ldr r7,[sp],#4
 375              	.LCFI47:
 376              	 .cfi_restore 7
 377              	 .cfi_def_cfa_offset 0
 378 0018 7047     	 bx lr
 379              	 .cfi_endproc
 380              	.LFE166:
 382 001a 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerCompareMatch,"ax",%progbits
 383              	 .align 2
 384              	 .thumb
 385              	 .thumb_func
 387              	XMC_CCU4_SLICE_SetTimerCompareMatch:
 388              	.LFB167:
1640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 389              	 .loc 1 1659 0
 390              	 .cfi_startproc
 391              	 
 392              	 
 393              	 
 394 0000 80B4     	 push {r7}
 395              	.LCFI48:
 396              	 .cfi_def_cfa_offset 4
 397              	 .cfi_offset 7,-4
 398 0002 83B0     	 sub sp,sp,#12
 399              	.LCFI49:
 400              	 .cfi_def_cfa_offset 16
 401 0004 00AF     	 add r7,sp,#0
 402              	.LCFI50:
 403              	 .cfi_def_cfa_register 7
 404 0006 7860     	 str r0,[r7,#4]
 405 0008 0B46     	 mov r3,r1
 406 000a 7B80     	 strh r3,[r7,#2]
1660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
 407              	 .loc 1 1661 0
 408 000c 7A88     	 ldrh r2,[r7,#2]
 409 000e 7B68     	 ldr r3,[r7,#4]
 410 0010 DA63     	 str r2,[r3,#60]
1662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 411              	 .loc 1 1662 0
 412 0012 0C37     	 adds r7,r7,#12
 413              	.LCFI51:
 414              	 .cfi_def_cfa_offset 4
 415 0014 BD46     	 mov sp,r7
 416              	.LCFI52:
 417              	 .cfi_def_cfa_register 13
 418              	 
 419 0016 5DF8047B 	 ldr r7,[sp],#4
 420              	.LCFI53:
 421              	 .cfi_restore 7
 422              	 .cfi_def_cfa_offset 0
 423 001a 7047     	 bx lr
 424              	 .cfi_endproc
 425              	.LFE167:
 427              	 .section .text.XMC_CCU4_EnableShadowTransfer,"ax",%progbits
 428              	 .align 2
 429              	 .thumb
 430              	 .thumb_func
 432              	XMC_CCU4_EnableShadowTransfer:
 433              	.LFB169:
1663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 434              	 .loc 1 1713 0
 435              	 .cfi_startproc
 436              	 
 437              	 
 438              	 
 439 0000 80B4     	 push {r7}
 440              	.LCFI54:
 441              	 .cfi_def_cfa_offset 4
 442              	 .cfi_offset 7,-4
 443 0002 83B0     	 sub sp,sp,#12
 444              	.LCFI55:
 445              	 .cfi_def_cfa_offset 16
 446 0004 00AF     	 add r7,sp,#0
 447              	.LCFI56:
 448              	 .cfi_def_cfa_register 7
 449 0006 7860     	 str r0,[r7,#4]
 450 0008 3960     	 str r1,[r7]
1714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 451              	 .loc 1 1715 0
 452 000a 7B68     	 ldr r3,[r7,#4]
 453 000c 3A68     	 ldr r2,[r7]
 454 000e 1A61     	 str r2,[r3,#16]
1716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 455              	 .loc 1 1716 0
 456 0010 0C37     	 adds r7,r7,#12
 457              	.LCFI57:
 458              	 .cfi_def_cfa_offset 4
 459 0012 BD46     	 mov sp,r7
 460              	.LCFI58:
 461              	 .cfi_def_cfa_register 13
 462              	 
 463 0014 5DF8047B 	 ldr r7,[sp],#4
 464              	.LCFI59:
 465              	 .cfi_restore 7
 466              	 .cfi_def_cfa_offset 0
 467 0018 7047     	 bx lr
 468              	 .cfi_endproc
 469              	.LFE169:
 471 001a 00BF     	 .section .text.XMC_CCU4_SLICE_GetTimerValue,"ax",%progbits
 472              	 .align 2
 473              	 .thumb
 474              	 .thumb_func
 476              	XMC_CCU4_SLICE_GetTimerValue:
 477              	.LFB170:
1717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 478              	 .loc 1 1731 0
 479              	 .cfi_startproc
 480              	 
 481              	 
 482              	 
 483 0000 80B4     	 push {r7}
 484              	.LCFI60:
 485              	 .cfi_def_cfa_offset 4
 486              	 .cfi_offset 7,-4
 487 0002 83B0     	 sub sp,sp,#12
 488              	.LCFI61:
 489              	 .cfi_def_cfa_offset 16
 490 0004 00AF     	 add r7,sp,#0
 491              	.LCFI62:
 492              	 .cfi_def_cfa_register 7
 493 0006 7860     	 str r0,[r7,#4]
1732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
 494              	 .loc 1 1733 0
 495 0008 7B68     	 ldr r3,[r7,#4]
 496 000a 1B6F     	 ldr r3,[r3,#112]
 497 000c 9BB2     	 uxth r3,r3
1734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 498              	 .loc 1 1734 0
 499 000e 1846     	 mov r0,r3
 500 0010 0C37     	 adds r7,r7,#12
 501              	.LCFI63:
 502              	 .cfi_def_cfa_offset 4
 503 0012 BD46     	 mov sp,r7
 504              	.LCFI64:
 505              	 .cfi_def_cfa_register 13
 506              	 
 507 0014 5DF8047B 	 ldr r7,[sp],#4
 508              	.LCFI65:
 509              	 .cfi_restore 7
 510              	 .cfi_def_cfa_offset 0
 511 0018 7047     	 bx lr
 512              	 .cfi_endproc
 513              	.LFE170:
 515 001a 00BF     	 .section .text.XMC_CCU4_SLICE_EnableEvent,"ax",%progbits
 516              	 .align 2
 517              	 .thumb
 518              	 .thumb_func
 520              	XMC_CCU4_SLICE_EnableEvent:
 521              	.LFB179:
1735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
1865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t
1869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider, by configuring the CC4yPSC and CC4yFPC registers.
1875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
1876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by calling XMC_CCU4_StopPrescaler().
1877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue().
1880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param cmp_val Prescaler divider compare value
1886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC4yFPCS register.\n
1892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
1893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
1894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
1895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the value, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask.
1896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU4_SLICE_t *const slice,
1901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                      const uint8_t cmp_val)
1902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU4_IsVa
1904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   /*  write to the shadow register */
1905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->FPCS = (uint32_t) cmp_val;
1906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the multichannel mode, by setting CC4yTC.MCME bit.<BR>\n
1914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
1915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
1916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
1917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
1918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
1919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultiChannelMode()<BR> XMC_CCU4_SetMultiChannelShadowTransferMode().
1922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(s
1926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_MCME_Msk;
1927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the multichannel mode, by clearing CC4yTC.MCME bit.<BR>\n
1936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the slices to the normal operation mode.
1937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableMultiChannelMode().
1940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_MCME_Msk);
1945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
1950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Use ::XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
1951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             using a bit wise OR operation.
1952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
1957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
1958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU4x.MCSS
1959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** */
1963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
1964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
1968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                Range: [0,3]
1969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t  Returns the Capture register value.
1971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *              Range: [0 to 0x1FFFFF]
1972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC4yCV[\b reg
1975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
1976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
1977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
1978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to find out if there is a new captured value present.
1979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetLastCapturedTimerValue().
1982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
1984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set  The capture register set, which must be evaluated
1988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
1989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     ::XMC_CCU4_STATUS_t Returns XMC_CCU4_STATUS_OK if there was new value present in the capture
1991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   returns XMC_CCU4_STATUS_ERROR if there was no new value present in the capture
1992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest captured timer value, by reading CC4yCV registers.\n\n
1995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
1996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 4 capt
1997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * evaluated.\n
1998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
1999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * capture registers have been evaluated.
2000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetCaptureRegisterValue().
2003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
2005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
2006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            uint32_t *val_ptr);
2007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC4yINTE register.\n\
2016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableMultipleEvents()<BR> XMC_CCU4_SLICE_
2021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableEvent(XMC_CCU4_SLICE_t *const slice,
2024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                 const XMC_CCU4_SLICE_IRQ_ID_t event)
2025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 522              	 .loc 1 2025 0
 523              	 .cfi_startproc
 524              	 
 525              	 
 526              	 
 527 0000 80B4     	 push {r7}
 528              	.LCFI66:
 529              	 .cfi_def_cfa_offset 4
 530              	 .cfi_offset 7,-4
 531 0002 83B0     	 sub sp,sp,#12
 532              	.LCFI67:
 533              	 .cfi_def_cfa_offset 16
 534 0004 00AF     	 add r7,sp,#0
 535              	.LCFI68:
 536              	 .cfi_def_cfa_register 7
 537 0006 7860     	 str r0,[r7,#4]
 538 0008 0B46     	 mov r3,r1
 539 000a FB70     	 strb r3,[r7,#3]
2026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 540              	 .loc 1 2028 0
 541 000c 7B68     	 ldr r3,[r7,#4]
 542 000e D3F8A420 	 ldr r2,[r3,#164]
 543 0012 FB78     	 ldrb r3,[r7,#3]
 544 0014 0121     	 movs r1,#1
 545 0016 01FA03F3 	 lsl r3,r1,r3
 546 001a 1A43     	 orrs r2,r2,r3
 547 001c 7B68     	 ldr r3,[r7,#4]
 548 001e C3F8A420 	 str r2,[r3,#164]
2029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 549              	 .loc 1 2029 0
 550 0022 0C37     	 adds r7,r7,#12
 551              	.LCFI69:
 552              	 .cfi_def_cfa_offset 4
 553 0024 BD46     	 mov sp,r7
 554              	.LCFI70:
 555              	 .cfi_def_cfa_register 13
 556              	 
 557 0026 5DF8047B 	 ldr r7,[sp],#4
 558              	.LCFI71:
 559              	 .cfi_restore 7
 560              	 .cfi_def_cfa_offset 0
 561 002a 7047     	 bx lr
 562              	 .cfi_endproc
 563              	.LFE179:
 565              	 .section .text.XMC_CCU4_SLICE_ClearEvent,"ax",%progbits
 566              	 .align 2
 567              	 .thumb
 568              	 .thumb_func
 570              	XMC_CCU4_SLICE_ClearEvent:
 571              	.LFB184:
2030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param intr_mask Event mask such that multiple events can be enabled.
2034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Use ::XMC_CCU4_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  using a bit wise OR operation.
2036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC4yINTE re
2041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_DisableEv
2046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint1
2049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
2051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= (uint32_t)intr_mask;
2052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC4yINTE register.\n\n
2062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Prevents the event from being asserted
2063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableEvent(XMC_CCU4_SLICE_t *const slice,
2069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                  const XMC_CCU4_SLICE_IRQ_ID_t event)
2070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event))
2073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mask Event mask such that multiple events can be enabled.
2079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Use ::XMC_CCU4_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             using a bit wise OR operation.
2081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC4yINTE reg
2086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prevents selected events of the slice from being asserted.
2087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableEvent().
2091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint
2093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
2095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE &= ~((uint32_t) mask);
2096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Manually asserts the requested event, by setting CC4ySWS register.\n\n
2106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IR
2113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->SWS |= ((uint32_t) 1) << ((uint32_t) event);
2117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Asserted event which must be acknowledged.
2122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Acknowledges an asserted event, by setting CC4ySWR with respective event flag.\n\n
2127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_SetEvent()<BR> XMC_CCU4_SLICE_GetEvent().
2130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_
2132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 572              	 .loc 1 2132 0
 573              	 .cfi_startproc
 574              	 
 575              	 
 576              	 
 577 0000 80B4     	 push {r7}
 578              	.LCFI72:
 579              	 .cfi_def_cfa_offset 4
 580              	 .cfi_offset 7,-4
 581 0002 83B0     	 sub sp,sp,#12
 582              	.LCFI73:
 583              	 .cfi_def_cfa_offset 16
 584 0004 00AF     	 add r7,sp,#0
 585              	.LCFI74:
 586              	 .cfi_def_cfa_register 7
 587 0006 7860     	 str r0,[r7,#4]
 588 0008 0B46     	 mov r3,r1
 589 000a FB70     	 strb r3,[r7,#3]
2133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->SWR |= ((uint32_t) 1) << ((uint32_t) event);
 590              	 .loc 1 2135 0
 591 000c 7B68     	 ldr r3,[r7,#4]
 592 000e D3F8B020 	 ldr r2,[r3,#176]
 593 0012 FB78     	 ldrb r3,[r7,#3]
 594 0014 0121     	 movs r1,#1
 595 0016 01FA03F3 	 lsl r3,r1,r3
 596 001a 1A43     	 orrs r2,r2,r3
 597 001c 7B68     	 ldr r3,[r7,#4]
 598 001e C3F8B020 	 str r2,[r3,#176]
2136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 599              	 .loc 1 2136 0
 600 0022 0C37     	 adds r7,r7,#12
 601              	.LCFI75:
 602              	 .cfi_def_cfa_offset 4
 603 0024 BD46     	 mov sp,r7
 604              	.LCFI76:
 605              	 .cfi_def_cfa_register 13
 606              	 
 607 0026 5DF8047B 	 ldr r7,[sp],#4
 608              	.LCFI77:
 609              	 .cfi_restore 7
 610              	 .cfi_def_cfa_offset 0
 611 002a 7047     	 bx lr
 612              	 .cfi_endproc
 613              	.LFE184:
 615              	 .section .text.XMC_CCU4_SLICE_GetEvent,"ax",%progbits
 616              	 .align 2
 617              	 .thumb
 618              	 .thumb_func
 620              	XMC_CCU4_SLICE_GetEvent:
 621              	.LFB185:
2137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event to be evaluated for assertion
2141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
2142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *         bool  Returns true if event is set else false is returned.
2143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Evaluates if a given event is asserted or not, by reading CC4yINTS register.\n\n
2146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_SetEvent().
2152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_GetEvent(const XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SL
2154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 622              	 .loc 1 2154 0
 623              	 .cfi_startproc
 624              	 
 625              	 
 626              	 
 627 0000 80B4     	 push {r7}
 628              	.LCFI78:
 629              	 .cfi_def_cfa_offset 4
 630              	 .cfi_offset 7,-4
 631 0002 83B0     	 sub sp,sp,#12
 632              	.LCFI79:
 633              	 .cfi_def_cfa_offset 16
 634 0004 00AF     	 add r7,sp,#0
 635              	.LCFI80:
 636              	 .cfi_def_cfa_register 7
 637 0006 7860     	 str r0,[r7,#4]
 638 0008 0B46     	 mov r3,r1
 639 000a FB70     	 strb r3,[r7,#3]
2155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << (uint32_t)event))) != 0U);
 640              	 .loc 1 2158 0
 641 000c 7B68     	 ldr r3,[r7,#4]
 642 000e D3F8A020 	 ldr r2,[r3,#160]
 643 0012 FB78     	 ldrb r3,[r7,#3]
 644 0014 22FA03F3 	 lsr r3,r2,r3
 645 0018 03F00103 	 and r3,r3,#1
 646 001c 002B     	 cmp r3,#0
 647 001e 14BF     	 ite ne
 648 0020 0123     	 movne r3,#1
 649 0022 0023     	 moveq r3,#0
 650 0024 DBB2     	 uxtb r3,r3
2159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 651              	 .loc 1 2159 0
 652 0026 1846     	 mov r0,r3
 653 0028 0C37     	 adds r7,r7,#12
 654              	.LCFI81:
 655              	 .cfi_def_cfa_offset 4
 656 002a BD46     	 mov sp,r7
 657              	.LCFI82:
 658              	 .cfi_def_cfa_register 13
 659              	 
 660 002c 5DF8047B 	 ldr r7,[sp],#4
 661              	.LCFI83:
 662              	 .cfi_restore 7
 663              	 .cfi_def_cfa_offset 0
 664 0030 7047     	 bx lr
 665              	 .cfi_endproc
 666              	.LFE185:
 668 0032 00BF     	 .section .text.PWM_CCU4_GetAppVersion,"ax",%progbits
 669              	 .align 2
 670              	 .global PWM_CCU4_GetAppVersion
 671              	 .thumb
 672              	 .thumb_func
 674              	PWM_CCU4_GetAppVersion:
 675              	.LFB221:
 676              	 .file 2 "../Dave/Generated/PWM_CCU4/pwm_ccu4.c"
   1:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**
   2:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * @file pwm_ccu4.c
   3:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * @date 2019-09-23
   4:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
   5:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * NOTE:
   6:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
   8:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * @cond
   9:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * PWM_CCU4 v4.1.26 - PWM APP using one timer slice of CCU4, with external events support, to gener
  11:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  12:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * Copyright (c) 2015 - 2019, Infineon Technologies AG
  13:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * All rights reserved.
  14:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  15:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * following conditions are met:
  17:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  18:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *   disclaimer.
  20:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  21:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  23:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  24:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  27:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  35:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  **************************************************************************************************
  38:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  39:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * Change History
  40:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * --------------
  41:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  42:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * 2015-02-14:
  43:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - Initial version for DAVEv4
  44:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  45:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * 2015-05-20:
  46:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - PWM_CCU4_AcknowledgeInterrupt() api is renamed as PWM_CCU4_ClearEvent().
  47:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  48:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * 2015-06-20:
  49:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - Copyright information updated.
  50:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  51:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * 2015-08-13:
  52:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - Added support for selection of shadow transfer mode using API "XMC_CCU4_SLICE_SetShadowTra
  53:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - Added support for selection of immediate shadow transfer using
  54:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *       API "XMC_CCU4_SLICE_WriteImmediateAfterShadowTransfer" in XMC14* devices
  55:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - Added support for automatic shadow transfer using
  56:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *       API "XMC_CCU4_SLICE_EnableAutomaticShadowTransferRequest" in XMC14* devices
  57:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  58:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * 2016-10-28:
  59:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - Changed PWM_CCU4_Stop() to set the ST output to passive value after stopping the timer.
  60:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  61:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * 2019-09-23:
  62:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *     - Fixed escaping of '%' in XMC_DEBUG()
  63:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  64:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * @endcond
  65:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  *
  66:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  */
  67:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  68:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
  69:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * HEADER FILES
  70:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  **************************************************************************************************
  71:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** #include "pwm_ccu4.h"
  72:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  73:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
  74:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * MACROS
  75:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  **************************************************************************************************
  76:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  77:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
  78:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * LOCAL DATA
  79:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  **************************************************************************************************
  80:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  81:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
  82:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * LOCAL ROUTINES
  83:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  **************************************************************************************************
  84:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  85:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /* Initialize the App Interrupts */
  86:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** static void PWM_CCU4_lInit_Interrupt(PWM_CCU4_t* handle_ptr);
  87:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  88:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /* Initialize the App events and configurations */
  89:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** static void PWM_CCU4_lConfigure_Events(PWM_CCU4_t* handle_ptr);
  90:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  91:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
  92:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  * API IMPLEMENTATION
  93:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****  **************************************************************************************************
  94:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
  95:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /* API to retrieve App version info */
  96:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** DAVE_APP_VERSION_t PWM_CCU4_GetAppVersion(void)
  97:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 677              	 .loc 2 97 0
 678              	 .cfi_startproc
 679              	 
 680              	 
 681              	 
 682 0000 80B4     	 push {r7}
 683              	.LCFI84:
 684              	 .cfi_def_cfa_offset 4
 685              	 .cfi_offset 7,-4
 686 0002 83B0     	 sub sp,sp,#12
 687              	.LCFI85:
 688              	 .cfi_def_cfa_offset 16
 689 0004 00AF     	 add r7,sp,#0
 690              	.LCFI86:
 691              	 .cfi_def_cfa_register 7
  98:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   DAVE_APP_VERSION_t version;
  99:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 100:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   version.major = PWM_CCU4_MAJOR_VERSION;
 692              	 .loc 2 100 0
 693 0006 0423     	 movs r3,#4
 694 0008 3B70     	 strb r3,[r7]
 101:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   version.minor = PWM_CCU4_MINOR_VERSION;
 695              	 .loc 2 101 0
 696 000a 0123     	 movs r3,#1
 697 000c 7B70     	 strb r3,[r7,#1]
 102:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   version.patch = PWM_CCU4_PATCH_VERSION;
 698              	 .loc 2 102 0
 699 000e 1A23     	 movs r3,#26
 700 0010 BB70     	 strb r3,[r7,#2]
 103:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 104:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return version;
 701              	 .loc 2 104 0
 702 0012 3B1D     	 adds r3,r7,#4
 703 0014 3A46     	 mov r2,r7
 704 0016 1268     	 ldr r2,[r2]
 705 0018 1146     	 mov r1,r2
 706 001a 1980     	 strh r1,[r3]
 707 001c 0233     	 adds r3,r3,#2
 708 001e 120C     	 lsrs r2,r2,#16
 709 0020 1A70     	 strb r2,[r3]
 710 0022 0023     	 movs r3,#0
 711 0024 3A79     	 ldrb r2,[r7,#4]
 712 0026 62F30703 	 bfi r3,r2,#0,#8
 713 002a 7A79     	 ldrb r2,[r7,#5]
 714 002c 62F30F23 	 bfi r3,r2,#8,#8
 715 0030 BA79     	 ldrb r2,[r7,#6]
 716 0032 62F31743 	 bfi r3,r2,#16,#8
 105:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** }
 717              	 .loc 2 105 0
 718 0036 1846     	 mov r0,r3
 719 0038 0C37     	 adds r7,r7,#12
 720              	.LCFI87:
 721              	 .cfi_def_cfa_offset 4
 722 003a BD46     	 mov sp,r7
 723              	.LCFI88:
 724              	 .cfi_def_cfa_register 13
 725              	 
 726 003c 5DF8047B 	 ldr r7,[sp],#4
 727              	.LCFI89:
 728              	 .cfi_restore 7
 729              	 .cfi_def_cfa_offset 0
 730 0040 7047     	 bx lr
 731              	 .cfi_endproc
 732              	.LFE221:
 734 0042 00BF     	 .section .text.PWM_CCU4_Init,"ax",%progbits
 735              	 .align 2
 736              	 .global PWM_CCU4_Init
 737              	 .thumb
 738              	 .thumb_func
 740              	PWM_CCU4_Init:
 741              	.LFB222:
 106:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 107:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /* This function initializes the app */
 108:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** PWM_CCU4_STATUS_t PWM_CCU4_Init(PWM_CCU4_t* handle_ptr)
 109:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 742              	 .loc 2 109 0
 743              	 .cfi_startproc
 744              	 
 745              	 
 746 0000 80B5     	 push {r7,lr}
 747              	.LCFI90:
 748              	 .cfi_def_cfa_offset 8
 749              	 .cfi_offset 7,-8
 750              	 .cfi_offset 14,-4
 751 0002 86B0     	 sub sp,sp,#24
 752              	.LCFI91:
 753              	 .cfi_def_cfa_offset 32
 754 0004 00AF     	 add r7,sp,#0
 755              	.LCFI92:
 756              	 .cfi_def_cfa_register 7
 757 0006 7860     	 str r0,[r7,#4]
 110:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   PWM_CCU4_STATUS_t status;
 111:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   GLOBAL_CCU4_STATUS_t status_ccu4_global;
 112:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t frequency_module;
 113:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t prescalar;
 114:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 115:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status = PWM_CCU4_STATUS_FAILURE;
 758              	 .loc 2 115 0
 759 0008 0123     	 movs r3,#1
 760 000a FB75     	 strb r3,[r7,#23]
 116:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status_ccu4_global = GLOBAL_CCU4_STATUS_FAILURE;
 761              	 .loc 2 116 0
 762 000c 0123     	 movs r3,#1
 763 000e BB75     	 strb r3,[r7,#22]
 117:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_Init:handle_ptr is NULL", (handle_ptr != NULL));
 118:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 119:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (PWM_CCU4_STATE_UNINITIALIZED == handle_ptr->state)
 764              	 .loc 2 119 0
 765 0010 7B68     	 ldr r3,[r7,#4]
 766 0012 1B7F     	 ldrb r3,[r3,#28]
 767 0014 002B     	 cmp r3,#0
 768 0016 40F08C80 	 bne .L22
 120:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 121:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     /* Initialize consumed Apps */
 122:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     status_ccu4_global = GLOBAL_CCU4_Init(handle_ptr->config_ptr->global_ccu4_handle);
 769              	 .loc 2 122 0
 770 001a 7B68     	 ldr r3,[r7,#4]
 771 001c 1B68     	 ldr r3,[r3]
 772 001e DB6C     	 ldr r3,[r3,#76]
 773 0020 1846     	 mov r0,r3
 774 0022 FFF7FEFF 	 bl GLOBAL_CCU4_Init
 775 0026 0346     	 mov r3,r0
 776 0028 BB75     	 strb r3,[r7,#22]
 123:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 124:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     /* Initialize CCU4x_CC4y slice */
 125:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     if (GLOBAL_CCU4_STATUS_SUCCESS == status_ccu4_global)
 777              	 .loc 2 125 0
 778 002a BB7D     	 ldrb r3,[r7,#22]
 779 002c 002B     	 cmp r3,#0
 780 002e 7CD1     	 bne .L23
 126:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 127:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_DEBUG("PWM_CCU4_Init:Initilizing slice");
 128:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 129:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Configure CCU4x_CC4y slice as timer */
 130:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_CompareInit(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ccu4_cc4_slice
 781              	 .loc 2 130 0
 782 0030 7B68     	 ldr r3,[r7,#4]
 783 0032 9A68     	 ldr r2,[r3,#8]
 784 0034 7B68     	 ldr r3,[r7,#4]
 785 0036 1B68     	 ldr r3,[r3]
 786 0038 9B6B     	 ldr r3,[r3,#56]
 787 003a 1046     	 mov r0,r2
 788 003c 1946     	 mov r1,r3
 789 003e FFF7FEFF 	 bl XMC_CCU4_SLICE_CompareInit
 131:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Set period match value of the timer  */
 132:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->period
 790              	 .loc 2 132 0
 791 0042 7B68     	 ldr r3,[r7,#4]
 792 0044 9A68     	 ldr r2,[r3,#8]
 793 0046 7B68     	 ldr r3,[r7,#4]
 794 0048 1B68     	 ldr r3,[r3]
 795 004a 5B88     	 ldrh r3,[r3,#2]
 796 004c 1046     	 mov r0,r2
 797 004e 1946     	 mov r1,r3
 798 0050 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 133:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 134:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Set timer compare match value for channel 1 */
 135:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t) handle_ptr->config
 799              	 .loc 2 135 0
 800 0054 7B68     	 ldr r3,[r7,#4]
 801 0056 9A68     	 ldr r2,[r3,#8]
 802 0058 7B68     	 ldr r3,[r7,#4]
 803 005a 1B68     	 ldr r3,[r3]
 804 005c 9B88     	 ldrh r3,[r3,#4]
 805 005e 1046     	 mov r0,r2
 806 0060 1946     	 mov r1,r3
 807 0062 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 136:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 137:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if (1U == handle_ptr->config_ptr->ccu4_cc4_slice_timer_ptr->mcm_enable)
 808              	 .loc 2 137 0
 809 0066 7B68     	 ldr r3,[r7,#4]
 810 0068 1B68     	 ldr r3,[r3]
 811 006a 9B6B     	 ldr r3,[r3,#56]
 812 006c DB78     	 ldrb r3,[r3,#3]
 813 006e 03F00203 	 and r3,r3,#2
 814 0072 DBB2     	 uxtb r3,r3
 815 0074 002B     	 cmp r3,#0
 816 0076 08D0     	 beq .L24
 138:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 139:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_SetMultiChannelShadowTransferMode(handle_ptr->ccu4_module_ptr,
 817              	 .loc 2 139 0
 818 0078 7B68     	 ldr r3,[r7,#4]
 819 007a 5A68     	 ldr r2,[r3,#4]
 140:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 820              	 .loc 2 140 0
 821 007c 7B68     	 ldr r3,[r7,#4]
 822 007e 1B68     	 ldr r3,[r3]
 823 0080 5B6B     	 ldr r3,[r3,#52]
 139:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 824              	 .loc 2 139 0
 825 0082 1046     	 mov r0,r2
 826 0084 1946     	 mov r1,r3
 827 0086 FFF7FEFF 	 bl XMC_CCU4_SetMultiChannelShadowTransferMode
 828              	.L24:
 141:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 142:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 143:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** #if (UC_SERIES == XMC14) /*below feature available in XMC14xx devices */
 144:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_SetShadowTransferMode(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->shad
 145:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_WriteImmediateAfterShadowTransfer(handle_ptr->ccu4_slice_ptr,
 146:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                        handle_ptr->config_ptr->immediate_write);
 147:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_EnableAutomaticShadowTransferRequest(handle_ptr->ccu4_slice_ptr,
 148:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                           handle_ptr->config_ptr->automatic_shadow_
 149:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if((bool)true == handle_ptr->config_ptr->cascaded_shadow_txfr_enable)
 150:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 151:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_SLICE_EnableCascadedShadowTransfer(handle_ptr->ccu4_slice_ptr);
 152:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 153:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** #endif
 154:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 155:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Transfer value from shadow timer registers to actual timer registers */
 156:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_module_ptr, handle_ptr->shadow_txfr_msk);
 829              	 .loc 2 156 0
 830 008a 7B68     	 ldr r3,[r7,#4]
 831 008c 5A68     	 ldr r2,[r3,#4]
 832 008e 7B68     	 ldr r3,[r7,#4]
 833 0090 1B69     	 ldr r3,[r3,#16]
 834 0092 1046     	 mov r0,r2
 835 0094 1946     	 mov r1,r3
 836 0096 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 157:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_module_ptr, handle_ptr->dither_shadow_txfr_msk
 837              	 .loc 2 157 0
 838 009a 7B68     	 ldr r3,[r7,#4]
 839 009c 5A68     	 ldr r2,[r3,#4]
 840 009e 7B68     	 ldr r3,[r7,#4]
 841 00a0 5B69     	 ldr r3,[r3,#20]
 842 00a2 1046     	 mov r0,r2
 843 00a4 1946     	 mov r1,r3
 844 00a6 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 158:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 159:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Configure events */
 160:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       PWM_CCU4_lConfigure_Events(handle_ptr);
 845              	 .loc 2 160 0
 846 00aa 7868     	 ldr r0,[r7,#4]
 847 00ac FFF7FEFF 	 bl PWM_CCU4_lConfigure_Events
 161:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 162:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Enable the interrupts */
 163:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       PWM_CCU4_lInit_Interrupt(handle_ptr);
 848              	 .loc 2 163 0
 849 00b0 7868     	 ldr r0,[r7,#4]
 850 00b2 FFF7FEFF 	 bl PWM_CCU4_lInit_Interrupt
 164:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 165:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /*Initializes the GPIO*/
 166:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if ((bool) true == handle_ptr->config_ptr->gpio_ch_out_enable)
 851              	 .loc 2 166 0
 852 00b6 7B68     	 ldr r3,[r7,#4]
 853 00b8 1B68     	 ldr r3,[r3]
 854 00ba 93F83C30 	 ldrb r3,[r3,#60]
 855 00be 002B     	 cmp r3,#0
 856 00c0 0ED0     	 beq .L25
 167:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 168:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch_out_ptr, handle_ptr->config_ptr->gpio_ch_out_
 857              	 .loc 2 168 0
 858 00c2 7B68     	 ldr r3,[r7,#4]
 859 00c4 1B68     	 ldr r3,[r3]
 860 00c6 196C     	 ldr r1,[r3,#64]
 861 00c8 7B68     	 ldr r3,[r7,#4]
 862 00ca 1B68     	 ldr r3,[r3]
 863 00cc 93F84420 	 ldrb r2,[r3,#68]
 169:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                       handle_ptr->config_ptr->gpio_ch_out_config_ptr);
 864              	 .loc 2 169 0
 865 00d0 7B68     	 ldr r3,[r7,#4]
 866 00d2 1B68     	 ldr r3,[r3]
 168:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                       handle_ptr->config_ptr->gpio_ch_out_config_ptr);
 867              	 .loc 2 168 0
 868 00d4 9B6C     	 ldr r3,[r3,#72]
 869 00d6 0846     	 mov r0,r1
 870 00d8 1146     	 mov r1,r2
 871 00da 1A46     	 mov r2,r3
 872 00dc FFF7FEFF 	 bl XMC_GPIO_Init
 873              	.L25:
 170:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 171:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 172:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       frequency_module = handle_ptr->config_ptr->global_ccu4_handle->module_frequency;
 874              	 .loc 2 172 0
 875 00e0 7B68     	 ldr r3,[r7,#4]
 876 00e2 1B68     	 ldr r3,[r3]
 877 00e4 DB6C     	 ldr r3,[r3,#76]
 878 00e6 1B68     	 ldr r3,[r3]
 879 00e8 3B61     	 str r3,[r7,#16]
 173:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       prescalar = (uint32_t) handle_ptr->config_ptr->ccu4_cc4_slice_timer_ptr->prescaler_initval;
 880              	 .loc 2 173 0
 881 00ea 7B68     	 ldr r3,[r7,#4]
 882 00ec 1B68     	 ldr r3,[r3]
 883 00ee 9B6B     	 ldr r3,[r3,#56]
 884 00f0 1B79     	 ldrb r3,[r3,#4]
 885 00f2 C3F30303 	 ubfx r3,r3,#0,#4
 886 00f6 DBB2     	 uxtb r3,r3
 887 00f8 FB60     	 str r3,[r7,#12]
 174:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       frequency_module = frequency_module / ((uint32_t) 1 << prescalar);
 888              	 .loc 2 174 0
 889 00fa FB68     	 ldr r3,[r7,#12]
 890 00fc 3A69     	 ldr r2,[r7,#16]
 891 00fe 22FA03F3 	 lsr r3,r2,r3
 892 0102 3B61     	 str r3,[r7,#16]
 175:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       handle_ptr->frequency_tclk = frequency_module;
 893              	 .loc 2 175 0
 894 0104 7B68     	 ldr r3,[r7,#4]
 895 0106 3A69     	 ldr r2,[r7,#16]
 896 0108 1A62     	 str r2,[r3,#32]
 176:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 177:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       handle_ptr->state = PWM_CCU4_STATE_INITIALIZED;
 897              	 .loc 2 177 0
 898 010a 7B68     	 ldr r3,[r7,#4]
 899 010c 0122     	 movs r2,#1
 900 010e 1A77     	 strb r2,[r3,#28]
 178:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       status = PWM_CCU4_STATUS_SUCCESS;
 901              	 .loc 2 178 0
 902 0110 0023     	 movs r3,#0
 903 0112 FB75     	 strb r3,[r7,#23]
 179:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 180:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Start the PWM generation if start at initialization is enabled */
 181:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if ((bool) true == handle_ptr->config_ptr->start_control)
 904              	 .loc 2 181 0
 905 0114 7B68     	 ldr r3,[r7,#4]
 906 0116 1B68     	 ldr r3,[r3]
 907 0118 1B78     	 ldrb r3,[r3]
 908 011a 002B     	 cmp r3,#0
 909 011c 0BD0     	 beq .L28
 182:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 183:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         status = PWM_CCU4_Start(handle_ptr);
 910              	 .loc 2 183 0
 911 011e 7868     	 ldr r0,[r7,#4]
 912 0120 FFF7FEFF 	 bl PWM_CCU4_Start
 913 0124 0346     	 mov r3,r0
 914 0126 FB75     	 strb r3,[r7,#23]
 915 0128 05E0     	 b .L28
 916              	.L23:
 184:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 185:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 186:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     else
 187:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 188:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       handle_ptr->state = PWM_CCU4_STATE_UNINITIALIZED;
 917              	 .loc 2 188 0
 918 012a 7B68     	 ldr r3,[r7,#4]
 919 012c 0022     	 movs r2,#0
 920 012e 1A77     	 strb r2,[r3,#28]
 921 0130 01E0     	 b .L28
 922              	.L22:
 189:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 190:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 191:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 192:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   else
 193:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 194:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     status = PWM_CCU4_STATUS_ALREADY_INITIALIZED;
 923              	 .loc 2 194 0
 924 0132 0223     	 movs r3,#2
 925 0134 FB75     	 strb r3,[r7,#23]
 926              	.L28:
 195:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init:PWM_CCU4_STATUS_ALREADY_INITIALIZED");
 196:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 197:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 198:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status);
 927              	 .loc 2 198 0
 928 0136 FB7D     	 ldrb r3,[r7,#23]
 199:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_Init() api */
 929              	 .loc 2 199 0
 930 0138 1846     	 mov r0,r3
 931 013a 1837     	 adds r7,r7,#24
 932              	.LCFI93:
 933              	 .cfi_def_cfa_offset 8
 934 013c BD46     	 mov sp,r7
 935              	.LCFI94:
 936              	 .cfi_def_cfa_register 13
 937              	 
 938 013e 80BD     	 pop {r7,pc}
 939              	 .cfi_endproc
 940              	.LFE222:
 942              	 .section .text.PWM_CCU4_lInit_Interrupt,"ax",%progbits
 943              	 .align 2
 944              	 .thumb
 945              	 .thumb_func
 947              	PWM_CCU4_lInit_Interrupt:
 948              	.LFB223:
 200:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 201:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** static void PWM_CCU4_lInit_Interrupt(PWM_CCU4_t* handle_ptr)
 202:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 949              	 .loc 2 202 0
 950              	 .cfi_startproc
 951              	 
 952              	 
 953 0000 80B5     	 push {r7,lr}
 954              	.LCFI95:
 955              	 .cfi_def_cfa_offset 8
 956              	 .cfi_offset 7,-8
 957              	 .cfi_offset 14,-4
 958 0002 82B0     	 sub sp,sp,#8
 959              	.LCFI96:
 960              	 .cfi_def_cfa_offset 16
 961 0004 00AF     	 add r7,sp,#0
 962              	.LCFI97:
 963              	 .cfi_def_cfa_register 7
 964 0006 7860     	 str r0,[r7,#4]
 203:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 204:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* Enable events. Bind event to corresponding service request node.Enable Interrupts. The user ma
 205:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****    disable the interrupts by LLD calls. */
 206:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((bool) true == handle_ptr->config_ptr->int_per_match)
 965              	 .loc 2 206 0
 966 0008 7B68     	 ldr r3,[r7,#4]
 967 000a 1B68     	 ldr r3,[r3]
 968 000c 9B79     	 ldrb r3,[r3,#6]
 969 000e 002B     	 cmp r3,#0
 970 0010 0FD0     	 beq .L31
 207:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 208:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init: Interrupt period match enable");
 209:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH,
 971              	 .loc 2 209 0
 972 0012 7B68     	 ldr r3,[r7,#4]
 973 0014 9A68     	 ldr r2,[r3,#8]
 210:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_per_match);
 974              	 .loc 2 210 0
 975 0016 7B68     	 ldr r3,[r7,#4]
 976 0018 1B68     	 ldr r3,[r3]
 209:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_per_match);
 977              	 .loc 2 209 0
 978 001a 5B7B     	 ldrb r3,[r3,#13]
 979 001c 1046     	 mov r0,r2
 980 001e 0021     	 movs r1,#0
 981 0020 1A46     	 mov r2,r3
 982 0022 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 211:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH);
 983              	 .loc 2 211 0
 984 0026 7B68     	 ldr r3,[r7,#4]
 985 0028 9B68     	 ldr r3,[r3,#8]
 986 002a 1846     	 mov r0,r3
 987 002c 0021     	 movs r1,#0
 988 002e FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 989              	.L31:
 212:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 213:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 214:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp_match_up)
 990              	 .loc 2 214 0
 991 0032 7B68     	 ldr r3,[r7,#4]
 992 0034 1B68     	 ldr r3,[r3]
 993 0036 DB79     	 ldrb r3,[r3,#7]
 994 0038 002B     	 cmp r3,#0
 995 003a 0FD0     	 beq .L32
 215:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 216:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init: Interrupt compare match up enable");
 217:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH
 996              	 .loc 2 217 0
 997 003c 7B68     	 ldr r3,[r7,#4]
 998 003e 9A68     	 ldr r2,[r3,#8]
 218:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_cmp_match_up);
 999              	 .loc 2 218 0
 1000 0040 7B68     	 ldr r3,[r7,#4]
 1001 0042 1B68     	 ldr r3,[r3]
 217:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_cmp_match_up);
 1002              	 .loc 2 217 0
 1003 0044 9B7B     	 ldrb r3,[r3,#14]
 1004 0046 1046     	 mov r0,r2
 1005 0048 0221     	 movs r1,#2
 1006 004a 1A46     	 mov r2,r3
 1007 004c FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 219:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP);
 1008              	 .loc 2 219 0
 1009 0050 7B68     	 ldr r3,[r7,#4]
 1010 0052 9B68     	 ldr r3,[r3,#8]
 1011 0054 1846     	 mov r0,r3
 1012 0056 0221     	 movs r1,#2
 1013 0058 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 1014              	.L32:
 220:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 221:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 222:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp_match_down)
 1015              	 .loc 2 222 0
 1016 005c 7B68     	 ldr r3,[r7,#4]
 1017 005e 1B68     	 ldr r3,[r3]
 1018 0060 1B7A     	 ldrb r3,[r3,#8]
 1019 0062 002B     	 cmp r3,#0
 1020 0064 0FD0     	 beq .L33
 223:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 224:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init: Interrupt compare match down enable");
 225:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH
 1021              	 .loc 2 225 0
 1022 0066 7B68     	 ldr r3,[r7,#4]
 1023 0068 9A68     	 ldr r2,[r3,#8]
 226:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_cmp_match_down);
 1024              	 .loc 2 226 0
 1025 006a 7B68     	 ldr r3,[r7,#4]
 1026 006c 1B68     	 ldr r3,[r3]
 225:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_cmp_match_down);
 1027              	 .loc 2 225 0
 1028 006e DB7B     	 ldrb r3,[r3,#15]
 1029 0070 1046     	 mov r0,r2
 1030 0072 0321     	 movs r1,#3
 1031 0074 1A46     	 mov r2,r3
 1032 0076 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 227:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN
 1033              	 .loc 2 227 0
 1034 007a 7B68     	 ldr r3,[r7,#4]
 1035 007c 9B68     	 ldr r3,[r3,#8]
 1036 007e 1846     	 mov r0,r3
 1037 0080 0321     	 movs r1,#3
 1038 0082 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 1039              	.L33:
 228:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 229:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 230:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((bool) true == handle_ptr->config_ptr->int_one_match_down)
 1040              	 .loc 2 230 0
 1041 0086 7B68     	 ldr r3,[r7,#4]
 1042 0088 1B68     	 ldr r3,[r3]
 1043 008a 5B7A     	 ldrb r3,[r3,#9]
 1044 008c 002B     	 cmp r3,#0
 1045 008e 0FD0     	 beq .L34
 231:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 232:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init: Interrupt one match enable");
 233:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH,
 1046              	 .loc 2 233 0
 1047 0090 7B68     	 ldr r3,[r7,#4]
 1048 0092 9A68     	 ldr r2,[r3,#8]
 234:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_one_match_down);
 1049              	 .loc 2 234 0
 1050 0094 7B68     	 ldr r3,[r7,#4]
 1051 0096 1B68     	 ldr r3,[r3]
 233:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_one_match_down);
 1052              	 .loc 2 233 0
 1053 0098 1B7C     	 ldrb r3,[r3,#16]
 1054 009a 1046     	 mov r0,r2
 1055 009c 0121     	 movs r1,#1
 1056 009e 1A46     	 mov r2,r3
 1057 00a0 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 235:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH);
 1058              	 .loc 2 235 0
 1059 00a4 7B68     	 ldr r3,[r7,#4]
 1060 00a6 9B68     	 ldr r3,[r3,#8]
 1061 00a8 1846     	 mov r0,r3
 1062 00aa 0121     	 movs r1,#1
 1063 00ac FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 1064              	.L34:
 236:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 237:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 238:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((bool) true == handle_ptr->config_ptr->int_e0)
 1065              	 .loc 2 238 0
 1066 00b0 7B68     	 ldr r3,[r7,#4]
 1067 00b2 1B68     	 ldr r3,[r3]
 1068 00b4 9B7A     	 ldrb r3,[r3,#10]
 1069 00b6 002B     	 cmp r3,#0
 1070 00b8 0FD0     	 beq .L35
 239:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 240:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init: Interrupt event 0 enable");
 241:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_EVENT0,
 1071              	 .loc 2 241 0
 1072 00ba 7B68     	 ldr r3,[r7,#4]
 1073 00bc 9A68     	 ldr r2,[r3,#8]
 242:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_e0);
 1074              	 .loc 2 242 0
 1075 00be 7B68     	 ldr r3,[r7,#4]
 1076 00c0 1B68     	 ldr r3,[r3]
 241:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_e0);
 1077              	 .loc 2 241 0
 1078 00c2 5B7C     	 ldrb r3,[r3,#17]
 1079 00c4 1046     	 mov r0,r2
 1080 00c6 0821     	 movs r1,#8
 1081 00c8 1A46     	 mov r2,r3
 1082 00ca FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 243:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_EVENT0);
 1083              	 .loc 2 243 0
 1084 00ce 7B68     	 ldr r3,[r7,#4]
 1085 00d0 9B68     	 ldr r3,[r3,#8]
 1086 00d2 1846     	 mov r0,r3
 1087 00d4 0821     	 movs r1,#8
 1088 00d6 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 1089              	.L35:
 244:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 245:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 246:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((bool) true == handle_ptr->config_ptr->int_e1)
 1090              	 .loc 2 246 0
 1091 00da 7B68     	 ldr r3,[r7,#4]
 1092 00dc 1B68     	 ldr r3,[r3]
 1093 00de DB7A     	 ldrb r3,[r3,#11]
 1094 00e0 002B     	 cmp r3,#0
 1095 00e2 0FD0     	 beq .L36
 247:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 248:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init: Interrupt event 1 enable");
 249:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_EVENT1,
 1096              	 .loc 2 249 0
 1097 00e4 7B68     	 ldr r3,[r7,#4]
 1098 00e6 9A68     	 ldr r2,[r3,#8]
 250:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_e1);
 1099              	 .loc 2 250 0
 1100 00e8 7B68     	 ldr r3,[r7,#4]
 1101 00ea 1B68     	 ldr r3,[r3]
 249:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_e1);
 1102              	 .loc 2 249 0
 1103 00ec 9B7C     	 ldrb r3,[r3,#18]
 1104 00ee 1046     	 mov r0,r2
 1105 00f0 0921     	 movs r1,#9
 1106 00f2 1A46     	 mov r2,r3
 1107 00f4 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 251:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_EVENT1);
 1108              	 .loc 2 251 0
 1109 00f8 7B68     	 ldr r3,[r7,#4]
 1110 00fa 9B68     	 ldr r3,[r3,#8]
 1111 00fc 1846     	 mov r0,r3
 1112 00fe 0921     	 movs r1,#9
 1113 0100 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 1114              	.L36:
 252:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 253:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 254:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((bool) true == handle_ptr->config_ptr->int_e2)
 1115              	 .loc 2 254 0
 1116 0104 7B68     	 ldr r3,[r7,#4]
 1117 0106 1B68     	 ldr r3,[r3]
 1118 0108 1B7B     	 ldrb r3,[r3,#12]
 1119 010a 002B     	 cmp r3,#0
 1120 010c 0FD0     	 beq .L30
 255:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 256:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Init: Interrupt event 2 enable");
 257:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_EVENT2,
 1121              	 .loc 2 257 0
 1122 010e 7B68     	 ldr r3,[r7,#4]
 1123 0110 9A68     	 ldr r2,[r3,#8]
 258:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_e2);
 1124              	 .loc 2 258 0
 1125 0112 7B68     	 ldr r3,[r7,#4]
 1126 0114 1B68     	 ldr r3,[r3]
 257:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->sr_e2);
 1127              	 .loc 2 257 0
 1128 0116 DB7C     	 ldrb r3,[r3,#19]
 1129 0118 1046     	 mov r0,r2
 1130 011a 0A21     	 movs r1,#10
 1131 011c 1A46     	 mov r2,r3
 1132 011e FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 259:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_EVENT2);
 1133              	 .loc 2 259 0
 1134 0122 7B68     	 ldr r3,[r7,#4]
 1135 0124 9B68     	 ldr r3,[r3,#8]
 1136 0126 1846     	 mov r0,r3
 1137 0128 0A21     	 movs r1,#10
 1138 012a FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 1139              	.L30:
 260:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 261:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** }
 1140              	 .loc 2 261 0
 1141 012e 0837     	 adds r7,r7,#8
 1142              	.LCFI98:
 1143              	 .cfi_def_cfa_offset 8
 1144 0130 BD46     	 mov sp,r7
 1145              	.LCFI99:
 1146              	 .cfi_def_cfa_register 13
 1147              	 
 1148 0132 80BD     	 pop {r7,pc}
 1149              	 .cfi_endproc
 1150              	.LFE223:
 1152              	 .section .text.PWM_CCU4_lConfigure_Events,"ax",%progbits
 1153              	 .align 2
 1154              	 .thumb
 1155              	 .thumb_func
 1157              	PWM_CCU4_lConfigure_Events:
 1158              	.LFB224:
 262:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 263:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** static void PWM_CCU4_lConfigure_Events(PWM_CCU4_t* handle_ptr)
 264:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1159              	 .loc 2 264 0
 1160              	 .cfi_startproc
 1161              	 
 1162              	 
 1163 0000 80B5     	 push {r7,lr}
 1164              	.LCFI100:
 1165              	 .cfi_def_cfa_offset 8
 1166              	 .cfi_offset 7,-8
 1167              	 .cfi_offset 14,-4
 1168 0002 82B0     	 sub sp,sp,#8
 1169              	.LCFI101:
 1170              	 .cfi_def_cfa_offset 16
 1171 0004 00AF     	 add r7,sp,#0
 1172              	.LCFI102:
 1173              	 .cfi_def_cfa_register 7
 1174 0006 7860     	 str r0,[r7,#4]
 265:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 266:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* Configure slice to a external event 0 */
 267:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_CCU4_SLICE_ConfigureEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_EVENT_0,
 1175              	 .loc 2 267 0
 1176 0008 7B68     	 ldr r3,[r7,#4]
 1177 000a 9A68     	 ldr r2,[r3,#8]
 268:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1178              	 .loc 2 268 0
 1179 000c 7B68     	 ldr r3,[r7,#4]
 1180 000e 1B68     	 ldr r3,[r3]
 267:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1181              	 .loc 2 267 0
 1182 0010 5B69     	 ldr r3,[r3,#20]
 1183 0012 1046     	 mov r0,r2
 1184 0014 0121     	 movs r1,#1
 1185 0016 1A46     	 mov r2,r3
 1186 0018 FFF7FEFF 	 bl XMC_CCU4_SLICE_ConfigureEvent
 269:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 270:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* Configure slice to a external event 1 */
 271:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_CCU4_SLICE_ConfigureEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_EVENT_1,
 1187              	 .loc 2 271 0
 1188 001c 7B68     	 ldr r3,[r7,#4]
 1189 001e 9A68     	 ldr r2,[r3,#8]
 272:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1190              	 .loc 2 272 0
 1191 0020 7B68     	 ldr r3,[r7,#4]
 1192 0022 1B68     	 ldr r3,[r3]
 271:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1193              	 .loc 2 271 0
 1194 0024 9B69     	 ldr r3,[r3,#24]
 1195 0026 1046     	 mov r0,r2
 1196 0028 0221     	 movs r1,#2
 1197 002a 1A46     	 mov r2,r3
 1198 002c FFF7FEFF 	 bl XMC_CCU4_SLICE_ConfigureEvent
 273:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 274:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* Configure slice to a external event 2 */
 275:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_CCU4_SLICE_ConfigureEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_EVENT_2,
 1199              	 .loc 2 275 0
 1200 0030 7B68     	 ldr r3,[r7,#4]
 1201 0032 9A68     	 ldr r2,[r3,#8]
 276:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1202              	 .loc 2 276 0
 1203 0034 7B68     	 ldr r3,[r7,#4]
 1204 0036 1B68     	 ldr r3,[r3]
 275:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1205              	 .loc 2 275 0
 1206 0038 DB69     	 ldr r3,[r3,#28]
 1207 003a 1046     	 mov r0,r2
 1208 003c 0321     	 movs r1,#3
 1209 003e 1A46     	 mov r2,r3
 1210 0040 FFF7FEFF 	 bl XMC_CCU4_SLICE_ConfigureEvent
 277:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 278:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* External signal controls start of the timer */
 279:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_start_event)
 1211              	 .loc 2 279 0
 1212 0044 7B68     	 ldr r3,[r7,#4]
 1213 0046 1B68     	 ldr r3,[r3]
 1214 0048 93F82030 	 ldrb r3,[r3,#32]
 1215 004c 002B     	 cmp r3,#0
 1216 004e 0ED0     	 beq .L39
 280:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 281:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_StartConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_start_event,
 1217              	 .loc 2 281 0
 1218 0050 7B68     	 ldr r3,[r7,#4]
 1219 0052 9968     	 ldr r1,[r3,#8]
 1220 0054 7B68     	 ldr r3,[r7,#4]
 1221 0056 1B68     	 ldr r3,[r3]
 1222 0058 93F82020 	 ldrb r2,[r3,#32]
 282:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1223              	 .loc 2 282 0
 1224 005c 7B68     	 ldr r3,[r7,#4]
 1225 005e 1B68     	 ldr r3,[r3]
 281:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1226              	 .loc 2 281 0
 1227 0060 93F82130 	 ldrb r3,[r3,#33]
 1228 0064 0846     	 mov r0,r1
 1229 0066 1146     	 mov r1,r2
 1230 0068 1A46     	 mov r2,r3
 1231 006a FFF7FEFF 	 bl XMC_CCU4_SLICE_StartConfig
 1232              	.L39:
 283:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 284:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 285:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* External signal can stop the timer */
 286:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_stop_event)
 1233              	 .loc 2 286 0
 1234 006e 7B68     	 ldr r3,[r7,#4]
 1235 0070 1B68     	 ldr r3,[r3]
 1236 0072 93F82230 	 ldrb r3,[r3,#34]
 1237 0076 002B     	 cmp r3,#0
 1238 0078 0ED0     	 beq .L40
 287:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 288:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_StopConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_stop_event,
 1239              	 .loc 2 288 0
 1240 007a 7B68     	 ldr r3,[r7,#4]
 1241 007c 9968     	 ldr r1,[r3,#8]
 1242 007e 7B68     	 ldr r3,[r7,#4]
 1243 0080 1B68     	 ldr r3,[r3]
 1244 0082 93F82220 	 ldrb r2,[r3,#34]
 289:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1245              	 .loc 2 289 0
 1246 0086 7B68     	 ldr r3,[r7,#4]
 1247 0088 1B68     	 ldr r3,[r3]
 288:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1248              	 .loc 2 288 0
 1249 008a 93F82330 	 ldrb r3,[r3,#35]
 1250 008e 0846     	 mov r0,r1
 1251 0090 1146     	 mov r1,r2
 1252 0092 1A46     	 mov r2,r3
 1253 0094 FFF7FEFF 	 bl XMC_CCU4_SLICE_StopConfig
 1254              	.L40:
 290:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 291:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 292:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* External signal can change the timer counting direction */
 293:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_dir_event)
 1255              	 .loc 2 293 0
 1256 0098 7B68     	 ldr r3,[r7,#4]
 1257 009a 1B68     	 ldr r3,[r3]
 1258 009c 93F82430 	 ldrb r3,[r3,#36]
 1259 00a0 002B     	 cmp r3,#0
 1260 00a2 09D0     	 beq .L41
 294:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 295:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_DirectionConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_count_di
 1261              	 .loc 2 295 0
 1262 00a4 7B68     	 ldr r3,[r7,#4]
 1263 00a6 9A68     	 ldr r2,[r3,#8]
 1264 00a8 7B68     	 ldr r3,[r7,#4]
 1265 00aa 1B68     	 ldr r3,[r3]
 1266 00ac 93F82430 	 ldrb r3,[r3,#36]
 1267 00b0 1046     	 mov r0,r2
 1268 00b2 1946     	 mov r1,r3
 1269 00b4 FFF7FEFF 	 bl XMC_CCU4_SLICE_DirectionConfig
 1270              	.L41:
 296:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 297:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* External signal can stop the timer and the timer value remains same */
 298:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_gate_event)
 1271              	 .loc 2 298 0
 1272 00b8 7B68     	 ldr r3,[r7,#4]
 1273 00ba 1B68     	 ldr r3,[r3]
 1274 00bc 93F82530 	 ldrb r3,[r3,#37]
 1275 00c0 002B     	 cmp r3,#0
 1276 00c2 09D0     	 beq .L42
 299:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 300:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_GateConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_gate_event);
 1277              	 .loc 2 300 0
 1278 00c4 7B68     	 ldr r3,[r7,#4]
 1279 00c6 9A68     	 ldr r2,[r3,#8]
 1280 00c8 7B68     	 ldr r3,[r7,#4]
 1281 00ca 1B68     	 ldr r3,[r3]
 1282 00cc 93F82530 	 ldrb r3,[r3,#37]
 1283 00d0 1046     	 mov r0,r2
 1284 00d2 1946     	 mov r1,r3
 1285 00d4 FFF7FEFF 	 bl XMC_CCU4_SLICE_GateConfig
 1286              	.L42:
 301:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 302:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* Timer increments on external signal */
 303:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_event)
 1287              	 .loc 2 303 0
 1288 00d8 7B68     	 ldr r3,[r7,#4]
 1289 00da 1B68     	 ldr r3,[r3]
 1290 00dc 93F82630 	 ldrb r3,[r3,#38]
 1291 00e0 002B     	 cmp r3,#0
 1292 00e2 09D0     	 beq .L43
 304:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 305:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_CountConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_count_event)
 1293              	 .loc 2 305 0
 1294 00e4 7B68     	 ldr r3,[r7,#4]
 1295 00e6 9A68     	 ldr r2,[r3,#8]
 1296 00e8 7B68     	 ldr r3,[r7,#4]
 1297 00ea 1B68     	 ldr r3,[r3]
 1298 00ec 93F82630 	 ldrb r3,[r3,#38]
 1299 00f0 1046     	 mov r0,r2
 1300 00f2 1946     	 mov r1,r3
 1301 00f4 FFF7FEFF 	 bl XMC_CCU4_SLICE_CountConfig
 1302              	.L43:
 306:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 307:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* Timer gets loaded with compare register value or period register value on external signal */
 308:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_load_event)
 1303              	 .loc 2 308 0
 1304 00f8 7B68     	 ldr r3,[r7,#4]
 1305 00fa 1B68     	 ldr r3,[r3]
 1306 00fc 93F82730 	 ldrb r3,[r3,#39]
 1307 0100 002B     	 cmp r3,#0
 1308 0102 09D0     	 beq .L44
 309:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 310:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_LoadConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_load_event);
 1309              	 .loc 2 310 0
 1310 0104 7B68     	 ldr r3,[r7,#4]
 1311 0106 9A68     	 ldr r2,[r3,#8]
 1312 0108 7B68     	 ldr r3,[r7,#4]
 1313 010a 1B68     	 ldr r3,[r3]
 1314 010c 93F82730 	 ldrb r3,[r3,#39]
 1315 0110 1046     	 mov r0,r2
 1316 0112 1946     	 mov r1,r3
 1317 0114 FFF7FEFF 	 bl XMC_CCU4_SLICE_LoadConfig
 1318              	.L44:
 311:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 312:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* External signal PWM signal (ST bit) output gets modulated by external signal */
 313:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_mod_event)
 1319              	 .loc 2 313 0
 1320 0118 7B68     	 ldr r3,[r7,#4]
 1321 011a 1B68     	 ldr r3,[r3]
 1322 011c 93F82830 	 ldrb r3,[r3,#40]
 1323 0120 002B     	 cmp r3,#0
 1324 0122 0FD0     	 beq .L45
 314:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 315:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_ModulationConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_mod_eve
 1325              	 .loc 2 315 0
 1326 0124 7B68     	 ldr r3,[r7,#4]
 1327 0126 9868     	 ldr r0,[r3,#8]
 1328 0128 7B68     	 ldr r3,[r7,#4]
 1329 012a 1B68     	 ldr r3,[r3]
 1330 012c 93F82810 	 ldrb r1,[r3,#40]
 316:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->ext_mod_mode, handle_ptr->config_ptr->e
 1331              	 .loc 2 316 0
 1332 0130 7B68     	 ldr r3,[r7,#4]
 1333 0132 1B68     	 ldr r3,[r3]
 315:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->ext_mod_mode, handle_ptr->config_ptr->e
 1334              	 .loc 2 315 0
 1335 0134 93F82920 	 ldrb r2,[r3,#41]
 1336              	 .loc 2 316 0
 1337 0138 7B68     	 ldr r3,[r7,#4]
 1338 013a 1B68     	 ldr r3,[r3]
 315:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                     handle_ptr->config_ptr->ext_mod_mode, handle_ptr->config_ptr->e
 1339              	 .loc 2 315 0
 1340 013c 93F82A30 	 ldrb r3,[r3,#42]
 1341 0140 FFF7FEFF 	 bl XMC_CCU4_SLICE_ModulationConfig
 1342              	.L45:
 317:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 318:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 319:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   /* PWM signal (ST bit) output gets modulated by external signal */
 320:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (XMC_CCU4_SLICE_EVENT_2 == handle_ptr->config_ptr->ext_trap_event)
 1343              	 .loc 2 320 0
 1344 0144 7B68     	 ldr r3,[r7,#4]
 1345 0146 1B68     	 ldr r3,[r3]
 1346 0148 93F82E30 	 ldrb r3,[r3,#46]
 1347 014c 032B     	 cmp r3,#3
 1348 014e 19D1     	 bne .L46
 321:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 322:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_TrapConfig(handle_ptr->ccu4_slice_ptr, handle_ptr->config_ptr->ext_trap_exit,
 1349              	 .loc 2 322 0
 1350 0150 7B68     	 ldr r3,[r7,#4]
 1351 0152 9968     	 ldr r1,[r3,#8]
 1352 0154 7B68     	 ldr r3,[r7,#4]
 1353 0156 1B68     	 ldr r3,[r3]
 1354 0158 93F83020 	 ldrb r2,[r3,#48]
 323:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1355              	 .loc 2 323 0
 1356 015c 7B68     	 ldr r3,[r7,#4]
 1357 015e 1B68     	 ldr r3,[r3]
 322:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1358              	 .loc 2 322 0
 1359 0160 93F82F30 	 ldrb r3,[r3,#47]
 1360 0164 0846     	 mov r0,r1
 1361 0166 1146     	 mov r1,r2
 1362 0168 1A46     	 mov r2,r3
 1363 016a FFF7FEFF 	 bl XMC_CCU4_SLICE_TrapConfig
 324:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 325:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     if ((bool) true == handle_ptr->config_ptr->ext_trap_enable)
 1364              	 .loc 2 325 0
 1365 016e 7B68     	 ldr r3,[r7,#4]
 1366 0170 1B68     	 ldr r3,[r3]
 1367 0172 93F82D30 	 ldrb r3,[r3,#45]
 1368 0176 002B     	 cmp r3,#0
 1369 0178 04D0     	 beq .L46
 326:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 327:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_EnableTrap(handle_ptr->ccu4_slice_ptr);
 1370              	 .loc 2 327 0
 1371 017a 7B68     	 ldr r3,[r7,#4]
 1372 017c 9B68     	 ldr r3,[r3,#8]
 1373 017e 1846     	 mov r0,r3
 1374 0180 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableTrap
 1375              	.L46:
 328:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 329:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 330:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((XMC_CCU4_SLICE_EVENT_1 == handle_ptr->config_ptr->ext_override_edge_event) && (XMC_CCU4_SLIC
 1376              	 .loc 2 330 0
 1377 0184 7B68     	 ldr r3,[r7,#4]
 1378 0186 1B68     	 ldr r3,[r3]
 1379 0188 93F82B30 	 ldrb r3,[r3,#43]
 1380 018c 022B     	 cmp r3,#2
 1381 018e 17D1     	 bne .L38
 331:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       == handle_ptr->config_ptr->ext_override_level_event))
 1382              	 .loc 2 331 0 discriminator 1
 1383 0190 7B68     	 ldr r3,[r7,#4]
 1384 0192 1B68     	 ldr r3,[r3]
 1385 0194 93F82C30 	 ldrb r3,[r3,#44]
 330:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       == handle_ptr->config_ptr->ext_override_level_event))
 1386              	 .loc 2 330 0 discriminator 1
 1387 0198 032B     	 cmp r3,#3
 1388 019a 11D1     	 bne .L38
 332:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 333:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(handle_ptr->ccu4_slice_ptr,
 1389              	 .loc 2 333 0
 1390 019c 7B68     	 ldr r3,[r7,#4]
 1391 019e 9968     	 ldr r1,[r3,#8]
 334:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1392              	 .loc 2 334 0
 1393 01a0 7B68     	 ldr r3,[r7,#4]
 1394 01a2 1B68     	 ldr r3,[r3]
 333:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1395              	 .loc 2 333 0
 1396 01a4 9A69     	 ldr r2,[r3,#24]
 335:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                    handle_ptr->config_ptr->event2_config_ptr);
 1397              	 .loc 2 335 0
 1398 01a6 7B68     	 ldr r3,[r7,#4]
 1399 01a8 1B68     	 ldr r3,[r3]
 333:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1400              	 .loc 2 333 0
 1401 01aa DB69     	 ldr r3,[r3,#28]
 1402 01ac 0846     	 mov r0,r1
 1403 01ae 1146     	 mov r1,r2
 1404 01b0 1A46     	 mov r2,r3
 1405 01b2 FFF7FEFF 	 bl XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
 336:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_StatusBitOverrideConfig(handle_ptr->ccu4_slice_ptr);
 1406              	 .loc 2 336 0
 1407 01b6 7B68     	 ldr r3,[r7,#4]
 1408 01b8 9B68     	 ldr r3,[r3,#8]
 1409 01ba 1846     	 mov r0,r3
 1410 01bc FFF7FEFF 	 bl XMC_CCU4_SLICE_StatusBitOverrideConfig
 1411              	.L38:
 337:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 338:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 339:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** }
 1412              	 .loc 2 339 0
 1413 01c0 0837     	 adds r7,r7,#8
 1414              	.LCFI103:
 1415              	 .cfi_def_cfa_offset 8
 1416 01c2 BD46     	 mov sp,r7
 1417              	.LCFI104:
 1418              	 .cfi_def_cfa_register 13
 1419              	 
 1420 01c4 80BD     	 pop {r7,pc}
 1421              	 .cfi_endproc
 1422              	.LFE224:
 1424 01c6 00BF     	 .section .text.PWM_CCU4_Start,"ax",%progbits
 1425              	 .align 2
 1426              	 .global PWM_CCU4_Start
 1427              	 .thumb
 1428              	 .thumb_func
 1430              	PWM_CCU4_Start:
 1431              	.LFB225:
 340:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 341:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Starts the CCU4_CC4 slice. This needs to be called even if external start is configured.*/
 342:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** PWM_CCU4_STATUS_t PWM_CCU4_Start(PWM_CCU4_t* handle_ptr)
 343:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1432              	 .loc 2 343 0
 1433              	 .cfi_startproc
 1434              	 
 1435              	 
 1436 0000 80B5     	 push {r7,lr}
 1437              	.LCFI105:
 1438              	 .cfi_def_cfa_offset 8
 1439              	 .cfi_offset 7,-8
 1440              	 .cfi_offset 14,-4
 1441 0002 84B0     	 sub sp,sp,#16
 1442              	.LCFI106:
 1443              	 .cfi_def_cfa_offset 24
 1444 0004 00AF     	 add r7,sp,#0
 1445              	.LCFI107:
 1446              	 .cfi_def_cfa_register 7
 1447 0006 7860     	 str r0,[r7,#4]
 344:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   PWM_CCU4_STATUS_t status;
 345:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 346:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status = PWM_CCU4_STATUS_FAILURE;
 1448              	 .loc 2 346 0
 1449 0008 0123     	 movs r3,#1
 1450 000a FB73     	 strb r3,[r7,#15]
 347:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_Start:handle_ptr NULL", (handle_ptr != NULL));
 348:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if ((PWM_CCU4_STATE_INITIALIZED == handle_ptr->state) || (PWM_CCU4_STATE_STOPPED == handle_ptr->s
 1451              	 .loc 2 348 0
 1452 000c 7B68     	 ldr r3,[r7,#4]
 1453 000e 1B7F     	 ldrb r3,[r3,#28]
 1454 0010 012B     	 cmp r3,#1
 1455 0012 03D0     	 beq .L49
 1456              	 .loc 2 348 0 is_stmt 0 discriminator 1
 1457 0014 7B68     	 ldr r3,[r7,#4]
 1458 0016 1B7F     	 ldrb r3,[r3,#28]
 1459 0018 032B     	 cmp r3,#3
 1460 001a 17D1     	 bne .L50
 1461              	.L49:
 349:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 350:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     /* clear IDLE mode for the slice; Start timer */
 351:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_EnableClock(handle_ptr->ccu4_module_ptr, handle_ptr->slice_number);
 1462              	 .loc 2 351 0 is_stmt 1
 1463 001c 7B68     	 ldr r3,[r7,#4]
 1464 001e 5A68     	 ldr r2,[r3,#4]
 1465 0020 7B68     	 ldr r3,[r7,#4]
 1466 0022 5B7B     	 ldrb r3,[r3,#13]
 1467 0024 1046     	 mov r0,r2
 1468 0026 1946     	 mov r1,r3
 1469 0028 FFF7FEFF 	 bl XMC_CCU4_EnableClock
 352:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 353:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     if (XMC_CCU4_SLICE_EVENT_NONE == handle_ptr->config_ptr->ext_start_event)
 1470              	 .loc 2 353 0
 1471 002c 7B68     	 ldr r3,[r7,#4]
 1472 002e 1B68     	 ldr r3,[r3]
 1473 0030 93F82030 	 ldrb r3,[r3,#32]
 1474 0034 002B     	 cmp r3,#0
 1475 0036 04D1     	 bne .L51
 354:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 355:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_StartTimer(handle_ptr->ccu4_slice_ptr);
 1476              	 .loc 2 355 0
 1477 0038 7B68     	 ldr r3,[r7,#4]
 1478 003a 9B68     	 ldr r3,[r3,#8]
 1479 003c 1846     	 mov r0,r3
 1480 003e FFF7FEFF 	 bl XMC_CCU4_SLICE_StartTimer
 1481              	.L51:
 356:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 357:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 358:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     handle_ptr->state = PWM_CCU4_STATE_RUNNING;
 1482              	 .loc 2 358 0
 1483 0042 7B68     	 ldr r3,[r7,#4]
 1484 0044 0222     	 movs r2,#2
 1485 0046 1A77     	 strb r2,[r3,#28]
 359:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     status = PWM_CCU4_STATUS_SUCCESS;
 1486              	 .loc 2 359 0
 1487 0048 0023     	 movs r3,#0
 1488 004a FB73     	 strb r3,[r7,#15]
 1489              	.L50:
 360:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Start:start PWM");
 361:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 362:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status);
 1490              	 .loc 2 362 0
 1491 004c FB7B     	 ldrb r3,[r7,#15]
 363:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_Start() api */
 1492              	 .loc 2 363 0
 1493 004e 1846     	 mov r0,r3
 1494 0050 1037     	 adds r7,r7,#16
 1495              	.LCFI108:
 1496              	 .cfi_def_cfa_offset 8
 1497 0052 BD46     	 mov sp,r7
 1498              	.LCFI109:
 1499              	 .cfi_def_cfa_register 13
 1500              	 
 1501 0054 80BD     	 pop {r7,pc}
 1502              	 .cfi_endproc
 1503              	.LFE225:
 1505 0056 00BF     	 .section .text.PWM_CCU4_Stop,"ax",%progbits
 1506              	 .align 2
 1507              	 .global PWM_CCU4_Stop
 1508              	 .thumb
 1509              	 .thumb_func
 1511              	PWM_CCU4_Stop:
 1512              	.LFB226:
 364:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 365:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Stops the CCU4_CC4 slice. */
 366:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** PWM_CCU4_STATUS_t PWM_CCU4_Stop(PWM_CCU4_t* handle_ptr)
 367:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1513              	 .loc 2 367 0
 1514              	 .cfi_startproc
 1515              	 
 1516              	 
 1517 0000 80B5     	 push {r7,lr}
 1518              	.LCFI110:
 1519              	 .cfi_def_cfa_offset 8
 1520              	 .cfi_offset 7,-8
 1521              	 .cfi_offset 14,-4
 1522 0002 84B0     	 sub sp,sp,#16
 1523              	.LCFI111:
 1524              	 .cfi_def_cfa_offset 24
 1525 0004 00AF     	 add r7,sp,#0
 1526              	.LCFI112:
 1527              	 .cfi_def_cfa_register 7
 1528 0006 7860     	 str r0,[r7,#4]
 368:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   PWM_CCU4_STATUS_t status;
 369:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 370:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status = PWM_CCU4_STATUS_FAILURE;
 1529              	 .loc 2 370 0
 1530 0008 0123     	 movs r3,#1
 1531 000a FB73     	 strb r3,[r7,#15]
 371:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_Stop:handle_ptr NULL", (handle_ptr != NULL));
 372:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (PWM_CCU4_STATE_UNINITIALIZED != handle_ptr->state)
 1532              	 .loc 2 372 0
 1533 000c 7B68     	 ldr r3,[r7,#4]
 1534 000e 1B7F     	 ldrb r3,[r3,#28]
 1535 0010 002B     	 cmp r3,#0
 1536 0012 0ED0     	 beq .L54
 373:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 374:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_StopTimer(handle_ptr->ccu4_slice_ptr);
 1537              	 .loc 2 374 0
 1538 0014 7B68     	 ldr r3,[r7,#4]
 1539 0016 9B68     	 ldr r3,[r3,#8]
 1540 0018 1846     	 mov r0,r3
 1541 001a FFF7FEFF 	 bl XMC_CCU4_SLICE_StopTimer
 375:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_CCU4_SLICE_ClearTimer(handle_ptr->ccu4_slice_ptr);
 1542              	 .loc 2 375 0
 1543 001e 7B68     	 ldr r3,[r7,#4]
 1544 0020 9B68     	 ldr r3,[r3,#8]
 1545 0022 1846     	 mov r0,r3
 1546 0024 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearTimer
 376:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 377:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     handle_ptr->state = PWM_CCU4_STATE_STOPPED;
 1547              	 .loc 2 377 0
 1548 0028 7B68     	 ldr r3,[r7,#4]
 1549 002a 0322     	 movs r2,#3
 1550 002c 1A77     	 strb r2,[r3,#28]
 378:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     status = PWM_CCU4_STATUS_SUCCESS;
 1551              	 .loc 2 378 0
 1552 002e 0023     	 movs r3,#0
 1553 0030 FB73     	 strb r3,[r7,#15]
 1554              	.L54:
 379:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     XMC_DEBUG("PWM_CCU4_Stop:stop PWM");
 380:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 381:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status);
 1555              	 .loc 2 381 0
 1556 0032 FB7B     	 ldrb r3,[r7,#15]
 382:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 383:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_Stop() api */
 1557              	 .loc 2 383 0
 1558 0034 1846     	 mov r0,r3
 1559 0036 1037     	 adds r7,r7,#16
 1560              	.LCFI113:
 1561              	 .cfi_def_cfa_offset 8
 1562 0038 BD46     	 mov sp,r7
 1563              	.LCFI114:
 1564              	 .cfi_def_cfa_register 13
 1565              	 
 1566 003a 80BD     	 pop {r7,pc}
 1567              	 .cfi_endproc
 1568              	.LFE226:
 1570              	 .section .text.PWM_CCU4_GetTimerValue,"ax",%progbits
 1571              	 .align 2
 1572              	 .global PWM_CCU4_GetTimerValue
 1573              	 .thumb
 1574              	 .thumb_func
 1576              	PWM_CCU4_GetTimerValue:
 1577              	.LFB227:
 384:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 385:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Gets the timer value of  CCU4_CC4 slice. */
 386:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** uint32_t PWM_CCU4_GetTimerValue(PWM_CCU4_t* handle_ptr)
 387:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1578              	 .loc 2 387 0
 1579              	 .cfi_startproc
 1580              	 
 1581              	 
 1582 0000 80B5     	 push {r7,lr}
 1583              	.LCFI115:
 1584              	 .cfi_def_cfa_offset 8
 1585              	 .cfi_offset 7,-8
 1586              	 .cfi_offset 14,-4
 1587 0002 84B0     	 sub sp,sp,#16
 1588              	.LCFI116:
 1589              	 .cfi_def_cfa_offset 24
 1590 0004 00AF     	 add r7,sp,#0
 1591              	.LCFI117:
 1592              	 .cfi_def_cfa_register 7
 1593 0006 7860     	 str r0,[r7,#4]
 388:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t timer_value;
 389:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_GetTimerValue:handle_ptr NULL", (handle_ptr != NULL));
 390:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   timer_value = (uint32_t) XMC_CCU4_SLICE_GetTimerValue(handle_ptr->ccu4_slice_ptr);
 1594              	 .loc 2 390 0
 1595 0008 7B68     	 ldr r3,[r7,#4]
 1596 000a 9B68     	 ldr r3,[r3,#8]
 1597 000c 1846     	 mov r0,r3
 1598 000e FFF7FEFF 	 bl XMC_CCU4_SLICE_GetTimerValue
 1599 0012 0346     	 mov r3,r0
 1600 0014 FB60     	 str r3,[r7,#12]
 391:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_DEBUG("PWM_CCU4_GetTimerValue:timer value");
 392:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (timer_value);
 1601              	 .loc 2 392 0
 1602 0016 FB68     	 ldr r3,[r7,#12]
 393:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** }/* end of PWM_CCU4_GetTimerValue() api */
 1603              	 .loc 2 393 0
 1604 0018 1846     	 mov r0,r3
 1605 001a 1037     	 adds r7,r7,#16
 1606              	.LCFI118:
 1607              	 .cfi_def_cfa_offset 8
 1608 001c BD46     	 mov sp,r7
 1609              	.LCFI119:
 1610              	 .cfi_def_cfa_register 13
 1611              	 
 1612 001e 80BD     	 pop {r7,pc}
 1613              	 .cfi_endproc
 1614              	.LFE227:
 1616              	 .section .text.PWM_CCU4_GetTimerStatus,"ax",%progbits
 1617              	 .align 2
 1618              	 .global PWM_CCU4_GetTimerStatus
 1619              	 .thumb
 1620              	 .thumb_func
 1622              	PWM_CCU4_GetTimerStatus:
 1623              	.LFB228:
 394:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 395:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Gets the status of  CCU4_CC4 slice. */
 396:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** bool PWM_CCU4_GetTimerStatus(PWM_CCU4_t* handle_ptr)
 397:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1624              	 .loc 2 397 0
 1625              	 .cfi_startproc
 1626              	 
 1627              	 
 1628 0000 80B5     	 push {r7,lr}
 1629              	.LCFI120:
 1630              	 .cfi_def_cfa_offset 8
 1631              	 .cfi_offset 7,-8
 1632              	 .cfi_offset 14,-4
 1633 0002 84B0     	 sub sp,sp,#16
 1634              	.LCFI121:
 1635              	 .cfi_def_cfa_offset 24
 1636 0004 00AF     	 add r7,sp,#0
 1637              	.LCFI122:
 1638              	 .cfi_def_cfa_register 7
 1639 0006 7860     	 str r0,[r7,#4]
 398:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   bool status_timer;
 399:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_GetTimerStatus:handle_ptr NULL", (handle_ptr != NULL));
 400:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status_timer = XMC_CCU4_SLICE_IsTimerRunning(handle_ptr->ccu4_slice_ptr);
 1640              	 .loc 2 400 0
 1641 0008 7B68     	 ldr r3,[r7,#4]
 1642 000a 9B68     	 ldr r3,[r3,#8]
 1643 000c 1846     	 mov r0,r3
 1644 000e FFF7FEFF 	 bl XMC_CCU4_SLICE_IsTimerRunning
 1645 0012 0346     	 mov r3,r0
 1646 0014 FB73     	 strb r3,[r7,#15]
 401:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status_timer);
 1647              	 .loc 2 401 0
 1648 0016 FB7B     	 ldrb r3,[r7,#15]
 402:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 403:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_GetStatus() api */
 1649              	 .loc 2 403 0
 1650 0018 1846     	 mov r0,r3
 1651 001a 1037     	 adds r7,r7,#16
 1652              	.LCFI123:
 1653              	 .cfi_def_cfa_offset 8
 1654 001c BD46     	 mov sp,r7
 1655              	.LCFI124:
 1656              	 .cfi_def_cfa_register 13
 1657              	 
 1658 001e 80BD     	 pop {r7,pc}
 1659              	 .cfi_endproc
 1660              	.LFE228:
 1662              	 .section .text.PWM_CCU4_SetFreq,"ax",%progbits
 1663              	 .align 2
 1664              	 .global PWM_CCU4_SetFreq
 1665              	 .thumb
 1666              	 .thumb_func
 1668              	PWM_CCU4_SetFreq:
 1669              	.LFB229:
 404:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 405:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 406:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 407:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Sets the frequency for CCU4_CC4 slice. */
 408:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** PWM_CCU4_STATUS_t PWM_CCU4_SetFreq(PWM_CCU4_t* handle_ptr, uint32_t pwm_freq_hz)
 409:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1670              	 .loc 2 409 0
 1671              	 .cfi_startproc
 1672              	 
 1673              	 
 1674 0000 80B5     	 push {r7,lr}
 1675              	.LCFI125:
 1676              	 .cfi_def_cfa_offset 8
 1677              	 .cfi_offset 7,-8
 1678              	 .cfi_offset 14,-4
 1679 0002 88B0     	 sub sp,sp,#32
 1680              	.LCFI126:
 1681              	 .cfi_def_cfa_offset 40
 1682 0004 00AF     	 add r7,sp,#0
 1683              	.LCFI127:
 1684              	 .cfi_def_cfa_register 7
 1685 0006 7860     	 str r0,[r7,#4]
 1686 0008 3960     	 str r1,[r7]
 410:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   PWM_CCU4_STATUS_t status;
 411:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t frequency_tclk;
 412:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t period;
 413:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t duty;
 414:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint16_t compare;
 415:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 416:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status = PWM_CCU4_STATUS_FAILURE;
 1687              	 .loc 2 416 0
 1688 000a 0123     	 movs r3,#1
 1689 000c FB77     	 strb r3,[r7,#31]
 417:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   frequency_tclk = 0U;
 1690              	 .loc 2 417 0
 1691 000e 0023     	 movs r3,#0
 1692 0010 7B61     	 str r3,[r7,#20]
 418:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_SetFreq:handle_ptr NULL", (handle_ptr != NULL));
 419:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (PWM_CCU4_STATE_UNINITIALIZED != handle_ptr->state)
 1693              	 .loc 2 419 0
 1694 0012 7B68     	 ldr r3,[r7,#4]
 1695 0014 1B7F     	 ldrb r3,[r3,#28]
 1696 0016 002B     	 cmp r3,#0
 1697 0018 4DD0     	 beq .L61
 420:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 421:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     if (0U == pwm_freq_hz)
 1698              	 .loc 2 421 0
 1699 001a 3B68     	 ldr r3,[r7]
 1700 001c 002B     	 cmp r3,#0
 1701 001e 4AD0     	 beq .L61
 422:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 423:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_DEBUG("PWM_CCU4_SetFreq:cannot set frequency 0Hz");
 424:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 425:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     else
 426:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 427:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 1702              	 .loc 2 427 0
 1703 0020 7B68     	 ldr r3,[r7,#4]
 1704 0022 1B6A     	 ldr r3,[r3,#32]
 1705 0024 7B61     	 str r3,[r7,#20]
 428:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       period = frequency_tclk / pwm_freq_hz;
 1706              	 .loc 2 428 0
 1707 0026 7A69     	 ldr r2,[r7,#20]
 1708 0028 3B68     	 ldr r3,[r7]
 1709 002a B2FBF3F3 	 udiv r3,r2,r3
 1710 002e BB61     	 str r3,[r7,#24]
 429:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 430:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if ((uint32_t) XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu4_cc4_slice_t
 1711              	 .loc 2 430 0
 1712 0030 7B68     	 ldr r3,[r7,#4]
 1713 0032 1B68     	 ldr r3,[r3]
 1714 0034 9B6B     	 ldr r3,[r3,#56]
 1715 0036 1B78     	 ldrb r3,[r3]
 1716 0038 03F00103 	 and r3,r3,#1
 1717 003c DBB2     	 uxtb r3,r3
 1718 003e 002B     	 cmp r3,#0
 1719 0040 02D0     	 beq .L62
 431:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 432:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         period = period >> 1U;/*divide by 2*/
 1720              	 .loc 2 432 0
 1721 0042 BB69     	 ldr r3,[r7,#24]
 1722 0044 5B08     	 lsrs r3,r3,#1
 1723 0046 BB61     	 str r3,[r7,#24]
 1724              	.L62:
 433:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 434:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 435:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if ((period != 0U) && (period <= PWM_CCU4_MAX_TIMER_COUNT))
 1725              	 .loc 2 435 0
 1726 0048 BB69     	 ldr r3,[r7,#24]
 1727 004a 002B     	 cmp r3,#0
 1728 004c 33D0     	 beq .L61
 1729              	 .loc 2 435 0 is_stmt 0 discriminator 1
 1730 004e BB69     	 ldr r3,[r7,#24]
 1731 0050 B3F5803F 	 cmp r3,#65536
 1732 0054 2FD2     	 bcs .L61
 436:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 437:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 438:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         duty = handle_ptr->sym_duty;
 1733              	 .loc 2 438 0 is_stmt 1
 1734 0056 7B68     	 ldr r3,[r7,#4]
 1735 0058 5B6A     	 ldr r3,[r3,#36]
 1736 005a 3B61     	 str r3,[r7,#16]
 439:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 440:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         duty = (PWM_CCU4_DUTY_FULL_SCALE - duty);
 1737              	 .loc 2 440 0
 1738 005c 3B69     	 ldr r3,[r7,#16]
 1739 005e C3F51C53 	 rsb r3,r3,#9984
 1740 0062 1033     	 adds r3,r3,#16
 1741 0064 3B61     	 str r3,[r7,#16]
 441:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         duty = duty * period;
 1742              	 .loc 2 441 0
 1743 0066 3B69     	 ldr r3,[r7,#16]
 1744 0068 BA69     	 ldr r2,[r7,#24]
 1745 006a 02FB03F3 	 mul r3,r2,r3
 1746 006e 3B61     	 str r3,[r7,#16]
 442:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         duty = duty / PWM_CCU4_DUTY_FULL_SCALE;
 1747              	 .loc 2 442 0
 1748 0070 3B69     	 ldr r3,[r7,#16]
 1749 0072 134A     	 ldr r2,.L64
 1750 0074 A2FB0323 	 umull r2,r3,r2,r3
 1751 0078 5B0B     	 lsrs r3,r3,#13
 1752 007a 3B61     	 str r3,[r7,#16]
 443:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 444:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         compare = (uint16_t) duty;
 1753              	 .loc 2 444 0
 1754 007c 3B69     	 ldr r3,[r7,#16]
 1755 007e FB81     	 strh r3,[r7,#14]
 445:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 446:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)(period - 1U));
 1756              	 .loc 2 446 0
 1757 0080 7B68     	 ldr r3,[r7,#4]
 1758 0082 9A68     	 ldr r2,[r3,#8]
 1759 0084 BB69     	 ldr r3,[r7,#24]
 1760 0086 9BB2     	 uxth r3,r3
 1761 0088 013B     	 subs r3,r3,#1
 1762 008a 9BB2     	 uxth r3,r3
 1763 008c 1046     	 mov r0,r2
 1764 008e 1946     	 mov r1,r3
 1765 0090 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 447:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, compare);
 1766              	 .loc 2 447 0
 1767 0094 7B68     	 ldr r3,[r7,#4]
 1768 0096 9A68     	 ldr r2,[r3,#8]
 1769 0098 FB89     	 ldrh r3,[r7,#14]
 1770 009a 1046     	 mov r0,r2
 1771 009c 1946     	 mov r1,r3
 1772 009e FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 448:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_module_ptr, handle_ptr->shadow_txfr_msk);
 1773              	 .loc 2 448 0
 1774 00a2 7B68     	 ldr r3,[r7,#4]
 1775 00a4 5A68     	 ldr r2,[r3,#4]
 1776 00a6 7B68     	 ldr r3,[r7,#4]
 1777 00a8 1B69     	 ldr r3,[r3,#16]
 1778 00aa 1046     	 mov r0,r2
 1779 00ac 1946     	 mov r1,r3
 1780 00ae FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 449:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_DEBUG("PWM_CCU4_SetFreq:frequency set");
 450:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         status = PWM_CCU4_STATUS_SUCCESS;
 1781              	 .loc 2 450 0
 1782 00b2 0023     	 movs r3,#0
 1783 00b4 FB77     	 strb r3,[r7,#31]
 1784              	.L61:
 451:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 452:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 453:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 454:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status);
 1785              	 .loc 2 454 0
 1786 00b6 FB7F     	 ldrb r3,[r7,#31]
 455:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 456:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_SetFreqSymmetric() api */
 1787              	 .loc 2 456 0
 1788 00b8 1846     	 mov r0,r3
 1789 00ba 2037     	 adds r7,r7,#32
 1790              	.LCFI128:
 1791              	 .cfi_def_cfa_offset 8
 1792 00bc BD46     	 mov sp,r7
 1793              	.LCFI129:
 1794              	 .cfi_def_cfa_register 13
 1795              	 
 1796 00be 80BD     	 pop {r7,pc}
 1797              	.L65:
 1798              	 .align 2
 1799              	.L64:
 1800 00c0 5917B7D1 	 .word -776530087
 1801              	 .cfi_endproc
 1802              	.LFE229:
 1804              	 .section .text.PWM_CCU4_SetDutyCycle,"ax",%progbits
 1805              	 .align 2
 1806              	 .global PWM_CCU4_SetDutyCycle
 1807              	 .thumb
 1808              	 .thumb_func
 1810              	PWM_CCU4_SetDutyCycle:
 1811              	.LFB230:
 457:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 458:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 459:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 460:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Sets the duty cycle (uint32_t) for CCU4_CC4 slice. */
 461:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** PWM_CCU4_STATUS_t PWM_CCU4_SetDutyCycle(PWM_CCU4_t* handle_ptr, uint32_t duty_cycle)
 462:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1812              	 .loc 2 462 0
 1813              	 .cfi_startproc
 1814              	 
 1815              	 
 1816 0000 80B5     	 push {r7,lr}
 1817              	.LCFI130:
 1818              	 .cfi_def_cfa_offset 8
 1819              	 .cfi_offset 7,-8
 1820              	 .cfi_offset 14,-4
 1821 0002 86B0     	 sub sp,sp,#24
 1822              	.LCFI131:
 1823              	 .cfi_def_cfa_offset 32
 1824 0004 00AF     	 add r7,sp,#0
 1825              	.LCFI132:
 1826              	 .cfi_def_cfa_register 7
 1827 0006 7860     	 str r0,[r7,#4]
 1828 0008 3960     	 str r1,[r7]
 463:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   PWM_CCU4_STATUS_t status;
 464:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t period;
 465:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t compare;
 466:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 467:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status = PWM_CCU4_STATUS_FAILURE;
 1829              	 .loc 2 467 0
 1830 000a 0123     	 movs r3,#1
 1831 000c FB75     	 strb r3,[r7,#23]
 468:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_SetDutyCycle:handle_ptr NULL", (handle_ptr != NULL));
 469:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (PWM_CCU4_STATE_UNINITIALIZED != handle_ptr->state)
 1832              	 .loc 2 469 0
 1833 000e 7B68     	 ldr r3,[r7,#4]
 1834 0010 1B7F     	 ldrb r3,[r3,#28]
 1835 0012 002B     	 cmp r3,#0
 1836 0014 2DD0     	 beq .L67
 470:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 471:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     /* duty cycle has to be in between 0 and 100 */
 472:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     if ((duty_cycle > PWM_CCU4_SYM_DUTY_MAX))
 1837              	 .loc 2 472 0
 1838 0016 3B68     	 ldr r3,[r7]
 1839 0018 42F21072 	 movw r2,#10000
 1840 001c 9342     	 cmp r3,r2
 1841 001e 28D8     	 bhi .L67
 473:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 474:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_DEBUG("PWM_CCU4_SetDutyCycle:Cannot set duty cycle > 100%%");
 475:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 476:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     else
 477:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 478:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       period = (uint32_t) XMC_CCU4_SLICE_GetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr) + 1U;
 1842              	 .loc 2 478 0
 1843 0020 7B68     	 ldr r3,[r7,#4]
 1844 0022 9B68     	 ldr r3,[r3,#8]
 1845 0024 1846     	 mov r0,r3
 1846 0026 FFF7FEFF 	 bl XMC_CCU4_SLICE_GetTimerPeriodMatch
 1847 002a 0346     	 mov r3,r0
 1848 002c 0133     	 adds r3,r3,#1
 1849 002e 3B61     	 str r3,[r7,#16]
 479:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 480:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       /* Duty Cycle(symmetric) = (PR-CR1)+1 / period */
 481:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       compare = ((period * (PWM_CCU4_DUTY_FULL_SCALE - duty_cycle)) / PWM_CCU4_DUTY_FULL_SCALE);
 1850              	 .loc 2 481 0
 1851 0030 3B68     	 ldr r3,[r7]
 1852 0032 C3F51C53 	 rsb r3,r3,#9984
 1853 0036 1033     	 adds r3,r3,#16
 1854 0038 3A69     	 ldr r2,[r7,#16]
 1855 003a 02FB03F3 	 mul r3,r2,r3
 1856 003e 0F4A     	 ldr r2,.L69
 1857 0040 A2FB0323 	 umull r2,r3,r2,r3
 1858 0044 5B0B     	 lsrs r3,r3,#13
 1859 0046 FB60     	 str r3,[r7,#12]
 482:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 483:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t) compare);
 1860              	 .loc 2 483 0
 1861 0048 7B68     	 ldr r3,[r7,#4]
 1862 004a 9A68     	 ldr r2,[r3,#8]
 1863 004c FB68     	 ldr r3,[r7,#12]
 1864 004e 9BB2     	 uxth r3,r3
 1865 0050 1046     	 mov r0,r2
 1866 0052 1946     	 mov r1,r3
 1867 0054 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 484:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_module_ptr, handle_ptr->shadow_txfr_msk);
 1868              	 .loc 2 484 0
 1869 0058 7B68     	 ldr r3,[r7,#4]
 1870 005a 5A68     	 ldr r2,[r3,#4]
 1871 005c 7B68     	 ldr r3,[r7,#4]
 1872 005e 1B69     	 ldr r3,[r3,#16]
 1873 0060 1046     	 mov r0,r2
 1874 0062 1946     	 mov r1,r3
 1875 0064 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 485:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 486:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       handle_ptr->sym_duty = duty_cycle;
 1876              	 .loc 2 486 0
 1877 0068 7B68     	 ldr r3,[r7,#4]
 1878 006a 3A68     	 ldr r2,[r7]
 1879 006c 5A62     	 str r2,[r3,#36]
 487:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 488:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_DEBUG("PWM_CCU4_SetDutyCycle:dutycycle set");
 489:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       status = PWM_CCU4_STATUS_SUCCESS;
 1880              	 .loc 2 489 0
 1881 006e 0023     	 movs r3,#0
 1882 0070 FB75     	 strb r3,[r7,#23]
 1883              	.L67:
 490:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 491:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 492:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status);
 1884              	 .loc 2 492 0
 1885 0072 FB7D     	 ldrb r3,[r7,#23]
 493:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_SetDutyCycle() api */
 1886              	 .loc 2 493 0
 1887 0074 1846     	 mov r0,r3
 1888 0076 1837     	 adds r7,r7,#24
 1889              	.LCFI133:
 1890              	 .cfi_def_cfa_offset 8
 1891 0078 BD46     	 mov sp,r7
 1892              	.LCFI134:
 1893              	 .cfi_def_cfa_register 13
 1894              	 
 1895 007a 80BD     	 pop {r7,pc}
 1896              	.L70:
 1897              	 .align 2
 1898              	.L69:
 1899 007c 5917B7D1 	 .word -776530087
 1900              	 .cfi_endproc
 1901              	.LFE230:
 1903              	 .section .text.PWM_CCU4_SetFreqAndDutyCycle,"ax",%progbits
 1904              	 .align 2
 1905              	 .global PWM_CCU4_SetFreqAndDutyCycle
 1906              	 .thumb
 1907              	 .thumb_func
 1909              	PWM_CCU4_SetFreqAndDutyCycle:
 1910              	.LFB231:
 494:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 495:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 496:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 497:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Sets the frequency and duty cycle for CCU4_CC4 slice Symmetric Mode. */
 498:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** PWM_CCU4_STATUS_t PWM_CCU4_SetFreqAndDutyCycle(PWM_CCU4_t* handle_ptr, uint32_t pwm_freq_hz, uint32
 499:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 1911              	 .loc 2 499 0
 1912              	 .cfi_startproc
 1913              	 
 1914              	 
 1915 0000 80B5     	 push {r7,lr}
 1916              	.LCFI135:
 1917              	 .cfi_def_cfa_offset 8
 1918              	 .cfi_offset 7,-8
 1919              	 .cfi_offset 14,-4
 1920 0002 88B0     	 sub sp,sp,#32
 1921              	.LCFI136:
 1922              	 .cfi_def_cfa_offset 40
 1923 0004 00AF     	 add r7,sp,#0
 1924              	.LCFI137:
 1925              	 .cfi_def_cfa_register 7
 1926 0006 F860     	 str r0,[r7,#12]
 1927 0008 B960     	 str r1,[r7,#8]
 1928 000a 7A60     	 str r2,[r7,#4]
 500:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 501:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   PWM_CCU4_STATUS_t status;
 502:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t frequency_tclk;
 503:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t period;
 504:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   uint32_t compare;
 505:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 506:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status = PWM_CCU4_STATUS_FAILURE;
 1929              	 .loc 2 506 0
 1930 000c 0123     	 movs r3,#1
 1931 000e FB77     	 strb r3,[r7,#31]
 507:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   frequency_tclk = 0U;
 1932              	 .loc 2 507 0
 1933 0010 0023     	 movs r3,#0
 1934 0012 7B61     	 str r3,[r7,#20]
 508:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_SetFreqAndDutyCycle:handle_ptr NULL", (handle_ptr != NULL));
 509:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   if (PWM_CCU4_STATE_UNINITIALIZED != handle_ptr->state)
 1935              	 .loc 2 509 0
 1936 0014 FB68     	 ldr r3,[r7,#12]
 1937 0016 1B7F     	 ldrb r3,[r3,#28]
 1938 0018 002B     	 cmp r3,#0
 1939 001a 4DD0     	 beq .L72
 510:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   {
 511:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     if (0U == pwm_freq_hz)
 1940              	 .loc 2 511 0
 1941 001c BB68     	 ldr r3,[r7,#8]
 1942 001e 002B     	 cmp r3,#0
 1943 0020 4AD0     	 beq .L72
 512:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 513:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_DEBUG("PWM_CCU4_SetFreqAndDutyCycleSymmetric:cannot set frequency 0Hz");
 514:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 515:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     else if (duty > PWM_CCU4_SYM_DUTY_MAX)
 1944              	 .loc 2 515 0
 1945 0022 7B68     	 ldr r3,[r7,#4]
 1946 0024 42F21072 	 movw r2,#10000
 1947 0028 9342     	 cmp r3,r2
 1948 002a 45D8     	 bhi .L72
 516:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 517:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       XMC_DEBUG("PWM_CCU4_SetFreqAndDutyCycle:duty > 100%%");
 518:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 519:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     else
 520:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     {
 521:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 1949              	 .loc 2 521 0
 1950 002c FB68     	 ldr r3,[r7,#12]
 1951 002e 1B6A     	 ldr r3,[r3,#32]
 1952 0030 7B61     	 str r3,[r7,#20]
 522:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       period = frequency_tclk / pwm_freq_hz;
 1953              	 .loc 2 522 0
 1954 0032 7A69     	 ldr r2,[r7,#20]
 1955 0034 BB68     	 ldr r3,[r7,#8]
 1956 0036 B2FBF3F3 	 udiv r3,r2,r3
 1957 003a BB61     	 str r3,[r7,#24]
 523:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 524:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if ((uint32_t) XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu4_cc4_slice_t
 1958              	 .loc 2 524 0
 1959 003c FB68     	 ldr r3,[r7,#12]
 1960 003e 1B68     	 ldr r3,[r3]
 1961 0040 9B6B     	 ldr r3,[r3,#56]
 1962 0042 1B78     	 ldrb r3,[r3]
 1963 0044 03F00103 	 and r3,r3,#1
 1964 0048 DBB2     	 uxtb r3,r3
 1965 004a 002B     	 cmp r3,#0
 1966 004c 02D0     	 beq .L73
 525:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 526:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         period = period >> 1U;/*divide by 2*/
 1967              	 .loc 2 526 0
 1968 004e BB69     	 ldr r3,[r7,#24]
 1969 0050 5B08     	 lsrs r3,r3,#1
 1970 0052 BB61     	 str r3,[r7,#24]
 1971              	.L73:
 527:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 528:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 529:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       if ((period != 0U) && (period <= PWM_CCU4_MAX_TIMER_COUNT))
 1972              	 .loc 2 529 0
 1973 0054 BB69     	 ldr r3,[r7,#24]
 1974 0056 002B     	 cmp r3,#0
 1975 0058 2ED0     	 beq .L72
 1976              	 .loc 2 529 0 is_stmt 0 discriminator 1
 1977 005a BB69     	 ldr r3,[r7,#24]
 1978 005c B3F5803F 	 cmp r3,#65536
 1979 0060 2AD2     	 bcs .L72
 530:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       {
 531:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 532:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         compare = ((period * (PWM_CCU4_DUTY_FULL_SCALE - duty)) / PWM_CCU4_DUTY_FULL_SCALE);
 1980              	 .loc 2 532 0 is_stmt 1
 1981 0062 7B68     	 ldr r3,[r7,#4]
 1982 0064 C3F51C53 	 rsb r3,r3,#9984
 1983 0068 1033     	 adds r3,r3,#16
 1984 006a BA69     	 ldr r2,[r7,#24]
 1985 006c 02FB03F3 	 mul r3,r2,r3
 1986 0070 144A     	 ldr r2,.L75
 1987 0072 A2FB0323 	 umull r2,r3,r2,r3
 1988 0076 5B0B     	 lsrs r3,r3,#13
 1989 0078 3B61     	 str r3,[r7,#16]
 533:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 534:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)(period - 1U));
 1990              	 .loc 2 534 0
 1991 007a FB68     	 ldr r3,[r7,#12]
 1992 007c 9A68     	 ldr r2,[r3,#8]
 1993 007e BB69     	 ldr r3,[r7,#24]
 1994 0080 9BB2     	 uxth r3,r3
 1995 0082 013B     	 subs r3,r3,#1
 1996 0084 9BB2     	 uxth r3,r3
 1997 0086 1046     	 mov r0,r2
 1998 0088 1946     	 mov r1,r3
 1999 008a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 535:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t) compare);
 2000              	 .loc 2 535 0
 2001 008e FB68     	 ldr r3,[r7,#12]
 2002 0090 9A68     	 ldr r2,[r3,#8]
 2003 0092 3B69     	 ldr r3,[r7,#16]
 2004 0094 9BB2     	 uxth r3,r3
 2005 0096 1046     	 mov r0,r2
 2006 0098 1946     	 mov r1,r3
 2007 009a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 536:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 537:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_module_ptr, handle_ptr->shadow_txfr_msk);
 2008              	 .loc 2 537 0
 2009 009e FB68     	 ldr r3,[r7,#12]
 2010 00a0 5A68     	 ldr r2,[r3,#4]
 2011 00a2 FB68     	 ldr r3,[r7,#12]
 2012 00a4 1B69     	 ldr r3,[r3,#16]
 2013 00a6 1046     	 mov r0,r2
 2014 00a8 1946     	 mov r1,r3
 2015 00aa FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 538:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 539:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         handle_ptr->sym_duty = duty;
 2016              	 .loc 2 539 0
 2017 00ae FB68     	 ldr r3,[r7,#12]
 2018 00b0 7A68     	 ldr r2,[r7,#4]
 2019 00b2 5A62     	 str r2,[r3,#36]
 540:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 541:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         XMC_DEBUG("PWM_CCU4_SetFreqAndDutyCycle:frequency set");
 542:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****         status = PWM_CCU4_STATUS_SUCCESS;
 2020              	 .loc 2 542 0
 2021 00b4 0023     	 movs r3,#0
 2022 00b6 FB77     	 strb r3,[r7,#31]
 2023              	.L72:
 543:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****       }
 544:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****     }
 545:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   }
 546:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status);
 2024              	 .loc 2 546 0
 2025 00b8 FB7F     	 ldrb r3,[r7,#31]
 547:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 548:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** }/* end of PWM_CCU4_SetFreqAndDutyCycle() api */
 2026              	 .loc 2 548 0
 2027 00ba 1846     	 mov r0,r3
 2028 00bc 2037     	 adds r7,r7,#32
 2029              	.LCFI138:
 2030              	 .cfi_def_cfa_offset 8
 2031 00be BD46     	 mov sp,r7
 2032              	.LCFI139:
 2033              	 .cfi_def_cfa_register 13
 2034              	 
 2035 00c0 80BD     	 pop {r7,pc}
 2036              	.L76:
 2037 00c2 00BF     	 .align 2
 2038              	.L75:
 2039 00c4 5917B7D1 	 .word -776530087
 2040              	 .cfi_endproc
 2041              	.LFE231:
 2043              	 .section .text.PWM_CCU4_SetDither,"ax",%progbits
 2044              	 .align 2
 2045              	 .global PWM_CCU4_SetDither
 2046              	 .thumb
 2047              	 .thumb_func
 2049              	PWM_CCU4_SetDither:
 2050              	.LFB232:
 549:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 550:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 551:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 552:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Sets the dither value, enables the dither. */
 553:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** void PWM_CCU4_SetDither(PWM_CCU4_t* handle_ptr, bool dither_period, bool dither_comp, uint8_t dithe
 554:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 2051              	 .loc 2 554 0
 2052              	 .cfi_startproc
 2053              	 
 2054              	 
 2055 0000 80B5     	 push {r7,lr}
 2056              	.LCFI140:
 2057              	 .cfi_def_cfa_offset 8
 2058              	 .cfi_offset 7,-8
 2059              	 .cfi_offset 14,-4
 2060 0002 82B0     	 sub sp,sp,#8
 2061              	.LCFI141:
 2062              	 .cfi_def_cfa_offset 16
 2063 0004 00AF     	 add r7,sp,#0
 2064              	.LCFI142:
 2065              	 .cfi_def_cfa_register 7
 2066 0006 7860     	 str r0,[r7,#4]
 2067 0008 0846     	 mov r0,r1
 2068 000a 1146     	 mov r1,r2
 2069 000c 1A46     	 mov r2,r3
 2070 000e 0346     	 mov r3,r0
 2071 0010 FB70     	 strb r3,[r7,#3]
 2072 0012 0B46     	 mov r3,r1
 2073 0014 BB70     	 strb r3,[r7,#2]
 2074 0016 1346     	 mov r3,r2
 2075 0018 7B70     	 strb r3,[r7,#1]
 555:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 556:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_SetDither:handle_ptr NULL", (handle_ptr != NULL));
 557:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_CCU4_SLICE_EnableDithering(handle_ptr->ccu4_slice_ptr, dither_period, dither_comp, dither_val
 2076              	 .loc 2 557 0
 2077 001a 7B68     	 ldr r3,[r7,#4]
 2078 001c 9868     	 ldr r0,[r3,#8]
 2079 001e F978     	 ldrb r1,[r7,#3]
 2080 0020 BA78     	 ldrb r2,[r7,#2]
 2081 0022 7B78     	 ldrb r3,[r7,#1]
 2082 0024 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableDithering
 558:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_module_ptr, handle_ptr->dither_shadow_txfr_msk);
 2083              	 .loc 2 558 0
 2084 0028 7B68     	 ldr r3,[r7,#4]
 2085 002a 5A68     	 ldr r2,[r3,#4]
 2086 002c 7B68     	 ldr r3,[r7,#4]
 2087 002e 5B69     	 ldr r3,[r3,#20]
 2088 0030 1046     	 mov r0,r2
 2089 0032 1946     	 mov r1,r3
 2090 0034 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 559:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_DEBUG("PWM_CCU4_SetDither:dither compare value set");
 560:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 561:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** }/* end of PWM_CCU4_SetDither() api */
 2091              	 .loc 2 561 0
 2092 0038 0837     	 adds r7,r7,#8
 2093              	.LCFI143:
 2094              	 .cfi_def_cfa_offset 8
 2095 003a BD46     	 mov sp,r7
 2096              	.LCFI144:
 2097              	 .cfi_def_cfa_register 13
 2098              	 
 2099 003c 80BD     	 pop {r7,pc}
 2100              	 .cfi_endproc
 2101              	.LFE232:
 2103 003e 00BF     	 .section .text.PWM_CCU4_ClearTrap,"ax",%progbits
 2104              	 .align 2
 2105              	 .global PWM_CCU4_ClearTrap
 2106              	 .thumb
 2107              	 .thumb_func
 2109              	PWM_CCU4_ClearTrap:
 2110              	.LFB233:
 562:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 563:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 564:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 565:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*exits trap condition if trap signal is inactive */
 566:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** void PWM_CCU4_ClearTrap(PWM_CCU4_t* handle_ptr)
 567:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 2111              	 .loc 2 567 0
 2112              	 .cfi_startproc
 2113              	 
 2114              	 
 2115 0000 80B5     	 push {r7,lr}
 2116              	.LCFI145:
 2117              	 .cfi_def_cfa_offset 8
 2118              	 .cfi_offset 7,-8
 2119              	 .cfi_offset 14,-4
 2120 0002 82B0     	 sub sp,sp,#8
 2121              	.LCFI146:
 2122              	 .cfi_def_cfa_offset 16
 2123 0004 00AF     	 add r7,sp,#0
 2124              	.LCFI147:
 2125              	 .cfi_def_cfa_register 7
 2126 0006 7860     	 str r0,[r7,#4]
 568:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 569:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_ClearTrap:handle_ptr NULL", (handle_ptr != NULL));
 570:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_CCU4_SLICE_ClearEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_EVENT2);
 2127              	 .loc 2 570 0
 2128 0008 7B68     	 ldr r3,[r7,#4]
 2129 000a 9B68     	 ldr r3,[r3,#8]
 2130 000c 1846     	 mov r0,r3
 2131 000e 0A21     	 movs r1,#10
 2132 0010 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearEvent
 571:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_DEBUG("PWM_CCU4_ClearTrap:trap event cleared");
 572:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 573:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** }/* end of PWM_CCU4_ClearTrap() api */
 2133              	 .loc 2 573 0
 2134 0014 0837     	 adds r7,r7,#8
 2135              	.LCFI148:
 2136              	 .cfi_def_cfa_offset 8
 2137 0016 BD46     	 mov sp,r7
 2138              	.LCFI149:
 2139              	 .cfi_def_cfa_register 13
 2140              	 
 2141 0018 80BD     	 pop {r7,pc}
 2142              	 .cfi_endproc
 2143              	.LFE233:
 2145 001a 00BF     	 .section .text.PWM_CCU4_GetInterruptStatus,"ax",%progbits
 2146              	 .align 2
 2147              	 .global PWM_CCU4_GetInterruptStatus
 2148              	 .thumb
 2149              	 .thumb_func
 2151              	PWM_CCU4_GetInterruptStatus:
 2152              	.LFB234:
 574:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 575:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 576:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 577:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Gets the interrupt status of  CCU4_CC4 slice. */
 578:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** bool PWM_CCU4_GetInterruptStatus(PWM_CCU4_t* handle_ptr, XMC_CCU4_SLICE_IRQ_ID_t pwm_interrupt)
 579:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 2153              	 .loc 2 579 0
 2154              	 .cfi_startproc
 2155              	 
 2156              	 
 2157 0000 80B5     	 push {r7,lr}
 2158              	.LCFI150:
 2159              	 .cfi_def_cfa_offset 8
 2160              	 .cfi_offset 7,-8
 2161              	 .cfi_offset 14,-4
 2162 0002 84B0     	 sub sp,sp,#16
 2163              	.LCFI151:
 2164              	 .cfi_def_cfa_offset 24
 2165 0004 00AF     	 add r7,sp,#0
 2166              	.LCFI152:
 2167              	 .cfi_def_cfa_register 7
 2168 0006 7860     	 str r0,[r7,#4]
 2169 0008 0B46     	 mov r3,r1
 2170 000a FB70     	 strb r3,[r7,#3]
 580:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   bool status = (bool) false;
 2171              	 .loc 2 580 0
 2172 000c 0023     	 movs r3,#0
 2173 000e FB73     	 strb r3,[r7,#15]
 581:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_GetInterruptStatus:handle_ptr NULL", (handle_ptr != NULL));
 582:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   status = XMC_CCU4_SLICE_GetEvent(handle_ptr->ccu4_slice_ptr, pwm_interrupt);
 2174              	 .loc 2 582 0
 2175 0010 7B68     	 ldr r3,[r7,#4]
 2176 0012 9A68     	 ldr r2,[r3,#8]
 2177 0014 FB78     	 ldrb r3,[r7,#3]
 2178 0016 1046     	 mov r0,r2
 2179 0018 1946     	 mov r1,r3
 2180 001a FFF7FEFF 	 bl XMC_CCU4_SLICE_GetEvent
 2181 001e 0346     	 mov r3,r0
 2182 0020 FB73     	 strb r3,[r7,#15]
 583:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   return (status);
 2183              	 .loc 2 583 0
 2184 0022 FB7B     	 ldrb r3,[r7,#15]
 584:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_GetInterruptStatus() api */
 2185              	 .loc 2 584 0
 2186 0024 1846     	 mov r0,r3
 2187 0026 1037     	 adds r7,r7,#16
 2188              	.LCFI153:
 2189              	 .cfi_def_cfa_offset 8
 2190 0028 BD46     	 mov sp,r7
 2191              	.LCFI154:
 2192              	 .cfi_def_cfa_register 13
 2193              	 
 2194 002a 80BD     	 pop {r7,pc}
 2195              	 .cfi_endproc
 2196              	.LFE234:
 2198              	 .section .text.PWM_CCU4_ClearEvent,"ax",%progbits
 2199              	 .align 2
 2200              	 .global PWM_CCU4_ClearEvent
 2201              	 .thumb
 2202              	 .thumb_func
 2204              	PWM_CCU4_ClearEvent:
 2205              	.LFB235:
 585:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 586:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /**************************************************************************************************
 587:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** 
 588:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** /*Acknowledges the interrupt of  CCU4_CC4 slice. */
 589:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** void PWM_CCU4_ClearEvent(PWM_CCU4_t* handle_ptr, XMC_CCU4_SLICE_IRQ_ID_t pwm_interrupt)
 590:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** {
 2206              	 .loc 2 590 0
 2207              	 .cfi_startproc
 2208              	 
 2209              	 
 2210 0000 80B5     	 push {r7,lr}
 2211              	.LCFI155:
 2212              	 .cfi_def_cfa_offset 8
 2213              	 .cfi_offset 7,-8
 2214              	 .cfi_offset 14,-4
 2215 0002 82B0     	 sub sp,sp,#8
 2216              	.LCFI156:
 2217              	 .cfi_def_cfa_offset 16
 2218 0004 00AF     	 add r7,sp,#0
 2219              	.LCFI157:
 2220              	 .cfi_def_cfa_register 7
 2221 0006 7860     	 str r0,[r7,#4]
 2222 0008 0B46     	 mov r3,r1
 2223 000a FB70     	 strb r3,[r7,#3]
 591:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_ASSERT("PWM_CCU4_ClearEvent:handle_ptr NULL", (handle_ptr != NULL));
 592:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_CCU4_SLICE_ClearEvent(handle_ptr->ccu4_slice_ptr, pwm_interrupt);
 2224              	 .loc 2 592 0
 2225 000c 7B68     	 ldr r3,[r7,#4]
 2226 000e 9A68     	 ldr r2,[r3,#8]
 2227 0010 FB78     	 ldrb r3,[r7,#3]
 2228 0012 1046     	 mov r0,r2
 2229 0014 1946     	 mov r1,r3
 2230 0016 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearEvent
 593:../Dave/Generated/PWM_CCU4/pwm_ccu4.c ****   XMC_DEBUG("PWM_CCU4_ClearEvent:Acknowledge Interrupt");
 594:../Dave/Generated/PWM_CCU4/pwm_ccu4.c **** } /* end of PWM_CCU4_ClearEvent() api */
 2231              	 .loc 2 594 0
 2232 001a 0837     	 adds r7,r7,#8
 2233              	.LCFI158:
 2234              	 .cfi_def_cfa_offset 8
 2235 001c BD46     	 mov sp,r7
 2236              	.LCFI159:
 2237              	 .cfi_def_cfa_register 13
 2238              	 
 2239 001e 80BD     	 pop {r7,pc}
 2240              	 .cfi_endproc
 2241              	.LFE235:
 2243              	 .text
 2244              	.Letext0:
 2245              	 .file 3 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2246              	 .file 4 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2247              	 .file 5 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/XMC4400.h"
 2248              	 .file 6 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_gpio.h"
 2249              	 .file 7 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc4_gpio.h"
 2250              	 .file 8 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc4_scu.h"
 2251              	 .file 9 "F:/GitHub Projects/FH Luzern/BAT/BAT/Dave/Generated/DAVE_Common.h"
 2252              	 .file 10 "../Dave/Generated/PWM_CCU4/../GLOBAL_CCU4/global_ccu4.h"
 2253              	 .file 11 "../Dave/Generated/PWM_CCU4/pwm_ccu4.h"
 2254              	 .file 12 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/core_cm4.h"
 2255              	 .file 13 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/system_XMC4400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm_ccu4.c
    {standard input}:20     .text.XMC_CCU4_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU4_EnableClock:00000000 XMC_CCU4_EnableClock
    {standard input}:71     .text.XMC_CCU4_SLICE_EnableTrap:00000000 $t
    {standard input}:75     .text.XMC_CCU4_SLICE_EnableTrap:00000000 XMC_CCU4_SLICE_EnableTrap
    {standard input}:116    .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 $t
    {standard input}:120    .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 XMC_CCU4_SLICE_IsTimerRunning
    {standard input}:165    .text.XMC_CCU4_SLICE_StartTimer:00000000 $t
    {standard input}:169    .text.XMC_CCU4_SLICE_StartTimer:00000000 XMC_CCU4_SLICE_StartTimer
    {standard input}:208    .text.XMC_CCU4_SLICE_StopTimer:00000000 $t
    {standard input}:212    .text.XMC_CCU4_SLICE_StopTimer:00000000 XMC_CCU4_SLICE_StopTimer
    {standard input}:251    .text.XMC_CCU4_SLICE_ClearTimer:00000000 $t
    {standard input}:255    .text.XMC_CCU4_SLICE_ClearTimer:00000000 XMC_CCU4_SLICE_ClearTimer
    {standard input}:294    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:298    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU4_SLICE_SetTimerPeriodMatch
    {standard input}:339    .text.XMC_CCU4_SLICE_GetTimerPeriodMatch:00000000 $t
    {standard input}:343    .text.XMC_CCU4_SLICE_GetTimerPeriodMatch:00000000 XMC_CCU4_SLICE_GetTimerPeriodMatch
    {standard input}:383    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:387    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 XMC_CCU4_SLICE_SetTimerCompareMatch
    {standard input}:428    .text.XMC_CCU4_EnableShadowTransfer:00000000 $t
    {standard input}:432    .text.XMC_CCU4_EnableShadowTransfer:00000000 XMC_CCU4_EnableShadowTransfer
    {standard input}:472    .text.XMC_CCU4_SLICE_GetTimerValue:00000000 $t
    {standard input}:476    .text.XMC_CCU4_SLICE_GetTimerValue:00000000 XMC_CCU4_SLICE_GetTimerValue
    {standard input}:516    .text.XMC_CCU4_SLICE_EnableEvent:00000000 $t
    {standard input}:520    .text.XMC_CCU4_SLICE_EnableEvent:00000000 XMC_CCU4_SLICE_EnableEvent
    {standard input}:566    .text.XMC_CCU4_SLICE_ClearEvent:00000000 $t
    {standard input}:570    .text.XMC_CCU4_SLICE_ClearEvent:00000000 XMC_CCU4_SLICE_ClearEvent
    {standard input}:616    .text.XMC_CCU4_SLICE_GetEvent:00000000 $t
    {standard input}:620    .text.XMC_CCU4_SLICE_GetEvent:00000000 XMC_CCU4_SLICE_GetEvent
    {standard input}:669    .text.PWM_CCU4_GetAppVersion:00000000 $t
    {standard input}:674    .text.PWM_CCU4_GetAppVersion:00000000 PWM_CCU4_GetAppVersion
    {standard input}:735    .text.PWM_CCU4_Init:00000000 $t
    {standard input}:740    .text.PWM_CCU4_Init:00000000 PWM_CCU4_Init
    {standard input}:1157   .text.PWM_CCU4_lConfigure_Events:00000000 PWM_CCU4_lConfigure_Events
    {standard input}:947    .text.PWM_CCU4_lInit_Interrupt:00000000 PWM_CCU4_lInit_Interrupt
    {standard input}:1430   .text.PWM_CCU4_Start:00000000 PWM_CCU4_Start
    {standard input}:943    .text.PWM_CCU4_lInit_Interrupt:00000000 $t
    {standard input}:1153   .text.PWM_CCU4_lConfigure_Events:00000000 $t
    {standard input}:1425   .text.PWM_CCU4_Start:00000000 $t
    {standard input}:1506   .text.PWM_CCU4_Stop:00000000 $t
    {standard input}:1511   .text.PWM_CCU4_Stop:00000000 PWM_CCU4_Stop
    {standard input}:1571   .text.PWM_CCU4_GetTimerValue:00000000 $t
    {standard input}:1576   .text.PWM_CCU4_GetTimerValue:00000000 PWM_CCU4_GetTimerValue
    {standard input}:1617   .text.PWM_CCU4_GetTimerStatus:00000000 $t
    {standard input}:1622   .text.PWM_CCU4_GetTimerStatus:00000000 PWM_CCU4_GetTimerStatus
    {standard input}:1663   .text.PWM_CCU4_SetFreq:00000000 $t
    {standard input}:1668   .text.PWM_CCU4_SetFreq:00000000 PWM_CCU4_SetFreq
    {standard input}:1800   .text.PWM_CCU4_SetFreq:000000c0 $d
    {standard input}:1805   .text.PWM_CCU4_SetDutyCycle:00000000 $t
    {standard input}:1810   .text.PWM_CCU4_SetDutyCycle:00000000 PWM_CCU4_SetDutyCycle
    {standard input}:1899   .text.PWM_CCU4_SetDutyCycle:0000007c $d
    {standard input}:1904   .text.PWM_CCU4_SetFreqAndDutyCycle:00000000 $t
    {standard input}:1909   .text.PWM_CCU4_SetFreqAndDutyCycle:00000000 PWM_CCU4_SetFreqAndDutyCycle
    {standard input}:2039   .text.PWM_CCU4_SetFreqAndDutyCycle:000000c4 $d
    {standard input}:2044   .text.PWM_CCU4_SetDither:00000000 $t
    {standard input}:2049   .text.PWM_CCU4_SetDither:00000000 PWM_CCU4_SetDither
    {standard input}:2104   .text.PWM_CCU4_ClearTrap:00000000 $t
    {standard input}:2109   .text.PWM_CCU4_ClearTrap:00000000 PWM_CCU4_ClearTrap
    {standard input}:2146   .text.PWM_CCU4_GetInterruptStatus:00000000 $t
    {standard input}:2151   .text.PWM_CCU4_GetInterruptStatus:00000000 PWM_CCU4_GetInterruptStatus
    {standard input}:2199   .text.PWM_CCU4_ClearEvent:00000000 $t
    {standard input}:2204   .text.PWM_CCU4_ClearEvent:00000000 PWM_CCU4_ClearEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_CCU4_Init
XMC_CCU4_SLICE_CompareInit
XMC_CCU4_SetMultiChannelShadowTransferMode
XMC_GPIO_Init
XMC_CCU4_SLICE_SetInterruptNode
XMC_CCU4_SLICE_ConfigureEvent
XMC_CCU4_SLICE_StartConfig
XMC_CCU4_SLICE_StopConfig
XMC_CCU4_SLICE_DirectionConfig
XMC_CCU4_SLICE_GateConfig
XMC_CCU4_SLICE_CountConfig
XMC_CCU4_SLICE_LoadConfig
XMC_CCU4_SLICE_ModulationConfig
XMC_CCU4_SLICE_TrapConfig
XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
XMC_CCU4_SLICE_StatusBitOverrideConfig
XMC_CCU4_SLICE_EnableDithering
