   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_StartPrescaler:
  25              	.LFB137:
  26              	 .file 1 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_ccu4.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @date 2017-09-15
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  27              	 .loc 1 864 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
  43              	 .loc 1 866 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 DA60     	 str r2,[r3,#12]
 867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  49              	 .loc 1 867 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE137:
  65 001e 00BF     	 .section .text.XMC_CCU4_SLICE_SetDitherCompareValue,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_CCU4_SLICE_SetDitherCompareValue:
  71              	.LFB165:
 868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
 955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.
 997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #else
1206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
1227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
1479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
1614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
1716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  72              	 .loc 1 1862 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
  88 0008 0B46     	 mov r3,r1
  89 000a FB70     	 strb r3,[r7,#3]
1863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
  90              	 .loc 1 1864 0
  91 000c FA78     	 ldrb r2,[r7,#3]
  92 000e 7B68     	 ldr r3,[r7,#4]
  93 0010 1A62     	 str r2,[r3,#32]
1865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  94              	 .loc 1 1865 0
  95 0012 0C37     	 adds r7,r7,#12
  96              	.LCFI9:
  97              	 .cfi_def_cfa_offset 4
  98 0014 BD46     	 mov sp,r7
  99              	.LCFI10:
 100              	 .cfi_def_cfa_register 13
 101              	 
 102 0016 5DF8047B 	 ldr r7,[sp],#4
 103              	.LCFI11:
 104              	 .cfi_restore 7
 105              	 .cfi_def_cfa_offset 0
 106 001a 7047     	 bx lr
 107              	 .cfi_endproc
 108              	.LFE165:
 110              	 .section .text.XMC_CCU4_lAssertReset,"ax",%progbits
 111              	 .align 2
 112              	 .thumb
 113              	 .thumb_func
 115              	XMC_CCU4_lAssertReset:
 116              	.LFB209:
 117              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu4.c"
   1:../Libraries/XMCLib/src/xmc_ccu4.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @file xmc_ccu4.c
   3:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @date 2017-04-27
   4:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu4.c ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu4.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ccu4.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ccu4.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ccu4.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ccu4.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ccu4.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ccu4.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ccu4.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ccu4.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ccu4.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ccu4.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ccu4.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ccu4.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ccu4.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  39:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  42:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  45:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-07-01:
  46:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - In XMC_CCU4_SLICE_StartConfig(), Options in XMC_ASSERT check for start mode is corrected. 
  47:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  48:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-07-24:
  49:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  50:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  51:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-08-17:
  52:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Start of prescaler XMC_CCU4_StartPrescaler() is invoked in XMC_CCU4_Init() API. <br>
  53:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Bug fix XMC_CCU4_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  54:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  55:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  56:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-10-07:
  57:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  58:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - DOC updates for the newly added APIs.
  59:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  60:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2017-02-25:
  61:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_lAssertReset(), XMC_CCU4_lDeassertReset(), XMC_CCU4_lGateClock() and XMC_CCU4_lUn
  62:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  63:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2017-04-27:
  64:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  65:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  66:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @endcond
  67:../Libraries/XMCLib/src/xmc_ccu4.c ****  */
  68:../Libraries/XMCLib/src/xmc_ccu4.c ****  
  69:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  70:../Libraries/XMCLib/src/xmc_ccu4.c ****  * HEADER FILES
  71:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ccu4.c **** #include "xmc_ccu4.h"
  73:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  74:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU40)
  75:../Libraries/XMCLib/src/xmc_ccu4.c **** #include "xmc_scu.h"
  76:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_ccu4.c ****  * MACROS
  78:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  79:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_NUM_SLICES_PER_MODULE          (4U)
  80:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_PERIOD_MASK       (1U)
  81:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  82:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  83:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  84:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  85:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
  86:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS1_EV0IS_Msk
  87:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
  88:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS_EV0IS_Msk
  89:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
  90:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GIDLC_CLOCK_MASK               (15U)
  91:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE0_MASK               (1U)
  92:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE1_MASK               (16U)
  93:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE2_MASK               (256U)
  94:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE3_MASK               (4096U)
  95:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  96:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the clock selected enum passed is valid */
  97:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_CLOCK(clock) \
  98:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((clock == XMC_CCU4_CLOCK_SCU)        || \
  99:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_A) || \
 100:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_B) || \
 101:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_C))
 102:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 103:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the event ID is valid*/
 104:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_ID(event_id) \
 105:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((event_id == XMC_CCU4_SLICE_EVENT_NONE)|| \
 106:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_0)   || \
 107:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_1)   || \
 108:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_2))
 109:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 110:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the edge sensitivity is valid*/
 111:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 112:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 113:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 114:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 115:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 116:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 117:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the filter clock cycles are valid */
 118:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_FILTER(cycles) \
 119:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((cycles == XMC_CCU4_SLICE_EVENT_FILTER_DISABLED) || \
 120:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES) || \
 121:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES) || \
 122:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES))
 123:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 124:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the Multi-channel input related action is valid*/
 125:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action) \
 126:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 127:../Libraries/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 128:../Libraries/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 129:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 130:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the SR line is valid*/
 131:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_SR_ID(id) \
 132:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((id == XMC_CCU4_SLICE_SR_ID_0) || \
 133:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_1) || \
 134:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_2) || \
 135:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_3))
 136:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 137:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the end mode enum passed is valid */
 138:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_CHECK_END_MODE(end_mode) \
 139:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP) || \
 140:../Libraries/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR) || \
 141:../Libraries/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR))
 142:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 143:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 144:../Libraries/XMCLib/src/xmc_ccu4.c ****  * LOCAL ROUTINES
 145:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 146:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 147:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lAssertReset(const XMC_CCU4_MODULE_t *const module)
 148:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 118              	 .loc 2 148 0
 119              	 .cfi_startproc
 120              	 
 121              	 
 122 0000 80B5     	 push {r7,lr}
 123              	.LCFI12:
 124              	 .cfi_def_cfa_offset 8
 125              	 .cfi_offset 7,-8
 126              	 .cfi_offset 14,-4
 127 0002 82B0     	 sub sp,sp,#8
 128              	.LCFI13:
 129              	 .cfi_def_cfa_offset 16
 130 0004 00AF     	 add r7,sp,#0
 131              	.LCFI14:
 132              	 .cfi_def_cfa_register 7
 133 0006 7860     	 str r0,[r7,#4]
 149:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 134              	 .loc 2 149 0
 135 0008 7B68     	 ldr r3,[r7,#4]
 136 000a 104A     	 ldr r2,.L8
 137 000c 9342     	 cmp r3,r2
 138 000e 03D1     	 bne .L4
 150:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 151:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 139              	 .loc 2 151 0
 140 0010 0420     	 movs r0,#4
 141 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 142 0016 16E0     	 b .L3
 143              	.L4:
 152:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 153:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 154:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 144              	 .loc 2 154 0
 145 0018 7B68     	 ldr r3,[r7,#4]
 146 001a 0D4A     	 ldr r2,.L8+4
 147 001c 9342     	 cmp r3,r2
 148 001e 03D1     	 bne .L6
 155:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 156:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 149              	 .loc 2 156 0
 150 0020 0820     	 movs r0,#8
 151 0022 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 152 0026 0EE0     	 b .L3
 153              	.L6:
 157:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 158:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 159:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 160:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 154              	 .loc 2 160 0
 155 0028 7B68     	 ldr r3,[r7,#4]
 156 002a 0A4A     	 ldr r2,.L8+8
 157 002c 9342     	 cmp r3,r2
 158 002e 03D1     	 bne .L7
 161:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 162:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 159              	 .loc 2 162 0
 160 0030 1020     	 movs r0,#16
 161 0032 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 162 0036 06E0     	 b .L3
 163              	.L7:
 163:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 164:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 165:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 166:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 164              	 .loc 2 166 0
 165 0038 7B68     	 ldr r3,[r7,#4]
 166 003a 074A     	 ldr r2,.L8+12
 167 003c 9342     	 cmp r3,r2
 168 003e 02D1     	 bne .L3
 167:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 168:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 169              	 .loc 2 168 0
 170 0040 0648     	 ldr r0,.L8+16
 171 0042 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 172              	.L3:
 169:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 170:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 171:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 172:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 173:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lAssertReset:Invalid Module Pointer", 0);
 174:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 175:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 173              	 .loc 2 175 0
 174 0046 0837     	 adds r7,r7,#8
 175              	.LCFI15:
 176              	 .cfi_def_cfa_offset 8
 177 0048 BD46     	 mov sp,r7
 178              	.LCFI16:
 179              	 .cfi_def_cfa_register 13
 180              	 
 181 004a 80BD     	 pop {r7,pc}
 182              	.L9:
 183              	 .align 2
 184              	.L8:
 185 004c 00C00040 	 .word 1073790976
 186 0050 00000140 	 .word 1073807360
 187 0054 00400140 	 .word 1073823744
 188 0058 00400048 	 .word 1207975936
 189 005c 01000010 	 .word 268435457
 190              	 .cfi_endproc
 191              	.LFE209:
 193              	 .section .text.XMC_CCU4_lDeassertReset,"ax",%progbits
 194              	 .align 2
 195              	 .thumb
 196              	 .thumb_func
 198              	XMC_CCU4_lDeassertReset:
 199              	.LFB210:
 176:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 177:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lDeassertReset(const XMC_CCU4_MODULE_t *const module)
 178:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 200              	 .loc 2 178 0
 201              	 .cfi_startproc
 202              	 
 203              	 
 204 0000 80B5     	 push {r7,lr}
 205              	.LCFI17:
 206              	 .cfi_def_cfa_offset 8
 207              	 .cfi_offset 7,-8
 208              	 .cfi_offset 14,-4
 209 0002 82B0     	 sub sp,sp,#8
 210              	.LCFI18:
 211              	 .cfi_def_cfa_offset 16
 212 0004 00AF     	 add r7,sp,#0
 213              	.LCFI19:
 214              	 .cfi_def_cfa_register 7
 215 0006 7860     	 str r0,[r7,#4]
 179:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 216              	 .loc 2 179 0
 217 0008 7B68     	 ldr r3,[r7,#4]
 218 000a 104A     	 ldr r2,.L15
 219 000c 9342     	 cmp r3,r2
 220 000e 03D1     	 bne .L11
 180:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 181:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 221              	 .loc 2 181 0
 222 0010 0420     	 movs r0,#4
 223 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 224 0016 16E0     	 b .L10
 225              	.L11:
 182:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 183:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 184:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 226              	 .loc 2 184 0
 227 0018 7B68     	 ldr r3,[r7,#4]
 228 001a 0D4A     	 ldr r2,.L15+4
 229 001c 9342     	 cmp r3,r2
 230 001e 03D1     	 bne .L13
 185:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 186:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 231              	 .loc 2 186 0
 232 0020 0820     	 movs r0,#8
 233 0022 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 234 0026 0EE0     	 b .L10
 235              	.L13:
 187:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 188:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 189:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 190:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 236              	 .loc 2 190 0
 237 0028 7B68     	 ldr r3,[r7,#4]
 238 002a 0A4A     	 ldr r2,.L15+8
 239 002c 9342     	 cmp r3,r2
 240 002e 03D1     	 bne .L14
 191:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 192:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 241              	 .loc 2 192 0
 242 0030 1020     	 movs r0,#16
 243 0032 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 244 0036 06E0     	 b .L10
 245              	.L14:
 193:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 194:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 195:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 196:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 246              	 .loc 2 196 0
 247 0038 7B68     	 ldr r3,[r7,#4]
 248 003a 074A     	 ldr r2,.L15+12
 249 003c 9342     	 cmp r3,r2
 250 003e 02D1     	 bne .L10
 197:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 198:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 251              	 .loc 2 198 0
 252 0040 0648     	 ldr r0,.L15+16
 253 0042 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 254              	.L10:
 199:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 200:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 201:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 202:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 203:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lDeassertReset:Invalid Module Pointer", 0);
 204:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 205:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 255              	 .loc 2 205 0
 256 0046 0837     	 adds r7,r7,#8
 257              	.LCFI20:
 258              	 .cfi_def_cfa_offset 8
 259 0048 BD46     	 mov sp,r7
 260              	.LCFI21:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 004a 80BD     	 pop {r7,pc}
 264              	.L16:
 265              	 .align 2
 266              	.L15:
 267 004c 00C00040 	 .word 1073790976
 268 0050 00000140 	 .word 1073807360
 269 0054 00400140 	 .word 1073823744
 270 0058 00400048 	 .word 1207975936
 271 005c 01000010 	 .word 268435457
 272              	 .cfi_endproc
 273              	.LFE210:
 275              	 .section .text.XMC_CCU4_lGateClock,"ax",%progbits
 276              	 .align 2
 277              	 .thumb
 278              	 .thumb_func
 280              	XMC_CCU4_lGateClock:
 281              	.LFB211:
 206:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 207:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 208:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 209:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lGateClock(const XMC_CCU4_MODULE_t *const module)
 210:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 282              	 .loc 2 210 0
 283              	 .cfi_startproc
 284              	 
 285              	 
 286 0000 80B5     	 push {r7,lr}
 287              	.LCFI22:
 288              	 .cfi_def_cfa_offset 8
 289              	 .cfi_offset 7,-8
 290              	 .cfi_offset 14,-4
 291 0002 82B0     	 sub sp,sp,#8
 292              	.LCFI23:
 293              	 .cfi_def_cfa_offset 16
 294 0004 00AF     	 add r7,sp,#0
 295              	.LCFI24:
 296              	 .cfi_def_cfa_register 7
 297 0006 7860     	 str r0,[r7,#4]
 211:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 212:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 298              	 .loc 2 212 0
 299 0008 7B68     	 ldr r3,[r7,#4]
 300 000a 104A     	 ldr r2,.L22
 301 000c 9342     	 cmp r3,r2
 302 000e 03D1     	 bne .L18
 213:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 214:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 303              	 .loc 2 214 0
 304 0010 0420     	 movs r0,#4
 305 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 306 0016 16E0     	 b .L17
 307              	.L18:
 215:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 216:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 217:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 308              	 .loc 2 217 0
 309 0018 7B68     	 ldr r3,[r7,#4]
 310 001a 0D4A     	 ldr r2,.L22+4
 311 001c 9342     	 cmp r3,r2
 312 001e 03D1     	 bne .L20
 218:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 219:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 313              	 .loc 2 219 0
 314 0020 0820     	 movs r0,#8
 315 0022 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 316 0026 0EE0     	 b .L17
 317              	.L20:
 220:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 221:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 222:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 223:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 318              	 .loc 2 223 0
 319 0028 7B68     	 ldr r3,[r7,#4]
 320 002a 0A4A     	 ldr r2,.L22+8
 321 002c 9342     	 cmp r3,r2
 322 002e 03D1     	 bne .L21
 224:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 225:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 323              	 .loc 2 225 0
 324 0030 1020     	 movs r0,#16
 325 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 326 0036 06E0     	 b .L17
 327              	.L21:
 226:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 227:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 228:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 229:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 328              	 .loc 2 229 0
 329 0038 7B68     	 ldr r3,[r7,#4]
 330 003a 074A     	 ldr r2,.L22+12
 331 003c 9342     	 cmp r3,r2
 332 003e 02D1     	 bne .L17
 230:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 231:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 333              	 .loc 2 231 0
 334 0040 0648     	 ldr r0,.L22+16
 335 0042 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 336              	.L17:
 232:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 233:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 234:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 235:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 236:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lGateClock:Invalid Module Pointer", 0);
 237:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 238:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 337              	 .loc 2 238 0
 338 0046 0837     	 adds r7,r7,#8
 339              	.LCFI25:
 340              	 .cfi_def_cfa_offset 8
 341 0048 BD46     	 mov sp,r7
 342              	.LCFI26:
 343              	 .cfi_def_cfa_register 13
 344              	 
 345 004a 80BD     	 pop {r7,pc}
 346              	.L23:
 347              	 .align 2
 348              	.L22:
 349 004c 00C00040 	 .word 1073790976
 350 0050 00000140 	 .word 1073807360
 351 0054 00400140 	 .word 1073823744
 352 0058 00400048 	 .word 1207975936
 353 005c 01000010 	 .word 268435457
 354              	 .cfi_endproc
 355              	.LFE211:
 357              	 .section .text.XMC_CCU4_lUngateClock,"ax",%progbits
 358              	 .align 2
 359              	 .thumb
 360              	 .thumb_func
 362              	XMC_CCU4_lUngateClock:
 363              	.LFB212:
 239:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 240:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lUngateClock(const XMC_CCU4_MODULE_t *const module)
 241:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 364              	 .loc 2 241 0
 365              	 .cfi_startproc
 366              	 
 367              	 
 368 0000 80B5     	 push {r7,lr}
 369              	.LCFI27:
 370              	 .cfi_def_cfa_offset 8
 371              	 .cfi_offset 7,-8
 372              	 .cfi_offset 14,-4
 373 0002 82B0     	 sub sp,sp,#8
 374              	.LCFI28:
 375              	 .cfi_def_cfa_offset 16
 376 0004 00AF     	 add r7,sp,#0
 377              	.LCFI29:
 378              	 .cfi_def_cfa_register 7
 379 0006 7860     	 str r0,[r7,#4]
 242:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 380              	 .loc 2 242 0
 381 0008 7B68     	 ldr r3,[r7,#4]
 382 000a 104A     	 ldr r2,.L29
 383 000c 9342     	 cmp r3,r2
 384 000e 03D1     	 bne .L25
 243:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 244:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 385              	 .loc 2 244 0
 386 0010 0420     	 movs r0,#4
 387 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 388 0016 16E0     	 b .L24
 389              	.L25:
 245:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 246:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 247:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 390              	 .loc 2 247 0
 391 0018 7B68     	 ldr r3,[r7,#4]
 392 001a 0D4A     	 ldr r2,.L29+4
 393 001c 9342     	 cmp r3,r2
 394 001e 03D1     	 bne .L27
 248:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 249:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 395              	 .loc 2 249 0
 396 0020 0820     	 movs r0,#8
 397 0022 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 398 0026 0EE0     	 b .L24
 399              	.L27:
 250:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 251:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 252:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 253:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 400              	 .loc 2 253 0
 401 0028 7B68     	 ldr r3,[r7,#4]
 402 002a 0A4A     	 ldr r2,.L29+8
 403 002c 9342     	 cmp r3,r2
 404 002e 03D1     	 bne .L28
 254:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 255:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 405              	 .loc 2 255 0
 406 0030 1020     	 movs r0,#16
 407 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 408 0036 06E0     	 b .L24
 409              	.L28:
 256:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 257:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 258:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 259:../Libraries/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 410              	 .loc 2 259 0
 411 0038 7B68     	 ldr r3,[r7,#4]
 412 003a 074A     	 ldr r2,.L29+12
 413 003c 9342     	 cmp r3,r2
 414 003e 02D1     	 bne .L24
 260:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 261:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 415              	 .loc 2 261 0
 416 0040 0648     	 ldr r0,.L29+16
 417 0042 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 418              	.L24:
 262:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 263:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 264:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 265:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 266:../Libraries/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lUngateClock:Invalid Module Pointer", 0);
 267:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 268:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 419              	 .loc 2 268 0
 420 0046 0837     	 adds r7,r7,#8
 421              	.LCFI30:
 422              	 .cfi_def_cfa_offset 8
 423 0048 BD46     	 mov sp,r7
 424              	.LCFI31:
 425              	 .cfi_def_cfa_register 13
 426              	 
 427 004a 80BD     	 pop {r7,pc}
 428              	.L30:
 429              	 .align 2
 430              	.L29:
 431 004c 00C00040 	 .word 1073790976
 432 0050 00000140 	 .word 1073807360
 433 0054 00400140 	 .word 1073823744
 434 0058 00400048 	 .word 1207975936
 435 005c 01000010 	 .word 268435457
 436              	 .cfi_endproc
 437              	.LFE212:
 439              	 .section .text.XMC_CCU4_EnableModule,"ax",%progbits
 440              	 .align 2
 441              	 .global XMC_CCU4_EnableModule
 442              	 .thumb
 443              	 .thumb_func
 445              	XMC_CCU4_EnableModule:
 446              	.LFB213:
 269:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 270:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 271:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined (XMC_ASSERT_ENABLE)
 272:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsInputvalid(XMC_CCU4_SLICE_INPUT_t input)
 273:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 274:../Libraries/XMCLib/src/xmc_ccu4.c **** #if (UC_SERIES == XMC14)
 275:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (input < 48U);
 276:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 277:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (input < 16U);
 278:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 279:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 280:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 281:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 282:../Libraries/XMCLib/src/xmc_ccu4.c ****  * API IMPLEMENTATION
 283:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 284:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 285:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module)
 286:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 447              	 .loc 2 286 0
 448              	 .cfi_startproc
 449              	 
 450              	 
 451 0000 80B5     	 push {r7,lr}
 452              	.LCFI32:
 453              	 .cfi_def_cfa_offset 8
 454              	 .cfi_offset 7,-8
 455              	 .cfi_offset 14,-4
 456 0002 82B0     	 sub sp,sp,#8
 457              	.LCFI33:
 458              	 .cfi_def_cfa_offset 16
 459 0004 00AF     	 add r7,sp,#0
 460              	.LCFI34:
 461              	 .cfi_def_cfa_register 7
 462 0006 7860     	 str r0,[r7,#4]
 287:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_EnableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 288:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 289:../Libraries/XMCLib/src/xmc_ccu4.c **** #if UC_FAMILY == XMC4
 290:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module clock */
 291:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 463              	 .loc 2 291 0
 464 0008 1020     	 movs r0,#16
 465 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 292:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 293:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 294:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 295:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lUngateClock(module);
 466              	 .loc 2 295 0
 467 000e 7868     	 ldr r0,[r7,#4]
 468 0010 FFF7FEFF 	 bl XMC_CCU4_lUngateClock
 296:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 297:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 298:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 299:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lDeassertReset(module);
 469              	 .loc 2 299 0
 470 0014 7868     	 ldr r0,[r7,#4]
 471 0016 FFF7FEFF 	 bl XMC_CCU4_lDeassertReset
 300:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 301:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 472              	 .loc 2 301 0
 473 001a 0837     	 adds r7,r7,#8
 474              	.LCFI35:
 475              	 .cfi_def_cfa_offset 8
 476 001c BD46     	 mov sp,r7
 477              	.LCFI36:
 478              	 .cfi_def_cfa_register 13
 479              	 
 480 001e 80BD     	 pop {r7,pc}
 481              	 .cfi_endproc
 482              	.LFE213:
 484              	 .section .text.XMC_CCU4_DisableModule,"ax",%progbits
 485              	 .align 2
 486              	 .global XMC_CCU4_DisableModule
 487              	 .thumb
 488              	 .thumb_func
 490              	XMC_CCU4_DisableModule:
 491              	.LFB214:
 302:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 303:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module)
 304:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 492              	 .loc 2 304 0
 493              	 .cfi_startproc
 494              	 
 495              	 
 496 0000 80B5     	 push {r7,lr}
 497              	.LCFI37:
 498              	 .cfi_def_cfa_offset 8
 499              	 .cfi_offset 7,-8
 500              	 .cfi_offset 14,-4
 501 0002 82B0     	 sub sp,sp,#8
 502              	.LCFI38:
 503              	 .cfi_def_cfa_offset 16
 504 0004 00AF     	 add r7,sp,#0
 505              	.LCFI39:
 506              	 .cfi_def_cfa_register 7
 507 0006 7860     	 str r0,[r7,#4]
 305:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_DisableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 306:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 307:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 308:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lAssertReset(module);
 508              	 .loc 2 308 0
 509 0008 7868     	 ldr r0,[r7,#4]
 510 000a FFF7FEFF 	 bl XMC_CCU4_lAssertReset
 309:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 310:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 311:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 312:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lGateClock(module);
 511              	 .loc 2 312 0
 512 000e 7868     	 ldr r0,[r7,#4]
 513 0010 FFF7FEFF 	 bl XMC_CCU4_lGateClock
 313:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 314:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 514              	 .loc 2 314 0
 515 0014 0837     	 adds r7,r7,#8
 516              	.LCFI40:
 517              	 .cfi_def_cfa_offset 8
 518 0016 BD46     	 mov sp,r7
 519              	.LCFI41:
 520              	 .cfi_def_cfa_register 13
 521              	 
 522 0018 80BD     	 pop {r7,pc}
 523              	 .cfi_endproc
 524              	.LFE214:
 526 001a 00BF     	 .section .text.XMC_CCU4_Init,"ax",%progbits
 527              	 .align 2
 528              	 .global XMC_CCU4_Init
 529              	 .thumb
 530              	 .thumb_func
 532              	XMC_CCU4_Init:
 533              	.LFB215:
 315:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 316:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to initialize CCU4 global resources  */
 317:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action)
 318:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 534              	 .loc 2 318 0
 535              	 .cfi_startproc
 536              	 
 537              	 
 538 0000 80B5     	 push {r7,lr}
 539              	.LCFI42:
 540              	 .cfi_def_cfa_offset 8
 541              	 .cfi_offset 7,-8
 542              	 .cfi_offset 14,-4
 543 0002 84B0     	 sub sp,sp,#16
 544              	.LCFI43:
 545              	 .cfi_def_cfa_offset 24
 546 0004 00AF     	 add r7,sp,#0
 547              	.LCFI44:
 548              	 .cfi_def_cfa_register 7
 549 0006 7860     	 str r0,[r7,#4]
 550 0008 0B46     	 mov r3,r1
 551 000a FB70     	 strb r3,[r7,#3]
 319:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 320:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 321:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid module pointer", XMC_CCU4_IsValidModule(module));
 322:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid mcs action", XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action));
 323:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 324:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module */
 325:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_EnableModule(module);
 552              	 .loc 2 325 0
 553 000c 7868     	 ldr r0,[r7,#4]
 554 000e FFF7FEFF 	 bl XMC_CCU4_EnableModule
 326:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Start the prescaler */
 327:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_StartPrescaler(module);
 555              	 .loc 2 327 0
 556 0012 7868     	 ldr r0,[r7,#4]
 557 0014 FFF7FEFF 	 bl XMC_CCU4_StartPrescaler
 328:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 329:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 558              	 .loc 2 329 0
 559 0018 7B68     	 ldr r3,[r7,#4]
 560 001a 1B68     	 ldr r3,[r3]
 561 001c FB60     	 str r3,[r7,#12]
 330:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_MSDE_Msk);
 562              	 .loc 2 330 0
 563 001e FB68     	 ldr r3,[r7,#12]
 564 0020 23F44043 	 bic r3,r3,#49152
 565 0024 FB60     	 str r3,[r7,#12]
 331:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) mcs_action) << CCU4_GCTRL_MSDE_Pos;
 566              	 .loc 2 331 0
 567 0026 FB78     	 ldrb r3,[r7,#3]
 568 0028 9B03     	 lsls r3,r3,#14
 569 002a FA68     	 ldr r2,[r7,#12]
 570 002c 1343     	 orrs r3,r3,r2
 571 002e FB60     	 str r3,[r7,#12]
 332:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 333:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 572              	 .loc 2 333 0
 573 0030 7B68     	 ldr r3,[r7,#4]
 574 0032 FA68     	 ldr r2,[r7,#12]
 575 0034 1A60     	 str r2,[r3]
 334:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 576              	 .loc 2 334 0
 577 0036 1037     	 adds r7,r7,#16
 578              	.LCFI45:
 579              	 .cfi_def_cfa_offset 8
 580 0038 BD46     	 mov sp,r7
 581              	.LCFI46:
 582              	 .cfi_def_cfa_register 13
 583              	 
 584 003a 80BD     	 pop {r7,pc}
 585              	 .cfi_endproc
 586              	.LFE215:
 588              	 .section .text.XMC_CCU4_SetModuleClock,"ax",%progbits
 589              	 .align 2
 590              	 .global XMC_CCU4_SetModuleClock
 591              	 .thumb
 592              	 .thumb_func
 594              	XMC_CCU4_SetModuleClock:
 595              	.LFB216:
 335:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 336:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to select CCU4 module clock */
 337:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock)
 338:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 596              	 .loc 2 338 0
 597              	 .cfi_startproc
 598              	 
 599              	 
 600              	 
 601 0000 80B4     	 push {r7}
 602              	.LCFI47:
 603              	 .cfi_def_cfa_offset 4
 604              	 .cfi_offset 7,-4
 605 0002 85B0     	 sub sp,sp,#20
 606              	.LCFI48:
 607              	 .cfi_def_cfa_offset 24
 608 0004 00AF     	 add r7,sp,#0
 609              	.LCFI49:
 610              	 .cfi_def_cfa_register 7
 611 0006 7860     	 str r0,[r7,#4]
 612 0008 0B46     	 mov r3,r1
 613 000a FB70     	 strb r3,[r7,#3]
 339:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 340:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 341:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 342:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Clock", XMC_CCU4_SLICE_CHECK_CLOCK(clock));
 343:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 344:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 614              	 .loc 2 344 0
 615 000c 7B68     	 ldr r3,[r7,#4]
 616 000e 1B68     	 ldr r3,[r3]
 617 0010 FB60     	 str r3,[r7,#12]
 345:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_PCIS_Msk);
 618              	 .loc 2 345 0
 619 0012 FB68     	 ldr r3,[r7,#12]
 620 0014 23F03003 	 bic r3,r3,#48
 621 0018 FB60     	 str r3,[r7,#12]
 346:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) clock) << CCU4_GCTRL_PCIS_Pos;
 622              	 .loc 2 346 0
 623 001a FB78     	 ldrb r3,[r7,#3]
 624 001c 1B01     	 lsls r3,r3,#4
 625 001e FA68     	 ldr r2,[r7,#12]
 626 0020 1343     	 orrs r3,r3,r2
 627 0022 FB60     	 str r3,[r7,#12]
 347:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 348:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 628              	 .loc 2 348 0
 629 0024 7B68     	 ldr r3,[r7,#4]
 630 0026 FA68     	 ldr r2,[r7,#12]
 631 0028 1A60     	 str r2,[r3]
 349:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 632              	 .loc 2 349 0
 633 002a 1437     	 adds r7,r7,#20
 634              	.LCFI50:
 635              	 .cfi_def_cfa_offset 4
 636 002c BD46     	 mov sp,r7
 637              	.LCFI51:
 638              	 .cfi_def_cfa_register 13
 639              	 
 640 002e 5DF8047B 	 ldr r7,[sp],#4
 641              	.LCFI52:
 642              	 .cfi_restore 7
 643              	 .cfi_def_cfa_offset 0
 644 0032 7047     	 bx lr
 645              	 .cfi_endproc
 646              	.LFE216:
 648              	 .section .text.XMC_CCU4_SetMultiChannelShadowTransferMode,"ax",%progbits
 649              	 .align 2
 650              	 .global XMC_CCU4_SetMultiChannelShadowTransferMode
 651              	 .thumb
 652              	 .thumb_func
 654              	XMC_CCU4_SetMultiChannelShadowTransferMode:
 655              	.LFB217:
 350:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 351:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU4x.MCSS input. *
 352:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
 353:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 656              	 .loc 2 353 0
 657              	 .cfi_startproc
 658              	 
 659              	 
 660              	 
 661 0000 80B4     	 push {r7}
 662              	.LCFI53:
 663              	 .cfi_def_cfa_offset 4
 664              	 .cfi_offset 7,-4
 665 0002 85B0     	 sub sp,sp,#20
 666              	.LCFI54:
 667              	 .cfi_def_cfa_offset 24
 668 0004 00AF     	 add r7,sp,#0
 669              	.LCFI55:
 670              	 .cfi_def_cfa_register 7
 671 0006 7860     	 str r0,[r7,#4]
 672 0008 3960     	 str r1,[r7]
 354:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 355:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 356:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU4_IsValidM
 357:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 358:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 673              	 .loc 2 358 0
 674 000a 7B68     	 ldr r3,[r7,#4]
 675 000c 1B68     	 ldr r3,[r3]
 676 000e FB60     	 str r3,[r7,#12]
 359:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 677              	 .loc 2 359 0
 678 0010 3B68     	 ldr r3,[r7]
 679 0012 1B0C     	 lsrs r3,r3,#16
 680 0014 DB43     	 mvns r3,r3
 681 0016 FA68     	 ldr r2,[r7,#12]
 682 0018 1340     	 ands r3,r3,r2
 683 001a FB60     	 str r3,[r7,#12]
 360:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 684              	 .loc 2 360 0
 685 001c 3B68     	 ldr r3,[r7]
 686 001e 9BB2     	 uxth r3,r3
 687 0020 FA68     	 ldr r2,[r7,#12]
 688 0022 1343     	 orrs r3,r3,r2
 689 0024 FB60     	 str r3,[r7,#12]
 361:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 690              	 .loc 2 361 0
 691 0026 7B68     	 ldr r3,[r7,#4]
 692 0028 FA68     	 ldr r2,[r7,#12]
 693 002a 1A60     	 str r2,[r3]
 362:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 694              	 .loc 2 362 0
 695 002c 1437     	 adds r7,r7,#20
 696              	.LCFI56:
 697              	 .cfi_def_cfa_offset 4
 698 002e BD46     	 mov sp,r7
 699              	.LCFI57:
 700              	 .cfi_def_cfa_register 13
 701              	 
 702 0030 5DF8047B 	 ldr r7,[sp],#4
 703              	.LCFI58:
 704              	 .cfi_restore 7
 705              	 .cfi_def_cfa_offset 0
 706 0034 7047     	 bx lr
 707              	 .cfi_endproc
 708              	.LFE217:
 710 0036 00BF     	 .section .text.XMC_CCU4_SLICE_CompareInit,"ax",%progbits
 711              	 .align 2
 712              	 .global XMC_CCU4_SLICE_CompareInit
 713              	 .thumb
 714              	 .thumb_func
 716              	XMC_CCU4_SLICE_CompareInit:
 717              	.LFB218:
 363:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 364:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice as Timer */
 365:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 366:../Libraries/XMCLib/src/xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init)
 367:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 718              	 .loc 2 367 0
 719              	 .cfi_startproc
 720              	 
 721              	 
 722              	 
 723 0000 80B4     	 push {r7}
 724              	.LCFI59:
 725              	 .cfi_def_cfa_offset 4
 726              	 .cfi_offset 7,-4
 727 0002 83B0     	 sub sp,sp,#12
 728              	.LCFI60:
 729              	 .cfi_def_cfa_offset 16
 730 0004 00AF     	 add r7,sp,#0
 731              	.LCFI61:
 732              	 .cfi_def_cfa_register 7
 733 0006 7860     	 str r0,[r7,#4]
 734 0008 3960     	 str r1,[r7]
 368:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 369:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Compare Init Pointer is NULL",
 370:../Libraries/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 371:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 372:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the timer mode */
 373:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = compare_init->tc;
 735              	 .loc 2 373 0
 736 000a 3B68     	 ldr r3,[r7]
 737 000c 1A68     	 ldr r2,[r3]
 738 000e 7B68     	 ldr r3,[r7,#4]
 739 0010 5A61     	 str r2,[r3,#20]
 374:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 375:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t) compare_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 740              	 .loc 2 375 0
 741 0012 3B68     	 ldr r3,[r7]
 742 0014 5B79     	 ldrb r3,[r3,#5]
 743 0016 C3F34013 	 ubfx r3,r3,#5,#1
 744 001a DBB2     	 uxtb r3,r3
 745 001c 1A05     	 lsls r2,r3,#20
 746 001e 7B68     	 ldr r3,[r7,#4]
 747 0020 5A60     	 str r2,[r3,#4]
 376:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 377:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 748              	 .loc 2 377 0
 749 0022 3B68     	 ldr r3,[r7]
 750 0024 1B79     	 ldrb r3,[r3,#4]
 751 0026 C3F30303 	 ubfx r3,r3,#0,#4
 752 002a DBB2     	 uxtb r3,r3
 753 002c 1A46     	 mov r2,r3
 754 002e 7B68     	 ldr r3,[r7,#4]
 755 0030 5A62     	 str r2,[r3,#36]
 378:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the dither compare value */
 379:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 756              	 .loc 2 379 0
 757 0032 3B68     	 ldr r3,[r7]
 758 0034 5B79     	 ldrb r3,[r3,#5]
 759 0036 C3F30303 	 ubfx r3,r3,#0,#4
 760 003a DBB2     	 uxtb r3,r3
 761 003c 1A46     	 mov r2,r3
 762 003e 7B68     	 ldr r3,[r7,#4]
 763 0040 1A62     	 str r2,[r3,#32]
 380:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program timer output passive level */
 381:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSL = (uint32_t) compare_init->passive_level;
 764              	 .loc 2 381 0
 765 0042 3B68     	 ldr r3,[r7]
 766 0044 5B79     	 ldrb r3,[r3,#5]
 767 0046 C3F30013 	 ubfx r3,r3,#4,#1
 768 004a DBB2     	 uxtb r3,r3
 769 004c 1A46     	 mov r2,r3
 770 004e 7B68     	 ldr r3,[r7,#4]
 771 0050 9A61     	 str r2,[r3,#24]
 382:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program floating prescaler compare value */
 383:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 772              	 .loc 2 383 0
 773 0052 3B68     	 ldr r3,[r7]
 774 0054 1B79     	 ldrb r3,[r3,#4]
 775 0056 C3F30313 	 ubfx r3,r3,#4,#4
 776 005a DBB2     	 uxtb r3,r3
 777 005c 1A46     	 mov r2,r3
 778 005e 7B68     	 ldr r3,[r7,#4]
 779 0060 DA62     	 str r2,[r3,#44]
 384:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 780              	 .loc 2 384 0
 781 0062 0C37     	 adds r7,r7,#12
 782              	.LCFI62:
 783              	 .cfi_def_cfa_offset 4
 784 0064 BD46     	 mov sp,r7
 785              	.LCFI63:
 786              	 .cfi_def_cfa_register 13
 787              	 
 788 0066 5DF8047B 	 ldr r7,[sp],#4
 789              	.LCFI64:
 790              	 .cfi_restore 7
 791              	 .cfi_def_cfa_offset 0
 792 006a 7047     	 bx lr
 793              	 .cfi_endproc
 794              	.LFE218:
 796              	 .section .text.XMC_CCU4_SLICE_CaptureInit,"ax",%progbits
 797              	 .align 2
 798              	 .global XMC_CCU4_SLICE_CaptureInit
 799              	 .thumb
 800              	 .thumb_func
 802              	XMC_CCU4_SLICE_CaptureInit:
 803              	.LFB219:
 385:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 386:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice for Capture */
 387:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
 388:../Libraries/XMCLib/src/xmc_ccu4.c ****                             const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init)
 389:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 804              	 .loc 2 389 0
 805              	 .cfi_startproc
 806              	 
 807              	 
 808              	 
 809 0000 80B4     	 push {r7}
 810              	.LCFI65:
 811              	 .cfi_def_cfa_offset 4
 812              	 .cfi_offset 7,-4
 813 0002 83B0     	 sub sp,sp,#12
 814              	.LCFI66:
 815              	 .cfi_def_cfa_offset 16
 816 0004 00AF     	 add r7,sp,#0
 817              	.LCFI67:
 818              	 .cfi_def_cfa_register 7
 819 0006 7860     	 str r0,[r7,#4]
 820 0008 3960     	 str r1,[r7]
 390:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 391:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Capture Init Pointer is NULL",
 392:../Libraries/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 393:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 394:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the capture mode */
 395:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = capture_init->tc;
 821              	 .loc 2 395 0
 822 000a 3B68     	 ldr r3,[r7]
 823 000c 1A68     	 ldr r2,[r3]
 824 000e 7B68     	 ldr r3,[r7,#4]
 825 0010 5A61     	 str r2,[r3,#20]
 396:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 397:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t)capture_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 826              	 .loc 2 397 0
 827 0012 3B68     	 ldr r3,[r7]
 828 0014 5B79     	 ldrb r3,[r3,#5]
 829 0016 C3F30003 	 ubfx r3,r3,#0,#1
 830 001a DBB2     	 uxtb r3,r3
 831 001c 1A05     	 lsls r2,r3,#20
 832 001e 7B68     	 ldr r3,[r7,#4]
 833 0020 5A60     	 str r2,[r3,#4]
 398:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 399:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 834              	 .loc 2 399 0
 835 0022 3B68     	 ldr r3,[r7]
 836 0024 1B79     	 ldrb r3,[r3,#4]
 837 0026 C3F30303 	 ubfx r3,r3,#0,#4
 838 002a DBB2     	 uxtb r3,r3
 839 002c 1A46     	 mov r2,r3
 840 002e 7B68     	 ldr r3,[r7,#4]
 841 0030 5A62     	 str r2,[r3,#36]
 400:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial floating prescaler compare value */
 401:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 842              	 .loc 2 401 0
 843 0032 3B68     	 ldr r3,[r7]
 844 0034 1B79     	 ldrb r3,[r3,#4]
 845 0036 C3F30313 	 ubfx r3,r3,#4,#4
 846 003a DBB2     	 uxtb r3,r3
 847 003c 1A46     	 mov r2,r3
 848 003e 7B68     	 ldr r3,[r7,#4]
 849 0040 DA62     	 str r2,[r3,#44]
 402:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 850              	 .loc 2 402 0
 851 0042 0C37     	 adds r7,r7,#12
 852              	.LCFI68:
 853              	 .cfi_def_cfa_offset 4
 854 0044 BD46     	 mov sp,r7
 855              	.LCFI69:
 856              	 .cfi_def_cfa_register 13
 857              	 
 858 0046 5DF8047B 	 ldr r7,[sp],#4
 859              	.LCFI70:
 860              	 .cfi_restore 7
 861              	 .cfi_def_cfa_offset 0
 862 004a 7047     	 bx lr
 863              	 .cfi_endproc
 864              	.LFE219:
 866              	 .section .text.XMC_CCU4_SLICE_StartConfig,"ax",%progbits
 867              	 .align 2
 868              	 .global XMC_CCU4_SLICE_StartConfig
 869              	 .thumb
 870              	 .thumb_func
 872              	XMC_CCU4_SLICE_StartConfig:
 873              	.LFB220:
 403:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 404:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 405:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Start trigger function of a slice */
 406:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
 407:../Libraries/XMCLib/src/xmc_ccu4.c ****                             const XMC_CCU4_SLICE_EVENT_t event,
 408:../Libraries/XMCLib/src/xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode)
 409:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 874              	 .loc 2 409 0
 875              	 .cfi_startproc
 876              	 
 877              	 
 878              	 
 879 0000 80B4     	 push {r7}
 880              	.LCFI71:
 881              	 .cfi_def_cfa_offset 4
 882              	 .cfi_offset 7,-4
 883 0002 85B0     	 sub sp,sp,#20
 884              	.LCFI72:
 885              	 .cfi_def_cfa_offset 24
 886 0004 00AF     	 add r7,sp,#0
 887              	.LCFI73:
 888              	 .cfi_def_cfa_register 7
 889 0006 7860     	 str r0,[r7,#4]
 890 0008 0B46     	 mov r3,r1
 891 000a FB70     	 strb r3,[r7,#3]
 892 000c 1346     	 mov r3,r2
 893 000e BB70     	 strb r3,[r7,#2]
 410:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 411:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 412:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 413:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 414:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 415:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Start Mode", 
 416:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR) ||\
 417:../Libraries/XMCLib/src/xmc_ccu4.c ****               (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START)));
 418:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 419:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 894              	 .loc 2 419 0
 895 0010 7B68     	 ldr r3,[r7,#4]
 896 0012 5B68     	 ldr r3,[r3,#4]
 897 0014 BB60     	 str r3,[r7,#8]
 420:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_STRTS_Msk);
 898              	 .loc 2 420 0
 899 0016 BB68     	 ldr r3,[r7,#8]
 900 0018 23F00303 	 bic r3,r3,#3
 901 001c BB60     	 str r3,[r7,#8]
 421:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_STRTS_Pos;
 902              	 .loc 2 421 0
 903 001e FB78     	 ldrb r3,[r7,#3]
 904 0020 BA68     	 ldr r2,[r7,#8]
 905 0022 1343     	 orrs r3,r3,r2
 906 0024 BB60     	 str r3,[r7,#8]
 422:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 423:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 907              	 .loc 2 423 0
 908 0026 7B68     	 ldr r3,[r7,#4]
 909 0028 BA68     	 ldr r2,[r7,#8]
 910 002a 5A60     	 str r2,[r3,#4]
 424:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 425:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 911              	 .loc 2 425 0
 912 002c 7B68     	 ldr r3,[r7,#4]
 913 002e 5B69     	 ldr r3,[r3,#20]
 914 0030 FB60     	 str r3,[r7,#12]
 426:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the start mode */
 427:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR)
 915              	 .loc 2 427 0
 916 0032 BB78     	 ldrb r3,[r7,#2]
 917 0034 012B     	 cmp r3,#1
 918 0036 04D1     	 bne .L39
 428:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 429:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t)CCU4_CC4_TC_STRM_Msk;
 919              	 .loc 2 429 0
 920 0038 FB68     	 ldr r3,[r7,#12]
 921 003a 43F48063 	 orr r3,r3,#1024
 922 003e FB60     	 str r3,[r7,#12]
 923 0040 03E0     	 b .L40
 924              	.L39:
 430:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 431:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 432:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 433:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t)CCU4_CC4_TC_STRM_Msk);
 925              	 .loc 2 433 0
 926 0042 FB68     	 ldr r3,[r7,#12]
 927 0044 23F48063 	 bic r3,r3,#1024
 928 0048 FB60     	 str r3,[r7,#12]
 929              	.L40:
 434:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 435:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 436:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 930              	 .loc 2 436 0
 931 004a 7B68     	 ldr r3,[r7,#4]
 932 004c FA68     	 ldr r2,[r7,#12]
 933 004e 5A61     	 str r2,[r3,#20]
 437:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 934              	 .loc 2 437 0
 935 0050 1437     	 adds r7,r7,#20
 936              	.LCFI74:
 937              	 .cfi_def_cfa_offset 4
 938 0052 BD46     	 mov sp,r7
 939              	.LCFI75:
 940              	 .cfi_def_cfa_register 13
 941              	 
 942 0054 5DF8047B 	 ldr r7,[sp],#4
 943              	.LCFI76:
 944              	 .cfi_restore 7
 945              	 .cfi_def_cfa_offset 0
 946 0058 7047     	 bx lr
 947              	 .cfi_endproc
 948              	.LFE220:
 950 005a 00BF     	 .section .text.XMC_CCU4_SLICE_StopConfig,"ax",%progbits
 951              	 .align 2
 952              	 .global XMC_CCU4_SLICE_StopConfig
 953              	 .thumb
 954              	 .thumb_func
 956              	XMC_CCU4_SLICE_StopConfig:
 957              	.LFB221:
 438:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 439:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Stop trigger function of a slice */
 440:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
 441:../Libraries/XMCLib/src/xmc_ccu4.c ****                            const XMC_CCU4_SLICE_EVENT_t event,
 442:../Libraries/XMCLib/src/xmc_ccu4.c ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode)
 443:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 958              	 .loc 2 443 0
 959              	 .cfi_startproc
 960              	 
 961              	 
 962              	 
 963 0000 80B4     	 push {r7}
 964              	.LCFI77:
 965              	 .cfi_def_cfa_offset 4
 966              	 .cfi_offset 7,-4
 967 0002 85B0     	 sub sp,sp,#20
 968              	.LCFI78:
 969              	 .cfi_def_cfa_offset 24
 970 0004 00AF     	 add r7,sp,#0
 971              	.LCFI79:
 972              	 .cfi_def_cfa_register 7
 973 0006 7860     	 str r0,[r7,#4]
 974 0008 0B46     	 mov r3,r1
 975 000a FB70     	 strb r3,[r7,#3]
 976 000c 1346     	 mov r3,r2
 977 000e BB70     	 strb r3,[r7,#2]
 444:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 445:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 446:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 447:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 448:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 449:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Start Mode", XMC_CCU4_CHECK_END_MODE(end_mode));
 450:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 451:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 452:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 978              	 .loc 2 452 0
 979 0010 7B68     	 ldr r3,[r7,#4]
 980 0012 5B68     	 ldr r3,[r3,#4]
 981 0014 FB60     	 str r3,[r7,#12]
 453:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_ENDS_Msk);
 982              	 .loc 2 453 0
 983 0016 FB68     	 ldr r3,[r7,#12]
 984 0018 23F00C03 	 bic r3,r3,#12
 985 001c FB60     	 str r3,[r7,#12]
 454:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_ENDS_Pos;
 986              	 .loc 2 454 0
 987 001e FB78     	 ldrb r3,[r7,#3]
 988 0020 9B00     	 lsls r3,r3,#2
 989 0022 FA68     	 ldr r2,[r7,#12]
 990 0024 1343     	 orrs r3,r3,r2
 991 0026 FB60     	 str r3,[r7,#12]
 455:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 456:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 992              	 .loc 2 456 0
 993 0028 7B68     	 ldr r3,[r7,#4]
 994 002a FA68     	 ldr r2,[r7,#12]
 995 002c 5A60     	 str r2,[r3,#4]
 457:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 458:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the stop mode */
 459:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 996              	 .loc 2 459 0
 997 002e 7B68     	 ldr r3,[r7,#4]
 998 0030 5B69     	 ldr r3,[r3,#20]
 999 0032 BB60     	 str r3,[r7,#8]
 460:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_ENDM_Msk);
 1000              	 .loc 2 460 0
 1001 0034 BB68     	 ldr r3,[r7,#8]
 1002 0036 23F44073 	 bic r3,r3,#768
 1003 003a BB60     	 str r3,[r7,#8]
 461:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc |= ((uint32_t) end_mode) << CCU4_CC4_TC_ENDM_Pos;
 1004              	 .loc 2 461 0
 1005 003c BB78     	 ldrb r3,[r7,#2]
 1006 003e 1B02     	 lsls r3,r3,#8
 1007 0040 BA68     	 ldr r2,[r7,#8]
 1008 0042 1343     	 orrs r3,r3,r2
 1009 0044 BB60     	 str r3,[r7,#8]
 462:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 463:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1010              	 .loc 2 463 0
 1011 0046 7B68     	 ldr r3,[r7,#4]
 1012 0048 BA68     	 ldr r2,[r7,#8]
 1013 004a 5A61     	 str r2,[r3,#20]
 464:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1014              	 .loc 2 464 0
 1015 004c 1437     	 adds r7,r7,#20
 1016              	.LCFI80:
 1017              	 .cfi_def_cfa_offset 4
 1018 004e BD46     	 mov sp,r7
 1019              	.LCFI81:
 1020              	 .cfi_def_cfa_register 13
 1021              	 
 1022 0050 5DF8047B 	 ldr r7,[sp],#4
 1023              	.LCFI82:
 1024              	 .cfi_restore 7
 1025              	 .cfi_def_cfa_offset 0
 1026 0054 7047     	 bx lr
 1027              	 .cfi_endproc
 1028              	.LFE221:
 1030 0056 00BF     	 .section .text.XMC_CCU4_SLICE_LoadConfig,"ax",%progbits
 1031              	 .align 2
 1032              	 .global XMC_CCU4_SLICE_LoadConfig
 1033              	 .thumb
 1034              	 .thumb_func
 1036              	XMC_CCU4_SLICE_LoadConfig:
 1037              	.LFB222:
 465:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 466:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Load trigger function of a slice */
 467:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 468:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1038              	 .loc 2 468 0
 1039              	 .cfi_startproc
 1040              	 
 1041              	 
 1042              	 
 1043 0000 80B4     	 push {r7}
 1044              	.LCFI83:
 1045              	 .cfi_def_cfa_offset 4
 1046              	 .cfi_offset 7,-4
 1047 0002 85B0     	 sub sp,sp,#20
 1048              	.LCFI84:
 1049              	 .cfi_def_cfa_offset 24
 1050 0004 00AF     	 add r7,sp,#0
 1051              	.LCFI85:
 1052              	 .cfi_def_cfa_register 7
 1053 0006 7860     	 str r0,[r7,#4]
 1054 0008 0B46     	 mov r3,r1
 1055 000a FB70     	 strb r3,[r7,#3]
 469:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 470:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 471:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 472:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 473:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 474:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the load function */
 475:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1056              	 .loc 2 475 0
 1057 000c 7B68     	 ldr r3,[r7,#4]
 1058 000e 5B68     	 ldr r3,[r3,#4]
 1059 0010 FB60     	 str r3,[r7,#12]
 476:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_LDS_Msk);
 1060              	 .loc 2 476 0
 1061 0012 FB68     	 ldr r3,[r7,#12]
 1062 0014 23F44053 	 bic r3,r3,#12288
 1063 0018 FB60     	 str r3,[r7,#12]
 477:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_LDS_Pos;
 1064              	 .loc 2 477 0
 1065 001a FB78     	 ldrb r3,[r7,#3]
 1066 001c 1B03     	 lsls r3,r3,#12
 1067 001e FA68     	 ldr r2,[r7,#12]
 1068 0020 1343     	 orrs r3,r3,r2
 1069 0022 FB60     	 str r3,[r7,#12]
 478:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 479:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1070              	 .loc 2 479 0
 1071 0024 7B68     	 ldr r3,[r7,#4]
 1072 0026 FA68     	 ldr r2,[r7,#12]
 1073 0028 5A60     	 str r2,[r3,#4]
 480:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1074              	 .loc 2 480 0
 1075 002a 1437     	 adds r7,r7,#20
 1076              	.LCFI86:
 1077              	 .cfi_def_cfa_offset 4
 1078 002c BD46     	 mov sp,r7
 1079              	.LCFI87:
 1080              	 .cfi_def_cfa_register 13
 1081              	 
 1082 002e 5DF8047B 	 ldr r7,[sp],#4
 1083              	.LCFI88:
 1084              	 .cfi_restore 7
 1085              	 .cfi_def_cfa_offset 0
 1086 0032 7047     	 bx lr
 1087              	 .cfi_endproc
 1088              	.LFE222:
 1090              	 .section .text.XMC_CCU4_SLICE_ModulationConfig,"ax",%progbits
 1091              	 .align 2
 1092              	 .global XMC_CCU4_SLICE_ModulationConfig
 1093              	 .thumb
 1094              	 .thumb_func
 1096              	XMC_CCU4_SLICE_ModulationConfig:
 1097              	.LFB223:
 481:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 482:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice modulation function */
 483:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
 484:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_EVENT_t event,
 485:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
 486:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const bool synch_with_pwm)
 487:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1098              	 .loc 2 487 0
 1099              	 .cfi_startproc
 1100              	 
 1101              	 
 1102              	 
 1103 0000 80B4     	 push {r7}
 1104              	.LCFI89:
 1105              	 .cfi_def_cfa_offset 4
 1106              	 .cfi_offset 7,-4
 1107 0002 85B0     	 sub sp,sp,#20
 1108              	.LCFI90:
 1109              	 .cfi_def_cfa_offset 24
 1110 0004 00AF     	 add r7,sp,#0
 1111              	.LCFI91:
 1112              	 .cfi_def_cfa_register 7
 1113 0006 7860     	 str r0,[r7,#4]
 1114 0008 0846     	 mov r0,r1
 1115 000a 1146     	 mov r1,r2
 1116 000c 1A46     	 mov r2,r3
 1117 000e 0346     	 mov r3,r0
 1118 0010 FB70     	 strb r3,[r7,#3]
 1119 0012 0B46     	 mov r3,r1
 1120 0014 BB70     	 strb r3,[r7,#2]
 1121 0016 1346     	 mov r3,r2
 1122 0018 7B70     	 strb r3,[r7,#1]
 488:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 489:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 490:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 491:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
 492:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(even
 493:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Modulation Mode",
 494:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT) ||\
 495:../Libraries/XMCLib/src/xmc_ccu4.c ****               (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT)));
 496:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 497:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 1123              	 .loc 2 497 0
 1124 001a 7B68     	 ldr r3,[r7,#4]
 1125 001c 5B69     	 ldr r3,[r3,#20]
 1126 001e FB60     	 str r3,[r7,#12]
 498:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1127              	 .loc 2 498 0
 1128 0020 7B68     	 ldr r3,[r7,#4]
 1129 0022 5B68     	 ldr r3,[r3,#4]
 1130 0024 BB60     	 str r3,[r7,#8]
 499:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 500:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the modulation function */
 501:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_MOS_Msk);
 1131              	 .loc 2 501 0
 1132 0026 BB68     	 ldr r3,[r7,#8]
 1133 0028 23F44023 	 bic r3,r3,#786432
 1134 002c BB60     	 str r3,[r7,#8]
 502:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_MOS_Pos;
 1135              	 .loc 2 502 0
 1136 002e FB78     	 ldrb r3,[r7,#3]
 1137 0030 9B04     	 lsls r3,r3,#18
 1138 0032 BA68     	 ldr r2,[r7,#8]
 1139 0034 1343     	 orrs r3,r3,r2
 1140 0036 BB60     	 str r3,[r7,#8]
 503:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1141              	 .loc 2 503 0
 1142 0038 7B68     	 ldr r3,[r7,#4]
 1143 003a BA68     	 ldr r2,[r7,#8]
 1144 003c 5A60     	 str r2,[r3,#4]
 504:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 505:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Modulation mode */
 506:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT)
 1145              	 .loc 2 506 0
 1146 003e BB78     	 ldrb r3,[r7,#2]
 1147 0040 012B     	 cmp r3,#1
 1148 0042 04D1     	 bne .L44
 507:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 508:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMT_Msk;
 1149              	 .loc 2 508 0
 1150 0044 FB68     	 ldr r3,[r7,#12]
 1151 0046 43F08073 	 orr r3,r3,#16777216
 1152 004a FB60     	 str r3,[r7,#12]
 1153 004c 03E0     	 b .L45
 1154              	.L44:
 509:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 510:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 511:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 512:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMT_Msk);
 1155              	 .loc 2 512 0
 1156 004e FB68     	 ldr r3,[r7,#12]
 1157 0050 23F08073 	 bic r3,r3,#16777216
 1158 0054 FB60     	 str r3,[r7,#12]
 1159              	.L45:
 513:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 514:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 515:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Synchronization of modulation effect with PWM cycle */
 516:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1160              	 .loc 2 516 0
 1161 0056 7B78     	 ldrb r3,[r7,#1]
 1162 0058 002B     	 cmp r3,#0
 1163 005a 04D0     	 beq .L46
 517:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 518:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMS_Msk;
 1164              	 .loc 2 518 0
 1165 005c FB68     	 ldr r3,[r7,#12]
 1166 005e 43F40003 	 orr r3,r3,#8388608
 1167 0062 FB60     	 str r3,[r7,#12]
 1168 0064 03E0     	 b .L47
 1169              	.L46:
 519:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 520:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 521:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 522:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMS_Msk);
 1170              	 .loc 2 522 0
 1171 0066 FB68     	 ldr r3,[r7,#12]
 1172 0068 23F40003 	 bic r3,r3,#8388608
 1173 006c FB60     	 str r3,[r7,#12]
 1174              	.L47:
 523:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 524:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 525:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1175              	 .loc 2 525 0
 1176 006e 7B68     	 ldr r3,[r7,#4]
 1177 0070 FA68     	 ldr r2,[r7,#12]
 1178 0072 5A61     	 str r2,[r3,#20]
 526:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1179              	 .loc 2 526 0
 1180 0074 1437     	 adds r7,r7,#20
 1181              	.LCFI92:
 1182              	 .cfi_def_cfa_offset 4
 1183 0076 BD46     	 mov sp,r7
 1184              	.LCFI93:
 1185              	 .cfi_def_cfa_register 13
 1186              	 
 1187 0078 5DF8047B 	 ldr r7,[sp],#4
 1188              	.LCFI94:
 1189              	 .cfi_restore 7
 1190              	 .cfi_def_cfa_offset 0
 1191 007c 7047     	 bx lr
 1192              	 .cfi_endproc
 1193              	.LFE223:
 1195 007e 00BF     	 .section .text.XMC_CCU4_SLICE_CountConfig,"ax",%progbits
 1196              	 .align 2
 1197              	 .global XMC_CCU4_SLICE_CountConfig
 1198              	 .thumb
 1199              	 .thumb_func
 1201              	XMC_CCU4_SLICE_CountConfig:
 1202              	.LFB224:
 527:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 528:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice count function */
 529:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 530:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1203              	 .loc 2 530 0
 1204              	 .cfi_startproc
 1205              	 
 1206              	 
 1207              	 
 1208 0000 80B4     	 push {r7}
 1209              	.LCFI95:
 1210              	 .cfi_def_cfa_offset 4
 1211              	 .cfi_offset 7,-4
 1212 0002 85B0     	 sub sp,sp,#20
 1213              	.LCFI96:
 1214              	 .cfi_def_cfa_offset 24
 1215 0004 00AF     	 add r7,sp,#0
 1216              	.LCFI97:
 1217              	 .cfi_def_cfa_register 7
 1218 0006 7860     	 str r0,[r7,#4]
 1219 0008 0B46     	 mov r3,r1
 1220 000a FB70     	 strb r3,[r7,#3]
 531:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 532:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 533:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 534:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 535:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 536:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the count function */
 537:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1221              	 .loc 2 537 0
 1222 000c 7B68     	 ldr r3,[r7,#4]
 1223 000e 5B68     	 ldr r3,[r3,#4]
 1224 0010 FB60     	 str r3,[r7,#12]
 538:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CNTS_Msk);
 1225              	 .loc 2 538 0
 1226 0012 FB68     	 ldr r3,[r7,#12]
 1227 0014 23F44043 	 bic r3,r3,#49152
 1228 0018 FB60     	 str r3,[r7,#12]
 539:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CNTS_Pos;
 1229              	 .loc 2 539 0
 1230 001a FB78     	 ldrb r3,[r7,#3]
 1231 001c 9B03     	 lsls r3,r3,#14
 1232 001e FA68     	 ldr r2,[r7,#12]
 1233 0020 1343     	 orrs r3,r3,r2
 1234 0022 FB60     	 str r3,[r7,#12]
 540:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 541:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1235              	 .loc 2 541 0
 1236 0024 7B68     	 ldr r3,[r7,#4]
 1237 0026 FA68     	 ldr r2,[r7,#12]
 1238 0028 5A60     	 str r2,[r3,#4]
 542:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1239              	 .loc 2 542 0
 1240 002a 1437     	 adds r7,r7,#20
 1241              	.LCFI98:
 1242              	 .cfi_def_cfa_offset 4
 1243 002c BD46     	 mov sp,r7
 1244              	.LCFI99:
 1245              	 .cfi_def_cfa_register 13
 1246              	 
 1247 002e 5DF8047B 	 ldr r7,[sp],#4
 1248              	.LCFI100:
 1249              	 .cfi_restore 7
 1250              	 .cfi_def_cfa_offset 0
 1251 0032 7047     	 bx lr
 1252              	 .cfi_endproc
 1253              	.LFE224:
 1255              	 .section .text.XMC_CCU4_SLICE_GateConfig,"ax",%progbits
 1256              	 .align 2
 1257              	 .global XMC_CCU4_SLICE_GateConfig
 1258              	 .thumb
 1259              	 .thumb_func
 1261              	XMC_CCU4_SLICE_GateConfig:
 1262              	.LFB225:
 543:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 544:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure slice gate function */
 545:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 546:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1263              	 .loc 2 546 0
 1264              	 .cfi_startproc
 1265              	 
 1266              	 
 1267              	 
 1268 0000 80B4     	 push {r7}
 1269              	.LCFI101:
 1270              	 .cfi_def_cfa_offset 4
 1271              	 .cfi_offset 7,-4
 1272 0002 85B0     	 sub sp,sp,#20
 1273              	.LCFI102:
 1274              	 .cfi_def_cfa_offset 24
 1275 0004 00AF     	 add r7,sp,#0
 1276              	.LCFI103:
 1277              	 .cfi_def_cfa_register 7
 1278 0006 7860     	 str r0,[r7,#4]
 1279 0008 0B46     	 mov r3,r1
 1280 000a FB70     	 strb r3,[r7,#3]
 547:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 548:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 549:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 550:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 551:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 552:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 553:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1281              	 .loc 2 553 0
 1282 000c 7B68     	 ldr r3,[r7,#4]
 1283 000e 5B68     	 ldr r3,[r3,#4]
 1284 0010 FB60     	 str r3,[r7,#12]
 554:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_GATES_Msk);
 1285              	 .loc 2 554 0
 1286 0012 FB68     	 ldr r3,[r7,#12]
 1287 0014 23F44073 	 bic r3,r3,#768
 1288 0018 FB60     	 str r3,[r7,#12]
 555:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_GATES_Pos;
 1289              	 .loc 2 555 0
 1290 001a FB78     	 ldrb r3,[r7,#3]
 1291 001c 1B02     	 lsls r3,r3,#8
 1292 001e FA68     	 ldr r2,[r7,#12]
 1293 0020 1343     	 orrs r3,r3,r2
 1294 0022 FB60     	 str r3,[r7,#12]
 556:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 557:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1295              	 .loc 2 557 0
 1296 0024 7B68     	 ldr r3,[r7,#4]
 1297 0026 FA68     	 ldr r2,[r7,#12]
 1298 0028 5A60     	 str r2,[r3,#4]
 558:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1299              	 .loc 2 558 0
 1300 002a 1437     	 adds r7,r7,#20
 1301              	.LCFI104:
 1302              	 .cfi_def_cfa_offset 4
 1303 002c BD46     	 mov sp,r7
 1304              	.LCFI105:
 1305              	 .cfi_def_cfa_register 13
 1306              	 
 1307 002e 5DF8047B 	 ldr r7,[sp],#4
 1308              	.LCFI106:
 1309              	 .cfi_restore 7
 1310              	 .cfi_def_cfa_offset 0
 1311 0032 7047     	 bx lr
 1312              	 .cfi_endproc
 1313              	.LFE225:
 1315              	 .section .text.XMC_CCU4_SLICE_Capture0Config,"ax",%progbits
 1316              	 .align 2
 1317              	 .global XMC_CCU4_SLICE_Capture0Config
 1318              	 .thumb
 1319              	 .thumb_func
 1321              	XMC_CCU4_SLICE_Capture0Config:
 1322              	.LFB226:
 559:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 560:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-0 function */
 561:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 562:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1323              	 .loc 2 562 0
 1324              	 .cfi_startproc
 1325              	 
 1326              	 
 1327              	 
 1328 0000 80B4     	 push {r7}
 1329              	.LCFI107:
 1330              	 .cfi_def_cfa_offset 4
 1331              	 .cfi_offset 7,-4
 1332 0002 85B0     	 sub sp,sp,#20
 1333              	.LCFI108:
 1334              	 .cfi_def_cfa_offset 24
 1335 0004 00AF     	 add r7,sp,#0
 1336              	.LCFI109:
 1337              	 .cfi_def_cfa_register 7
 1338 0006 7860     	 str r0,[r7,#4]
 1339 0008 0B46     	 mov r3,r1
 1340 000a FB70     	 strb r3,[r7,#3]
 563:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 564:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 565:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 566:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 567:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 568:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 569:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1341              	 .loc 2 569 0
 1342 000c 7B68     	 ldr r3,[r7,#4]
 1343 000e 5B68     	 ldr r3,[r3,#4]
 1344 0010 FB60     	 str r3,[r7,#12]
 570:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP0S_Msk);
 1345              	 .loc 2 570 0
 1346 0012 FB68     	 ldr r3,[r7,#12]
 1347 0014 23F03003 	 bic r3,r3,#48
 1348 0018 FB60     	 str r3,[r7,#12]
 571:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP0S_Pos;
 1349              	 .loc 2 571 0
 1350 001a FB78     	 ldrb r3,[r7,#3]
 1351 001c 1B01     	 lsls r3,r3,#4
 1352 001e FA68     	 ldr r2,[r7,#12]
 1353 0020 1343     	 orrs r3,r3,r2
 1354 0022 FB60     	 str r3,[r7,#12]
 572:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 573:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1355              	 .loc 2 573 0
 1356 0024 7B68     	 ldr r3,[r7,#4]
 1357 0026 FA68     	 ldr r2,[r7,#12]
 1358 0028 5A60     	 str r2,[r3,#4]
 574:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1359              	 .loc 2 574 0
 1360 002a 1437     	 adds r7,r7,#20
 1361              	.LCFI110:
 1362              	 .cfi_def_cfa_offset 4
 1363 002c BD46     	 mov sp,r7
 1364              	.LCFI111:
 1365              	 .cfi_def_cfa_register 13
 1366              	 
 1367 002e 5DF8047B 	 ldr r7,[sp],#4
 1368              	.LCFI112:
 1369              	 .cfi_restore 7
 1370              	 .cfi_def_cfa_offset 0
 1371 0032 7047     	 bx lr
 1372              	 .cfi_endproc
 1373              	.LFE226:
 1375              	 .section .text.XMC_CCU4_SLICE_Capture1Config,"ax",%progbits
 1376              	 .align 2
 1377              	 .global XMC_CCU4_SLICE_Capture1Config
 1378              	 .thumb
 1379              	 .thumb_func
 1381              	XMC_CCU4_SLICE_Capture1Config:
 1382              	.LFB227:
 575:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 576:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-1 function */
 577:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 578:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1383              	 .loc 2 578 0
 1384              	 .cfi_startproc
 1385              	 
 1386              	 
 1387              	 
 1388 0000 80B4     	 push {r7}
 1389              	.LCFI113:
 1390              	 .cfi_def_cfa_offset 4
 1391              	 .cfi_offset 7,-4
 1392 0002 85B0     	 sub sp,sp,#20
 1393              	.LCFI114:
 1394              	 .cfi_def_cfa_offset 24
 1395 0004 00AF     	 add r7,sp,#0
 1396              	.LCFI115:
 1397              	 .cfi_def_cfa_register 7
 1398 0006 7860     	 str r0,[r7,#4]
 1399 0008 0B46     	 mov r3,r1
 1400 000a FB70     	 strb r3,[r7,#3]
 579:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 580:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 581:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 582:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 583:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 584:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 585:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1401              	 .loc 2 585 0
 1402 000c 7B68     	 ldr r3,[r7,#4]
 1403 000e 5B68     	 ldr r3,[r3,#4]
 1404 0010 FB60     	 str r3,[r7,#12]
 586:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP1S_Msk);
 1405              	 .loc 2 586 0
 1406 0012 FB68     	 ldr r3,[r7,#12]
 1407 0014 23F0C003 	 bic r3,r3,#192
 1408 0018 FB60     	 str r3,[r7,#12]
 587:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP1S_Pos;
 1409              	 .loc 2 587 0
 1410 001a FB78     	 ldrb r3,[r7,#3]
 1411 001c 9B01     	 lsls r3,r3,#6
 1412 001e FA68     	 ldr r2,[r7,#12]
 1413 0020 1343     	 orrs r3,r3,r2
 1414 0022 FB60     	 str r3,[r7,#12]
 588:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 589:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1415              	 .loc 2 589 0
 1416 0024 7B68     	 ldr r3,[r7,#4]
 1417 0026 FA68     	 ldr r2,[r7,#12]
 1418 0028 5A60     	 str r2,[r3,#4]
 590:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1419              	 .loc 2 590 0
 1420 002a 1437     	 adds r7,r7,#20
 1421              	.LCFI116:
 1422              	 .cfi_def_cfa_offset 4
 1423 002c BD46     	 mov sp,r7
 1424              	.LCFI117:
 1425              	 .cfi_def_cfa_register 13
 1426              	 
 1427 002e 5DF8047B 	 ldr r7,[sp],#4
 1428              	.LCFI118:
 1429              	 .cfi_restore 7
 1430              	 .cfi_def_cfa_offset 0
 1431 0032 7047     	 bx lr
 1432              	 .cfi_endproc
 1433              	.LFE227:
 1435              	 .section .text.XMC_CCU4_SLICE_DirectionConfig,"ax",%progbits
 1436              	 .align 2
 1437              	 .global XMC_CCU4_SLICE_DirectionConfig
 1438              	 .thumb
 1439              	 .thumb_func
 1441              	XMC_CCU4_SLICE_DirectionConfig:
 1442              	.LFB228:
 591:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 592:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure direction function */
 593:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
 594:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1443              	 .loc 2 594 0
 1444              	 .cfi_startproc
 1445              	 
 1446              	 
 1447              	 
 1448 0000 80B4     	 push {r7}
 1449              	.LCFI119:
 1450              	 .cfi_def_cfa_offset 4
 1451              	 .cfi_offset 7,-4
 1452 0002 85B0     	 sub sp,sp,#20
 1453              	.LCFI120:
 1454              	 .cfi_def_cfa_offset 24
 1455 0004 00AF     	 add r7,sp,#0
 1456              	.LCFI121:
 1457              	 .cfi_def_cfa_register 7
 1458 0006 7860     	 str r0,[r7,#4]
 1459 0008 0B46     	 mov r3,r1
 1460 000a FB70     	 strb r3,[r7,#3]
 595:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 596:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 597:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 598:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event
 599:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 600:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the direction function */
 601:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1461              	 .loc 2 601 0
 1462 000c 7B68     	 ldr r3,[r7,#4]
 1463 000e 5B68     	 ldr r3,[r3,#4]
 1464 0010 FB60     	 str r3,[r7,#12]
 602:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_UDS_Msk);
 1465              	 .loc 2 602 0
 1466 0012 FB68     	 ldr r3,[r7,#12]
 1467 0014 23F44063 	 bic r3,r3,#3072
 1468 0018 FB60     	 str r3,[r7,#12]
 603:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_UDS_Pos;
 1469              	 .loc 2 603 0
 1470 001a FB78     	 ldrb r3,[r7,#3]
 1471 001c 9B02     	 lsls r3,r3,#10
 1472 001e FA68     	 ldr r2,[r7,#12]
 1473 0020 1343     	 orrs r3,r3,r2
 1474 0022 FB60     	 str r3,[r7,#12]
 604:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 605:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1475              	 .loc 2 605 0
 1476 0024 7B68     	 ldr r3,[r7,#4]
 1477 0026 FA68     	 ldr r2,[r7,#12]
 1478 0028 5A60     	 str r2,[r3,#4]
 606:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1479              	 .loc 2 606 0
 1480 002a 1437     	 adds r7,r7,#20
 1481              	.LCFI122:
 1482              	 .cfi_def_cfa_offset 4
 1483 002c BD46     	 mov sp,r7
 1484              	.LCFI123:
 1485              	 .cfi_def_cfa_register 13
 1486              	 
 1487 002e 5DF8047B 	 ldr r7,[sp],#4
 1488              	.LCFI124:
 1489              	 .cfi_restore 7
 1490              	 .cfi_def_cfa_offset 0
 1491 0032 7047     	 bx lr
 1492              	 .cfi_endproc
 1493              	.LFE228:
 1495              	 .section .text.XMC_CCU4_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1496              	 .align 2
 1497              	 .global XMC_CCU4_SLICE_StatusBitOverrideConfig
 1498              	 .thumb
 1499              	 .thumb_func
 1501              	XMC_CCU4_SLICE_StatusBitOverrideConfig:
 1502              	.LFB229:
 607:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 608:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure slice status bit override function */
 609:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice)
 610:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1503              	 .loc 2 610 0
 1504              	 .cfi_startproc
 1505              	 
 1506              	 
 1507              	 
 1508 0000 80B4     	 push {r7}
 1509              	.LCFI125:
 1510              	 .cfi_def_cfa_offset 4
 1511              	 .cfi_offset 7,-4
 1512 0002 85B0     	 sub sp,sp,#20
 1513              	.LCFI126:
 1514              	 .cfi_def_cfa_offset 24
 1515 0004 00AF     	 add r7,sp,#0
 1516              	.LCFI127:
 1517              	 .cfi_def_cfa_register 7
 1518 0006 7860     	 str r0,[r7,#4]
 611:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 612:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 613:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 614:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 615:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the override function */
 616:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1519              	 .loc 2 616 0
 1520 0008 7B68     	 ldr r3,[r7,#4]
 1521 000a 5B68     	 ldr r3,[r3,#4]
 1522 000c FB60     	 str r3,[r7,#12]
 617:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Map status bit trigger override to Event 1 & 
 618:../Libraries/XMCLib/src/xmc_ccu4.c ****          status bit value override to Event 2 */
 619:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_OFS_Msk);
 1523              	 .loc 2 619 0
 1524 000e FB68     	 ldr r3,[r7,#12]
 1525 0010 23F48033 	 bic r3,r3,#65536
 1526 0014 FB60     	 str r3,[r7,#12]
 620:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_OFS_Pos;
 1527              	 .loc 2 620 0
 1528 0016 FB68     	 ldr r3,[r7,#12]
 1529 0018 43F48033 	 orr r3,r3,#65536
 1530 001c FB60     	 str r3,[r7,#12]
 621:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 622:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1531              	 .loc 2 622 0
 1532 001e 7B68     	 ldr r3,[r7,#4]
 1533 0020 FA68     	 ldr r2,[r7,#12]
 1534 0022 5A60     	 str r2,[r3,#4]
 623:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1535              	 .loc 2 623 0
 1536 0024 1437     	 adds r7,r7,#20
 1537              	.LCFI128:
 1538              	 .cfi_def_cfa_offset 4
 1539 0026 BD46     	 mov sp,r7
 1540              	.LCFI129:
 1541              	 .cfi_def_cfa_register 13
 1542              	 
 1543 0028 5DF8047B 	 ldr r7,[sp],#4
 1544              	.LCFI130:
 1545              	 .cfi_restore 7
 1546              	 .cfi_def_cfa_offset 0
 1547 002c 7047     	 bx lr
 1548              	 .cfi_endproc
 1549              	.LFE229:
 1551 002e 00BF     	 .section .text.XMC_CCU4_SLICE_TrapConfig,"ax",%progbits
 1552              	 .align 2
 1553              	 .global XMC_CCU4_SLICE_TrapConfig
 1554              	 .thumb
 1555              	 .thumb_func
 1557              	XMC_CCU4_SLICE_TrapConfig:
 1558              	.LFB230:
 624:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 625:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure trap function */
 626:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
 627:../Libraries/XMCLib/src/xmc_ccu4.c ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
 628:../Libraries/XMCLib/src/xmc_ccu4.c ****                                const bool synch_with_pwm)
 629:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1559              	 .loc 2 629 0
 1560              	 .cfi_startproc
 1561              	 
 1562              	 
 1563              	 
 1564 0000 80B4     	 push {r7}
 1565              	.LCFI131:
 1566              	 .cfi_def_cfa_offset 4
 1567              	 .cfi_offset 7,-4
 1568 0002 85B0     	 sub sp,sp,#20
 1569              	.LCFI132:
 1570              	 .cfi_def_cfa_offset 24
 1571 0004 00AF     	 add r7,sp,#0
 1572              	.LCFI133:
 1573              	 .cfi_def_cfa_register 7
 1574 0006 7860     	 str r0,[r7,#4]
 1575 0008 0B46     	 mov r3,r1
 1576 000a FB70     	 strb r3,[r7,#3]
 1577 000c 1346     	 mov r3,r2
 1578 000e BB70     	 strb r3,[r7,#2]
 630:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 631:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 632:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 633:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 634:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 635:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                              (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 636:../Libraries/XMCLib/src/xmc_ccu4.c ****     
 637:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Map trap function to Event 2 */
 638:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1579              	 .loc 2 638 0
 1580 0010 7B68     	 ldr r3,[r7,#4]
 1581 0012 5B68     	 ldr r3,[r3,#4]
 1582 0014 BB60     	 str r3,[r7,#8]
 639:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_TS_Msk);
 1583              	 .loc 2 639 0
 1584 0016 BB68     	 ldr r3,[r7,#8]
 1585 0018 23F40033 	 bic r3,r3,#131072
 1586 001c BB60     	 str r3,[r7,#8]
 640:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_TS_Pos;
 1587              	 .loc 2 640 0
 1588 001e BB68     	 ldr r3,[r7,#8]
 1589 0020 43F40033 	 orr r3,r3,#131072
 1590 0024 BB60     	 str r3,[r7,#8]
 641:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1591              	 .loc 2 641 0
 1592 0026 7B68     	 ldr r3,[r7,#4]
 1593 0028 BA68     	 ldr r2,[r7,#8]
 1594 002a 5A60     	 str r2,[r3,#4]
 642:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 643:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure synchronization option */
 644:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 1595              	 .loc 2 644 0
 1596 002c 7B68     	 ldr r3,[r7,#4]
 1597 002e 5B69     	 ldr r3,[r3,#20]
 1598 0030 FB60     	 str r3,[r7,#12]
 645:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 646:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1599              	 .loc 2 646 0
 1600 0032 BB78     	 ldrb r3,[r7,#2]
 1601 0034 002B     	 cmp r3,#0
 1602 0036 04D0     	 beq .L55
 647:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 648:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSE_Msk;
 1603              	 .loc 2 648 0
 1604 0038 FB68     	 ldr r3,[r7,#12]
 1605 003a 43F40013 	 orr r3,r3,#2097152
 1606 003e FB60     	 str r3,[r7,#12]
 1607 0040 03E0     	 b .L56
 1608              	.L55:
 649:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 650:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 651:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 652:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSE_Msk);
 1609              	 .loc 2 652 0
 1610 0042 FB68     	 ldr r3,[r7,#12]
 1611 0044 23F40013 	 bic r3,r3,#2097152
 1612 0048 FB60     	 str r3,[r7,#12]
 1613              	.L56:
 653:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 654:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 655:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure exit mode */
 656:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW)
 1614              	 .loc 2 656 0
 1615 004a FB78     	 ldrb r3,[r7,#3]
 1616 004c 012B     	 cmp r3,#1
 1617 004e 04D1     	 bne .L57
 657:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 658:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSW_Msk;
 1618              	 .loc 2 658 0
 1619 0050 FB68     	 ldr r3,[r7,#12]
 1620 0052 43F48003 	 orr r3,r3,#4194304
 1621 0056 FB60     	 str r3,[r7,#12]
 1622 0058 03E0     	 b .L58
 1623              	.L57:
 659:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 660:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 661:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 662:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSW_Msk);
 1624              	 .loc 2 662 0
 1625 005a FB68     	 ldr r3,[r7,#12]
 1626 005c 23F48003 	 bic r3,r3,#4194304
 1627 0060 FB60     	 str r3,[r7,#12]
 1628              	.L58:
 663:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 664:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 665:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1629              	 .loc 2 665 0
 1630 0062 7B68     	 ldr r3,[r7,#4]
 1631 0064 FA68     	 ldr r2,[r7,#12]
 1632 0066 5A61     	 str r2,[r3,#20]
 666:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1633              	 .loc 2 666 0
 1634 0068 1437     	 adds r7,r7,#20
 1635              	.LCFI134:
 1636              	 .cfi_def_cfa_offset 4
 1637 006a BD46     	 mov sp,r7
 1638              	.LCFI135:
 1639              	 .cfi_def_cfa_register 13
 1640              	 
 1641 006c 5DF8047B 	 ldr r7,[sp],#4
 1642              	.LCFI136:
 1643              	 .cfi_restore 7
 1644              	 .cfi_def_cfa_offset 0
 1645 0070 7047     	 bx lr
 1646              	 .cfi_endproc
 1647              	.LFE230:
 1649 0072 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1650              	 .align 2
 1651              	 .global XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
 1652              	 .thumb
 1653              	 .thumb_func
 1655              	XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:
 1656              	.LFB231:
 667:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 668:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice Status Bit Override event */
 669:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
 670:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
 671:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
 672:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1657              	 .loc 2 672 0
 1658              	 .cfi_startproc
 1659              	 
 1660              	 
 1661              	 
 1662 0000 80B4     	 push {r7}
 1663              	.LCFI137:
 1664              	 .cfi_def_cfa_offset 4
 1665              	 .cfi_offset 7,-4
 1666 0002 87B0     	 sub sp,sp,#28
 1667              	.LCFI138:
 1668              	 .cfi_def_cfa_offset 32
 1669 0004 00AF     	 add r7,sp,#0
 1670              	.LCFI139:
 1671              	 .cfi_def_cfa_register 7
 1672 0006 F860     	 str r0,[r7,#12]
 1673 0008 B960     	 str r1,[r7,#8]
 1674 000a 7A60     	 str r2,[r7,#4]
 673:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 674:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 675:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU4_IsVal
 676:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 677:../Libraries/XMCLib/src/xmc_ccu4.c ****          XMC_CCU4_SLICE_IsInputvalid(ev1_config->mapped_input));
 678:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 679:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 680:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 681:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 682:../Libraries/XMCLib/src/xmc_ccu4.c ****               (ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 683:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 684:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 685:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 686:../Libraries/XMCLib/src/xmc_ccu4.c ****          XMC_CCU4_SLICE_IsInputvalid(ev2_config->mapped_input));
 687:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 688:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 689:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 690:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 691:../Libraries/XMCLib/src/xmc_ccu4.c ****               (ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 692:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period", 
 693:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 694:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 695:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 696:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 697:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 698:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV1EM_Pos);
 699:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS2_EV1EM_Pos;
 700:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 701:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 702:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV2EM_Pos);
 703:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS2_EV2EM_Pos;
 704:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 705:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 706:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV1LM_Pos);
 707:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS2_EV1LM_Pos;
 708:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 709:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 710:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV2LM_Pos);
 711:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS2_EV2LM_Pos;
 712:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 713:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 714:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF1M_Pos);
 715:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS2_LPF1M_Pos;
 716:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 717:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 718:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF2M_Pos);
 719:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS2_LPF2M_Pos;
 720:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 721:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 722:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 723:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 724:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 725:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 726:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV1IS_Pos);
 727:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS1_EV1IS_Pos;
 728:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 729:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 730:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV2IS_Pos);
 731:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS1_EV2IS_Pos;
 732:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 733:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 734:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 735:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1675              	 .loc 2 735 0
 1676 000c FB68     	 ldr r3,[r7,#12]
 1677 000e 1B68     	 ldr r3,[r3]
 1678 0010 7B61     	 str r3,[r7,#20]
 736:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 737:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 738:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV1EM_Pos);
 1679              	 .loc 2 738 0
 1680 0012 7B69     	 ldr r3,[r7,#20]
 1681 0014 23F44023 	 bic r3,r3,#786432
 1682 0018 7B61     	 str r3,[r7,#20]
 739:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS_EV1EM_Pos;
 1683              	 .loc 2 739 0
 1684 001a BB68     	 ldr r3,[r7,#8]
 1685 001c 5B78     	 ldrb r3,[r3,#1]
 1686 001e 9B04     	 lsls r3,r3,#18
 1687 0020 7A69     	 ldr r2,[r7,#20]
 1688 0022 1343     	 orrs r3,r3,r2
 1689 0024 7B61     	 str r3,[r7,#20]
 740:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 741:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 742:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV2EM_Pos);
 1690              	 .loc 2 742 0
 1691 0026 7B69     	 ldr r3,[r7,#20]
 1692 0028 23F44013 	 bic r3,r3,#3145728
 1693 002c 7B61     	 str r3,[r7,#20]
 743:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS_EV2EM_Pos;
 1694              	 .loc 2 743 0
 1695 002e 7B68     	 ldr r3,[r7,#4]
 1696 0030 5B78     	 ldrb r3,[r3,#1]
 1697 0032 1B05     	 lsls r3,r3,#20
 1698 0034 7A69     	 ldr r2,[r7,#20]
 1699 0036 1343     	 orrs r3,r3,r2
 1700 0038 7B61     	 str r3,[r7,#20]
 744:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 745:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 746:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV1LM_Pos);
 1701              	 .loc 2 746 0
 1702 003a 7B69     	 ldr r3,[r7,#20]
 1703 003c 23F40003 	 bic r3,r3,#8388608
 1704 0040 7B61     	 str r3,[r7,#20]
 747:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS_EV1LM_Pos;
 1705              	 .loc 2 747 0
 1706 0042 BB68     	 ldr r3,[r7,#8]
 1707 0044 9B78     	 ldrb r3,[r3,#2]
 1708 0046 DB05     	 lsls r3,r3,#23
 1709 0048 7A69     	 ldr r2,[r7,#20]
 1710 004a 1343     	 orrs r3,r3,r2
 1711 004c 7B61     	 str r3,[r7,#20]
 748:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 749:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 750:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV2LM_Pos);
 1712              	 .loc 2 750 0
 1713 004e 7B69     	 ldr r3,[r7,#20]
 1714 0050 23F08073 	 bic r3,r3,#16777216
 1715 0054 7B61     	 str r3,[r7,#20]
 751:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS_EV2LM_Pos;
 1716              	 .loc 2 751 0
 1717 0056 7B68     	 ldr r3,[r7,#4]
 1718 0058 9B78     	 ldrb r3,[r3,#2]
 1719 005a 1B06     	 lsls r3,r3,#24
 1720 005c 7A69     	 ldr r2,[r7,#20]
 1721 005e 1343     	 orrs r3,r3,r2
 1722 0060 7B61     	 str r3,[r7,#20]
 752:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 753:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 754:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF1M_Pos);
 1723              	 .loc 2 754 0
 1724 0062 7B69     	 ldr r3,[r7,#20]
 1725 0064 23F0C053 	 bic r3,r3,#402653184
 1726 0068 7B61     	 str r3,[r7,#20]
 755:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS_LPF1M_Pos;
 1727              	 .loc 2 755 0
 1728 006a BB68     	 ldr r3,[r7,#8]
 1729 006c DB78     	 ldrb r3,[r3,#3]
 1730 006e DB06     	 lsls r3,r3,#27
 1731 0070 7A69     	 ldr r2,[r7,#20]
 1732 0072 1343     	 orrs r3,r3,r2
 1733 0074 7B61     	 str r3,[r7,#20]
 756:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 757:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 758:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF2M_Pos);
 1734              	 .loc 2 758 0
 1735 0076 7B69     	 ldr r3,[r7,#20]
 1736 0078 23F0C043 	 bic r3,r3,#1610612736
 1737 007c 7B61     	 str r3,[r7,#20]
 759:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS_LPF2M_Pos;
 1738              	 .loc 2 759 0
 1739 007e 7B68     	 ldr r3,[r7,#4]
 1740 0080 DB78     	 ldrb r3,[r3,#3]
 1741 0082 5B07     	 lsls r3,r3,#29
 1742 0084 7A69     	 ldr r2,[r7,#20]
 1743 0086 1343     	 orrs r3,r3,r2
 1744 0088 7B61     	 str r3,[r7,#20]
 760:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 761:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 762:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV1IS_Pos);
 1745              	 .loc 2 762 0
 1746 008a 7B69     	 ldr r3,[r7,#20]
 1747 008c 23F0F003 	 bic r3,r3,#240
 1748 0090 7B61     	 str r3,[r7,#20]
 763:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS_EV1IS_Pos;
 1749              	 .loc 2 763 0
 1750 0092 BB68     	 ldr r3,[r7,#8]
 1751 0094 1B78     	 ldrb r3,[r3]
 1752 0096 1B01     	 lsls r3,r3,#4
 1753 0098 7A69     	 ldr r2,[r7,#20]
 1754 009a 1343     	 orrs r3,r3,r2
 1755 009c 7B61     	 str r3,[r7,#20]
 764:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 765:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 766:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV2IS_Pos);
 1756              	 .loc 2 766 0
 1757 009e 7B69     	 ldr r3,[r7,#20]
 1758 00a0 23F47063 	 bic r3,r3,#3840
 1759 00a4 7B61     	 str r3,[r7,#20]
 767:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS_EV2IS_Pos;
 1760              	 .loc 2 767 0
 1761 00a6 7B68     	 ldr r3,[r7,#4]
 1762 00a8 1B78     	 ldrb r3,[r3]
 1763 00aa 1B02     	 lsls r3,r3,#8
 1764 00ac 7A69     	 ldr r2,[r7,#20]
 1765 00ae 1343     	 orrs r3,r3,r2
 1766 00b0 7B61     	 str r3,[r7,#20]
 768:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 769:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1767              	 .loc 2 769 0
 1768 00b2 FB68     	 ldr r3,[r7,#12]
 1769 00b4 7A69     	 ldr r2,[r7,#20]
 1770 00b6 1A60     	 str r2,[r3]
 770:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 771:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1771              	 .loc 2 771 0
 1772 00b8 1C37     	 adds r7,r7,#28
 1773              	.LCFI140:
 1774              	 .cfi_def_cfa_offset 4
 1775 00ba BD46     	 mov sp,r7
 1776              	.LCFI141:
 1777              	 .cfi_def_cfa_register 13
 1778              	 
 1779 00bc 5DF8047B 	 ldr r7,[sp],#4
 1780              	.LCFI142:
 1781              	 .cfi_restore 7
 1782              	 .cfi_def_cfa_offset 0
 1783 00c0 7047     	 bx lr
 1784              	 .cfi_endproc
 1785              	.LFE231:
 1787 00c2 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureEvent,"ax",%progbits
 1788              	 .align 2
 1789              	 .global XMC_CCU4_SLICE_ConfigureEvent
 1790              	 .thumb
 1791              	 .thumb_func
 1793              	XMC_CCU4_SLICE_ConfigureEvent:
 1794              	.LFB232:
 772:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 773:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice trigger event */
 774:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
 775:../Libraries/XMCLib/src/xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_t event,
 776:../Libraries/XMCLib/src/xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config)
 777:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1795              	 .loc 2 777 0
 1796              	 .cfi_startproc
 1797              	 
 1798              	 
 1799              	 
 1800 0000 80B4     	 push {r7}
 1801              	.LCFI143:
 1802              	 .cfi_def_cfa_offset 4
 1803              	 .cfi_offset 7,-4
 1804 0002 89B0     	 sub sp,sp,#36
 1805              	.LCFI144:
 1806              	 .cfi_def_cfa_offset 40
 1807 0004 00AF     	 add r7,sp,#0
 1808              	.LCFI145:
 1809              	 .cfi_def_cfa_register 7
 1810 0006 F860     	 str r0,[r7,#12]
 1811 0008 0B46     	 mov r3,r1
 1812 000a 7A60     	 str r2,[r7,#4]
 1813 000c FB72     	 strb r3,[r7,#11]
 778:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 779:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 780:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 781:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 782:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 783:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 784:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(config->map
 785:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 786:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 787:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Level Sensitivity",
 788:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 789:../Libraries/XMCLib/src/xmc_ccu4.c ****               (config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 790:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Debounce Period", 
 791:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(config->duration));
 792:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 793:../Libraries/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 1814              	 .loc 2 793 0
 1815 000e FB7A     	 ldrb r3,[r7,#11]
 1816 0010 013B     	 subs r3,r3,#1
 1817 0012 FB77     	 strb r3,[r7,#31]
 794:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 795:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 796:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 797:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 798:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 799:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 800:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 801:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 802:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 803:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 804:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 805:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 806:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 807:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 808:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 809:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 810:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 811:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 812:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 813:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 814:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 815:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 816:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 817:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 818:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 819:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 820:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 821:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 822:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 823:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 824:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 825:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1818              	 .loc 2 825 0
 1819 0014 FB68     	 ldr r3,[r7,#12]
 1820 0016 1B68     	 ldr r3,[r3]
 1821 0018 BB61     	 str r3,[r7,#24]
 826:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 827:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 828:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1822              	 .loc 2 828 0
 1823 001a FB7F     	 ldrb r3,[r7,#31]
 1824 001c 5B00     	 lsls r3,r3,#1
 1825 001e DBB2     	 uxtb r3,r3
 1826 0020 1033     	 adds r3,r3,#16
 1827 0022 FB75     	 strb r3,[r7,#23]
 829:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1828              	 .loc 2 829 0
 1829 0024 FB7D     	 ldrb r3,[r7,#23]
 1830 0026 0322     	 movs r2,#3
 1831 0028 02FA03F3 	 lsl r3,r2,r3
 1832 002c DB43     	 mvns r3,r3
 1833 002e BA69     	 ldr r2,[r7,#24]
 1834 0030 1340     	 ands r3,r3,r2
 1835 0032 BB61     	 str r3,[r7,#24]
 830:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 1836              	 .loc 2 830 0
 1837 0034 7B68     	 ldr r3,[r7,#4]
 1838 0036 5B78     	 ldrb r3,[r3,#1]
 1839 0038 1A46     	 mov r2,r3
 1840 003a FB7D     	 ldrb r3,[r7,#23]
 1841 003c 02FA03F3 	 lsl r3,r2,r3
 1842 0040 BA69     	 ldr r2,[r7,#24]
 1843 0042 1343     	 orrs r3,r3,r2
 1844 0044 BB61     	 str r3,[r7,#24]
 831:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 832:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 833:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0LM_Pos) + offset;
 1845              	 .loc 2 833 0
 1846 0046 FB7F     	 ldrb r3,[r7,#31]
 1847 0048 1633     	 adds r3,r3,#22
 1848 004a FB75     	 strb r3,[r7,#23]
 834:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1849              	 .loc 2 834 0
 1850 004c FB7D     	 ldrb r3,[r7,#23]
 1851 004e 0122     	 movs r2,#1
 1852 0050 02FA03F3 	 lsl r3,r2,r3
 1853 0054 DB43     	 mvns r3,r3
 1854 0056 BA69     	 ldr r2,[r7,#24]
 1855 0058 1340     	 ands r3,r3,r2
 1856 005a BB61     	 str r3,[r7,#24]
 835:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 1857              	 .loc 2 835 0
 1858 005c 7B68     	 ldr r3,[r7,#4]
 1859 005e 9B78     	 ldrb r3,[r3,#2]
 1860 0060 1A46     	 mov r2,r3
 1861 0062 FB7D     	 ldrb r3,[r7,#23]
 1862 0064 02FA03F3 	 lsl r3,r2,r3
 1863 0068 BA69     	 ldr r2,[r7,#24]
 1864 006a 1343     	 orrs r3,r3,r2
 1865 006c BB61     	 str r3,[r7,#24]
 836:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 837:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 838:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1866              	 .loc 2 838 0
 1867 006e FB7F     	 ldrb r3,[r7,#31]
 1868 0070 5B00     	 lsls r3,r3,#1
 1869 0072 DBB2     	 uxtb r3,r3
 1870 0074 1933     	 adds r3,r3,#25
 1871 0076 FB75     	 strb r3,[r7,#23]
 839:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1872              	 .loc 2 839 0
 1873 0078 FB7D     	 ldrb r3,[r7,#23]
 1874 007a 0322     	 movs r2,#3
 1875 007c 02FA03F3 	 lsl r3,r2,r3
 1876 0080 DB43     	 mvns r3,r3
 1877 0082 BA69     	 ldr r2,[r7,#24]
 1878 0084 1340     	 ands r3,r3,r2
 1879 0086 BB61     	 str r3,[r7,#24]
 840:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 1880              	 .loc 2 840 0
 1881 0088 7B68     	 ldr r3,[r7,#4]
 1882 008a DB78     	 ldrb r3,[r3,#3]
 1883 008c 1A46     	 mov r2,r3
 1884 008e FB7D     	 ldrb r3,[r7,#23]
 1885 0090 02FA03F3 	 lsl r3,r2,r3
 1886 0094 BA69     	 ldr r2,[r7,#24]
 1887 0096 1343     	 orrs r3,r3,r2
 1888 0098 BB61     	 str r3,[r7,#24]
 841:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 842:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 843:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1889              	 .loc 2 843 0
 1890 009a FB7F     	 ldrb r3,[r7,#31]
 1891 009c 9B00     	 lsls r3,r3,#2
 1892 009e FB75     	 strb r3,[r7,#23]
 844:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1893              	 .loc 2 844 0
 1894 00a0 FB7D     	 ldrb r3,[r7,#23]
 1895 00a2 0F22     	 movs r2,#15
 1896 00a4 02FA03F3 	 lsl r3,r2,r3
 1897 00a8 DB43     	 mvns r3,r3
 1898 00aa BA69     	 ldr r2,[r7,#24]
 1899 00ac 1340     	 ands r3,r3,r2
 1900 00ae BB61     	 str r3,[r7,#24]
 845:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1901              	 .loc 2 845 0
 1902 00b0 7B68     	 ldr r3,[r7,#4]
 1903 00b2 1B78     	 ldrb r3,[r3]
 1904 00b4 1A46     	 mov r2,r3
 1905 00b6 FB7D     	 ldrb r3,[r7,#23]
 1906 00b8 02FA03F3 	 lsl r3,r2,r3
 1907 00bc BA69     	 ldr r2,[r7,#24]
 1908 00be 1343     	 orrs r3,r3,r2
 1909 00c0 BB61     	 str r3,[r7,#24]
 846:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 847:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1910              	 .loc 2 847 0
 1911 00c2 FB68     	 ldr r3,[r7,#12]
 1912 00c4 BA69     	 ldr r2,[r7,#24]
 1913 00c6 1A60     	 str r2,[r3]
 848:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 849:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1914              	 .loc 2 849 0
 1915 00c8 2437     	 adds r7,r7,#36
 1916              	.LCFI146:
 1917              	 .cfi_def_cfa_offset 4
 1918 00ca BD46     	 mov sp,r7
 1919              	.LCFI147:
 1920              	 .cfi_def_cfa_register 13
 1921              	 
 1922 00cc 5DF8047B 	 ldr r7,[sp],#4
 1923              	.LCFI148:
 1924              	 .cfi_restore 7
 1925              	 .cfi_def_cfa_offset 0
 1926 00d0 7047     	 bx lr
 1927              	 .cfi_endproc
 1928              	.LFE232:
 1930 00d2 00BF     	 .section .text.XMC_CCU4_SLICE_SetInput,"ax",%progbits
 1931              	 .align 2
 1932              	 .global XMC_CCU4_SLICE_SetInput
 1933              	 .thumb
 1934              	 .thumb_func
 1936              	XMC_CCU4_SLICE_SetInput:
 1937              	.LFB233:
 850:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 851:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to bind an input to a slice trigger event */
 852:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
 853:../Libraries/XMCLib/src/xmc_ccu4.c ****                          const XMC_CCU4_SLICE_EVENT_t event,
 854:../Libraries/XMCLib/src/xmc_ccu4.c ****                              const XMC_CCU4_SLICE_INPUT_t input)
 855:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1938              	 .loc 2 855 0
 1939              	 .cfi_startproc
 1940              	 
 1941              	 
 1942              	 
 1943 0000 80B4     	 push {r7}
 1944              	.LCFI149:
 1945              	 .cfi_def_cfa_offset 4
 1946              	 .cfi_offset 7,-4
 1947 0002 85B0     	 sub sp,sp,#20
 1948              	.LCFI150:
 1949              	 .cfi_def_cfa_offset 24
 1950 0004 00AF     	 add r7,sp,#0
 1951              	.LCFI151:
 1952              	 .cfi_def_cfa_register 7
 1953 0006 7860     	 str r0,[r7,#4]
 1954 0008 0B46     	 mov r3,r1
 1955 000a FB70     	 strb r3,[r7,#3]
 1956 000c 1346     	 mov r3,r2
 1957 000e BB70     	 strb r3,[r7,#2]
 856:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 857:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 858:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 859:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 860:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 861:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 862:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(input));
 863:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 864:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 865:../Libraries/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 1958              	 .loc 2 865 0
 1959 0010 FB78     	 ldrb r3,[r7,#3]
 1960 0012 013B     	 subs r3,r3,#1
 1961 0014 FB73     	 strb r3,[r7,#15]
 866:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 867:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 868:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 869:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 870:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 871:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 872:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 873:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 874:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 875:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 876:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 1962              	 .loc 2 876 0
 1963 0016 FB7B     	 ldrb r3,[r7,#15]
 1964 0018 9B00     	 lsls r3,r3,#2
 1965 001a BB73     	 strb r3,[r7,#14]
 877:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 878:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1966              	 .loc 2 878 0
 1967 001c 7B68     	 ldr r3,[r7,#4]
 1968 001e 1B68     	 ldr r3,[r3]
 1969 0020 BB60     	 str r3,[r7,#8]
 879:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1970              	 .loc 2 879 0
 1971 0022 BB7B     	 ldrb r3,[r7,#14]
 1972 0024 0F22     	 movs r2,#15
 1973 0026 02FA03F3 	 lsl r3,r2,r3
 1974 002a DB43     	 mvns r3,r3
 1975 002c BA68     	 ldr r2,[r7,#8]
 1976 002e 1340     	 ands r3,r3,r2
 1977 0030 BB60     	 str r3,[r7,#8]
 880:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 1978              	 .loc 2 880 0
 1979 0032 BA78     	 ldrb r2,[r7,#2]
 1980 0034 BB7B     	 ldrb r3,[r7,#14]
 1981 0036 02FA03F3 	 lsl r3,r2,r3
 1982 003a BA68     	 ldr r2,[r7,#8]
 1983 003c 1343     	 orrs r3,r3,r2
 1984 003e BB60     	 str r3,[r7,#8]
 881:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 882:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1985              	 .loc 2 882 0
 1986 0040 7B68     	 ldr r3,[r7,#4]
 1987 0042 BA68     	 ldr r2,[r7,#8]
 1988 0044 1A60     	 str r2,[r3]
 883:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 884:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1989              	 .loc 2 884 0
 1990 0046 1437     	 adds r7,r7,#20
 1991              	.LCFI152:
 1992              	 .cfi_def_cfa_offset 4
 1993 0048 BD46     	 mov sp,r7
 1994              	.LCFI153:
 1995              	 .cfi_def_cfa_register 13
 1996              	 
 1997 004a 5DF8047B 	 ldr r7,[sp],#4
 1998              	.LCFI154:
 1999              	 .cfi_restore 7
 2000              	 .cfi_def_cfa_offset 0
 2001 004e 7047     	 bx lr
 2002              	 .cfi_endproc
 2003              	.LFE233:
 2005              	 .section .text.XMC_CCU4_SLICE_SetTimerRepeatMode,"ax",%progbits
 2006              	 .align 2
 2007              	 .global XMC_CCU4_SLICE_SetTimerRepeatMode
 2008              	 .thumb
 2009              	 .thumb_func
 2011              	XMC_CCU4_SLICE_SetTimerRepeatMode:
 2012              	.LFB234:
 885:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 886:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to program timer repeat mode - Single shot vs repeat */
 887:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
 888:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2013              	 .loc 2 888 0
 2014              	 .cfi_startproc
 2015              	 
 2016              	 
 2017              	 
 2018 0000 80B4     	 push {r7}
 2019              	.LCFI155:
 2020              	 .cfi_def_cfa_offset 4
 2021              	 .cfi_offset 7,-4
 2022 0002 83B0     	 sub sp,sp,#12
 2023              	.LCFI156:
 2024              	 .cfi_def_cfa_offset 16
 2025 0004 00AF     	 add r7,sp,#0
 2026              	.LCFI157:
 2027              	 .cfi_def_cfa_register 7
 2028 0006 7860     	 str r0,[r7,#4]
 2029 0008 0B46     	 mov r3,r1
 2030 000a FB70     	 strb r3,[r7,#3]
 889:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
 890:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode",
 891:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 892:../Libraries/XMCLib/src/xmc_ccu4.c ****           (mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE)));
 893:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 894:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 2031              	 .loc 2 894 0
 2032 000c FB78     	 ldrb r3,[r7,#3]
 2033 000e 002B     	 cmp r3,#0
 2034 0010 06D1     	 bne .L63
 895:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 896:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TSSM_Msk);
 2035              	 .loc 2 896 0
 2036 0012 7B68     	 ldr r3,[r7,#4]
 2037 0014 5B69     	 ldr r3,[r3,#20]
 2038 0016 23F00202 	 bic r2,r3,#2
 2039 001a 7B68     	 ldr r3,[r7,#4]
 2040 001c 5A61     	 str r2,[r3,#20]
 2041 001e 05E0     	 b .L62
 2042              	.L63:
 897:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 898:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 899:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 900:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TSSM_Msk;
 2043              	 .loc 2 900 0
 2044 0020 7B68     	 ldr r3,[r7,#4]
 2045 0022 5B69     	 ldr r3,[r3,#20]
 2046 0024 43F00202 	 orr r2,r3,#2
 2047 0028 7B68     	 ldr r3,[r7,#4]
 2048 002a 5A61     	 str r2,[r3,#20]
 2049              	.L62:
 901:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 902:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2050              	 .loc 2 902 0
 2051 002c 0C37     	 adds r7,r7,#12
 2052              	.LCFI158:
 2053              	 .cfi_def_cfa_offset 4
 2054 002e BD46     	 mov sp,r7
 2055              	.LCFI159:
 2056              	 .cfi_def_cfa_register 13
 2057              	 
 2058 0030 5DF8047B 	 ldr r7,[sp],#4
 2059              	.LCFI160:
 2060              	 .cfi_restore 7
 2061              	 .cfi_def_cfa_offset 0
 2062 0034 7047     	 bx lr
 2063              	 .cfi_endproc
 2064              	.LFE234:
 2066 0036 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerCountingMode,"ax",%progbits
 2067              	 .align 2
 2068              	 .global XMC_CCU4_SLICE_SetTimerCountingMode
 2069              	 .thumb
 2070              	 .thumb_func
 2072              	XMC_CCU4_SLICE_SetTimerCountingMode:
 2073              	.LFB235:
 903:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 904:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Programs timer counting mode */
 905:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
 906:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2074              	 .loc 2 906 0
 2075              	 .cfi_startproc
 2076              	 
 2077              	 
 2078              	 
 2079 0000 80B4     	 push {r7}
 2080              	.LCFI161:
 2081              	 .cfi_def_cfa_offset 4
 2082              	 .cfi_offset 7,-4
 2083 0002 83B0     	 sub sp,sp,#12
 2084              	.LCFI162:
 2085              	 .cfi_def_cfa_offset 16
 2086 0004 00AF     	 add r7,sp,#0
 2087              	.LCFI163:
 2088              	 .cfi_def_cfa_register 7
 2089 0006 7860     	 str r0,[r7,#4]
 2090 0008 0B46     	 mov r3,r1
 2091 000a FB70     	 strb r3,[r7,#3]
 907:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
 908:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Timer Count Mode", ((mode == XMC_CCU4_SLI
 909:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                                               (mode == XMC_CCU4_SLI
 910:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 911:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA == mode)
 2092              	 .loc 2 911 0
 2093 000c FB78     	 ldrb r3,[r7,#3]
 2094 000e 002B     	 cmp r3,#0
 2095 0010 06D1     	 bne .L66
 912:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 913:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TCM_Msk);
 2096              	 .loc 2 913 0
 2097 0012 7B68     	 ldr r3,[r7,#4]
 2098 0014 5B69     	 ldr r3,[r3,#20]
 2099 0016 23F00102 	 bic r2,r3,#1
 2100 001a 7B68     	 ldr r3,[r7,#4]
 2101 001c 5A61     	 str r2,[r3,#20]
 2102 001e 05E0     	 b .L65
 2103              	.L66:
 914:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 915:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 916:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 917:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TCM_Msk;
 2104              	 .loc 2 917 0
 2105 0020 7B68     	 ldr r3,[r7,#4]
 2106 0022 5B69     	 ldr r3,[r3,#20]
 2107 0024 43F00102 	 orr r2,r3,#1
 2108 0028 7B68     	 ldr r3,[r7,#4]
 2109 002a 5A61     	 str r2,[r3,#20]
 2110              	.L65:
 918:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 919:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2111              	 .loc 2 919 0
 2112 002c 0C37     	 adds r7,r7,#12
 2113              	.LCFI164:
 2114              	 .cfi_def_cfa_offset 4
 2115 002e BD46     	 mov sp,r7
 2116              	.LCFI165:
 2117              	 .cfi_def_cfa_register 13
 2118              	 
 2119 0030 5DF8047B 	 ldr r7,[sp],#4
 2120              	.LCFI166:
 2121              	 .cfi_restore 7
 2122              	 .cfi_def_cfa_offset 0
 2123 0034 7047     	 bx lr
 2124              	 .cfi_endproc
 2125              	.LFE235:
 2127 0036 00BF     	 .section .text.XMC_CCU4_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2128              	 .align 2
 2129              	 .global XMC_CCU4_SLICE_GetCaptureRegisterValue
 2130              	 .thumb
 2131              	 .thumb_func
 2133              	XMC_CCU4_SLICE_GetCaptureRegisterValue:
 2134              	.LFB236:
 920:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 921:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Retrieves desired capture register value */
 922:../Libraries/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
 923:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2135              	 .loc 2 923 0
 2136              	 .cfi_startproc
 2137              	 
 2138              	 
 2139              	 
 2140 0000 80B4     	 push {r7}
 2141              	.LCFI167:
 2142              	 .cfi_def_cfa_offset 4
 2143              	 .cfi_offset 7,-4
 2144 0002 83B0     	 sub sp,sp,#12
 2145              	.LCFI168:
 2146              	 .cfi_def_cfa_offset 16
 2147 0004 00AF     	 add r7,sp,#0
 2148              	.LCFI169:
 2149              	 .cfi_def_cfa_register 7
 2150 0006 7860     	 str r0,[r7,#4]
 2151 0008 0B46     	 mov r3,r1
 2152 000a FB70     	 strb r3,[r7,#3]
 924:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 925:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 926:../Libraries/XMCLib/src/xmc_ccu4.c ****   return(slice->CV[reg_num]);
 2153              	 .loc 2 926 0
 2154 000c FB78     	 ldrb r3,[r7,#3]
 2155 000e 7A68     	 ldr r2,[r7,#4]
 2156 0010 1C33     	 adds r3,r3,#28
 2157 0012 9B00     	 lsls r3,r3,#2
 2158 0014 1344     	 add r3,r3,r2
 2159 0016 5B68     	 ldr r3,[r3,#4]
 927:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2160              	 .loc 2 927 0
 2161 0018 1846     	 mov r0,r3
 2162 001a 0C37     	 adds r7,r7,#12
 2163              	.LCFI170:
 2164              	 .cfi_def_cfa_offset 4
 2165 001c BD46     	 mov sp,r7
 2166              	.LCFI171:
 2167              	 .cfi_def_cfa_register 13
 2168              	 
 2169 001e 5DF8047B 	 ldr r7,[sp],#4
 2170              	.LCFI172:
 2171              	 .cfi_restore 7
 2172              	 .cfi_def_cfa_offset 0
 2173 0022 7047     	 bx lr
 2174              	 .cfi_endproc
 2175              	.LFE236:
 2177              	 .section .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2178              	 .align 2
 2179              	 .global XMC_CCU4_SLICE_GetLastCapturedTimerValue
 2180              	 .thumb
 2181              	 .thumb_func
 2183              	XMC_CCU4_SLICE_GetLastCapturedTimerValue:
 2184              	.LFB237:
 928:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 929:../Libraries/XMCLib/src/xmc_ccu4.c **** /* @brief Retrieves the latest captured timer value */
 930:../Libraries/XMCLib/src/xmc_ccu4.c **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
 931:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
 932:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                            uint32_t *val_ptr)
 933:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2185              	 .loc 2 933 0
 2186              	 .cfi_startproc
 2187              	 
 2188              	 
 2189              	 
 2190 0000 80B4     	 push {r7}
 2191              	.LCFI173:
 2192              	 .cfi_def_cfa_offset 4
 2193              	 .cfi_offset 7,-4
 2194 0002 87B0     	 sub sp,sp,#28
 2195              	.LCFI174:
 2196              	 .cfi_def_cfa_offset 32
 2197 0004 00AF     	 add r7,sp,#0
 2198              	.LCFI175:
 2199              	 .cfi_def_cfa_register 7
 2200 0006 F860     	 str r0,[r7,#12]
 2201 0008 0B46     	 mov r3,r1
 2202 000a 7A60     	 str r2,[r7,#4]
 2203 000c FB72     	 strb r3,[r7,#11]
 934:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_STATUS_t retval;
 935:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t i;
 936:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t start;
 937:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t end;
 938:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 939:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlic
 940:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Register Set", ((set == XMC_CCU4_SLI
 941:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                                                (set == XMC_CCU4_SLI
 942:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 943:../Libraries/XMCLib/src/xmc_ccu4.c ****   retval = XMC_CCU4_STATUS_ERROR;
 2204              	 .loc 2 943 0
 2205 000e 0123     	 movs r3,#1
 2206 0010 FB75     	 strb r3,[r7,#23]
 944:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 945:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First check if extended capture mode is enabled */
 946:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((slice->TC) & CCU4_CC4_TC_ECM_Msk)
 2207              	 .loc 2 946 0
 2208 0012 FB68     	 ldr r3,[r7,#12]
 2209 0014 5B69     	 ldr r3,[r3,#20]
 2210 0016 03F01003 	 and r3,r3,#16
 2211 001a 002B     	 cmp r3,#0
 2212 001c 04D0     	 beq .L71
 947:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 948:../Libraries/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
 949:../Libraries/XMCLib/src/xmc_ccu4.c ****     start = 0U;
 2213              	 .loc 2 949 0
 2214 001e 0023     	 movs r3,#0
 2215 0020 7B75     	 strb r3,[r7,#21]
 950:../Libraries/XMCLib/src/xmc_ccu4.c ****     end = XMC_CCU4_NUM_SLICES_PER_MODULE;
 2216              	 .loc 2 950 0
 2217 0022 0423     	 movs r3,#4
 2218 0024 3B75     	 strb r3,[r7,#20]
 2219 0026 0BE0     	 b .L72
 2220              	.L71:
 951:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 952:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 953:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 954:../Libraries/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode is not enabled */
 955:../Libraries/XMCLib/src/xmc_ccu4.c ****     if (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)
 2221              	 .loc 2 955 0
 2222 0028 FB7A     	 ldrb r3,[r7,#11]
 2223 002a 012B     	 cmp r3,#1
 2224 002c 04D1     	 bne .L73
 956:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 957:../Libraries/XMCLib/src/xmc_ccu4.c ****       start = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2225              	 .loc 2 957 0
 2226 002e 0223     	 movs r3,#2
 2227 0030 7B75     	 strb r3,[r7,#21]
 958:../Libraries/XMCLib/src/xmc_ccu4.c ****       end   = (uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE;
 2228              	 .loc 2 958 0
 2229 0032 0423     	 movs r3,#4
 2230 0034 3B75     	 strb r3,[r7,#20]
 2231 0036 03E0     	 b .L72
 2232              	.L73:
 959:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 960:../Libraries/XMCLib/src/xmc_ccu4.c ****     else
 961:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 962:../Libraries/XMCLib/src/xmc_ccu4.c ****       start = 0U;
 2233              	 .loc 2 962 0
 2234 0038 0023     	 movs r3,#0
 2235 003a 7B75     	 strb r3,[r7,#21]
 963:../Libraries/XMCLib/src/xmc_ccu4.c ****       end = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2236              	 .loc 2 963 0
 2237 003c 0223     	 movs r3,#2
 2238 003e 3B75     	 strb r3,[r7,#20]
 2239              	.L72:
 964:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 965:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 966:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 967:../Libraries/XMCLib/src/xmc_ccu4.c ****   for(i=start; i < end; i++)
 2240              	 .loc 2 967 0
 2241 0040 7B7D     	 ldrb r3,[r7,#21]
 2242 0042 BB75     	 strb r3,[r7,#22]
 2243 0044 17E0     	 b .L74
 2244              	.L77:
 968:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 969:../Libraries/XMCLib/src/xmc_ccu4.c ****     if ( (slice->CV[i]) & CCU4_CC4_CV_FFL_Msk )
 2245              	 .loc 2 969 0
 2246 0046 BB7D     	 ldrb r3,[r7,#22]
 2247 0048 FA68     	 ldr r2,[r7,#12]
 2248 004a 1C33     	 adds r3,r3,#28
 2249 004c 9B00     	 lsls r3,r3,#2
 2250 004e 1344     	 add r3,r3,r2
 2251 0050 5B68     	 ldr r3,[r3,#4]
 2252 0052 03F48013 	 and r3,r3,#1048576
 2253 0056 002B     	 cmp r3,#0
 2254 0058 0AD0     	 beq .L75
 970:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 971:../Libraries/XMCLib/src/xmc_ccu4.c ****       *val_ptr = slice->CV[i];
 2255              	 .loc 2 971 0
 2256 005a BB7D     	 ldrb r3,[r7,#22]
 2257 005c FA68     	 ldr r2,[r7,#12]
 2258 005e 1C33     	 adds r3,r3,#28
 2259 0060 9B00     	 lsls r3,r3,#2
 2260 0062 1344     	 add r3,r3,r2
 2261 0064 5A68     	 ldr r2,[r3,#4]
 2262 0066 7B68     	 ldr r3,[r7,#4]
 2263 0068 1A60     	 str r2,[r3]
 972:../Libraries/XMCLib/src/xmc_ccu4.c ****       retval = XMC_CCU4_STATUS_OK;
 2264              	 .loc 2 972 0
 2265 006a 0023     	 movs r3,#0
 2266 006c FB75     	 strb r3,[r7,#23]
 973:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2267              	 .loc 2 973 0
 2268 006e 06E0     	 b .L76
 2269              	.L75:
 967:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 2270              	 .loc 2 967 0 discriminator 2
 2271 0070 BB7D     	 ldrb r3,[r7,#22]
 2272 0072 0133     	 adds r3,r3,#1
 2273 0074 BB75     	 strb r3,[r7,#22]
 2274              	.L74:
 967:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 2275              	 .loc 2 967 0 is_stmt 0 discriminator 1
 2276 0076 BA7D     	 ldrb r2,[r7,#22]
 2277 0078 3B7D     	 ldrb r3,[r7,#20]
 2278 007a 9A42     	 cmp r2,r3
 2279 007c E3D3     	 bcc .L77
 2280              	.L76:
 974:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 975:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 976:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 977:../Libraries/XMCLib/src/xmc_ccu4.c ****   return retval;
 2281              	 .loc 2 977 0 is_stmt 1
 2282 007e FB7D     	 ldrb r3,[r7,#23]
 978:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2283              	 .loc 2 978 0
 2284 0080 1846     	 mov r0,r3
 2285 0082 1C37     	 adds r7,r7,#28
 2286              	.LCFI176:
 2287              	 .cfi_def_cfa_offset 4
 2288 0084 BD46     	 mov sp,r7
 2289              	.LCFI177:
 2290              	 .cfi_def_cfa_register 13
 2291              	 
 2292 0086 5DF8047B 	 ldr r7,[sp],#4
 2293              	.LCFI178:
 2294              	 .cfi_restore 7
 2295              	 .cfi_def_cfa_offset 0
 2296 008a 7047     	 bx lr
 2297              	 .cfi_endproc
 2298              	.LFE237:
 2300              	 .section .text.XMC_CCU4_GetCapturedValueFromFifo,"ax",%progbits
 2301              	 .align 2
 2302              	 .global XMC_CCU4_GetCapturedValueFromFifo
 2303              	 .thumb
 2304              	 .thumb_func
 2306              	XMC_CCU4_GetCapturedValueFromFifo:
 2307              	.LFB238:
 979:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 980:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
 981:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V1) /* Defined for XMC4500, XMC400, XMC4200, XMC4100 devices only */
 982:../Libraries/XMCLib/src/xmc_ccu4.c **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
 983:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2308              	 .loc 2 983 0
 2309              	 .cfi_startproc
 2310              	 
 2311              	 
 2312              	 
 2313 0000 80B4     	 push {r7}
 2314              	.LCFI179:
 2315              	 .cfi_def_cfa_offset 4
 2316              	 .cfi_offset 7,-4
 2317 0002 85B0     	 sub sp,sp,#20
 2318              	.LCFI180:
 2319              	 .cfi_def_cfa_offset 24
 2320 0004 00AF     	 add r7,sp,#0
 2321              	.LCFI181:
 2322              	 .cfi_def_cfa_register 7
 2323 0006 7860     	 str r0,[r7,#4]
 2324 0008 0B46     	 mov r3,r1
 2325 000a FB70     	 strb r3,[r7,#3]
 984:../Libraries/XMCLib/src/xmc_ccu4.c ****   int32_t   cap;
 985:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t  extracted_slice;
 986:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 987:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidModule(modu
 988:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 989:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First read the global fifo register */
 990:../Libraries/XMCLib/src/xmc_ccu4.c ****   cap = (int32_t) module->ECRD;
 2326              	 .loc 2 990 0
 2327 000c 7B68     	 ldr r3,[r7,#4]
 2328 000e 1B6D     	 ldr r3,[r3,#80]
 2329 0010 FB60     	 str r3,[r7,#12]
 991:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 992:../Libraries/XMCLib/src/xmc_ccu4.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU4_ECRD_SPTR_Msk)) >> CCU4_ECRD_SPTR_Pos;
 2330              	 .loc 2 992 0
 2331 0012 FB68     	 ldr r3,[r7,#12]
 2332 0014 03F44013 	 and r3,r3,#3145728
 2333 0018 1B0D     	 lsrs r3,r3,#20
 2334 001a BB60     	 str r3,[r7,#8]
 993:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 994:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Return captured result only if it were applicable to this slice */
 995:../Libraries/XMCLib/src/xmc_ccu4.c ****   if(extracted_slice != ((uint32_t)slice_number))
 2335              	 .loc 2 995 0
 2336 001c FA78     	 ldrb r2,[r7,#3]
 2337 001e BB68     	 ldr r3,[r7,#8]
 2338 0020 9A42     	 cmp r2,r3
 2339 0022 02D0     	 beq .L80
 996:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 997:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = -1;
 2340              	 .loc 2 997 0
 2341 0024 4FF0FF33 	 mov r3,#-1
 2342 0028 FB60     	 str r3,[r7,#12]
 2343              	.L80:
 998:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 999:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1000:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (cap);
 2344              	 .loc 2 1000 0
 2345 002a FB68     	 ldr r3,[r7,#12]
1001:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2346              	 .loc 2 1001 0
 2347 002c 1846     	 mov r0,r3
 2348 002e 1437     	 adds r7,r7,#20
 2349              	.LCFI182:
 2350              	 .cfi_def_cfa_offset 4
 2351 0030 BD46     	 mov sp,r7
 2352              	.LCFI183:
 2353              	 .cfi_def_cfa_register 13
 2354              	 
 2355 0032 5DF8047B 	 ldr r7,[sp],#4
 2356              	.LCFI184:
 2357              	 .cfi_restore 7
 2358              	 .cfi_def_cfa_offset 0
 2359 0036 7047     	 bx lr
 2360              	 .cfi_endproc
 2361              	.LFE238:
 2363              	 .section .text.XMC_CCU4_SLICE_EnableDithering,"ax",%progbits
 2364              	 .align 2
 2365              	 .global XMC_CCU4_SLICE_EnableDithering
 2366              	 .thumb
 2367              	 .thumb_func
 2369              	XMC_CCU4_SLICE_EnableDithering:
 2370              	.LFB239:
1002:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
1003:../Libraries/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1004:../Libraries/XMCLib/src/xmc_ccu4.c ****                                              const XMC_CCU4_SLICE_CAP_REG_SET_t set)
1005:../Libraries/XMCLib/src/xmc_ccu4.c **** {
1006:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cap;
1007:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1008:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1009:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1010:../Libraries/XMCLib/src/xmc_ccu4.c ****       ((set == XMC_CCU4_SLICE_CAP_REG_SET_LOW) ||\
1011:../Libraries/XMCLib/src/xmc_ccu4.c ****        (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)));
1012:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1013:../Libraries/XMCLib/src/xmc_ccu4.c ****   if(XMC_CCU4_SLICE_CAP_REG_SET_LOW == set)
1014:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1015:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD0;
1016:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1017:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
1018:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1019:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD1;
1020:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1021:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1022:../Libraries/XMCLib/src/xmc_ccu4.c ****   return cap;
1023:../Libraries/XMCLib/src/xmc_ccu4.c **** }
1024:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
1025:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1026:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Enables PWM dithering feature */
1027:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1028:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const bool period_dither,
1029:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const bool duty_dither,
1030:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const uint8_t spread)
1031:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2371              	 .loc 2 1031 0
 2372              	 .cfi_startproc
 2373              	 
 2374              	 
 2375 0000 80B5     	 push {r7,lr}
 2376              	.LCFI185:
 2377              	 .cfi_def_cfa_offset 8
 2378              	 .cfi_offset 7,-8
 2379              	 .cfi_offset 14,-4
 2380 0002 84B0     	 sub sp,sp,#16
 2381              	.LCFI186:
 2382              	 .cfi_def_cfa_offset 24
 2383 0004 00AF     	 add r7,sp,#0
 2384              	.LCFI187:
 2385              	 .cfi_def_cfa_register 7
 2386 0006 7860     	 str r0,[r7,#4]
 2387 0008 0846     	 mov r0,r1
 2388 000a 1146     	 mov r1,r2
 2389 000c 1A46     	 mov r2,r3
 2390 000e 0346     	 mov r3,r0
 2391 0010 FB70     	 strb r3,[r7,#3]
 2392 0012 0B46     	 mov r3,r1
 2393 0014 BB70     	 strb r3,[r7,#2]
 2394 0016 1346     	 mov r3,r2
 2395 0018 7B70     	 strb r3,[r7,#1]
1032:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
1033:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1034:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1035:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1036:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 2396              	 .loc 2 1036 0
 2397 001a 7B68     	 ldr r3,[r7,#4]
 2398 001c 5B69     	 ldr r3,[r3,#20]
 2399 001e FB60     	 str r3,[r7,#12]
1037:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
 2400              	 .loc 2 1037 0
 2401 0020 FB68     	 ldr r3,[r7,#12]
 2402 0022 23F4C043 	 bic r3,r3,#24576
 2403 0026 FB60     	 str r3,[r7,#12]
1038:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1039:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == period_dither)
 2404              	 .loc 2 1039 0
 2405 0028 FB78     	 ldrb r3,[r7,#3]
 2406 002a 002B     	 cmp r3,#0
 2407 002c 03D0     	 beq .L83
1040:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1041:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_PERIOD_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2408              	 .loc 2 1041 0
 2409 002e FB68     	 ldr r3,[r7,#12]
 2410 0030 43F40053 	 orr r3,r3,#8192
 2411 0034 FB60     	 str r3,[r7,#12]
 2412              	.L83:
1042:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1043:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == duty_dither)
 2413              	 .loc 2 1043 0
 2414 0036 BB78     	 ldrb r3,[r7,#2]
 2415 0038 002B     	 cmp r3,#0
 2416 003a 03D0     	 beq .L84
1044:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1045:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2417              	 .loc 2 1045 0
 2418 003c FB68     	 ldr r3,[r7,#12]
 2419 003e 43F48043 	 orr r3,r3,#16384
 2420 0042 FB60     	 str r3,[r7,#12]
 2421              	.L84:
1046:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1047:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1048:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 2422              	 .loc 2 1048 0
 2423 0044 7B68     	 ldr r3,[r7,#4]
 2424 0046 FA68     	 ldr r2,[r7,#12]
 2425 0048 5A61     	 str r2,[r3,#20]
1049:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1050:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_SLICE_SetDitherCompareValue((XMC_CCU4_SLICE_t *)slice, (uint8_t)spread);
 2426              	 .loc 2 1050 0
 2427 004a 7B78     	 ldrb r3,[r7,#1]
 2428 004c 7868     	 ldr r0,[r7,#4]
 2429 004e 1946     	 mov r1,r3
 2430 0050 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetDitherCompareValue
1051:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2431              	 .loc 2 1051 0
 2432 0054 1037     	 adds r7,r7,#16
 2433              	.LCFI188:
 2434              	 .cfi_def_cfa_offset 8
 2435 0056 BD46     	 mov sp,r7
 2436              	.LCFI189:
 2437              	 .cfi_def_cfa_register 13
 2438              	 
 2439 0058 80BD     	 pop {r7,pc}
 2440              	 .cfi_endproc
 2441              	.LFE239:
 2443 005a 00BF     	 .section .text.XMC_CCU4_SLICE_SetPrescaler,"ax",%progbits
 2444              	 .align 2
 2445              	 .global XMC_CCU4_SLICE_SetPrescaler
 2446              	 .thumb
 2447              	 .thumb_func
 2449              	XMC_CCU4_SLICE_SetPrescaler:
 2450              	.LFB240:
1052:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1053:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Programs Pre-scalar divider  */
1054:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1055:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2451              	 .loc 2 1055 0
 2452              	 .cfi_startproc
 2453              	 
 2454              	 
 2455              	 
 2456 0000 80B4     	 push {r7}
 2457              	.LCFI190:
 2458              	 .cfi_def_cfa_offset 4
 2459              	 .cfi_offset 7,-4
 2460 0002 85B0     	 sub sp,sp,#20
 2461              	.LCFI191:
 2462              	 .cfi_def_cfa_offset 24
 2463 0004 00AF     	 add r7,sp,#0
 2464              	.LCFI192:
 2465              	 .cfi_def_cfa_register 7
 2466 0006 7860     	 str r0,[r7,#4]
 2467 0008 0B46     	 mov r3,r1
 2468 000a FB70     	 strb r3,[r7,#3]
1056:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t fpc;
1057:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1058:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1059:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1060:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc = slice->FPC;
 2469              	 .loc 2 1060 0
 2470 000c 7B68     	 ldr r3,[r7,#4]
 2471 000e 9B6A     	 ldr r3,[r3,#40]
 2472 0010 FB60     	 str r3,[r7,#12]
1061:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc &= ~((uint32_t) CCU4_CC4_FPC_PVAL_Msk);
 2473              	 .loc 2 1061 0
 2474 0012 FB68     	 ldr r3,[r7,#12]
 2475 0014 23F47063 	 bic r3,r3,#3840
 2476 0018 FB60     	 str r3,[r7,#12]
1062:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc |= ((uint32_t) div_val) << CCU4_CC4_FPC_PVAL_Pos;
 2477              	 .loc 2 1062 0
 2478 001a FB78     	 ldrb r3,[r7,#3]
 2479 001c 1B02     	 lsls r3,r3,#8
 2480 001e FA68     	 ldr r2,[r7,#12]
 2481 0020 1343     	 orrs r3,r3,r2
 2482 0022 FB60     	 str r3,[r7,#12]
1063:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPC = fpc;
 2483              	 .loc 2 1063 0
 2484 0024 7B68     	 ldr r3,[r7,#4]
 2485 0026 FA68     	 ldr r2,[r7,#12]
 2486 0028 9A62     	 str r2,[r3,#40]
1064:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* 
1065:../Libraries/XMCLib/src/xmc_ccu4.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1066:../Libraries/XMCLib/src/xmc_ccu4.c ****    * compare value.
1067:../Libraries/XMCLib/src/xmc_ccu4.c ****    */
1068:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) div_val;
 2487              	 .loc 2 1068 0
 2488 002a FA78     	 ldrb r2,[r7,#3]
 2489 002c 7B68     	 ldr r3,[r7,#4]
 2490 002e 5A62     	 str r2,[r3,#36]
1069:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2491              	 .loc 2 1069 0
 2492 0030 1437     	 adds r7,r7,#20
 2493              	.LCFI193:
 2494              	 .cfi_def_cfa_offset 4
 2495 0032 BD46     	 mov sp,r7
 2496              	.LCFI194:
 2497              	 .cfi_def_cfa_register 13
 2498              	 
 2499 0034 5DF8047B 	 ldr r7,[sp],#4
 2500              	.LCFI195:
 2501              	 .cfi_restore 7
 2502              	 .cfi_def_cfa_offset 0
 2503 0038 7047     	 bx lr
 2504              	 .cfi_endproc
 2505              	.LFE240:
 2507 003a 00BF     	 .section .text.XMC_CCU4_SLICE_SetInterruptNode,"ax",%progbits
 2508              	 .align 2
 2509              	 .global XMC_CCU4_SLICE_SetInterruptNode
 2510              	 .thumb
 2511              	 .thumb_func
 2513              	XMC_CCU4_SLICE_SetInterruptNode:
 2514              	.LFB241:
1070:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1071:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Binds a capcom event to an NVIC node  */
1072:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInterruptNode(XMC_CCU4_SLICE_t *const slice,
1073:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_IRQ_ID_t event,
1074:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_SR_ID_t sr)
1075:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2515              	 .loc 2 1075 0
 2516              	 .cfi_startproc
 2517              	 
 2518              	 
 2519              	 
 2520 0000 80B4     	 push {r7}
 2521              	.LCFI196:
 2522              	 .cfi_def_cfa_offset 4
 2523              	 .cfi_offset 7,-4
 2524 0002 87B0     	 sub sp,sp,#28
 2525              	.LCFI197:
 2526              	 .cfi_def_cfa_offset 32
 2527 0004 00AF     	 add r7,sp,#0
 2528              	.LCFI198:
 2529              	 .cfi_def_cfa_register 7
 2530 0006 7860     	 str r0,[r7,#4]
 2531 0008 0B46     	 mov r3,r1
 2532 000a FB70     	 strb r3,[r7,#3]
 2533 000c 1346     	 mov r3,r2
 2534 000e BB70     	 strb r3,[r7,#2]
1076:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t srs;
1077:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t pos;
1078:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t mask;
1079:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1080:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1081:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU4_SLICE_CHECK_SR_ID(sr));
1082:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event)
1083:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1084:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs = slice->SRS;
 2535              	 .loc 2 1084 0
 2536 0010 7B68     	 ldr r3,[r7,#4]
 2537 0012 D3F8A830 	 ldr r3,[r3,#168]
 2538 0016 FB60     	 str r3,[r7,#12]
1085:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1086:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch(event)
 2539              	 .loc 2 1086 0
 2540 0018 FB78     	 ldrb r3,[r7,#3]
 2541 001a 092B     	 cmp r3,#9
 2542 001c 2CD8     	 bhi .L87
 2543 001e 01A2     	 adr r2,.L89
 2544 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2545              	 .p2align 2
 2546              	.L89:
 2547 0024 4D000000 	 .word .L88+1
 2548 0028 4D000000 	 .word .L88+1
 2549 002c 57000000 	 .word .L90+1
 2550 0030 57000000 	 .word .L90+1
 2551 0034 79000000 	 .word .L87+1
 2552 0038 79000000 	 .word .L87+1
 2553 003c 79000000 	 .word .L87+1
 2554 0040 79000000 	 .word .L87+1
 2555 0044 61000000 	 .word .L91+1
 2556 0048 6D000000 	 .word .L92+1
 2557              	 .p2align 1
 2558              	.L88:
1087:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1088:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH:
1089:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH:
1090:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_POSR_Msk);
 2559              	 .loc 2 1090 0
 2560 004c 0323     	 movs r3,#3
 2561 004e 3B61     	 str r3,[r7,#16]
1091:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_POSR_Pos;
 2562              	 .loc 2 1091 0
 2563 0050 0023     	 movs r3,#0
 2564 0052 7B61     	 str r3,[r7,#20]
1092:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2565              	 .loc 2 1092 0
 2566 0054 16E0     	 b .L93
 2567              	.L90:
1093:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1094:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP:
1095:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN:
1096:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_CMSR_Msk);
 2568              	 .loc 2 1096 0
 2569 0056 0C23     	 movs r3,#12
 2570 0058 3B61     	 str r3,[r7,#16]
1097:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_CMSR_Pos;
 2571              	 .loc 2 1097 0
 2572 005a 0223     	 movs r3,#2
 2573 005c 7B61     	 str r3,[r7,#20]
1098:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2574              	 .loc 2 1098 0
 2575 005e 11E0     	 b .L93
 2576              	.L91:
1099:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1100:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT0:
1101:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E0SR_Msk);
 2577              	 .loc 2 1101 0
 2578 0060 4FF44073 	 mov r3,#768
 2579 0064 3B61     	 str r3,[r7,#16]
1102:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E0SR_Pos;
 2580              	 .loc 2 1102 0
 2581 0066 0823     	 movs r3,#8
 2582 0068 7B61     	 str r3,[r7,#20]
1103:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2583              	 .loc 2 1103 0
 2584 006a 0BE0     	 b .L93
 2585              	.L92:
1104:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1105:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT1:
1106:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E1SR_Msk);
 2586              	 .loc 2 1106 0
 2587 006c 4FF44063 	 mov r3,#3072
 2588 0070 3B61     	 str r3,[r7,#16]
1107:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E1SR_Pos;
 2589              	 .loc 2 1107 0
 2590 0072 0A23     	 movs r3,#10
 2591 0074 7B61     	 str r3,[r7,#20]
1108:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2592              	 .loc 2 1108 0
 2593 0076 05E0     	 b .L93
 2594              	.L87:
1109:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1110:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
1111:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E2SR_Msk);
 2595              	 .loc 2 1111 0
 2596 0078 4FF44053 	 mov r3,#12288
 2597 007c 3B61     	 str r3,[r7,#16]
1112:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E2SR_Pos;
 2598              	 .loc 2 1112 0
 2599 007e 0C23     	 movs r3,#12
 2600 0080 7B61     	 str r3,[r7,#20]
1113:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2601              	 .loc 2 1113 0
 2602 0082 00BF     	 nop
 2603              	.L93:
1114:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1115:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1116:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs &= ~mask; 
 2604              	 .loc 2 1116 0
 2605 0084 3B69     	 ldr r3,[r7,#16]
 2606 0086 DB43     	 mvns r3,r3
 2607 0088 FA68     	 ldr r2,[r7,#12]
 2608 008a 1340     	 ands r3,r3,r2
 2609 008c FB60     	 str r3,[r7,#12]
1117:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs |= (uint32_t)sr << pos;
 2610              	 .loc 2 1117 0
 2611 008e BA78     	 ldrb r2,[r7,#2]
 2612 0090 7B69     	 ldr r3,[r7,#20]
 2613 0092 02FA03F3 	 lsl r3,r2,r3
 2614 0096 FA68     	 ldr r2,[r7,#12]
 2615 0098 1343     	 orrs r3,r3,r2
 2616 009a FB60     	 str r3,[r7,#12]
1118:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->SRS = srs;
 2617              	 .loc 2 1118 0
 2618 009c 7B68     	 ldr r3,[r7,#4]
 2619 009e FA68     	 ldr r2,[r7,#12]
 2620 00a0 C3F8A820 	 str r2,[r3,#168]
1119:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2621              	 .loc 2 1119 0
 2622 00a4 1C37     	 adds r7,r7,#28
 2623              	.LCFI199:
 2624              	 .cfi_def_cfa_offset 4
 2625 00a6 BD46     	 mov sp,r7
 2626              	.LCFI200:
 2627              	 .cfi_def_cfa_register 13
 2628              	 
 2629 00a8 5DF8047B 	 ldr r7,[sp],#4
 2630              	.LCFI201:
 2631              	 .cfi_restore 7
 2632              	 .cfi_def_cfa_offset 0
 2633 00ac 7047     	 bx lr
 2634              	 .cfi_endproc
 2635              	.LFE241:
 2637 00ae 00BF     	 .section .text.XMC_CCU4_SLICE_SetPassiveLevel,"ax",%progbits
 2638              	 .align 2
 2639              	 .global XMC_CCU4_SLICE_SetPassiveLevel
 2640              	 .thumb
 2641              	 .thumb_func
 2643              	XMC_CCU4_SLICE_SetPassiveLevel:
 2644              	.LFB242:
1120:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1121:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Asserts passive level for the slice output */
1122:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPassiveLevel(XMC_CCU4_SLICE_t *const slice,
1123:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1124:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2645              	 .loc 2 1124 0
 2646              	 .cfi_startproc
 2647              	 
 2648              	 
 2649              	 
 2650 0000 80B4     	 push {r7}
 2651              	.LCFI202:
 2652              	 .cfi_def_cfa_offset 4
 2653              	 .cfi_offset 7,-4
 2654 0002 85B0     	 sub sp,sp,#20
 2655              	.LCFI203:
 2656              	 .cfi_def_cfa_offset 24
 2657 0004 00AF     	 add r7,sp,#0
 2658              	.LCFI204:
 2659              	 .cfi_def_cfa_register 7
 2660 0006 7860     	 str r0,[r7,#4]
 2661 0008 0B46     	 mov r3,r1
 2662 000a FB70     	 strb r3,[r7,#3]
1125:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t psl; 
1126:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1127:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1128:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Passive level", ((level == XMC_CCU4_SLICE_OUTP
1129:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                                       (level == XMC_CCU4_SLICE_OUTP
1130:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1131:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl = slice->PSL;
 2663              	 .loc 2 1131 0
 2664 000c 7B68     	 ldr r3,[r7,#4]
 2665 000e 9B69     	 ldr r3,[r3,#24]
 2666 0010 FB60     	 str r3,[r7,#12]
1132:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl &= ~((uint32_t) CCU4_CC4_PSL_PSL_Msk);
 2667              	 .loc 2 1132 0
 2668 0012 FB68     	 ldr r3,[r7,#12]
 2669 0014 23F00103 	 bic r3,r3,#1
 2670 0018 FB60     	 str r3,[r7,#12]
1133:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl |= (uint32_t) level;
 2671              	 .loc 2 1133 0
 2672 001a FB78     	 ldrb r3,[r7,#3]
 2673 001c FA68     	 ldr r2,[r7,#12]
 2674 001e 1343     	 orrs r3,r3,r2
 2675 0020 FB60     	 str r3,[r7,#12]
1134:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1135:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program CC4 slice output passive level */
1136:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSL = psl;
 2676              	 .loc 2 1136 0
 2677 0022 7B68     	 ldr r3,[r7,#4]
 2678 0024 FA68     	 ldr r2,[r7,#12]
 2679 0026 9A61     	 str r2,[r3,#24]
1137:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2680              	 .loc 2 1137 0
 2681 0028 1437     	 adds r7,r7,#20
 2682              	.LCFI205:
 2683              	 .cfi_def_cfa_offset 4
 2684 002a BD46     	 mov sp,r7
 2685              	.LCFI206:
 2686              	 .cfi_def_cfa_register 13
 2687              	 
 2688 002c 5DF8047B 	 ldr r7,[sp],#4
 2689              	.LCFI207:
 2690              	 .cfi_restore 7
 2691              	 .cfi_def_cfa_offset 0
 2692 0030 7047     	 bx lr
 2693              	 .cfi_endproc
 2694              	.LFE242:
 2696 0032 00BF     	 .text
 2697              	.Letext0:
 2698              	 .file 3 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2699              	 .file 4 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2700              	 .file 5 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/XMC4400.h"
 2701              	 .file 6 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc4_scu.h"
 2702              	 .file 7 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/core_cm4.h"
 2703              	 .file 8 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/system_XMC4400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu4.c
    {standard input}:20     .text.XMC_CCU4_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU4_StartPrescaler:00000000 XMC_CCU4_StartPrescaler
    {standard input}:66     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:70     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 XMC_CCU4_SLICE_SetDitherCompareValue
    {standard input}:111    .text.XMC_CCU4_lAssertReset:00000000 $t
    {standard input}:115    .text.XMC_CCU4_lAssertReset:00000000 XMC_CCU4_lAssertReset
    {standard input}:185    .text.XMC_CCU4_lAssertReset:0000004c $d
    {standard input}:194    .text.XMC_CCU4_lDeassertReset:00000000 $t
    {standard input}:198    .text.XMC_CCU4_lDeassertReset:00000000 XMC_CCU4_lDeassertReset
    {standard input}:267    .text.XMC_CCU4_lDeassertReset:0000004c $d
    {standard input}:276    .text.XMC_CCU4_lGateClock:00000000 $t
    {standard input}:280    .text.XMC_CCU4_lGateClock:00000000 XMC_CCU4_lGateClock
    {standard input}:349    .text.XMC_CCU4_lGateClock:0000004c $d
    {standard input}:358    .text.XMC_CCU4_lUngateClock:00000000 $t
    {standard input}:362    .text.XMC_CCU4_lUngateClock:00000000 XMC_CCU4_lUngateClock
    {standard input}:431    .text.XMC_CCU4_lUngateClock:0000004c $d
    {standard input}:440    .text.XMC_CCU4_EnableModule:00000000 $t
    {standard input}:445    .text.XMC_CCU4_EnableModule:00000000 XMC_CCU4_EnableModule
    {standard input}:485    .text.XMC_CCU4_DisableModule:00000000 $t
    {standard input}:490    .text.XMC_CCU4_DisableModule:00000000 XMC_CCU4_DisableModule
    {standard input}:527    .text.XMC_CCU4_Init:00000000 $t
    {standard input}:532    .text.XMC_CCU4_Init:00000000 XMC_CCU4_Init
    {standard input}:589    .text.XMC_CCU4_SetModuleClock:00000000 $t
    {standard input}:594    .text.XMC_CCU4_SetModuleClock:00000000 XMC_CCU4_SetModuleClock
    {standard input}:649    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:654    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 XMC_CCU4_SetMultiChannelShadowTransferMode
    {standard input}:711    .text.XMC_CCU4_SLICE_CompareInit:00000000 $t
    {standard input}:716    .text.XMC_CCU4_SLICE_CompareInit:00000000 XMC_CCU4_SLICE_CompareInit
    {standard input}:797    .text.XMC_CCU4_SLICE_CaptureInit:00000000 $t
    {standard input}:802    .text.XMC_CCU4_SLICE_CaptureInit:00000000 XMC_CCU4_SLICE_CaptureInit
    {standard input}:867    .text.XMC_CCU4_SLICE_StartConfig:00000000 $t
    {standard input}:872    .text.XMC_CCU4_SLICE_StartConfig:00000000 XMC_CCU4_SLICE_StartConfig
    {standard input}:951    .text.XMC_CCU4_SLICE_StopConfig:00000000 $t
    {standard input}:956    .text.XMC_CCU4_SLICE_StopConfig:00000000 XMC_CCU4_SLICE_StopConfig
    {standard input}:1031   .text.XMC_CCU4_SLICE_LoadConfig:00000000 $t
    {standard input}:1036   .text.XMC_CCU4_SLICE_LoadConfig:00000000 XMC_CCU4_SLICE_LoadConfig
    {standard input}:1091   .text.XMC_CCU4_SLICE_ModulationConfig:00000000 $t
    {standard input}:1096   .text.XMC_CCU4_SLICE_ModulationConfig:00000000 XMC_CCU4_SLICE_ModulationConfig
    {standard input}:1196   .text.XMC_CCU4_SLICE_CountConfig:00000000 $t
    {standard input}:1201   .text.XMC_CCU4_SLICE_CountConfig:00000000 XMC_CCU4_SLICE_CountConfig
    {standard input}:1256   .text.XMC_CCU4_SLICE_GateConfig:00000000 $t
    {standard input}:1261   .text.XMC_CCU4_SLICE_GateConfig:00000000 XMC_CCU4_SLICE_GateConfig
    {standard input}:1316   .text.XMC_CCU4_SLICE_Capture0Config:00000000 $t
    {standard input}:1321   .text.XMC_CCU4_SLICE_Capture0Config:00000000 XMC_CCU4_SLICE_Capture0Config
    {standard input}:1376   .text.XMC_CCU4_SLICE_Capture1Config:00000000 $t
    {standard input}:1381   .text.XMC_CCU4_SLICE_Capture1Config:00000000 XMC_CCU4_SLICE_Capture1Config
    {standard input}:1436   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 $t
    {standard input}:1441   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 XMC_CCU4_SLICE_DirectionConfig
    {standard input}:1496   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1501   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU4_SLICE_StatusBitOverrideConfig
    {standard input}:1552   .text.XMC_CCU4_SLICE_TrapConfig:00000000 $t
    {standard input}:1557   .text.XMC_CCU4_SLICE_TrapConfig:00000000 XMC_CCU4_SLICE_TrapConfig
    {standard input}:1650   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1655   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1788   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1793   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 XMC_CCU4_SLICE_ConfigureEvent
    {standard input}:1931   .text.XMC_CCU4_SLICE_SetInput:00000000 $t
    {standard input}:1936   .text.XMC_CCU4_SLICE_SetInput:00000000 XMC_CCU4_SLICE_SetInput
    {standard input}:2006   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:2011   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 XMC_CCU4_SLICE_SetTimerRepeatMode
    {standard input}:2067   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:2072   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 XMC_CCU4_SLICE_SetTimerCountingMode
    {standard input}:2128   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2133   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU4_SLICE_GetCaptureRegisterValue
    {standard input}:2178   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2183   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU4_SLICE_GetLastCapturedTimerValue
    {standard input}:2301   .text.XMC_CCU4_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2306   .text.XMC_CCU4_GetCapturedValueFromFifo:00000000 XMC_CCU4_GetCapturedValueFromFifo
    {standard input}:2364   .text.XMC_CCU4_SLICE_EnableDithering:00000000 $t
    {standard input}:2369   .text.XMC_CCU4_SLICE_EnableDithering:00000000 XMC_CCU4_SLICE_EnableDithering
    {standard input}:2444   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 $t
    {standard input}:2449   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 XMC_CCU4_SLICE_SetPrescaler
    {standard input}:2508   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2513   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 XMC_CCU4_SLICE_SetInterruptNode
    {standard input}:2547   .text.XMC_CCU4_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2557   .text.XMC_CCU4_SLICE_SetInterruptNode:0000004c $t
    {standard input}:2638   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2643   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 XMC_CCU4_SLICE_SetPassiveLevel
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_EnableClock
