   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_scu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_CLOCK_GetUsbClockSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_CLOCK_GetUsbClockSource:
  25              	.LFB136:
  26              	 .file 1 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc4_scu.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2016-06-15
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *      
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_DSRAM2_MEM)
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC1_MEM)
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC2_MEM)
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. 
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  
 662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
 992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
 997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
 998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  
1236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  
1479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1547:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1548:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1549:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1550:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1551:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1552:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1553:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1554:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1555:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1556:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1557:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1558:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1559:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1560:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1561:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1562:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1563:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1564:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1565:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1566:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1567:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1568:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1569:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1570:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1571:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1572:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1573:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1574:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1575:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1576:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1577:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1578:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1579:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1580:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1581:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1582:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1583:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1584:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1585:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1586:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1587:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1588:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1589:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1590:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1591:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1592:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1593:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1594:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1595:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1596:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1597:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1598:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1599:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1600:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1601:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1602:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1603:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1604:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1605:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1606:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1607:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1608:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1609:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1610:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1611:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1612:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1613:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1614:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1615:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1616:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1617:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1618:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1619:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1620:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1621:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1622:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1623:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1624:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1625:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1626:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1627:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1628:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1629:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1630:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1631:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1632:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1633:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1634:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1635:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1636:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1638:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1639:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1640:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1641:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1642:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1643:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1644:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1645:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1646:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1647:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1648:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1650:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1652:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1653:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1654:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1655:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1656:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1657:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1658:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1659:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1660:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1661:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1662:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1663:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1664:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1665:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1666:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1667:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1668:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1669:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1670:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1671:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1672:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1673:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
1674:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1675:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
1676:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1677:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1678:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1679:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1680:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1681:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1682:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1683:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1684:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1685:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1686:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1687:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1688:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1689:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1690:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1691:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1692:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1693:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1694:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1695:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1696:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1697:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1698:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1699:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1700:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1701:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1702:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1703:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1704:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1705:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1706:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1707:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1708:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
  27              	 .loc 1 1708 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1709:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
  39              	 .loc 1 1709 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 9B69     	 ldr r3,[r3,#24]
  42 0008 03F48033 	 and r3,r3,#65536
1710:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
  43              	 .loc 1 1710 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00460050 	 .word 1342195200
  58              	 .cfi_endproc
  59              	.LFE136:
  61              	 .section .text.XMC_SCU_CLOCK_GetWdtClockSource,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_SCU_CLOCK_GetWdtClockSource:
  67              	.LFB137:
1711:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1712:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1713:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1714:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1715:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1716:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1717:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1718:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1719:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1720:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1721:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1722:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1723:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1724:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1725:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1726:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1727:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1728:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1729:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1730:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1731:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1732:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1733:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1734:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1735:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1736:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1737:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1738:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1739:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1740:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1741:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1742:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1743:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1744:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1745:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1746:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1747:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1748:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1749:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
  68              	 .loc 1 1749 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72              	 
  73 0000 80B4     	 push {r7}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 4
  76              	 .cfi_offset 7,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
1750:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
  80              	 .loc 1 1750 0
  81 0004 044B     	 ldr r3,.L7
  82 0006 5B6A     	 ldr r3,[r3,#36]
  83 0008 03F44033 	 and r3,r3,#196608
1751:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
  84              	 .loc 1 1751 0
  85 000c 1846     	 mov r0,r3
  86 000e BD46     	 mov sp,r7
  87              	.LCFI6:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0010 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI7:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 0014 7047     	 bx lr
  95              	.L8:
  96 0016 00BF     	 .align 2
  97              	.L7:
  98 0018 00460050 	 .word 1342195200
  99              	 .cfi_endproc
 100              	.LFE137:
 102              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockSource,"ax",%progbits
 103              	 .align 2
 104              	 .thumb
 105              	 .thumb_func
 107              	XMC_SCU_CLOCK_GetExternalOutputClockSource:
 108              	.LFB140:
1752:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1753:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1754:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1755:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1756:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1757:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1758:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1759:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1760:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1761:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1762:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1763:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1764:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1765:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1766:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1767:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1768:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1769:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1770:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1771:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1772:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1773:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1774:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1775:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1776:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1777:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1778:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1779:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1780:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1781:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1782:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1783:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1784:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1785:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1786:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1787:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1788:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
1789:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1790:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
1791:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1792:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1793:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1794:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1795:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1796:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1797:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1798:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1799:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1800:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1801:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1802:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1803:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1804:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1805:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1806:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1807:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1808:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1809:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1810:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1811:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1812:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1813:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1814:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1815:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1816:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1817:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1818:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1819:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1820:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1821:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1822:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1823:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1824:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1825:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1826:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1827:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1828:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1829:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
1830:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1831:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
1832:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1833:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1834:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1835:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1836:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1837:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1838:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1839:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1840:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1841:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1842:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1843:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1844:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1845:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1846:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1847:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1848:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1849:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1850:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1851:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1852:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1853:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1854:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1855:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1856:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1857:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1858:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1859:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1860:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1861:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1862:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1863:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1864:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1865:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1866:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1867:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1868:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1869:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1870:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1871:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1872:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1873:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1874:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1875:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1876:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1877:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1878:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 109              	 .loc 1 1878 0
 110              	 .cfi_startproc
 111              	 
 112              	 
 113              	 
 114 0000 80B4     	 push {r7}
 115              	.LCFI8:
 116              	 .cfi_def_cfa_offset 4
 117              	 .cfi_offset 7,-4
 118 0002 00AF     	 add r7,sp,#0
 119              	.LCFI9:
 120              	 .cfi_def_cfa_register 7
1879:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
 121              	 .loc 1 1879 0
 122 0004 054B     	 ldr r3,.L11
 123 0006 9B6A     	 ldr r3,[r3,#40]
 124 0008 DBB2     	 uxtb r3,r3
 125 000a 03F00703 	 and r3,r3,#7
 126 000e DBB2     	 uxtb r3,r3
1880:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
 127              	 .loc 1 1880 0
 128 0010 1846     	 mov r0,r3
 129 0012 BD46     	 mov sp,r7
 130              	.LCFI10:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0014 5DF8047B 	 ldr r7,[sp],#4
 134              	.LCFI11:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 0018 7047     	 bx lr
 138              	.L12:
 139 001a 00BF     	 .align 2
 140              	.L11:
 141 001c 00460050 	 .word 1342195200
 142              	 .cfi_endproc
 143              	.LFE140:
 145              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 146              	 .align 2
 147              	 .thumb
 148              	 .thumb_func
 150              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 151              	.LFB149:
1881:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1882:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1883:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1884:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1885:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1886:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1887:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1888:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1889:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1890:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1891:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1892:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1893:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1894:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1895:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1896:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1897:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1898:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1899:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1900:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1901:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1902:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1903:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1904:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1905:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1906:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1907:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1908:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1909:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1910:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1911:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1912:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1913:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1914:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
1915:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1916:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
1917:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1918:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1919:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1920:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1921:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
1922:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1923:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1924:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1925:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1926:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1927:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1928:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1929:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
1930:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
1931:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1932:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
1933:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1934:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
1935:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
1936:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
1937:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
1938:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
1939:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1940:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1941:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
1942:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1943:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1944:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1945:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1946:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1947:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
1948:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
1949:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1950:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1951:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1952:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
1953:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
1954:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
1955:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
1956:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1957:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1958:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1959:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1960:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
1961:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
1962:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1963:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1964:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1965:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1966:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
1967:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
1968:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
1969:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1970:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1971:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1972:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
1973:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1974:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1975:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
1976:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
1977:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1978:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1979:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
1980:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
1981:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1982:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1983:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1984:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
1985:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
1986:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
1987:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
1988:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
1989:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1990:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1991:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
1992:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
1993:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
1994:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
1995:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1996:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1997:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1998:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1999:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2000:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2001:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2002:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2003:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2004:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2005:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2006:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2007:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2008:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2009:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2010:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2011:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2012:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2013:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2014:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2015:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2016:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2017:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2018:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2019:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2020:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2021:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2022:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2023:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2024:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2025:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2026:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2027:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2028:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2029:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2030:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2031:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2032:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2033:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2034:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2035:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2036:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2037:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2038:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2039:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2040:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2041:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2042:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2043:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2044:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2045:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2046:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2047:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2048:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2049:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2050:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2051:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2052:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2053:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2054:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2055:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2056:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2057:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2058:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2059:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2060:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2061:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2062:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2063:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2064:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2065:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2066:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2067:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2068:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2069:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2070:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2071:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2072:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2073:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2074:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2075:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2076:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2077:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2078:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2079:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2080:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2081:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2082:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2083:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2084:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2085:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2086:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2087:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2088:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2089:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2090:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2091:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2092:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2093:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2094:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2095:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2096:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2097:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2098:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2099:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
2261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
2263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** 
2473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** {
 152              	 .loc 1 2486 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI12:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 00AF     	 add r7,sp,#0
 162              	.LCFI13:
 163              	 .cfi_def_cfa_register 7
2487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 164              	 .loc 1 2487 0
 165 0004 064B     	 ldr r3,.L15
 166 0006 1A68     	 ldr r2,[r3]
 167 0008 064B     	 ldr r3,.L15+4
 168 000a 1B69     	 ldr r3,[r3,#16]
 169 000c 03F00103 	 and r3,r3,#1
 170 0010 02FA03F3 	 lsl r3,r2,r3
2488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc4_scu.h **** }
 171              	 .loc 1 2488 0
 172 0014 1846     	 mov r0,r3
 173 0016 BD46     	 mov sp,r7
 174              	.LCFI14:
 175              	 .cfi_def_cfa_register 13
 176              	 
 177 0018 5DF8047B 	 ldr r7,[sp],#4
 178              	.LCFI15:
 179              	 .cfi_restore 7
 180              	 .cfi_def_cfa_offset 0
 181 001c 7047     	 bx lr
 182              	.L16:
 183 001e 00BF     	 .align 2
 184              	.L15:
 185 0020 00000000 	 .word SystemCoreClock
 186 0024 00460050 	 .word 1342195200
 187              	 .cfi_endproc
 188              	.LFE149:
 190              	 .section .text.XMC_SCU_CLOCK_GetCpuClockFrequency,"ax",%progbits
 191              	 .align 2
 192              	 .thumb
 193              	 .thumb_func
 195              	XMC_SCU_CLOCK_GetCpuClockFrequency:
 196              	.LFB166:
 197              	 .file 2 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc/xmc_scu.h"
   1:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 232:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 234:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 235:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 236:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 237:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 242:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 243:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 244:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 255:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 257:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 259:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 260:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 261:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 262:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 267:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 268:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 269:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 280:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 287:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 290:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 292:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 293:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 294:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 297:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 298:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 299:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 307:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 309:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 310:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 311:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 312:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 315:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 316:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 317:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 323:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 325:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 326:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 327:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 330:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 331:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 332:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 339:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 341:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 342:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 344:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 354:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 356:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 357:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 358:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 361:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 362:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 363:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 372:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 374:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 375:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 376:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 378:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 388:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 391:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 393:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 395:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 396:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 398:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 403:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 406:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 408:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 411:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
 412:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 413:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 415:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 422:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 425:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 198              	 .loc 2 426 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI16:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 00AF     	 add r7,sp,#0
 208              	.LCFI17:
 209              	 .cfi_def_cfa_register 7
 427:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 210              	 .loc 2 427 0
 211 0004 034B     	 ldr r3,.L19
 212 0006 1B68     	 ldr r3,[r3]
 428:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 213              	 .loc 2 428 0
 214 0008 1846     	 mov r0,r3
 215 000a BD46     	 mov sp,r7
 216              	.LCFI18:
 217              	 .cfi_def_cfa_register 13
 218              	 
 219 000c 5DF8047B 	 ldr r7,[sp],#4
 220              	.LCFI19:
 221              	 .cfi_restore 7
 222              	 .cfi_def_cfa_offset 0
 223 0010 7047     	 bx lr
 224              	.L20:
 225 0012 00BF     	 .align 2
 226              	.L19:
 227 0014 00000000 	 .word SystemCoreClock
 228              	 .cfi_endproc
 229              	.LFE166:
 231              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
 232              	 .align 2
 233              	 .thumb
 234              	 .thumb_func
 236              	XMC_SCU_GetMirrorStatus:
 237              	.LFB167:
 429:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 430:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 431:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 433:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 439:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 441:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
 443:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 444:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 445:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 448:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 449:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 450:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 460:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * 
 466:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 467:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 472:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  
 474:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 475:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 476:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 479:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 480:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 481:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 491:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 496:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 497:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 500:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 502:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 503:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 504:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 507:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 510:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 515:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 518:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 521:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 524:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 526:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 527:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** 
 528:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** /**
 529:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  *
 534:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****  */
 543:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** {
 238              	 .loc 2 544 0
 239              	 .cfi_startproc
 240              	 
 241              	 
 242              	 
 243 0000 80B4     	 push {r7}
 244              	.LCFI20:
 245              	 .cfi_def_cfa_offset 4
 246              	 .cfi_offset 7,-4
 247 0002 00AF     	 add r7,sp,#0
 248              	.LCFI21:
 249              	 .cfi_def_cfa_register 7
 545:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
 250              	 .loc 2 545 0
 251 0004 034B     	 ldr r3,.L23
 252 0006 D3F8C430 	 ldr r3,[r3,#196]
 546:F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/XMCLib/inc\xmc_scu.h **** }
 253              	 .loc 2 546 0
 254 000a 1846     	 mov r0,r3
 255 000c BD46     	 mov sp,r7
 256              	.LCFI22:
 257              	 .cfi_def_cfa_register 13
 258              	 
 259 000e 5DF8047B 	 ldr r7,[sp],#4
 260              	.LCFI23:
 261              	 .cfi_restore 7
 262              	 .cfi_def_cfa_offset 0
 263 0012 7047     	 bx lr
 264              	.L24:
 265              	 .align 2
 266              	.L23:
 267 0014 00400050 	 .word 1342193664
 268              	 .cfi_endproc
 269              	.LFE167:
 271              	 .comm event_handler_list,128,4
 272              	 .section .text.XMC_SCU_lDelay,"ax",%progbits
 273              	 .align 2
 274              	 .thumb
 275              	 .thumb_func
 277              	XMC_SCU_lDelay:
 278              	.LFB168:
 279              	 .file 3 "../Libraries/XMCLib/src/xmc4_scu.c"
   1:../Libraries/XMCLib/src/xmc4_scu.c **** /**
   2:../Libraries/XMCLib/src/xmc4_scu.c ****  * @file xmc4_scu.c
   3:../Libraries/XMCLib/src/xmc4_scu.c ****  * @date 2016-06-15
   4:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   5:../Libraries/XMCLib/src/xmc4_scu.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_scu.c ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   9:../Libraries/XMCLib/src/xmc4_scu.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_scu.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_scu.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_scu.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_scu.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_scu.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_scu.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_scu.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_scu.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_scu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_scu.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_scu.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_scu.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_scu.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_scu.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_scu.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_scu.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_scu.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  36:../Libraries/XMCLib/src/xmc4_scu.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_scu.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  39:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_scu.c ****  *      
  42:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_ASSERT() hanging issues have fixed.  <br>
  44:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Line indentation aligned with 120 characters. <br>
  45:../Libraries/XMCLib/src/xmc4_scu.c ****  *     
  46:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_EnableEvent,XMC_SCU_INTERRUPT_DisableEvent,
  48:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_TriggerEvent,XMC_SCU_INTERUPT_GetEventStatus,
  49:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_ClearEventStatus are added
  50:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added Weak implementation for OSCHP_GetFrequency()
  51:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  52:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-11-30:
  53:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Documentation improved <br>
  54:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Following API functionalities are improved
  55:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_CLOCK_GatePeripheralClock, XMC_SCU_CLOCK_UngatePeripheralClock, XMC_SCU_CLOCK_IsPe
  56:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_RESET_AssertPeripheralReset, XMC_SCU_RESET_DeassertPeripheralReset, XMC_SCU_RESET_
  57:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  58:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-12-08:
  59:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_GetTemperature renamed to XMC_SCU_GetTemperatureMeasurement
  60:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  61:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-03-09:
  62:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Optimize write only registers
  63:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetPinMode
  64:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  65:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  66:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  67:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  68:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  69:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  70:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-04-06:
  71:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_ReadFromRetentionMemory functionality
  72:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  73:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-05-19:
  74:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Changed XMC_SCU_CLOCK_StartSystemPll to avoid using floating point calculation which might
  75:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  76:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  77:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  78:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  79:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  80:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  81:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  82:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  83:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-06-15:
  84:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  85:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  86:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  87:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  88:../Libraries/XMCLib/src/xmc4_scu.c ****  * @endcond 
  89:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  90:../Libraries/XMCLib/src/xmc4_scu.c ****  */
  91:../Libraries/XMCLib/src/xmc4_scu.c **** 
  92:../Libraries/XMCLib/src/xmc4_scu.c **** /**
  93:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  94:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief SCU low level driver API prototype definition for XMC4 family of microcontrollers. 
  95:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  96:../Libraries/XMCLib/src/xmc4_scu.c ****  * <b>Detailed description of file:</b> <br>
  97:../Libraries/XMCLib/src/xmc4_scu.c ****  * APIs provided in this file cover the following functional blocks of SCU: <br>
  98:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- GCU (APIs prefixed with XMC_SCU_GEN_) <br>
  99:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Temperature Monitoring, Bootmode selection, CCU Start, Comparator configuration etc  <br>
 100:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- CCU (APIs prefixed with XMC_SCU_CLOCK_) <br>
 101:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Clock sources init, Clock tree init, Clock gating, Sleep Management etc <br>
 102:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- RCU (APIs prefixed with XMC_SCU_RESET_) <br>
 103:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Reset Init, Cause, Manual Reset Assert/Deassert <br>
 104:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- INTERRUPT (APIs prefixed with XMC_SCU_INTERRUPT_) <br>
 105:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Manual Assert/Deassert, Acknowledge etc <br>
 106:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- PARITY (APIs prefixed with XMC_SCU_PARITY_) <br>
 107:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Acknowledge etc <br>
 108:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- HIBERNATION (APIs prefixed with XMC_SCU_HIB_) <br>
 109:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Hibernation entry/exit config, entry/wakeup sequences, LPAC configuration etc <br>
 110:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- TRAP (APIs prefixed with XMC_SCU_TRAP_) <br>
 111:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Enable/Disable, Acknowledge etc <br>
 112:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 113:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 114:../Libraries/XMCLib/src/xmc4_scu.c **** 
 115:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 116:../Libraries/XMCLib/src/xmc4_scu.c ****  * HEADER FILES
 117:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 118:../Libraries/XMCLib/src/xmc4_scu.c **** #include <xmc_scu.h>
 119:../Libraries/XMCLib/src/xmc4_scu.c **** 
 120:../Libraries/XMCLib/src/xmc4_scu.c **** #if UC_FAMILY == XMC4
 121:../Libraries/XMCLib/src/xmc4_scu.c **** 
 122:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 123:../Libraries/XMCLib/src/xmc4_scu.c ****  * MACROS
 124:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 125:../Libraries/XMCLib/src/xmc4_scu.c **** #define FOSCREF   (2500000UL)    /**< Oscillator reference frequency (fOSCREF) monitored by Oscilla
 126:../Libraries/XMCLib/src/xmc4_scu.c **** #define FREQ_1MHZ (1000000UL)    /**< Used during calculation. */
 127:../Libraries/XMCLib/src/xmc4_scu.c **** 
 128:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OFI_FREQUENCY
 129:../Libraries/XMCLib/src/xmc4_scu.c **** #define OFI_FREQUENCY (24000000UL)    /**< Fast internal backup clock source. */
 130:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 131:../Libraries/XMCLib/src/xmc4_scu.c **** 
 132:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSI_FREQUENCY
 133:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSI_FREQUENCY (32768UL)    /**< Internal slow clock source. */
 134:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 135:../Libraries/XMCLib/src/xmc4_scu.c **** 
 136:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSCHP_FREQUENCY
 137:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSCHP_FREQUENCY (12000000U)    /**< External crystal High Precision Oscillator. */
 138:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 139:../Libraries/XMCLib/src/xmc4_scu.c **** 
 140:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
 141:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLLV_Msk | \
 142:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLSP_Msk)  /**< Used to verify the OSC fr
 143:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                           usable or not.*/
 144:../Libraries/XMCLib/src/xmc4_scu.c **** 
 145:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_START_GROUP    (0UL)    /**< The ADC group whose channel input is compared 
 146:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 147:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 148:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 149:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_END_GROUP      (1UL)    /**< The ADC group whose channel input is compared 
 150:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 151:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC end 
 152:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 153:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_START_ADC_CHANNEL  (6UL)    /**< The ADC channel whose channel input is compare
 154:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 155:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 156:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 157:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_END_ADC_CHANNEL    (7UL)    /**< The ADC channel whose channel input is compare
 158:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 159:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC ends
 160:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 161:../Libraries/XMCLib/src/xmc4_scu.c **** 
 162:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_GRPNUM(GROUP_NUM)   (((GROUP_NUM) == XMC_SCU_ORC_ADC_START_GROUP) || \
 163:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((GROUP_NUM) == XMC_SCU_ORC_ADC_END_GROUP) ) /**< Used to v
 164:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 165:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 166:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end group num
 167:../Libraries/XMCLib/src/xmc4_scu.c ****                                         
 168:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_CHNUM(CH_NUM)       (((CH_NUM) == XMC_SCU_ORC_START_ADC_CHANNEL) || \
 169:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((CH_NUM) == XMC_SCU_ORC_END_ADC_CHANNEL) )  /**< Used to v
 170:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 171:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 172:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end channel n
 173:../Libraries/XMCLib/src/xmc4_scu.c **** 
 174:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_INTERRUPT_EVENT_MAX            (32U)      /**< Maximum supported SCU events. */
 175:../Libraries/XMCLib/src/xmc4_scu.c **** 
 176:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_HDCR_HIBIOSEL_Size (4U)
 177:../Libraries/XMCLib/src/xmc4_scu.c **** 
 178:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN (0x2U)
 179:../Libraries/XMCLib/src/xmc4_scu.c **** 
 180:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB13V (0.0058F)
 181:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB33V (0.0225F)
 182:../Libraries/XMCLib/src/xmc4_scu.c **** 
 183:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 184:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL DATA
 185:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 186:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler_list[XMC_SCU_INTERRUPT_EVENT_MAX]; /**< For registe
 187:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                         functions o
 188:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                         occurrence.
 189:../Libraries/XMCLib/src/xmc4_scu.c **** 
 190:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 191:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL ROUTINES
 192:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 193:../Libraries/XMCLib/src/xmc4_scu.c ****  #if defined(UC_ID)
 194:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a non-weak function, which retrieves high precision external oscillator frequency. */
 195:../Libraries/XMCLib/src/xmc4_scu.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 196:../Libraries/XMCLib/src/xmc4_scu.c **** {
 197:../Libraries/XMCLib/src/xmc4_scu.c ****   return (OSCHP_FREQUENCY);
 198:../Libraries/XMCLib/src/xmc4_scu.c **** }
 199:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 200:../Libraries/XMCLib/src/xmc4_scu.c **** 
 201:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 202:../Libraries/XMCLib/src/xmc4_scu.c **** static void XMC_SCU_lDelay(uint32_t cycles);
 203:../Libraries/XMCLib/src/xmc4_scu.c **** 
 204:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 205:../Libraries/XMCLib/src/xmc4_scu.c ****  * API IMPLEMENTATION
 206:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 207:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 208:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_lDelay(uint32_t delay)
 209:../Libraries/XMCLib/src/xmc4_scu.c **** {
 280              	 .loc 3 209 0
 281              	 .cfi_startproc
 282              	 
 283              	 
 284 0000 80B5     	 push {r7,lr}
 285              	.LCFI24:
 286              	 .cfi_def_cfa_offset 8
 287              	 .cfi_offset 7,-8
 288              	 .cfi_offset 14,-4
 289 0002 84B0     	 sub sp,sp,#16
 290              	.LCFI25:
 291              	 .cfi_def_cfa_offset 24
 292 0004 00AF     	 add r7,sp,#0
 293              	.LCFI26:
 294              	 .cfi_def_cfa_register 7
 295 0006 7860     	 str r0,[r7,#4]
 210:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t i;
 211:../Libraries/XMCLib/src/xmc4_scu.c **** 
 212:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 296              	 .loc 3 212 0
 297 0008 FFF7FEFF 	 bl SystemCoreClockUpdate
 213:../Libraries/XMCLib/src/xmc4_scu.c ****   delay =  delay * (uint32_t)(SystemCoreClock / FREQ_1MHZ);
 298              	 .loc 3 213 0
 299 000c 0B4B     	 ldr r3,.L28
 300 000e 1B68     	 ldr r3,[r3]
 301 0010 0B4A     	 ldr r2,.L28+4
 302 0012 A2FB0323 	 umull r2,r3,r2,r3
 303 0016 9A0C     	 lsrs r2,r3,#18
 304 0018 7B68     	 ldr r3,[r7,#4]
 305 001a 02FB03F3 	 mul r3,r2,r3
 306 001e 7B60     	 str r3,[r7,#4]
 214:../Libraries/XMCLib/src/xmc4_scu.c **** 
 215:../Libraries/XMCLib/src/xmc4_scu.c ****   for (i = 0U; i < delay; ++i)
 307              	 .loc 3 215 0
 308 0020 0023     	 movs r3,#0
 309 0022 FB60     	 str r3,[r7,#12]
 310 0024 03E0     	 b .L26
 311              	.L27:
 216:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 217:../Libraries/XMCLib/src/xmc4_scu.c ****     __NOP();
 312              	 .loc 3 217 0 discriminator 3
 313              	
 314 0026 00BF     	 nop
 315              	
 215:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 316              	 .loc 3 215 0 discriminator 3
 317              	 .thumb
 318 0028 FB68     	 ldr r3,[r7,#12]
 319 002a 0133     	 adds r3,r3,#1
 320 002c FB60     	 str r3,[r7,#12]
 321              	.L26:
 215:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 322              	 .loc 3 215 0 is_stmt 0 discriminator 1
 323 002e FA68     	 ldr r2,[r7,#12]
 324 0030 7B68     	 ldr r3,[r7,#4]
 325 0032 9A42     	 cmp r2,r3
 326 0034 F7D3     	 bcc .L27
 218:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 219:../Libraries/XMCLib/src/xmc4_scu.c **** }
 327              	 .loc 3 219 0 is_stmt 1
 328 0036 1037     	 adds r7,r7,#16
 329              	.LCFI27:
 330              	 .cfi_def_cfa_offset 8
 331 0038 BD46     	 mov sp,r7
 332              	.LCFI28:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 003a 80BD     	 pop {r7,pc}
 336              	.L29:
 337              	 .align 2
 338              	.L28:
 339 003c 00000000 	 .word SystemCoreClock
 340 0040 83DE1B43 	 .word 1125899907
 341              	 .cfi_endproc
 342              	.LFE168:
 344              	 .section .text.XMC_SCU_INTERRUPT_EnableEvent,"ax",%progbits
 345              	 .align 2
 346              	 .global XMC_SCU_INTERRUPT_EnableEvent
 347              	 .thumb
 348              	 .thumb_func
 350              	XMC_SCU_INTERRUPT_EnableEvent:
 351              	.LFB169:
 220:../Libraries/XMCLib/src/xmc4_scu.c **** 
 221:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable the SCU event */
 222:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 223:../Libraries/XMCLib/src/xmc4_scu.c **** {
 352              	 .loc 3 223 0
 353              	 .cfi_startproc
 354              	 
 355              	 
 356              	 
 357 0000 80B4     	 push {r7}
 358              	.LCFI29:
 359              	 .cfi_def_cfa_offset 4
 360              	 .cfi_offset 7,-4
 361 0002 83B0     	 sub sp,sp,#12
 362              	.LCFI30:
 363              	 .cfi_def_cfa_offset 16
 364 0004 00AF     	 add r7,sp,#0
 365              	.LCFI31:
 366              	 .cfi_def_cfa_register 7
 367 0006 7860     	 str r0,[r7,#4]
 224:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)event;
 368              	 .loc 3 224 0
 369 0008 0549     	 ldr r1,.L31
 370 000a 054B     	 ldr r3,.L31
 371 000c 9A68     	 ldr r2,[r3,#8]
 372 000e 7B68     	 ldr r3,[r7,#4]
 373 0010 1343     	 orrs r3,r3,r2
 374 0012 8B60     	 str r3,[r1,#8]
 225:../Libraries/XMCLib/src/xmc4_scu.c **** }
 375              	 .loc 3 225 0
 376 0014 0C37     	 adds r7,r7,#12
 377              	.LCFI32:
 378              	 .cfi_def_cfa_offset 4
 379 0016 BD46     	 mov sp,r7
 380              	.LCFI33:
 381              	 .cfi_def_cfa_register 13
 382              	 
 383 0018 5DF8047B 	 ldr r7,[sp],#4
 384              	.LCFI34:
 385              	 .cfi_restore 7
 386              	 .cfi_def_cfa_offset 0
 387 001c 7047     	 bx lr
 388              	.L32:
 389 001e 00BF     	 .align 2
 390              	.L31:
 391 0020 74400050 	 .word 1342193780
 392              	 .cfi_endproc
 393              	.LFE169:
 395              	 .section .text.XMC_SCU_INTERRUPT_DisableEvent,"ax",%progbits
 396              	 .align 2
 397              	 .global XMC_SCU_INTERRUPT_DisableEvent
 398              	 .thumb
 399              	 .thumb_func
 401              	XMC_SCU_INTERRUPT_DisableEvent:
 402              	.LFB170:
 226:../Libraries/XMCLib/src/xmc4_scu.c **** 
 227:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the SCU event */
 228:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 229:../Libraries/XMCLib/src/xmc4_scu.c **** {
 403              	 .loc 3 229 0
 404              	 .cfi_startproc
 405              	 
 406              	 
 407              	 
 408 0000 80B4     	 push {r7}
 409              	.LCFI35:
 410              	 .cfi_def_cfa_offset 4
 411              	 .cfi_offset 7,-4
 412 0002 83B0     	 sub sp,sp,#12
 413              	.LCFI36:
 414              	 .cfi_def_cfa_offset 16
 415 0004 00AF     	 add r7,sp,#0
 416              	.LCFI37:
 417              	 .cfi_def_cfa_register 7
 418 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK &= (uint32_t)~event;
 419              	 .loc 3 230 0
 420 0008 0549     	 ldr r1,.L34
 421 000a 054B     	 ldr r3,.L34
 422 000c 9A68     	 ldr r2,[r3,#8]
 423 000e 7B68     	 ldr r3,[r7,#4]
 424 0010 DB43     	 mvns r3,r3
 425 0012 1340     	 ands r3,r3,r2
 426 0014 8B60     	 str r3,[r1,#8]
 231:../Libraries/XMCLib/src/xmc4_scu.c **** }
 427              	 .loc 3 231 0
 428 0016 0C37     	 adds r7,r7,#12
 429              	.LCFI38:
 430              	 .cfi_def_cfa_offset 4
 431 0018 BD46     	 mov sp,r7
 432              	.LCFI39:
 433              	 .cfi_def_cfa_register 13
 434              	 
 435 001a 5DF8047B 	 ldr r7,[sp],#4
 436              	.LCFI40:
 437              	 .cfi_restore 7
 438              	 .cfi_def_cfa_offset 0
 439 001e 7047     	 bx lr
 440              	.L35:
 441              	 .align 2
 442              	.L34:
 443 0020 74400050 	 .word 1342193780
 444              	 .cfi_endproc
 445              	.LFE170:
 447              	 .section .text.XMC_SCU_INTERRUPT_TriggerEvent,"ax",%progbits
 448              	 .align 2
 449              	 .global XMC_SCU_INTERRUPT_TriggerEvent
 450              	 .thumb
 451              	 .thumb_func
 453              	XMC_SCU_INTERRUPT_TriggerEvent:
 454              	.LFB171:
 232:../Libraries/XMCLib/src/xmc4_scu.c **** 
 233:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to trigger the SCU event */
 234:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 235:../Libraries/XMCLib/src/xmc4_scu.c **** {
 455              	 .loc 3 235 0
 456              	 .cfi_startproc
 457              	 
 458              	 
 459              	 
 460 0000 80B4     	 push {r7}
 461              	.LCFI41:
 462              	 .cfi_def_cfa_offset 4
 463              	 .cfi_offset 7,-4
 464 0002 83B0     	 sub sp,sp,#12
 465              	.LCFI42:
 466              	 .cfi_def_cfa_offset 16
 467 0004 00AF     	 add r7,sp,#0
 468              	.LCFI43:
 469              	 .cfi_def_cfa_register 7
 470 0006 7860     	 str r0,[r7,#4]
 236:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRSET |= (uint32_t)event;
 471              	 .loc 3 236 0
 472 0008 0549     	 ldr r1,.L37
 473 000a 054B     	 ldr r3,.L37
 474 000c 1A69     	 ldr r2,[r3,#16]
 475 000e 7B68     	 ldr r3,[r7,#4]
 476 0010 1343     	 orrs r3,r3,r2
 477 0012 0B61     	 str r3,[r1,#16]
 237:../Libraries/XMCLib/src/xmc4_scu.c **** }
 478              	 .loc 3 237 0
 479 0014 0C37     	 adds r7,r7,#12
 480              	.LCFI44:
 481              	 .cfi_def_cfa_offset 4
 482 0016 BD46     	 mov sp,r7
 483              	.LCFI45:
 484              	 .cfi_def_cfa_register 13
 485              	 
 486 0018 5DF8047B 	 ldr r7,[sp],#4
 487              	.LCFI46:
 488              	 .cfi_restore 7
 489              	 .cfi_def_cfa_offset 0
 490 001c 7047     	 bx lr
 491              	.L38:
 492 001e 00BF     	 .align 2
 493              	.L37:
 494 0020 74400050 	 .word 1342193780
 495              	 .cfi_endproc
 496              	.LFE171:
 498              	 .section .text.XMC_SCU_INTERUPT_GetEventStatus,"ax",%progbits
 499              	 .align 2
 500              	 .global XMC_SCU_INTERUPT_GetEventStatus
 501              	 .thumb
 502              	 .thumb_func
 504              	XMC_SCU_INTERUPT_GetEventStatus:
 505              	.LFB172:
 238:../Libraries/XMCLib/src/xmc4_scu.c **** 
 239:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the SCU event status */
 240:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void)
 241:../Libraries/XMCLib/src/xmc4_scu.c **** {
 506              	 .loc 3 241 0
 507              	 .cfi_startproc
 508              	 
 509              	 
 510              	 
 511 0000 80B4     	 push {r7}
 512              	.LCFI47:
 513              	 .cfi_def_cfa_offset 4
 514              	 .cfi_offset 7,-4
 515 0002 00AF     	 add r7,sp,#0
 516              	.LCFI48:
 517              	 .cfi_def_cfa_register 7
 242:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_INTERRUPT->SRRAW);
 518              	 .loc 3 242 0
 519 0004 034B     	 ldr r3,.L41
 520 0006 5B68     	 ldr r3,[r3,#4]
 243:../Libraries/XMCLib/src/xmc4_scu.c **** }
 521              	 .loc 3 243 0
 522 0008 1846     	 mov r0,r3
 523 000a BD46     	 mov sp,r7
 524              	.LCFI49:
 525              	 .cfi_def_cfa_register 13
 526              	 
 527 000c 5DF8047B 	 ldr r7,[sp],#4
 528              	.LCFI50:
 529              	 .cfi_restore 7
 530              	 .cfi_def_cfa_offset 0
 531 0010 7047     	 bx lr
 532              	.L42:
 533 0012 00BF     	 .align 2
 534              	.L41:
 535 0014 74400050 	 .word 1342193780
 536              	 .cfi_endproc
 537              	.LFE172:
 539              	 .section .text.XMC_SCU_INTERRUPT_ClearEventStatus,"ax",%progbits
 540              	 .align 2
 541              	 .global XMC_SCU_INTERRUPT_ClearEventStatus
 542              	 .thumb
 543              	 .thumb_func
 545              	XMC_SCU_INTERRUPT_ClearEventStatus:
 546              	.LFB173:
 244:../Libraries/XMCLib/src/xmc4_scu.c **** 
 245:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear the SCU event status */
 246:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event)
 247:../Libraries/XMCLib/src/xmc4_scu.c **** {
 547              	 .loc 3 247 0
 548              	 .cfi_startproc
 549              	 
 550              	 
 551              	 
 552 0000 80B4     	 push {r7}
 553              	.LCFI51:
 554              	 .cfi_def_cfa_offset 4
 555              	 .cfi_offset 7,-4
 556 0002 83B0     	 sub sp,sp,#12
 557              	.LCFI52:
 558              	 .cfi_def_cfa_offset 16
 559 0004 00AF     	 add r7,sp,#0
 560              	.LCFI53:
 561              	 .cfi_def_cfa_register 7
 562 0006 7860     	 str r0,[r7,#4]
 248:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRCLR = (uint32_t)event;
 563              	 .loc 3 248 0
 564 0008 034A     	 ldr r2,.L44
 565 000a 7B68     	 ldr r3,[r7,#4]
 566 000c D360     	 str r3,[r2,#12]
 249:../Libraries/XMCLib/src/xmc4_scu.c **** }
 567              	 .loc 3 249 0
 568 000e 0C37     	 adds r7,r7,#12
 569              	.LCFI54:
 570              	 .cfi_def_cfa_offset 4
 571 0010 BD46     	 mov sp,r7
 572              	.LCFI55:
 573              	 .cfi_def_cfa_register 13
 574              	 
 575 0012 5DF8047B 	 ldr r7,[sp],#4
 576              	.LCFI56:
 577              	 .cfi_restore 7
 578              	 .cfi_def_cfa_offset 0
 579 0016 7047     	 bx lr
 580              	.L45:
 581              	 .align 2
 582              	.L44:
 583 0018 74400050 	 .word 1342193780
 584              	 .cfi_endproc
 585              	.LFE173:
 587              	 .section .text.XMC_SCU_GetBootMode,"ax",%progbits
 588              	 .align 2
 589              	 .global XMC_SCU_GetBootMode
 590              	 .thumb
 591              	 .thumb_func
 593              	XMC_SCU_GetBootMode:
 594              	.LFB174:
 250:../Libraries/XMCLib/src/xmc4_scu.c **** 
 251:../Libraries/XMCLib/src/xmc4_scu.c **** 
 252:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the currently deployed device bootmode */
 253:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetBootMode(void)
 254:../Libraries/XMCLib/src/xmc4_scu.c **** {
 595              	 .loc 3 254 0
 596              	 .cfi_startproc
 597              	 
 598              	 
 599              	 
 600 0000 80B4     	 push {r7}
 601              	.LCFI57:
 602              	 .cfi_def_cfa_offset 4
 603              	 .cfi_offset 7,-4
 604 0002 00AF     	 add r7,sp,#0
 605              	.LCFI58:
 606              	 .cfi_def_cfa_register 7
 255:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(SCU_GENERAL->STCON & SCU_GENERAL_STCON_SWCON_Msk);
 607              	 .loc 3 255 0
 608 0004 044B     	 ldr r3,.L48
 609 0006 1B69     	 ldr r3,[r3,#16]
 610 0008 03F47063 	 and r3,r3,#3840
 256:../Libraries/XMCLib/src/xmc4_scu.c **** }
 611              	 .loc 3 256 0
 612 000c 1846     	 mov r0,r3
 613 000e BD46     	 mov sp,r7
 614              	.LCFI59:
 615              	 .cfi_def_cfa_register 13
 616              	 
 617 0010 5DF8047B 	 ldr r7,[sp],#4
 618              	.LCFI60:
 619              	 .cfi_restore 7
 620              	 .cfi_def_cfa_offset 0
 621 0014 7047     	 bx lr
 622              	.L49:
 623 0016 00BF     	 .align 2
 624              	.L48:
 625 0018 00400050 	 .word 1342193664
 626              	 .cfi_endproc
 627              	.LFE174:
 629              	 .section .text.XMC_SCU_SetBootMode,"ax",%progbits
 630              	 .align 2
 631              	 .global XMC_SCU_SetBootMode
 632              	 .thumb
 633              	 .thumb_func
 635              	XMC_SCU_SetBootMode:
 636              	.LFB175:
 257:../Libraries/XMCLib/src/xmc4_scu.c **** 
 258:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program a new device bootmode */
 259:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t bootmode)
 260:../Libraries/XMCLib/src/xmc4_scu.c **** {
 637              	 .loc 3 260 0
 638              	 .cfi_startproc
 639              	 
 640              	 
 641              	 
 642 0000 80B4     	 push {r7}
 643              	.LCFI61:
 644              	 .cfi_def_cfa_offset 4
 645              	 .cfi_offset 7,-4
 646 0002 83B0     	 sub sp,sp,#12
 647              	.LCFI62:
 648              	 .cfi_def_cfa_offset 16
 649 0004 00AF     	 add r7,sp,#0
 650              	.LCFI63:
 651              	 .cfi_def_cfa_register 7
 652 0006 0346     	 mov r3,r0
 653 0008 FB80     	 strh r3,[r7,#6]
 261:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->STCON = (uint32_t)bootmode;
 654              	 .loc 3 261 0
 655 000a 044A     	 ldr r2,.L51
 656 000c FB88     	 ldrh r3,[r7,#6]
 657 000e 1361     	 str r3,[r2,#16]
 262:../Libraries/XMCLib/src/xmc4_scu.c **** }
 658              	 .loc 3 262 0
 659 0010 0C37     	 adds r7,r7,#12
 660              	.LCFI64:
 661              	 .cfi_def_cfa_offset 4
 662 0012 BD46     	 mov sp,r7
 663              	.LCFI65:
 664              	 .cfi_def_cfa_register 13
 665              	 
 666 0014 5DF8047B 	 ldr r7,[sp],#4
 667              	.LCFI66:
 668              	 .cfi_restore 7
 669              	 .cfi_def_cfa_offset 0
 670 0018 7047     	 bx lr
 671              	.L52:
 672 001a 00BF     	 .align 2
 673              	.L51:
 674 001c 00400050 	 .word 1342193664
 675              	 .cfi_endproc
 676              	.LFE175:
 678              	 .section .text.XMC_SCU_ReadGPR,"ax",%progbits
 679              	 .align 2
 680              	 .global XMC_SCU_ReadGPR
 681              	 .thumb
 682              	 .thumb_func
 684              	XMC_SCU_ReadGPR:
 685              	.LFB176:
 263:../Libraries/XMCLib/src/xmc4_scu.c **** 
 264:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from General purpose register */
 265:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadGPR(const uint32_t index)
 266:../Libraries/XMCLib/src/xmc4_scu.c **** {
 686              	 .loc 3 266 0
 687              	 .cfi_startproc
 688              	 
 689              	 
 690              	 
 691 0000 80B4     	 push {r7}
 692              	.LCFI67:
 693              	 .cfi_def_cfa_offset 4
 694              	 .cfi_offset 7,-4
 695 0002 83B0     	 sub sp,sp,#12
 696              	.LCFI68:
 697              	 .cfi_def_cfa_offset 16
 698 0004 00AF     	 add r7,sp,#0
 699              	.LCFI69:
 700              	 .cfi_def_cfa_register 7
 701 0006 7860     	 str r0,[r7,#4]
 267:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->GPR[index]);
 702              	 .loc 3 267 0
 703 0008 054A     	 ldr r2,.L55
 704 000a 7B68     	 ldr r3,[r7,#4]
 705 000c 0A33     	 adds r3,r3,#10
 706 000e 9B00     	 lsls r3,r3,#2
 707 0010 1344     	 add r3,r3,r2
 708 0012 5B68     	 ldr r3,[r3,#4]
 268:../Libraries/XMCLib/src/xmc4_scu.c **** }
 709              	 .loc 3 268 0
 710 0014 1846     	 mov r0,r3
 711 0016 0C37     	 adds r7,r7,#12
 712              	.LCFI70:
 713              	 .cfi_def_cfa_offset 4
 714 0018 BD46     	 mov sp,r7
 715              	.LCFI71:
 716              	 .cfi_def_cfa_register 13
 717              	 
 718 001a 5DF8047B 	 ldr r7,[sp],#4
 719              	.LCFI72:
 720              	 .cfi_restore 7
 721              	 .cfi_def_cfa_offset 0
 722 001e 7047     	 bx lr
 723              	.L56:
 724              	 .align 2
 725              	.L55:
 726 0020 00400050 	 .word 1342193664
 727              	 .cfi_endproc
 728              	.LFE176:
 730              	 .section .text.XMC_SCU_WriteGPR,"ax",%progbits
 731              	 .align 2
 732              	 .global XMC_SCU_WriteGPR
 733              	 .thumb
 734              	 .thumb_func
 736              	XMC_SCU_WriteGPR:
 737              	.LFB177:
 269:../Libraries/XMCLib/src/xmc4_scu.c **** 
 270:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write to GPR */
 271:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data)
 272:../Libraries/XMCLib/src/xmc4_scu.c **** {
 738              	 .loc 3 272 0
 739              	 .cfi_startproc
 740              	 
 741              	 
 742              	 
 743 0000 80B4     	 push {r7}
 744              	.LCFI73:
 745              	 .cfi_def_cfa_offset 4
 746              	 .cfi_offset 7,-4
 747 0002 83B0     	 sub sp,sp,#12
 748              	.LCFI74:
 749              	 .cfi_def_cfa_offset 16
 750 0004 00AF     	 add r7,sp,#0
 751              	.LCFI75:
 752              	 .cfi_def_cfa_register 7
 753 0006 7860     	 str r0,[r7,#4]
 754 0008 3960     	 str r1,[r7]
 273:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GPR[index] = data;
 755              	 .loc 3 273 0
 756 000a 064A     	 ldr r2,.L58
 757 000c 7B68     	 ldr r3,[r7,#4]
 758 000e 0A33     	 adds r3,r3,#10
 759 0010 9B00     	 lsls r3,r3,#2
 760 0012 1344     	 add r3,r3,r2
 761 0014 3A68     	 ldr r2,[r7]
 762 0016 5A60     	 str r2,[r3,#4]
 274:../Libraries/XMCLib/src/xmc4_scu.c **** }
 763              	 .loc 3 274 0
 764 0018 0C37     	 adds r7,r7,#12
 765              	.LCFI76:
 766              	 .cfi_def_cfa_offset 4
 767 001a BD46     	 mov sp,r7
 768              	.LCFI77:
 769              	 .cfi_def_cfa_register 13
 770              	 
 771 001c 5DF8047B 	 ldr r7,[sp],#4
 772              	.LCFI78:
 773              	 .cfi_restore 7
 774              	 .cfi_def_cfa_offset 0
 775 0020 7047     	 bx lr
 776              	.L59:
 777 0022 00BF     	 .align 2
 778              	.L58:
 779 0024 00400050 	 .word 1342193664
 780              	 .cfi_endproc
 781              	.LFE177:
 783              	 .section .text.XMC_SCU_EnableOutOfRangeComparator,"ax",%progbits
 784              	 .align 2
 785              	 .global XMC_SCU_EnableOutOfRangeComparator
 786              	 .thumb
 787              	 .thumb_func
 789              	XMC_SCU_EnableOutOfRangeComparator:
 790              	.LFB178:
 275:../Libraries/XMCLib/src/xmc4_scu.c **** 
 276:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 277:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 278:../Libraries/XMCLib/src/xmc4_scu.c **** {
 791              	 .loc 3 278 0
 792              	 .cfi_startproc
 793              	 
 794              	 
 795              	 
 796 0000 80B4     	 push {r7}
 797              	.LCFI79:
 798              	 .cfi_def_cfa_offset 4
 799              	 .cfi_offset 7,-4
 800 0002 83B0     	 sub sp,sp,#12
 801              	.LCFI80:
 802              	 .cfi_def_cfa_offset 16
 803 0004 00AF     	 add r7,sp,#0
 804              	.LCFI81:
 805              	 .cfi_def_cfa_register 7
 806 0006 7860     	 str r0,[r7,#4]
 807 0008 3960     	 str r1,[r7]
 279:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 280:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel))
 281:../Libraries/XMCLib/src/xmc4_scu.c ****    
 282:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] |= (uint32_t)(1UL << channel);
 808              	 .loc 3 282 0
 809 000a 0A49     	 ldr r1,.L61
 810 000c 094A     	 ldr r2,.L61
 811 000e 7B68     	 ldr r3,[r7,#4]
 812 0010 2833     	 adds r3,r3,#40
 813 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 814 0016 3B68     	 ldr r3,[r7]
 815 0018 0120     	 movs r0,#1
 816 001a 00FA03F3 	 lsl r3,r0,r3
 817 001e 1A43     	 orrs r2,r2,r3
 818 0020 7B68     	 ldr r3,[r7,#4]
 819 0022 2833     	 adds r3,r3,#40
 820 0024 41F82320 	 str r2,[r1,r3,lsl#2]
 283:../Libraries/XMCLib/src/xmc4_scu.c **** }
 821              	 .loc 3 283 0
 822 0028 0C37     	 adds r7,r7,#12
 823              	.LCFI82:
 824              	 .cfi_def_cfa_offset 4
 825 002a BD46     	 mov sp,r7
 826              	.LCFI83:
 827              	 .cfi_def_cfa_register 13
 828              	 
 829 002c 5DF8047B 	 ldr r7,[sp],#4
 830              	.LCFI84:
 831              	 .cfi_restore 7
 832              	 .cfi_def_cfa_offset 0
 833 0030 7047     	 bx lr
 834              	.L62:
 835 0032 00BF     	 .align 2
 836              	.L61:
 837 0034 00400050 	 .word 1342193664
 838              	 .cfi_endproc
 839              	.LFE178:
 841              	 .section .text.XMC_SCU_DisableOutOfRangeComparator,"ax",%progbits
 842              	 .align 2
 843              	 .global XMC_SCU_DisableOutOfRangeComparator
 844              	 .thumb
 845              	 .thumb_func
 847              	XMC_SCU_DisableOutOfRangeComparator:
 848              	.LFB179:
 284:../Libraries/XMCLib/src/xmc4_scu.c **** 
 285:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 286:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 287:../Libraries/XMCLib/src/xmc4_scu.c **** {
 849              	 .loc 3 287 0
 850              	 .cfi_startproc
 851              	 
 852              	 
 853              	 
 854 0000 80B4     	 push {r7}
 855              	.LCFI85:
 856              	 .cfi_def_cfa_offset 4
 857              	 .cfi_offset 7,-4
 858 0002 83B0     	 sub sp,sp,#12
 859              	.LCFI86:
 860              	 .cfi_def_cfa_offset 16
 861 0004 00AF     	 add r7,sp,#0
 862              	.LCFI87:
 863              	 .cfi_def_cfa_register 7
 864 0006 7860     	 str r0,[r7,#4]
 865 0008 3960     	 str r1,[r7]
 288:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 289:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel
 290:../Libraries/XMCLib/src/xmc4_scu.c ****    
 291:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] &= (uint32_t)~(1UL << channel);
 866              	 .loc 3 291 0
 867 000a 0A49     	 ldr r1,.L64
 868 000c 094A     	 ldr r2,.L64
 869 000e 7B68     	 ldr r3,[r7,#4]
 870 0010 2833     	 adds r3,r3,#40
 871 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 872 0016 3B68     	 ldr r3,[r7]
 873 0018 0120     	 movs r0,#1
 874 001a 00FA03F3 	 lsl r3,r0,r3
 875 001e DB43     	 mvns r3,r3
 876 0020 1A40     	 ands r2,r2,r3
 877 0022 7B68     	 ldr r3,[r7,#4]
 878 0024 2833     	 adds r3,r3,#40
 879 0026 41F82320 	 str r2,[r1,r3,lsl#2]
 292:../Libraries/XMCLib/src/xmc4_scu.c **** }
 880              	 .loc 3 292 0
 881 002a 0C37     	 adds r7,r7,#12
 882              	.LCFI88:
 883              	 .cfi_def_cfa_offset 4
 884 002c BD46     	 mov sp,r7
 885              	.LCFI89:
 886              	 .cfi_def_cfa_register 13
 887              	 
 888 002e 5DF8047B 	 ldr r7,[sp],#4
 889              	.LCFI90:
 890              	 .cfi_restore 7
 891              	 .cfi_def_cfa_offset 0
 892 0032 7047     	 bx lr
 893              	.L65:
 894              	 .align 2
 895              	.L64:
 896 0034 00400050 	 .word 1342193664
 897              	 .cfi_endproc
 898              	.LFE179:
 900              	 .section .text.XMC_SCU_CalibrateTemperatureSensor,"ax",%progbits
 901              	 .align 2
 902              	 .global XMC_SCU_CalibrateTemperatureSensor
 903              	 .thumb
 904              	 .thumb_func
 906              	XMC_SCU_CalibrateTemperatureSensor:
 907              	.LFB180:
 293:../Libraries/XMCLib/src/xmc4_scu.c **** 
 294:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to calibrate temperature sensor */
 295:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain)
 296:../Libraries/XMCLib/src/xmc4_scu.c **** {
 908              	 .loc 3 296 0
 909              	 .cfi_startproc
 910              	 
 911              	 
 912              	 
 913 0000 80B4     	 push {r7}
 914              	.LCFI91:
 915              	 .cfi_def_cfa_offset 4
 916              	 .cfi_offset 7,-4
 917 0002 83B0     	 sub sp,sp,#12
 918              	.LCFI92:
 919              	 .cfi_def_cfa_offset 16
 920 0004 00AF     	 add r7,sp,#0
 921              	.LCFI93:
 922              	 .cfi_def_cfa_register 7
 923 0006 7860     	 str r0,[r7,#4]
 924 0008 3960     	 str r1,[r7]
 297:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 925              	 .loc 3 297 0
 926 000a 0749     	 ldr r1,.L67
 927 000c 7B68     	 ldr r3,[r7,#4]
 928 000e 1A01     	 lsls r2,r3,#4
 298:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(gain << SCU_GENERAL_DTSCON_GAIN_Pos) |
 929              	 .loc 3 298 0
 930 0010 3B68     	 ldr r3,[r7]
 931 0012 DB02     	 lsls r3,r3,#11
 297:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 932              	 .loc 3 297 0
 933 0014 1343     	 orrs r3,r3,r2
 299:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x4UL << SCU_GENERAL_DTSCON_REFTRIM_Pos) |
 934              	 .loc 3 299 0
 935 0016 43F40803 	 orr r3,r3,#8912896
 297:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 936              	 .loc 3 297 0
 937 001a C1F88C30 	 str r3,[r1,#140]
 300:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x8UL << SCU_GENERAL_DTSCON_BGTRIM_Pos));
 301:../Libraries/XMCLib/src/xmc4_scu.c **** }
 938              	 .loc 3 301 0
 939 001e 0C37     	 adds r7,r7,#12
 940              	.LCFI94:
 941              	 .cfi_def_cfa_offset 4
 942 0020 BD46     	 mov sp,r7
 943              	.LCFI95:
 944              	 .cfi_def_cfa_register 13
 945              	 
 946 0022 5DF8047B 	 ldr r7,[sp],#4
 947              	.LCFI96:
 948              	 .cfi_restore 7
 949              	 .cfi_def_cfa_offset 0
 950 0026 7047     	 bx lr
 951              	.L68:
 952              	 .align 2
 953              	.L67:
 954 0028 00400050 	 .word 1342193664
 955              	 .cfi_endproc
 956              	.LFE180:
 958              	 .section .text.XMC_SCU_EnableTemperatureSensor,"ax",%progbits
 959              	 .align 2
 960              	 .global XMC_SCU_EnableTemperatureSensor
 961              	 .thumb
 962              	 .thumb_func
 964              	XMC_SCU_EnableTemperatureSensor:
 965              	.LFB181:
 302:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable die temperature measurement by powering the DTS module. */
 303:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableTemperatureSensor(void)
 304:../Libraries/XMCLib/src/xmc4_scu.c **** {
 966              	 .loc 3 304 0
 967              	 .cfi_startproc
 968              	 
 969              	 
 970              	 
 971 0000 80B4     	 push {r7}
 972              	.LCFI97:
 973              	 .cfi_def_cfa_offset 4
 974              	 .cfi_offset 7,-4
 975 0002 00AF     	 add r7,sp,#0
 976              	.LCFI98:
 977              	 .cfi_def_cfa_register 7
 305:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~(SCU_GENERAL_DTSCON_PWD_Msk);
 978              	 .loc 3 305 0
 979 0004 054A     	 ldr r2,.L70
 980 0006 054B     	 ldr r3,.L70
 981 0008 D3F88C30 	 ldr r3,[r3,#140]
 982 000c 23F00103 	 bic r3,r3,#1
 983 0010 C2F88C30 	 str r3,[r2,#140]
 306:../Libraries/XMCLib/src/xmc4_scu.c **** }
 984              	 .loc 3 306 0
 985 0014 BD46     	 mov sp,r7
 986              	.LCFI99:
 987              	 .cfi_def_cfa_register 13
 988              	 
 989 0016 5DF8047B 	 ldr r7,[sp],#4
 990              	.LCFI100:
 991              	 .cfi_restore 7
 992              	 .cfi_def_cfa_offset 0
 993 001a 7047     	 bx lr
 994              	.L71:
 995              	 .align 2
 996              	.L70:
 997 001c 00400050 	 .word 1342193664
 998              	 .cfi_endproc
 999              	.LFE181:
 1001              	 .section .text.XMC_SCU_DisableTemperatureSensor,"ax",%progbits
 1002              	 .align 2
 1003              	 .global XMC_SCU_DisableTemperatureSensor
 1004              	 .thumb
 1005              	 .thumb_func
 1007              	XMC_SCU_DisableTemperatureSensor:
 1008              	.LFB182:
 307:../Libraries/XMCLib/src/xmc4_scu.c **** 
 308:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable die temperature measurement by powering the DTS module off. */
 309:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableTemperatureSensor(void)
 310:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1009              	 .loc 3 310 0
 1010              	 .cfi_startproc
 1011              	 
 1012              	 
 1013              	 
 1014 0000 80B4     	 push {r7}
 1015              	.LCFI101:
 1016              	 .cfi_def_cfa_offset 4
 1017              	 .cfi_offset 7,-4
 1018 0002 00AF     	 add r7,sp,#0
 1019              	.LCFI102:
 1020              	 .cfi_def_cfa_register 7
 311:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_PWD_Msk;
 1021              	 .loc 3 311 0
 1022 0004 054A     	 ldr r2,.L73
 1023 0006 054B     	 ldr r3,.L73
 1024 0008 D3F88C30 	 ldr r3,[r3,#140]
 1025 000c 43F00103 	 orr r3,r3,#1
 1026 0010 C2F88C30 	 str r3,[r2,#140]
 312:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1027              	 .loc 3 312 0
 1028 0014 BD46     	 mov sp,r7
 1029              	.LCFI103:
 1030              	 .cfi_def_cfa_register 13
 1031              	 
 1032 0016 5DF8047B 	 ldr r7,[sp],#4
 1033              	.LCFI104:
 1034              	 .cfi_restore 7
 1035              	 .cfi_def_cfa_offset 0
 1036 001a 7047     	 bx lr
 1037              	.L74:
 1038              	 .align 2
 1039              	.L73:
 1040 001c 00400050 	 .word 1342193664
 1041              	 .cfi_endproc
 1042              	.LFE182:
 1044              	 .section .text.XMC_SCU_IsTemperatureSensorEnabled,"ax",%progbits
 1045              	 .align 2
 1046              	 .global XMC_SCU_IsTemperatureSensorEnabled
 1047              	 .thumb
 1048              	 .thumb_func
 1050              	XMC_SCU_IsTemperatureSensorEnabled:
 1051              	.LFB183:
 313:../Libraries/XMCLib/src/xmc4_scu.c **** 
 314:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to provide the die temperature sensor power status. */
 315:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorEnabled(void)
 316:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1052              	 .loc 3 316 0
 1053              	 .cfi_startproc
 1054              	 
 1055              	 
 1056              	 
 1057 0000 80B4     	 push {r7}
 1058              	.LCFI105:
 1059              	 .cfi_def_cfa_offset 4
 1060              	 .cfi_offset 7,-4
 1061 0002 00AF     	 add r7,sp,#0
 1062              	.LCFI106:
 1063              	 .cfi_def_cfa_register 7
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSCON & SCU_GENERAL_DTSCON_PWD_Msk) == 0U);
 1064              	 .loc 3 317 0
 1065 0004 074B     	 ldr r3,.L77
 1066 0006 D3F88C30 	 ldr r3,[r3,#140]
 1067 000a 03F00103 	 and r3,r3,#1
 1068 000e 002B     	 cmp r3,#0
 1069 0010 0CBF     	 ite eq
 1070 0012 0123     	 moveq r3,#1
 1071 0014 0023     	 movne r3,#0
 1072 0016 DBB2     	 uxtb r3,r3
 318:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1073              	 .loc 3 318 0
 1074 0018 1846     	 mov r0,r3
 1075 001a BD46     	 mov sp,r7
 1076              	.LCFI107:
 1077              	 .cfi_def_cfa_register 13
 1078              	 
 1079 001c 5DF8047B 	 ldr r7,[sp],#4
 1080              	.LCFI108:
 1081              	 .cfi_restore 7
 1082              	 .cfi_def_cfa_offset 0
 1083 0020 7047     	 bx lr
 1084              	.L78:
 1085 0022 00BF     	 .align 2
 1086              	.L77:
 1087 0024 00400050 	 .word 1342193664
 1088              	 .cfi_endproc
 1089              	.LFE183:
 1091              	 .section .text.XMC_SCU_IsTemperatureSensorReady,"ax",%progbits
 1092              	 .align 2
 1093              	 .global XMC_SCU_IsTemperatureSensorReady
 1094              	 .thumb
 1095              	 .thumb_func
 1097              	XMC_SCU_IsTemperatureSensorReady:
 1098              	.LFB184:
 319:../Libraries/XMCLib/src/xmc4_scu.c **** 
 320:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check if the die temperature sensor is ready to start a measurement. */
 321:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorReady(void)
 322:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1099              	 .loc 3 322 0
 1100              	 .cfi_startproc
 1101              	 
 1102              	 
 1103              	 
 1104 0000 80B4     	 push {r7}
 1105              	.LCFI109:
 1106              	 .cfi_def_cfa_offset 4
 1107              	 .cfi_offset 7,-4
 1108 0002 00AF     	 add r7,sp,#0
 1109              	.LCFI110:
 1110              	 .cfi_def_cfa_register 7
 323:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RDY_Msk) != 0U);
 1111              	 .loc 3 323 0
 1112 0004 074B     	 ldr r3,.L81
 1113 0006 D3F89030 	 ldr r3,[r3,#144]
 1114 000a 03F48043 	 and r3,r3,#16384
 1115 000e 002B     	 cmp r3,#0
 1116 0010 14BF     	 ite ne
 1117 0012 0123     	 movne r3,#1
 1118 0014 0023     	 moveq r3,#0
 1119 0016 DBB2     	 uxtb r3,r3
 324:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1120              	 .loc 3 324 0
 1121 0018 1846     	 mov r0,r3
 1122 001a BD46     	 mov sp,r7
 1123              	.LCFI111:
 1124              	 .cfi_def_cfa_register 13
 1125              	 
 1126 001c 5DF8047B 	 ldr r7,[sp],#4
 1127              	.LCFI112:
 1128              	 .cfi_restore 7
 1129              	 .cfi_def_cfa_offset 0
 1130 0020 7047     	 bx lr
 1131              	.L82:
 1132 0022 00BF     	 .align 2
 1133              	.L81:
 1134 0024 00400050 	 .word 1342193664
 1135              	 .cfi_endproc
 1136              	.LFE184:
 1138              	 .section .text.XMC_SCU_StartTemperatureMeasurement,"ax",%progbits
 1139              	 .align 2
 1140              	 .global XMC_SCU_StartTemperatureMeasurement
 1141              	 .thumb
 1142              	 .thumb_func
 1144              	XMC_SCU_StartTemperatureMeasurement:
 1145              	.LFB185:
 325:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to start device temperature measurements */
 326:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void)
 327:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1146              	 .loc 3 327 0
 1147              	 .cfi_startproc
 1148              	 
 1149              	 
 1150 0000 80B5     	 push {r7,lr}
 1151              	.LCFI113:
 1152              	 .cfi_def_cfa_offset 8
 1153              	 .cfi_offset 7,-8
 1154              	 .cfi_offset 14,-4
 1155 0002 82B0     	 sub sp,sp,#8
 1156              	.LCFI114:
 1157              	 .cfi_def_cfa_offset 16
 1158 0004 00AF     	 add r7,sp,#0
 1159              	.LCFI115:
 1160              	 .cfi_def_cfa_register 7
 328:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 1161              	 .loc 3 328 0
 1162 0006 0023     	 movs r3,#0
 1163 0008 FB71     	 strb r3,[r7,#7]
 329:../Libraries/XMCLib/src/xmc4_scu.c **** 
 330:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1164              	 .loc 3 330 0
 1165 000a FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1166 000e 0346     	 mov r3,r0
 1167 0010 83F00103 	 eor r3,r3,#1
 1168 0014 DBB2     	 uxtb r3,r3
 1169 0016 002B     	 cmp r3,#0
 1170 0018 01D0     	 beq .L84
 331:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 332:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 1171              	 .loc 3 332 0
 1172 001a 0123     	 movs r3,#1
 1173 001c FB71     	 strb r3,[r7,#7]
 1174              	.L84:
 333:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 334:../Libraries/XMCLib/src/xmc4_scu.c ****    
 335:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorBusy() == true)
 1175              	 .loc 3 335 0
 1176 001e FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorBusy
 1177 0022 0346     	 mov r3,r0
 1178 0024 002B     	 cmp r3,#0
 1179 0026 01D0     	 beq .L85
 336:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 337:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_BUSY;
 1180              	 .loc 3 337 0
 1181 0028 0223     	 movs r3,#2
 1182 002a FB71     	 strb r3,[r7,#7]
 1183              	.L85:
 338:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 339:../Libraries/XMCLib/src/xmc4_scu.c **** 
 340:../Libraries/XMCLib/src/xmc4_scu.c ****   /* And start the measurement */
 341:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_START_Msk;
 1184              	 .loc 3 341 0
 1185 002c 064A     	 ldr r2,.L87
 1186 002e 064B     	 ldr r3,.L87
 1187 0030 D3F88C30 	 ldr r3,[r3,#140]
 1188 0034 43F00203 	 orr r3,r3,#2
 1189 0038 C2F88C30 	 str r3,[r2,#140]
 342:../Libraries/XMCLib/src/xmc4_scu.c ****   
 343:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 1190              	 .loc 3 343 0
 1191 003c FB79     	 ldrb r3,[r7,#7]
 344:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1192              	 .loc 3 344 0
 1193 003e 1846     	 mov r0,r3
 1194 0040 0837     	 adds r7,r7,#8
 1195              	.LCFI116:
 1196              	 .cfi_def_cfa_offset 8
 1197 0042 BD46     	 mov sp,r7
 1198              	.LCFI117:
 1199              	 .cfi_def_cfa_register 13
 1200              	 
 1201 0044 80BD     	 pop {r7,pc}
 1202              	.L88:
 1203 0046 00BF     	 .align 2
 1204              	.L87:
 1205 0048 00400050 	 .word 1342193664
 1206              	 .cfi_endproc
 1207              	.LFE185:
 1209              	 .section .text.XMC_SCU_GetTemperatureMeasurement,"ax",%progbits
 1210              	 .align 2
 1211              	 .global XMC_SCU_GetTemperatureMeasurement
 1212              	 .thumb
 1213              	 .thumb_func
 1215              	XMC_SCU_GetTemperatureMeasurement:
 1216              	.LFB186:
 345:../Libraries/XMCLib/src/xmc4_scu.c **** 
 346:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the temperature measured */
 347:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetTemperatureMeasurement(void)
 348:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1217              	 .loc 3 348 0
 1218              	 .cfi_startproc
 1219              	 
 1220              	 
 1221 0000 80B5     	 push {r7,lr}
 1222              	.LCFI118:
 1223              	 .cfi_def_cfa_offset 8
 1224              	 .cfi_offset 7,-8
 1225              	 .cfi_offset 14,-4
 1226 0002 82B0     	 sub sp,sp,#8
 1227              	.LCFI119:
 1228              	 .cfi_def_cfa_offset 16
 1229 0004 00AF     	 add r7,sp,#0
 1230              	.LCFI120:
 1231              	 .cfi_def_cfa_register 7
 349:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t temperature;
 350:../Libraries/XMCLib/src/xmc4_scu.c **** 
 351:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1232              	 .loc 3 351 0
 1233 0006 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1234 000a 0346     	 mov r3,r0
 1235 000c 83F00103 	 eor r3,r3,#1
 1236 0010 DBB2     	 uxtb r3,r3
 1237 0012 002B     	 cmp r3,#0
 1238 0014 03D0     	 beq .L90
 352:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 353:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = 0x7FFFFFFFUL;
 1239              	 .loc 3 353 0
 1240 0016 6FF00043 	 mvn r3,#-2147483648
 1241 001a 7B60     	 str r3,[r7,#4]
 1242 001c 05E0     	 b .L91
 1243              	.L90:
 354:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 355:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 356:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 357:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = (uint32_t)((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RESULT_Msk) >> SCU_GENERAL
 1244              	 .loc 3 357 0
 1245 001e 054B     	 ldr r3,.L93
 1246 0020 D3F89030 	 ldr r3,[r3,#144]
 1247 0024 C3F30903 	 ubfx r3,r3,#0,#10
 1248 0028 7B60     	 str r3,[r7,#4]
 1249              	.L91:
 358:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 359:../Libraries/XMCLib/src/xmc4_scu.c ****   
 360:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((uint32_t)temperature);
 1250              	 .loc 3 360 0
 1251 002a 7B68     	 ldr r3,[r7,#4]
 361:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1252              	 .loc 3 361 0
 1253 002c 1846     	 mov r0,r3
 1254 002e 0837     	 adds r7,r7,#8
 1255              	.LCFI121:
 1256              	 .cfi_def_cfa_offset 8
 1257 0030 BD46     	 mov sp,r7
 1258              	.LCFI122:
 1259              	 .cfi_def_cfa_register 13
 1260              	 
 1261 0032 80BD     	 pop {r7,pc}
 1262              	.L94:
 1263              	 .align 2
 1264              	.L93:
 1265 0034 00400050 	 .word 1342193664
 1266              	 .cfi_endproc
 1267              	.LFE186:
 1269              	 .section .text.XMC_SCU_IsTemperatureSensorBusy,"ax",%progbits
 1270              	 .align 2
 1271              	 .global XMC_SCU_IsTemperatureSensorBusy
 1272              	 .thumb
 1273              	 .thumb_func
 1275              	XMC_SCU_IsTemperatureSensorBusy:
 1276              	.LFB187:
 362:../Libraries/XMCLib/src/xmc4_scu.c **** 
 363:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to know whether Die temperature sensor is busy */
 364:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorBusy(void)
 365:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1277              	 .loc 3 365 0
 1278              	 .cfi_startproc
 1279              	 
 1280              	 
 1281              	 
 1282 0000 80B4     	 push {r7}
 1283              	.LCFI123:
 1284              	 .cfi_def_cfa_offset 4
 1285              	 .cfi_offset 7,-4
 1286 0002 00AF     	 add r7,sp,#0
 1287              	.LCFI124:
 1288              	 .cfi_def_cfa_register 7
 366:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_BUSY_Msk) != 0U);
 1289              	 .loc 3 366 0
 1290 0004 074B     	 ldr r3,.L97
 1291 0006 D3F89030 	 ldr r3,[r3,#144]
 1292 000a 03F40043 	 and r3,r3,#32768
 1293 000e 002B     	 cmp r3,#0
 1294 0010 14BF     	 ite ne
 1295 0012 0123     	 movne r3,#1
 1296 0014 0023     	 moveq r3,#0
 1297 0016 DBB2     	 uxtb r3,r3
 367:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1298              	 .loc 3 367 0
 1299 0018 1846     	 mov r0,r3
 1300 001a BD46     	 mov sp,r7
 1301              	.LCFI125:
 1302              	 .cfi_def_cfa_register 13
 1303              	 
 1304 001c 5DF8047B 	 ldr r7,[sp],#4
 1305              	.LCFI126:
 1306              	 .cfi_restore 7
 1307              	 .cfi_def_cfa_offset 0
 1308 0020 7047     	 bx lr
 1309              	.L98:
 1310 0022 00BF     	 .align 2
 1311              	.L97:
 1312 0024 00400050 	 .word 1342193664
 1313              	 .cfi_endproc
 1314              	.LFE187:
 1316              	 .section .text.XMC_SCU_HighTemperature,"ax",%progbits
 1317              	 .align 2
 1318              	 .global XMC_SCU_HighTemperature
 1319              	 .thumb
 1320              	 .thumb_func
 1322              	XMC_SCU_HighTemperature:
 1323              	.LFB188:
 368:../Libraries/XMCLib/src/xmc4_scu.c **** 
 369:../Libraries/XMCLib/src/xmc4_scu.c **** 
 370:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(SCU_GENERAL_DTEMPLIM_LOWER_Msk) && defined(SCU_GENERAL_DTEMPLIM_UPPER_Msk)
 371:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone past the ceiling */
 372:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HighTemperature(void)
 373:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1324              	 .loc 3 373 0
 1325              	 .cfi_startproc
 1326              	 
 1327              	 
 1328              	 
 1329 0000 80B4     	 push {r7}
 1330              	.LCFI127:
 1331              	 .cfi_def_cfa_offset 4
 1332              	 .cfi_offset 7,-4
 1333 0002 85B0     	 sub sp,sp,#20
 1334              	.LCFI128:
 1335              	 .cfi_def_cfa_offset 24
 1336 0004 00AF     	 add r7,sp,#0
 1337              	.LCFI129:
 1338              	 .cfi_def_cfa_register 7
 374:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 375:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 376:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 377:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 1339              	 .loc 3 377 0
 1340 0006 134B     	 ldr r3,.L104
 1341 0008 D3F88C30 	 ldr r3,[r3,#140]
 1342 000c BB60     	 str r3,[r7,#8]
 378:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 1343              	 .loc 3 378 0
 1344 000e BB68     	 ldr r3,[r7,#8]
 1345 0010 03F00103 	 and r3,r3,#1
 1346 0014 BB60     	 str r3,[r7,#8]
 379:../Libraries/XMCLib/src/xmc4_scu.c **** 
 380:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 1347              	 .loc 3 380 0
 1348 0016 0023     	 movs r3,#0
 1349 0018 FB73     	 strb r3,[r7,#15]
 381:../Libraries/XMCLib/src/xmc4_scu.c **** 
 382:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 383:../Libraries/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 1350              	 .loc 3 383 0
 1351 001a BB68     	 ldr r3,[r7,#8]
 1352 001c 002B     	 cmp r3,#0
 1353 001e 02D0     	 beq .L100
 384:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 385:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 386:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 1354              	 .loc 3 386 0
 1355 0020 0023     	 movs r3,#0
 1356 0022 FB73     	 strb r3,[r7,#15]
 1357 0024 0FE0     	 b .L101
 1358              	.L100:
 387:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 388:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 389:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 390:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 391:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 1359              	 .loc 3 391 0
 1360 0026 0B4B     	 ldr r3,.L104
 1361 0028 D3F8AC30 	 ldr r3,[r3,#172]
 1362 002c 7B60     	 str r3,[r7,#4]
 392:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_OVERFL_Msk;
 1363              	 .loc 3 392 0
 1364 002e 7B68     	 ldr r3,[r7,#4]
 1365 0030 03F48033 	 and r3,r3,#65536
 1366 0034 7B60     	 str r3,[r7,#4]
 393:../Libraries/XMCLib/src/xmc4_scu.c ****     
 394:../Libraries/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 1367              	 .loc 3 394 0
 1368 0036 7B68     	 ldr r3,[r7,#4]
 1369 0038 002B     	 cmp r3,#0
 1370 003a 02D0     	 beq .L102
 395:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 396:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 1371              	 .loc 3 396 0
 1372 003c 0123     	 movs r3,#1
 1373 003e FB73     	 strb r3,[r7,#15]
 1374 0040 01E0     	 b .L101
 1375              	.L102:
 397:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 398:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 399:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 400:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 1376              	 .loc 3 400 0
 1377 0042 0023     	 movs r3,#0
 1378 0044 FB73     	 strb r3,[r7,#15]
 1379              	.L101:
 401:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 402:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 403:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 1380              	 .loc 3 403 0
 1381 0046 FB7B     	 ldrb r3,[r7,#15]
 404:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1382              	 .loc 3 404 0
 1383 0048 1846     	 mov r0,r3
 1384 004a 1437     	 adds r7,r7,#20
 1385              	.LCFI130:
 1386              	 .cfi_def_cfa_offset 4
 1387 004c BD46     	 mov sp,r7
 1388              	.LCFI131:
 1389              	 .cfi_def_cfa_register 13
 1390              	 
 1391 004e 5DF8047B 	 ldr r7,[sp],#4
 1392              	.LCFI132:
 1393              	 .cfi_restore 7
 1394              	 .cfi_def_cfa_offset 0
 1395 0052 7047     	 bx lr
 1396              	.L105:
 1397              	 .align 2
 1398              	.L104:
 1399 0054 00400050 	 .word 1342193664
 1400              	 .cfi_endproc
 1401              	.LFE188:
 1403              	 .section .text.XMC_SCU_SetRawTempLimits,"ax",%progbits
 1404              	 .align 2
 1405              	 .global XMC_SCU_SetRawTempLimits
 1406              	 .thumb
 1407              	 .thumb_func
 1409              	XMC_SCU_SetRawTempLimits:
 1410              	.LFB189:
 405:../Libraries/XMCLib/src/xmc4_scu.c **** 
 406:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program raw values of temperature limits into the DTS */
 407:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp)
 408:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1411              	 .loc 3 408 0
 1412              	 .cfi_startproc
 1413              	 
 1414              	 
 1415              	 
 1416 0000 80B4     	 push {r7}
 1417              	.LCFI133:
 1418              	 .cfi_def_cfa_offset 4
 1419              	 .cfi_offset 7,-4
 1420 0002 83B0     	 sub sp,sp,#12
 1421              	.LCFI134:
 1422              	 .cfi_def_cfa_offset 16
 1423 0004 00AF     	 add r7,sp,#0
 1424              	.LCFI135:
 1425              	 .cfi_def_cfa_register 7
 1426 0006 7860     	 str r0,[r7,#4]
 1427 0008 3960     	 str r1,[r7]
 409:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up the DTS module */
 410:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~SCU_GENERAL_DTSCON_PWD_Msk;
 1428              	 .loc 3 410 0
 1429 000a 114A     	 ldr r2,.L107
 1430 000c 104B     	 ldr r3,.L107
 1431 000e D3F88C30 	 ldr r3,[r3,#140]
 1432 0012 23F00103 	 bic r3,r3,#1
 1433 0016 C2F88C30 	 str r3,[r2,#140]
 411:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = 0;
 1434              	 .loc 3 411 0
 1435 001a 0D4B     	 ldr r3,.L107
 1436 001c 0022     	 movs r2,#0
 1437 001e C3F8A820 	 str r2,[r3,#168]
 412:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = (lower_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk);
 1438              	 .loc 3 412 0
 1439 0022 0B4A     	 ldr r2,.L107
 1440 0024 7B68     	 ldr r3,[r7,#4]
 1441 0026 C3F30903 	 ubfx r3,r3,#0,#10
 1442 002a C2F8A830 	 str r3,[r2,#168]
 413:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM |= (uint32_t)((upper_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk) << SCU_GENERAL_
 1443              	 .loc 3 413 0
 1444 002e 0849     	 ldr r1,.L107
 1445 0030 074B     	 ldr r3,.L107
 1446 0032 D3F8A820 	 ldr r2,[r3,#168]
 1447 0036 3B68     	 ldr r3,[r7]
 1448 0038 C3F30903 	 ubfx r3,r3,#0,#10
 1449 003c 1B04     	 lsls r3,r3,#16
 1450 003e 1343     	 orrs r3,r3,r2
 1451 0040 C1F8A830 	 str r3,[r1,#168]
 414:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1452              	 .loc 3 414 0
 1453 0044 0C37     	 adds r7,r7,#12
 1454              	.LCFI136:
 1455              	 .cfi_def_cfa_offset 4
 1456 0046 BD46     	 mov sp,r7
 1457              	.LCFI137:
 1458              	 .cfi_def_cfa_register 13
 1459              	 
 1460 0048 5DF8047B 	 ldr r7,[sp],#4
 1461              	.LCFI138:
 1462              	 .cfi_restore 7
 1463              	 .cfi_def_cfa_offset 0
 1464 004c 7047     	 bx lr
 1465              	.L108:
 1466 004e 00BF     	 .align 2
 1467              	.L107:
 1468 0050 00400050 	 .word 1342193664
 1469              	 .cfi_endproc
 1470              	.LFE189:
 1472              	 .section .text.XMC_SCU_LowTemperature,"ax",%progbits
 1473              	 .align 2
 1474              	 .global XMC_SCU_LowTemperature
 1475              	 .thumb
 1476              	 .thumb_func
 1478              	XMC_SCU_LowTemperature:
 1479              	.LFB190:
 415:../Libraries/XMCLib/src/xmc4_scu.c **** 
 416:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone below the stipulated limit */
 417:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_LowTemperature(void)
 418:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1480              	 .loc 3 418 0
 1481              	 .cfi_startproc
 1482              	 
 1483              	 
 1484              	 
 1485 0000 80B4     	 push {r7}
 1486              	.LCFI139:
 1487              	 .cfi_def_cfa_offset 4
 1488              	 .cfi_offset 7,-4
 1489 0002 85B0     	 sub sp,sp,#20
 1490              	.LCFI140:
 1491              	 .cfi_def_cfa_offset 24
 1492 0004 00AF     	 add r7,sp,#0
 1493              	.LCFI141:
 1494              	 .cfi_def_cfa_register 7
 419:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 420:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 421:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 422:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 1495              	 .loc 3 422 0
 1496 0006 134B     	 ldr r3,.L114
 1497 0008 D3F88C30 	 ldr r3,[r3,#140]
 1498 000c BB60     	 str r3,[r7,#8]
 423:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 1499              	 .loc 3 423 0
 1500 000e BB68     	 ldr r3,[r7,#8]
 1501 0010 03F00103 	 and r3,r3,#1
 1502 0014 BB60     	 str r3,[r7,#8]
 424:../Libraries/XMCLib/src/xmc4_scu.c **** 
 425:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 1503              	 .loc 3 425 0
 1504 0016 0023     	 movs r3,#0
 1505 0018 FB73     	 strb r3,[r7,#15]
 426:../Libraries/XMCLib/src/xmc4_scu.c **** 
 427:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 428:../Libraries/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 1506              	 .loc 3 428 0
 1507 001a BB68     	 ldr r3,[r7,#8]
 1508 001c 002B     	 cmp r3,#0
 1509 001e 02D0     	 beq .L110
 429:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 430:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 431:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 1510              	 .loc 3 431 0
 1511 0020 0023     	 movs r3,#0
 1512 0022 FB73     	 strb r3,[r7,#15]
 1513 0024 0FE0     	 b .L111
 1514              	.L110:
 432:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 433:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 434:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 435:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 436:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 1515              	 .loc 3 436 0
 1516 0026 0B4B     	 ldr r3,.L114
 1517 0028 D3F8AC30 	 ldr r3,[r3,#172]
 1518 002c 7B60     	 str r3,[r7,#4]
 437:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_UNDERFL_Msk;
 1519              	 .loc 3 437 0
 1520 002e 7B68     	 ldr r3,[r7,#4]
 1521 0030 03F00103 	 and r3,r3,#1
 1522 0034 7B60     	 str r3,[r7,#4]
 438:../Libraries/XMCLib/src/xmc4_scu.c ****     
 439:../Libraries/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 1523              	 .loc 3 439 0
 1524 0036 7B68     	 ldr r3,[r7,#4]
 1525 0038 002B     	 cmp r3,#0
 1526 003a 02D0     	 beq .L112
 440:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 441:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 1527              	 .loc 3 441 0
 1528 003c 0123     	 movs r3,#1
 1529 003e FB73     	 strb r3,[r7,#15]
 1530 0040 01E0     	 b .L111
 1531              	.L112:
 442:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 443:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 444:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 445:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 1532              	 .loc 3 445 0
 1533 0042 0023     	 movs r3,#0
 1534 0044 FB73     	 strb r3,[r7,#15]
 1535              	.L111:
 446:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 447:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 448:../Libraries/XMCLib/src/xmc4_scu.c ****   
 449:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 1536              	 .loc 3 449 0
 1537 0046 FB7B     	 ldrb r3,[r7,#15]
 450:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1538              	 .loc 3 450 0
 1539 0048 1846     	 mov r0,r3
 1540 004a 1437     	 adds r7,r7,#20
 1541              	.LCFI142:
 1542              	 .cfi_def_cfa_offset 4
 1543 004c BD46     	 mov sp,r7
 1544              	.LCFI143:
 1545              	 .cfi_def_cfa_register 13
 1546              	 
 1547 004e 5DF8047B 	 ldr r7,[sp],#4
 1548              	.LCFI144:
 1549              	 .cfi_restore 7
 1550              	 .cfi_def_cfa_offset 0
 1551 0052 7047     	 bx lr
 1552              	.L115:
 1553              	 .align 2
 1554              	.L114:
 1555 0054 00400050 	 .word 1342193664
 1556              	 .cfi_endproc
 1557              	.LFE190:
 1559              	 .section .text.XMC_SCU_WriteToRetentionMemory,"ax",%progbits
 1560              	 .align 2
 1561              	 .global XMC_SCU_WriteToRetentionMemory
 1562              	 .thumb
 1563              	 .thumb_func
 1565              	XMC_SCU_WriteToRetentionMemory:
 1566              	.LFB191:
 451:../Libraries/XMCLib/src/xmc4_scu.c **** #endif  
 452:../Libraries/XMCLib/src/xmc4_scu.c **** 
 453:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write into Retention memory in hibernate domain */
 454:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data)
 455:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1567              	 .loc 3 455 0
 1568              	 .cfi_startproc
 1569              	 
 1570              	 
 1571              	 
 1572 0000 80B4     	 push {r7}
 1573              	.LCFI145:
 1574              	 .cfi_def_cfa_offset 4
 1575              	 .cfi_offset 7,-4
 1576 0002 85B0     	 sub sp,sp,#20
 1577              	.LCFI146:
 1578              	 .cfi_def_cfa_offset 24
 1579 0004 00AF     	 add r7,sp,#0
 1580              	.LCFI147:
 1581              	 .cfi_def_cfa_register 7
 1582 0006 7860     	 str r0,[r7,#4]
 1583 0008 3960     	 str r1,[r7]
 456:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 457:../Libraries/XMCLib/src/xmc4_scu.c ****   
 458:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 459:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = (uint32_t)((address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1584              	 .loc 3 459 0
 1585 000a 7B68     	 ldr r3,[r7,#4]
 1586 000c 1B04     	 lsls r3,r3,#16
 1587 000e 03F47023 	 and r3,r3,#983040
 1588 0012 FB60     	 str r3,[r7,#12]
 460:../Libraries/XMCLib/src/xmc4_scu.c ****   
 461:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 462:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr |= (uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk);
 1589              	 .loc 3 462 0
 1590 0014 FB68     	 ldr r3,[r7,#12]
 1591 0016 43F00103 	 orr r3,r3,#1
 1592 001a FB60     	 str r3,[r7,#12]
 463:../Libraries/XMCLib/src/xmc4_scu.c ****   
 464:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write desired data into RMDATA register */  
 465:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMDATA = data;
 1593              	 .loc 3 465 0
 1594 001c 0A4A     	 ldr r2,.L118
 1595 001e 3B68     	 ldr r3,[r7]
 1596 0020 C2F8CC30 	 str r3,[r2,#204]
 466:../Libraries/XMCLib/src/xmc4_scu.c ****   
 467:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write address & direction of transfer into RMACR register */  
 468:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1597              	 .loc 3 468 0
 1598 0024 084A     	 ldr r2,.L118
 1599 0026 FB68     	 ldr r3,[r7,#12]
 1600 0028 C2F8C830 	 str r3,[r2,#200]
 469:../Libraries/XMCLib/src/xmc4_scu.c ****   
 470:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 471:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1601              	 .loc 3 471 0
 1602 002c 00BF     	 nop
 1603              	.L117:
 1604              	 .loc 3 471 0 is_stmt 0 discriminator 1
 1605 002e 064B     	 ldr r3,.L118
 1606 0030 D3F8C430 	 ldr r3,[r3,#196]
 1607 0034 03F40053 	 and r3,r3,#8192
 1608 0038 002B     	 cmp r3,#0
 1609 003a F8D1     	 bne .L117
 472:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 473:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 474:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1610              	 .loc 3 474 0 is_stmt 1
 1611 003c 1437     	 adds r7,r7,#20
 1612              	.LCFI148:
 1613              	 .cfi_def_cfa_offset 4
 1614 003e BD46     	 mov sp,r7
 1615              	.LCFI149:
 1616              	 .cfi_def_cfa_register 13
 1617              	 
 1618 0040 5DF8047B 	 ldr r7,[sp],#4
 1619              	.LCFI150:
 1620              	 .cfi_restore 7
 1621              	 .cfi_def_cfa_offset 0
 1622 0044 7047     	 bx lr
 1623              	.L119:
 1624 0046 00BF     	 .align 2
 1625              	.L118:
 1626 0048 00400050 	 .word 1342193664
 1627              	 .cfi_endproc
 1628              	.LFE191:
 1630              	 .section .text.XMC_SCU_ReadFromRetentionMemory,"ax",%progbits
 1631              	 .align 2
 1632              	 .global XMC_SCU_ReadFromRetentionMemory
 1633              	 .thumb
 1634              	 .thumb_func
 1636              	XMC_SCU_ReadFromRetentionMemory:
 1637              	.LFB192:
 475:../Libraries/XMCLib/src/xmc4_scu.c **** 
 476:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from Retention memory in hibernate domain */
 477:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address)
 478:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1638              	 .loc 3 478 0
 1639              	 .cfi_startproc
 1640              	 
 1641              	 
 1642              	 
 1643 0000 80B4     	 push {r7}
 1644              	.LCFI151:
 1645              	 .cfi_def_cfa_offset 4
 1646              	 .cfi_offset 7,-4
 1647 0002 85B0     	 sub sp,sp,#20
 1648              	.LCFI152:
 1649              	 .cfi_def_cfa_offset 24
 1650 0004 00AF     	 add r7,sp,#0
 1651              	.LCFI153:
 1652              	 .cfi_def_cfa_register 7
 1653 0006 7860     	 str r0,[r7,#4]
 479:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 480:../Libraries/XMCLib/src/xmc4_scu.c **** 
 481:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 482:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = ((uint32_t)(address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1654              	 .loc 3 482 0
 1655 0008 7B68     	 ldr r3,[r7,#4]
 1656 000a 1B04     	 lsls r3,r3,#16
 1657 000c 03F47023 	 and r3,r3,#983040
 1658 0010 FB60     	 str r3,[r7,#12]
 483:../Libraries/XMCLib/src/xmc4_scu.c ****   
 484:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 485:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr &= ~((uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk));
 1659              	 .loc 3 485 0
 1660 0012 FB68     	 ldr r3,[r7,#12]
 1661 0014 23F00103 	 bic r3,r3,#1
 1662 0018 FB60     	 str r3,[r7,#12]
 486:../Libraries/XMCLib/src/xmc4_scu.c ****   
 487:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Writing an adress & direction of transfer into RMACR register */  
 488:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1663              	 .loc 3 488 0
 1664 001a 0A4A     	 ldr r2,.L123
 1665 001c FB68     	 ldr r3,[r7,#12]
 1666 001e C2F8C830 	 str r3,[r2,#200]
 489:../Libraries/XMCLib/src/xmc4_scu.c ****   
 490:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 491:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1667              	 .loc 3 491 0
 1668 0022 00BF     	 nop
 1669              	.L121:
 1670              	 .loc 3 491 0 is_stmt 0 discriminator 1
 1671 0024 074B     	 ldr r3,.L123
 1672 0026 D3F8C430 	 ldr r3,[r3,#196]
 1673 002a 03F40053 	 and r3,r3,#8192
 1674 002e 002B     	 cmp r3,#0
 1675 0030 F8D1     	 bne .L121
 492:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 493:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 494:../Libraries/XMCLib/src/xmc4_scu.c **** 
 495:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->RMDATA);
 1676              	 .loc 3 495 0 is_stmt 1
 1677 0032 044B     	 ldr r3,.L123
 1678 0034 D3F8CC30 	 ldr r3,[r3,#204]
 496:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1679              	 .loc 3 496 0
 1680 0038 1846     	 mov r0,r3
 1681 003a 1437     	 adds r7,r7,#20
 1682              	.LCFI154:
 1683              	 .cfi_def_cfa_offset 4
 1684 003c BD46     	 mov sp,r7
 1685              	.LCFI155:
 1686              	 .cfi_def_cfa_register 13
 1687              	 
 1688 003e 5DF8047B 	 ldr r7,[sp],#4
 1689              	.LCFI156:
 1690              	 .cfi_restore 7
 1691              	 .cfi_def_cfa_offset 0
 1692 0042 7047     	 bx lr
 1693              	.L124:
 1694              	 .align 2
 1695              	.L123:
 1696 0044 00400050 	 .word 1342193664
 1697              	 .cfi_endproc
 1698              	.LFE192:
 1700              	 .section .text.XMC_SCU_CLOCK_Init,"ax",%progbits
 1701              	 .align 2
 1702              	 .global XMC_SCU_CLOCK_Init
 1703              	 .thumb
 1704              	 .thumb_func
 1706              	XMC_SCU_CLOCK_Init:
 1707              	.LFB193:
 497:../Libraries/XMCLib/src/xmc4_scu.c **** 
 498:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to initialize the clock tree */
 499:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
 500:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1708              	 .loc 3 500 0
 1709              	 .cfi_startproc
 1710              	 
 1711              	 
 1712 0000 B0B5     	 push {r4,r5,r7,lr}
 1713              	.LCFI157:
 1714              	 .cfi_def_cfa_offset 16
 1715              	 .cfi_offset 4,-16
 1716              	 .cfi_offset 5,-12
 1717              	 .cfi_offset 7,-8
 1718              	 .cfi_offset 14,-4
 1719 0002 84B0     	 sub sp,sp,#16
 1720              	.LCFI158:
 1721              	 .cfi_def_cfa_offset 32
 1722 0004 02AF     	 add r7,sp,#8
 1723              	.LCFI159:
 1724              	 .cfi_def_cfa 7,24
 1725 0006 7860     	 str r0,[r7,#4]
 501:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 502:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fcpu_clkdiv != 0);
 503:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fccu_clkdiv != 0);
 504:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fperipheral_clkdiv != 0);
 505:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.p_div != 0) &&
 506:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 507:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 508:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.n_div != 0) &&
 509:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 510:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 511:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", (config->syspll_config.k_div != 0) &&
 512:../Libraries/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 513:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 514:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL) ||
 515:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_OFI)) &&
 516:../Libraries/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 517:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 518:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fstdby_clksrc == XMC_SCU_HIB_STDBYCLKSRC_OSCULP) && (config->enable_oscu
 519:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->fstdby_clksrc != XMC_SCU_HIB_STDBYCLKSRC_OSCULP));
 520:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.clksrc == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) &&
 521:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->enable_oschp == true)) || (config->syspll_config.clksrc != XMC_SCU_CLOCK_
 522:../Libraries/XMCLib/src/xmc4_scu.c **** 
 523:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_OFI);
 1726              	 .loc 3 523 0
 1727 0008 0020     	 movs r0,#0
 1728 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 524:../Libraries/XMCLib/src/xmc4_scu.c **** 
 525:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 1729              	 .loc 3 525 0
 1730 000e FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 526:../Libraries/XMCLib/src/xmc4_scu.c **** 
 527:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_osculp == true)
 1731              	 .loc 3 527 0
 1732 0012 7B68     	 ldr r3,[r7,#4]
 1733 0014 DB79     	 ldrb r3,[r3,#7]
 1734 0016 002B     	 cmp r3,#0
 1735 0018 0AD0     	 beq .L126
 528:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 529:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableLowPowerOscillator();
 1736              	 .loc 3 529 0
 1737 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableLowPowerOscillator
 530:../Libraries/XMCLib/src/xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 1738              	 .loc 3 530 0
 1739 001e 00BF     	 nop
 1740              	.L127:
 1741              	 .loc 3 530 0 is_stmt 0 discriminator 1
 1742 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 1743 0024 0346     	 mov r3,r0
 1744 0026 83F00103 	 eor r3,r3,#1
 1745 002a DBB2     	 uxtb r3,r3
 1746 002c 002B     	 cmp r3,#0
 1747 002e F7D1     	 bne .L127
 1748              	.L126:
 531:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 532:../Libraries/XMCLib/src/xmc4_scu.c ****   
 533:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_SetStandbyClockSource(config->fstdby_clksrc);  
 1749              	 .loc 3 533 0 is_stmt 1
 1750 0030 7B68     	 ldr r3,[r7,#4]
 1751 0032 5B7A     	 ldrb r3,[r3,#9]
 1752 0034 1846     	 mov r0,r3
 1753 0036 FFF7FEFF 	 bl XMC_SCU_HIB_SetStandbyClockSource
 534:../Libraries/XMCLib/src/xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 1754              	 .loc 3 534 0
 1755 003a 00BF     	 nop
 1756              	.L128:
 1757              	 .loc 3 534 0 is_stmt 0 discriminator 1
 1758 003c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 1759 0040 0346     	 mov r3,r0
 1760 0042 002B     	 cmp r3,#0
 1761 0044 FAD1     	 bne .L128
 535:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 536:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until update of the stanby clock source is done in the HIB domain */    
 537:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 538:../Libraries/XMCLib/src/xmc4_scu.c **** 
 539:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetBackupClockCalibrationMode(config->calibration_mode);
 1762              	 .loc 3 539 0 is_stmt 1
 1763 0046 7B68     	 ldr r3,[r7,#4]
 1764 0048 1B7A     	 ldrb r3,[r3,#8]
 1765 004a 1846     	 mov r0,r3
 1766 004c FFF7FEFF 	 bl XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 540:../Libraries/XMCLib/src/xmc4_scu.c **** 
 541:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockDivider((uint32_t)config->fsys_clkdiv);
 1767              	 .loc 3 541 0
 1768 0050 7B68     	 ldr r3,[r7,#4]
 1769 0052 1B7C     	 ldrb r3,[r3,#16]
 1770 0054 1846     	 mov r0,r3
 1771 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockDivider
 542:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 1772              	 .loc 3 542 0
 1773 005a 7B68     	 ldr r3,[r7,#4]
 1774 005c 5B7C     	 ldrb r3,[r3,#17]
 1775 005e 1846     	 mov r0,r3
 1776 0060 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCpuClockDivider
 543:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 1777              	 .loc 3 543 0
 1778 0064 7B68     	 ldr r3,[r7,#4]
 1779 0066 9B7C     	 ldrb r3,[r3,#18]
 1780 0068 1846     	 mov r0,r3
 1781 006a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCcuClockDivider
 544:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 1782              	 .loc 3 544 0
 1783 006e 7B68     	 ldr r3,[r7,#4]
 1784 0070 DB7C     	 ldrb r3,[r3,#19]
 1785 0072 1846     	 mov r0,r3
 1786 0074 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetPeripheralClockDivider
 545:../Libraries/XMCLib/src/xmc4_scu.c **** 
 546:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_oschp == true)
 1787              	 .loc 3 546 0
 1788 0078 7B68     	 ldr r3,[r7,#4]
 1789 007a 9B79     	 ldrb r3,[r3,#6]
 1790 007c 002B     	 cmp r3,#0
 1791 007e 0AD0     	 beq .L129
 547:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 548:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableHighPerformanceOscillator();
 1792              	 .loc 3 548 0
 1793 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 549:../Libraries/XMCLib/src/xmc4_scu.c ****     while(XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 1794              	 .loc 3 549 0
 1795 0084 00BF     	 nop
 1796              	.L130:
 1797              	 .loc 3 549 0 is_stmt 0 discriminator 1
 1798 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 1799 008a 0346     	 mov r3,r0
 1800 008c 83F00103 	 eor r3,r3,#1
 1801 0090 DBB2     	 uxtb r3,r3
 1802 0092 002B     	 cmp r3,#0
 1803 0094 F7D1     	 bne .L130
 1804              	.L129:
 550:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 551:../Libraries/XMCLib/src/xmc4_scu.c **** 
 552:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED)
 1805              	 .loc 3 552 0 is_stmt 1
 1806 0096 7B68     	 ldr r3,[r7,#4]
 1807 0098 DB78     	 ldrb r3,[r3,#3]
 1808 009a 002B     	 cmp r3,#0
 1809 009c 02D1     	 bne .L131
 553:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 554:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_DisableSystemPll();
 1810              	 .loc 3 554 0
 1811 009e FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableSystemPll
 1812 00a2 14E0     	 b .L132
 1813              	.L131:
 555:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 556:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 557:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 558:../Libraries/XMCLib/src/xmc4_scu.c **** 
 559:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableSystemPll();
 1814              	 .loc 3 559 0
 1815 00a4 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableSystemPll
 560:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1816              	 .loc 3 560 0
 1817 00a8 7B68     	 ldr r3,[r7,#4]
 1818 00aa 9988     	 ldrh r1,[r3,#4]
 1819 00ac 7B68     	 ldr r3,[r7,#4]
 1820 00ae DA78     	 ldrb r2,[r3,#3]
 561:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 562:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.p_div,
 1821              	 .loc 3 562 0
 1822 00b0 7B68     	 ldr r3,[r7,#4]
 1823 00b2 5B78     	 ldrb r3,[r3,#1]
 560:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1824              	 .loc 3 560 0
 1825 00b4 1D46     	 mov r5,r3
 563:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.n_div,
 1826              	 .loc 3 563 0
 1827 00b6 7B68     	 ldr r3,[r7,#4]
 1828 00b8 1B78     	 ldrb r3,[r3]
 560:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1829              	 .loc 3 560 0
 1830 00ba 1C46     	 mov r4,r3
 564:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.k_div);
 1831              	 .loc 3 564 0
 1832 00bc 7B68     	 ldr r3,[r7,#4]
 1833 00be 9B78     	 ldrb r3,[r3,#2]
 560:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 1834              	 .loc 3 560 0
 1835 00c0 0093     	 str r3,[sp]
 1836 00c2 0846     	 mov r0,r1
 1837 00c4 1146     	 mov r1,r2
 1838 00c6 2A46     	 mov r2,r5
 1839 00c8 2346     	 mov r3,r4
 1840 00ca FFF7FEFF 	 bl XMC_SCU_CLOCK_StartSystemPll
 1841              	.L132:
 565:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 566:../Libraries/XMCLib/src/xmc4_scu.c **** 
 567:../Libraries/XMCLib/src/xmc4_scu.c ****   /* use SYSPLL? */
 568:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL)
 1842              	 .loc 3 568 0
 1843 00ce 7B68     	 ldr r3,[r7,#4]
 1844 00d0 DB68     	 ldr r3,[r3,#12]
 1845 00d2 B3F5803F 	 cmp r3,#65536
 1846 00d6 03D1     	 bne .L133
 569:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 570:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_PLL);    
 1847              	 .loc 3 570 0
 1848 00d8 4FF48030 	 mov r0,#65536
 1849 00dc FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 1850              	.L133:
 571:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 572:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 1851              	 .loc 3 572 0
 1852 00e0 FFF7FEFF 	 bl SystemCoreClockUpdate
 573:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1853              	 .loc 3 573 0
 1854 00e4 0837     	 adds r7,r7,#8
 1855              	.LCFI160:
 1856              	 .cfi_def_cfa_offset 16
 1857 00e6 BD46     	 mov sp,r7
 1858              	.LCFI161:
 1859              	 .cfi_def_cfa_register 13
 1860              	 
 1861 00e8 B0BD     	 pop {r4,r5,r7,pc}
 1862              	 .cfi_endproc
 1863              	.LFE193:
 1865 00ea 00BF     	 .section .text.XMC_SCU_TRAP_Enable,"ax",%progbits
 1866              	 .align 2
 1867              	 .global XMC_SCU_TRAP_Enable
 1868              	 .thumb
 1869              	 .thumb_func
 1871              	XMC_SCU_TRAP_Enable:
 1872              	.LFB194:
 574:../Libraries/XMCLib/src/xmc4_scu.c **** 
 575:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a trap source */
 576:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Enable(const uint32_t trap)
 577:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1873              	 .loc 3 577 0
 1874              	 .cfi_startproc
 1875              	 
 1876              	 
 1877              	 
 1878 0000 80B4     	 push {r7}
 1879              	.LCFI162:
 1880              	 .cfi_def_cfa_offset 4
 1881              	 .cfi_offset 7,-4
 1882 0002 83B0     	 sub sp,sp,#12
 1883              	.LCFI163:
 1884              	 .cfi_def_cfa_offset 16
 1885 0004 00AF     	 add r7,sp,#0
 1886              	.LCFI164:
 1887              	 .cfi_def_cfa_register 7
 1888 0006 7860     	 str r0,[r7,#4]
 578:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS &= (uint32_t)~trap;
 1889              	 .loc 3 578 0
 1890 0008 0549     	 ldr r1,.L135
 1891 000a 054B     	 ldr r3,.L135
 1892 000c 9A68     	 ldr r2,[r3,#8]
 1893 000e 7B68     	 ldr r3,[r7,#4]
 1894 0010 DB43     	 mvns r3,r3
 1895 0012 1340     	 ands r3,r3,r2
 1896 0014 8B60     	 str r3,[r1,#8]
 579:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1897              	 .loc 3 579 0
 1898 0016 0C37     	 adds r7,r7,#12
 1899              	.LCFI165:
 1900              	 .cfi_def_cfa_offset 4
 1901 0018 BD46     	 mov sp,r7
 1902              	.LCFI166:
 1903              	 .cfi_def_cfa_register 13
 1904              	 
 1905 001a 5DF8047B 	 ldr r7,[sp],#4
 1906              	.LCFI167:
 1907              	 .cfi_restore 7
 1908              	 .cfi_def_cfa_offset 0
 1909 001e 7047     	 bx lr
 1910              	.L136:
 1911              	 .align 2
 1912              	.L135:
 1913 0020 60410050 	 .word 1342194016
 1914              	 .cfi_endproc
 1915              	.LFE194:
 1917              	 .section .text.XMC_SCU_TRAP_Disable,"ax",%progbits
 1918              	 .align 2
 1919              	 .global XMC_SCU_TRAP_Disable
 1920              	 .thumb
 1921              	 .thumb_func
 1923              	XMC_SCU_TRAP_Disable:
 1924              	.LFB195:
 580:../Libraries/XMCLib/src/xmc4_scu.c **** 
 581:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a trap source */
 582:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Disable(const uint32_t trap)
 583:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1925              	 .loc 3 583 0
 1926              	 .cfi_startproc
 1927              	 
 1928              	 
 1929              	 
 1930 0000 80B4     	 push {r7}
 1931              	.LCFI168:
 1932              	 .cfi_def_cfa_offset 4
 1933              	 .cfi_offset 7,-4
 1934 0002 83B0     	 sub sp,sp,#12
 1935              	.LCFI169:
 1936              	 .cfi_def_cfa_offset 16
 1937 0004 00AF     	 add r7,sp,#0
 1938              	.LCFI170:
 1939              	 .cfi_def_cfa_register 7
 1940 0006 7860     	 str r0,[r7,#4]
 584:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS |= (uint32_t)trap;
 1941              	 .loc 3 584 0
 1942 0008 0549     	 ldr r1,.L138
 1943 000a 054B     	 ldr r3,.L138
 1944 000c 9A68     	 ldr r2,[r3,#8]
 1945 000e 7B68     	 ldr r3,[r7,#4]
 1946 0010 1343     	 orrs r3,r3,r2
 1947 0012 8B60     	 str r3,[r1,#8]
 585:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1948              	 .loc 3 585 0
 1949 0014 0C37     	 adds r7,r7,#12
 1950              	.LCFI171:
 1951              	 .cfi_def_cfa_offset 4
 1952 0016 BD46     	 mov sp,r7
 1953              	.LCFI172:
 1954              	 .cfi_def_cfa_register 13
 1955              	 
 1956 0018 5DF8047B 	 ldr r7,[sp],#4
 1957              	.LCFI173:
 1958              	 .cfi_restore 7
 1959              	 .cfi_def_cfa_offset 0
 1960 001c 7047     	 bx lr
 1961              	.L139:
 1962 001e 00BF     	 .align 2
 1963              	.L138:
 1964 0020 60410050 	 .word 1342194016
 1965              	 .cfi_endproc
 1966              	.LFE195:
 1968              	 .section .text.XMC_SCU_TRAP_GetStatus,"ax",%progbits
 1969              	 .align 2
 1970              	 .global XMC_SCU_TRAP_GetStatus
 1971              	 .thumb
 1972              	 .thumb_func
 1974              	XMC_SCU_TRAP_GetStatus:
 1975              	.LFB196:
 586:../Libraries/XMCLib/src/xmc4_scu.c **** 
 587:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if a trap source has generated event */
 588:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_TRAP_GetStatus(void)
 589:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1976              	 .loc 3 589 0
 1977              	 .cfi_startproc
 1978              	 
 1979              	 
 1980              	 
 1981 0000 80B4     	 push {r7}
 1982              	.LCFI174:
 1983              	 .cfi_def_cfa_offset 4
 1984              	 .cfi_offset 7,-4
 1985 0002 00AF     	 add r7,sp,#0
 1986              	.LCFI175:
 1987              	 .cfi_def_cfa_register 7
 590:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_TRAP->TRAPRAW);
 1988              	 .loc 3 590 0
 1989 0004 034B     	 ldr r3,.L142
 1990 0006 5B68     	 ldr r3,[r3,#4]
 591:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1991              	 .loc 3 591 0
 1992 0008 1846     	 mov r0,r3
 1993 000a BD46     	 mov sp,r7
 1994              	.LCFI176:
 1995              	 .cfi_def_cfa_register 13
 1996              	 
 1997 000c 5DF8047B 	 ldr r7,[sp],#4
 1998              	.LCFI177:
 1999              	 .cfi_restore 7
 2000              	 .cfi_def_cfa_offset 0
 2001 0010 7047     	 bx lr
 2002              	.L143:
 2003 0012 00BF     	 .align 2
 2004              	.L142:
 2005 0014 60410050 	 .word 1342194016
 2006              	 .cfi_endproc
 2007              	.LFE196:
 2009              	 .section .text.XMC_SCU_TRAP_Trigger,"ax",%progbits
 2010              	 .align 2
 2011              	 .global XMC_SCU_TRAP_Trigger
 2012              	 .thumb
 2013              	 .thumb_func
 2015              	XMC_SCU_TRAP_Trigger:
 2016              	.LFB197:
 592:../Libraries/XMCLib/src/xmc4_scu.c **** 
 593:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually trigger a trap event */
 594:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Trigger(const uint32_t trap)
 595:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2017              	 .loc 3 595 0
 2018              	 .cfi_startproc
 2019              	 
 2020              	 
 2021              	 
 2022 0000 80B4     	 push {r7}
 2023              	.LCFI178:
 2024              	 .cfi_def_cfa_offset 4
 2025              	 .cfi_offset 7,-4
 2026 0002 83B0     	 sub sp,sp,#12
 2027              	.LCFI179:
 2028              	 .cfi_def_cfa_offset 16
 2029 0004 00AF     	 add r7,sp,#0
 2030              	.LCFI180:
 2031              	 .cfi_def_cfa_register 7
 2032 0006 7860     	 str r0,[r7,#4]
 596:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPSET = (uint32_t)trap;
 2033              	 .loc 3 596 0
 2034 0008 034A     	 ldr r2,.L145
 2035 000a 7B68     	 ldr r3,[r7,#4]
 2036 000c 1361     	 str r3,[r2,#16]
 597:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2037              	 .loc 3 597 0
 2038 000e 0C37     	 adds r7,r7,#12
 2039              	.LCFI181:
 2040              	 .cfi_def_cfa_offset 4
 2041 0010 BD46     	 mov sp,r7
 2042              	.LCFI182:
 2043              	 .cfi_def_cfa_register 13
 2044              	 
 2045 0012 5DF8047B 	 ldr r7,[sp],#4
 2046              	.LCFI183:
 2047              	 .cfi_restore 7
 2048              	 .cfi_def_cfa_offset 0
 2049 0016 7047     	 bx lr
 2050              	.L146:
 2051              	 .align 2
 2052              	.L145:
 2053 0018 60410050 	 .word 1342194016
 2054              	 .cfi_endproc
 2055              	.LFE197:
 2057              	 .section .text.XMC_SCU_TRAP_ClearStatus,"ax",%progbits
 2058              	 .align 2
 2059              	 .global XMC_SCU_TRAP_ClearStatus
 2060              	 .thumb
 2061              	 .thumb_func
 2063              	XMC_SCU_TRAP_ClearStatus:
 2064              	.LFB198:
 598:../Libraries/XMCLib/src/xmc4_scu.c **** 
 599:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear a trap event */
 600:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap)
 601:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2065              	 .loc 3 601 0
 2066              	 .cfi_startproc
 2067              	 
 2068              	 
 2069              	 
 2070 0000 80B4     	 push {r7}
 2071              	.LCFI184:
 2072              	 .cfi_def_cfa_offset 4
 2073              	 .cfi_offset 7,-4
 2074 0002 83B0     	 sub sp,sp,#12
 2075              	.LCFI185:
 2076              	 .cfi_def_cfa_offset 16
 2077 0004 00AF     	 add r7,sp,#0
 2078              	.LCFI186:
 2079              	 .cfi_def_cfa_register 7
 2080 0006 7860     	 str r0,[r7,#4]
 602:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = (uint32_t)trap;
 2081              	 .loc 3 602 0
 2082 0008 034A     	 ldr r2,.L148
 2083 000a 7B68     	 ldr r3,[r7,#4]
 2084 000c D360     	 str r3,[r2,#12]
 603:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2085              	 .loc 3 603 0
 2086 000e 0C37     	 adds r7,r7,#12
 2087              	.LCFI187:
 2088              	 .cfi_def_cfa_offset 4
 2089 0010 BD46     	 mov sp,r7
 2090              	.LCFI188:
 2091              	 .cfi_def_cfa_register 13
 2092              	 
 2093 0012 5DF8047B 	 ldr r7,[sp],#4
 2094              	.LCFI189:
 2095              	 .cfi_restore 7
 2096              	 .cfi_def_cfa_offset 0
 2097 0016 7047     	 bx lr
 2098              	.L149:
 2099              	 .align 2
 2100              	.L148:
 2101 0018 60410050 	 .word 1342194016
 2102              	 .cfi_endproc
 2103              	.LFE198:
 2105              	 .section .text.XMC_SCU_PARITY_ClearStatus,"ax",%progbits
 2106              	 .align 2
 2107              	 .global XMC_SCU_PARITY_ClearStatus
 2108              	 .thumb
 2109              	 .thumb_func
 2111              	XMC_SCU_PARITY_ClearStatus:
 2112              	.LFB199:
 604:../Libraries/XMCLib/src/xmc4_scu.c **** 
 605:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear parity error event */
 606:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory)
 607:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2113              	 .loc 3 607 0
 2114              	 .cfi_startproc
 2115              	 
 2116              	 
 2117              	 
 2118 0000 80B4     	 push {r7}
 2119              	.LCFI190:
 2120              	 .cfi_def_cfa_offset 4
 2121              	 .cfi_offset 7,-4
 2122 0002 83B0     	 sub sp,sp,#12
 2123              	.LCFI191:
 2124              	 .cfi_def_cfa_offset 16
 2125 0004 00AF     	 add r7,sp,#0
 2126              	.LCFI192:
 2127              	 .cfi_def_cfa_register 7
 2128 0006 7860     	 str r0,[r7,#4]
 608:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEFLAG |= (uint32_t)memory; 
 2129              	 .loc 3 608 0
 2130 0008 0549     	 ldr r1,.L151
 2131 000a 054B     	 ldr r3,.L151
 2132 000c 5A69     	 ldr r2,[r3,#20]
 2133 000e 7B68     	 ldr r3,[r7,#4]
 2134 0010 1343     	 orrs r3,r3,r2
 2135 0012 4B61     	 str r3,[r1,#20]
 609:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2136              	 .loc 3 609 0
 2137 0014 0C37     	 adds r7,r7,#12
 2138              	.LCFI193:
 2139              	 .cfi_def_cfa_offset 4
 2140 0016 BD46     	 mov sp,r7
 2141              	.LCFI194:
 2142              	 .cfi_def_cfa_register 13
 2143              	 
 2144 0018 5DF8047B 	 ldr r7,[sp],#4
 2145              	.LCFI195:
 2146              	 .cfi_restore 7
 2147              	 .cfi_def_cfa_offset 0
 2148 001c 7047     	 bx lr
 2149              	.L152:
 2150 001e 00BF     	 .align 2
 2151              	.L151:
 2152 0020 3C410050 	 .word 1342193980
 2153              	 .cfi_endproc
 2154              	.LFE199:
 2156              	 .section .text.XMC_SCU_PARITY_GetStatus,"ax",%progbits
 2157              	 .align 2
 2158              	 .global XMC_SCU_PARITY_GetStatus
 2159              	 .thumb
 2160              	 .thumb_func
 2162              	XMC_SCU_PARITY_GetStatus:
 2163              	.LFB200:
 610:../Libraries/XMCLib/src/xmc4_scu.c **** 
 611:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if the specified parity error has occured or not */
 612:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_PARITY_GetStatus(void)
 613:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2164              	 .loc 3 613 0
 2165              	 .cfi_startproc
 2166              	 
 2167              	 
 2168              	 
 2169 0000 80B4     	 push {r7}
 2170              	.LCFI196:
 2171              	 .cfi_def_cfa_offset 4
 2172              	 .cfi_offset 7,-4
 2173 0002 00AF     	 add r7,sp,#0
 2174              	.LCFI197:
 2175              	 .cfi_def_cfa_register 7
 614:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_PARITY->PEFLAG);
 2176              	 .loc 3 614 0
 2177 0004 034B     	 ldr r3,.L155
 2178 0006 5B69     	 ldr r3,[r3,#20]
 615:../Libraries/XMCLib/src/xmc4_scu.c **** } 
 2179              	 .loc 3 615 0
 2180 0008 1846     	 mov r0,r3
 2181 000a BD46     	 mov sp,r7
 2182              	.LCFI198:
 2183              	 .cfi_def_cfa_register 13
 2184              	 
 2185 000c 5DF8047B 	 ldr r7,[sp],#4
 2186              	.LCFI199:
 2187              	 .cfi_restore 7
 2188              	 .cfi_def_cfa_offset 0
 2189 0010 7047     	 bx lr
 2190              	.L156:
 2191 0012 00BF     	 .align 2
 2192              	.L155:
 2193 0014 3C410050 	 .word 1342193980
 2194              	 .cfi_endproc
 2195              	.LFE200:
 2197              	 .section .text.XMC_SCU_PARITY_Enable,"ax",%progbits
 2198              	 .align 2
 2199              	 .global XMC_SCU_PARITY_Enable
 2200              	 .thumb
 2201              	 .thumb_func
 2203              	XMC_SCU_PARITY_Enable:
 2204              	.LFB201:
 616:../Libraries/XMCLib/src/xmc4_scu.c **** 
 617:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable parity error checking for the selected on-chip RAM type */
 618:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Enable(const uint32_t memory)
 619:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2205              	 .loc 3 619 0
 2206              	 .cfi_startproc
 2207              	 
 2208              	 
 2209              	 
 2210 0000 80B4     	 push {r7}
 2211              	.LCFI200:
 2212              	 .cfi_def_cfa_offset 4
 2213              	 .cfi_offset 7,-4
 2214 0002 83B0     	 sub sp,sp,#12
 2215              	.LCFI201:
 2216              	 .cfi_def_cfa_offset 16
 2217 0004 00AF     	 add r7,sp,#0
 2218              	.LCFI202:
 2219              	 .cfi_def_cfa_register 7
 2220 0006 7860     	 str r0,[r7,#4]
 620:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN |= (uint32_t)memory; 
 2221              	 .loc 3 620 0
 2222 0008 0549     	 ldr r1,.L158
 2223 000a 054B     	 ldr r3,.L158
 2224 000c 1A68     	 ldr r2,[r3]
 2225 000e 7B68     	 ldr r3,[r7,#4]
 2226 0010 1343     	 orrs r3,r3,r2
 2227 0012 0B60     	 str r3,[r1]
 621:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2228              	 .loc 3 621 0
 2229 0014 0C37     	 adds r7,r7,#12
 2230              	.LCFI203:
 2231              	 .cfi_def_cfa_offset 4
 2232 0016 BD46     	 mov sp,r7
 2233              	.LCFI204:
 2234              	 .cfi_def_cfa_register 13
 2235              	 
 2236 0018 5DF8047B 	 ldr r7,[sp],#4
 2237              	.LCFI205:
 2238              	 .cfi_restore 7
 2239              	 .cfi_def_cfa_offset 0
 2240 001c 7047     	 bx lr
 2241              	.L159:
 2242 001e 00BF     	 .align 2
 2243              	.L158:
 2244 0020 3C410050 	 .word 1342193980
 2245              	 .cfi_endproc
 2246              	.LFE201:
 2248              	 .section .text.XMC_SCU_PARITY_Disable,"ax",%progbits
 2249              	 .align 2
 2250              	 .global XMC_SCU_PARITY_Disable
 2251              	 .thumb
 2252              	 .thumb_func
 2254              	XMC_SCU_PARITY_Disable:
 2255              	.LFB202:
 622:../Libraries/XMCLib/src/xmc4_scu.c **** 
 623:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable parity error checking for the selected on-chip RAM type */
 624:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Disable(const uint32_t memory)
 625:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2256              	 .loc 3 625 0
 2257              	 .cfi_startproc
 2258              	 
 2259              	 
 2260              	 
 2261 0000 80B4     	 push {r7}
 2262              	.LCFI206:
 2263              	 .cfi_def_cfa_offset 4
 2264              	 .cfi_offset 7,-4
 2265 0002 83B0     	 sub sp,sp,#12
 2266              	.LCFI207:
 2267              	 .cfi_def_cfa_offset 16
 2268 0004 00AF     	 add r7,sp,#0
 2269              	.LCFI208:
 2270              	 .cfi_def_cfa_register 7
 2271 0006 7860     	 str r0,[r7,#4]
 626:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN &= (uint32_t)~memory; 
 2272              	 .loc 3 626 0
 2273 0008 0549     	 ldr r1,.L161
 2274 000a 054B     	 ldr r3,.L161
 2275 000c 1A68     	 ldr r2,[r3]
 2276 000e 7B68     	 ldr r3,[r7,#4]
 2277 0010 DB43     	 mvns r3,r3
 2278 0012 1340     	 ands r3,r3,r2
 2279 0014 0B60     	 str r3,[r1]
 627:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2280              	 .loc 3 627 0
 2281 0016 0C37     	 adds r7,r7,#12
 2282              	.LCFI209:
 2283              	 .cfi_def_cfa_offset 4
 2284 0018 BD46     	 mov sp,r7
 2285              	.LCFI210:
 2286              	 .cfi_def_cfa_register 13
 2287              	 
 2288 001a 5DF8047B 	 ldr r7,[sp],#4
 2289              	.LCFI211:
 2290              	 .cfi_restore 7
 2291              	 .cfi_def_cfa_offset 0
 2292 001e 7047     	 bx lr
 2293              	.L162:
 2294              	 .align 2
 2295              	.L161:
 2296 0020 3C410050 	 .word 1342193980
 2297              	 .cfi_endproc
 2298              	.LFE202:
 2300              	 .section .text.XMC_SCU_PARITY_EnableTrapGeneration,"ax",%progbits
 2301              	 .align 2
 2302              	 .global XMC_SCU_PARITY_EnableTrapGeneration
 2303              	 .thumb
 2304              	 .thumb_func
 2306              	XMC_SCU_PARITY_EnableTrapGeneration:
 2307              	.LFB203:
 628:../Libraries/XMCLib/src/xmc4_scu.c **** 
 629:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable trap assertion for the parity error source */
 630:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory)
 631:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2308              	 .loc 3 631 0
 2309              	 .cfi_startproc
 2310              	 
 2311              	 
 2312              	 
 2313 0000 80B4     	 push {r7}
 2314              	.LCFI212:
 2315              	 .cfi_def_cfa_offset 4
 2316              	 .cfi_offset 7,-4
 2317 0002 83B0     	 sub sp,sp,#12
 2318              	.LCFI213:
 2319              	 .cfi_def_cfa_offset 16
 2320 0004 00AF     	 add r7,sp,#0
 2321              	.LCFI214:
 2322              	 .cfi_def_cfa_register 7
 2323 0006 7860     	 str r0,[r7,#4]
 632:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE |= (uint32_t)memory; 
 2324              	 .loc 3 632 0
 2325 0008 0549     	 ldr r1,.L164
 2326 000a 054B     	 ldr r3,.L164
 2327 000c 9A68     	 ldr r2,[r3,#8]
 2328 000e 7B68     	 ldr r3,[r7,#4]
 2329 0010 1343     	 orrs r3,r3,r2
 2330 0012 8B60     	 str r3,[r1,#8]
 633:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2331              	 .loc 3 633 0
 2332 0014 0C37     	 adds r7,r7,#12
 2333              	.LCFI215:
 2334              	 .cfi_def_cfa_offset 4
 2335 0016 BD46     	 mov sp,r7
 2336              	.LCFI216:
 2337              	 .cfi_def_cfa_register 13
 2338              	 
 2339 0018 5DF8047B 	 ldr r7,[sp],#4
 2340              	.LCFI217:
 2341              	 .cfi_restore 7
 2342              	 .cfi_def_cfa_offset 0
 2343 001c 7047     	 bx lr
 2344              	.L165:
 2345 001e 00BF     	 .align 2
 2346              	.L164:
 2347 0020 3C410050 	 .word 1342193980
 2348              	 .cfi_endproc
 2349              	.LFE203:
 2351              	 .section .text.XMC_SCU_PARITY_DisableTrapGeneration,"ax",%progbits
 2352              	 .align 2
 2353              	 .global XMC_SCU_PARITY_DisableTrapGeneration
 2354              	 .thumb
 2355              	 .thumb_func
 2357              	XMC_SCU_PARITY_DisableTrapGeneration:
 2358              	.LFB204:
 634:../Libraries/XMCLib/src/xmc4_scu.c **** 
 635:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the assertion of trap for the parity error source */
 636:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory)
 637:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2359              	 .loc 3 637 0
 2360              	 .cfi_startproc
 2361              	 
 2362              	 
 2363              	 
 2364 0000 80B4     	 push {r7}
 2365              	.LCFI218:
 2366              	 .cfi_def_cfa_offset 4
 2367              	 .cfi_offset 7,-4
 2368 0002 83B0     	 sub sp,sp,#12
 2369              	.LCFI219:
 2370              	 .cfi_def_cfa_offset 16
 2371 0004 00AF     	 add r7,sp,#0
 2372              	.LCFI220:
 2373              	 .cfi_def_cfa_register 7
 2374 0006 7860     	 str r0,[r7,#4]
 638:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE &= (uint32_t)~memory; 
 2375              	 .loc 3 638 0
 2376 0008 0549     	 ldr r1,.L167
 2377 000a 054B     	 ldr r3,.L167
 2378 000c 9A68     	 ldr r2,[r3,#8]
 2379 000e 7B68     	 ldr r3,[r7,#4]
 2380 0010 DB43     	 mvns r3,r3
 2381 0012 1340     	 ands r3,r3,r2
 2382 0014 8B60     	 str r3,[r1,#8]
 639:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2383              	 .loc 3 639 0
 2384 0016 0C37     	 adds r7,r7,#12
 2385              	.LCFI221:
 2386              	 .cfi_def_cfa_offset 4
 2387 0018 BD46     	 mov sp,r7
 2388              	.LCFI222:
 2389              	 .cfi_def_cfa_register 13
 2390              	 
 2391 001a 5DF8047B 	 ldr r7,[sp],#4
 2392              	.LCFI223:
 2393              	 .cfi_restore 7
 2394              	 .cfi_def_cfa_offset 0
 2395 001e 7047     	 bx lr
 2396              	.L168:
 2397              	 .align 2
 2398              	.L167:
 2399 0020 3C410050 	 .word 1342193980
 2400              	 .cfi_endproc
 2401              	.LFE204:
 2403              	 .section .text.XMC_SCU_INTERRUPT_EnableNmiRequest,"ax",%progbits
 2404              	 .align 2
 2405              	 .global XMC_SCU_INTERRUPT_EnableNmiRequest
 2406              	 .thumb
 2407              	 .thumb_func
 2409              	XMC_SCU_INTERRUPT_EnableNmiRequest:
 2410              	.LFB205:
 640:../Libraries/XMCLib/src/xmc4_scu.c **** 
 641:../Libraries/XMCLib/src/xmc4_scu.c **** /* Enables a NMI source */
 642:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request)
 643:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2411              	 .loc 3 643 0
 2412              	 .cfi_startproc
 2413              	 
 2414              	 
 2415              	 
 2416 0000 80B4     	 push {r7}
 2417              	.LCFI224:
 2418              	 .cfi_def_cfa_offset 4
 2419              	 .cfi_offset 7,-4
 2420 0002 83B0     	 sub sp,sp,#12
 2421              	.LCFI225:
 2422              	 .cfi_def_cfa_offset 16
 2423 0004 00AF     	 add r7,sp,#0
 2424              	.LCFI226:
 2425              	 .cfi_def_cfa_register 7
 2426 0006 7860     	 str r0,[r7,#4]
 644:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN |= (uint32_t)request;
 2427              	 .loc 3 644 0
 2428 0008 0549     	 ldr r1,.L170
 2429 000a 054B     	 ldr r3,.L170
 2430 000c 5A69     	 ldr r2,[r3,#20]
 2431 000e 7B68     	 ldr r3,[r7,#4]
 2432 0010 1343     	 orrs r3,r3,r2
 2433 0012 4B61     	 str r3,[r1,#20]
 645:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2434              	 .loc 3 645 0
 2435 0014 0C37     	 adds r7,r7,#12
 2436              	.LCFI227:
 2437              	 .cfi_def_cfa_offset 4
 2438 0016 BD46     	 mov sp,r7
 2439              	.LCFI228:
 2440              	 .cfi_def_cfa_register 13
 2441              	 
 2442 0018 5DF8047B 	 ldr r7,[sp],#4
 2443              	.LCFI229:
 2444              	 .cfi_restore 7
 2445              	 .cfi_def_cfa_offset 0
 2446 001c 7047     	 bx lr
 2447              	.L171:
 2448 001e 00BF     	 .align 2
 2449              	.L170:
 2450 0020 74400050 	 .word 1342193780
 2451              	 .cfi_endproc
 2452              	.LFE205:
 2454              	 .section .text.XMC_SCU_INTERRUPT_DisableNmiRequest,"ax",%progbits
 2455              	 .align 2
 2456              	 .global XMC_SCU_INTERRUPT_DisableNmiRequest
 2457              	 .thumb
 2458              	 .thumb_func
 2460              	XMC_SCU_INTERRUPT_DisableNmiRequest:
 2461              	.LFB206:
 646:../Libraries/XMCLib/src/xmc4_scu.c **** 
 647:../Libraries/XMCLib/src/xmc4_scu.c **** /* Disables a NMI source */
 648:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request)
 649:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2462              	 .loc 3 649 0
 2463              	 .cfi_startproc
 2464              	 
 2465              	 
 2466              	 
 2467 0000 80B4     	 push {r7}
 2468              	.LCFI230:
 2469              	 .cfi_def_cfa_offset 4
 2470              	 .cfi_offset 7,-4
 2471 0002 83B0     	 sub sp,sp,#12
 2472              	.LCFI231:
 2473              	 .cfi_def_cfa_offset 16
 2474 0004 00AF     	 add r7,sp,#0
 2475              	.LCFI232:
 2476              	 .cfi_def_cfa_register 7
 2477 0006 7860     	 str r0,[r7,#4]
 650:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN &= (uint32_t)~request;
 2478              	 .loc 3 650 0
 2479 0008 0549     	 ldr r1,.L173
 2480 000a 054B     	 ldr r3,.L173
 2481 000c 5A69     	 ldr r2,[r3,#20]
 2482 000e 7B68     	 ldr r3,[r7,#4]
 2483 0010 DB43     	 mvns r3,r3
 2484 0012 1340     	 ands r3,r3,r2
 2485 0014 4B61     	 str r3,[r1,#20]
 651:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2486              	 .loc 3 651 0
 2487 0016 0C37     	 adds r7,r7,#12
 2488              	.LCFI233:
 2489              	 .cfi_def_cfa_offset 4
 2490 0018 BD46     	 mov sp,r7
 2491              	.LCFI234:
 2492              	 .cfi_def_cfa_register 13
 2493              	 
 2494 001a 5DF8047B 	 ldr r7,[sp],#4
 2495              	.LCFI235:
 2496              	 .cfi_restore 7
 2497              	 .cfi_def_cfa_offset 0
 2498 001e 7047     	 bx lr
 2499              	.L174:
 2500              	 .align 2
 2501              	.L173:
 2502 0020 74400050 	 .word 1342193780
 2503              	 .cfi_endproc
 2504              	.LFE206:
 2506              	 .section .text.XMC_SCU_RESET_AssertPeripheralReset,"ax",%progbits
 2507              	 .align 2
 2508              	 .global XMC_SCU_RESET_AssertPeripheralReset
 2509              	 .thumb
 2510              	 .thumb_func
 2512              	XMC_SCU_RESET_AssertPeripheralReset:
 2513              	.LFB207:
 652:../Libraries/XMCLib/src/xmc4_scu.c **** 
 653:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually assert a reset request */
 654:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 655:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2514              	 .loc 3 655 0
 2515              	 .cfi_startproc
 2516              	 
 2517              	 
 2518              	 
 2519 0000 80B4     	 push {r7}
 2520              	.LCFI236:
 2521              	 .cfi_def_cfa_offset 4
 2522              	 .cfi_offset 7,-4
 2523 0002 85B0     	 sub sp,sp,#20
 2524              	.LCFI237:
 2525              	 .cfi_def_cfa_offset 24
 2526 0004 00AF     	 add r7,sp,#0
 2527              	.LCFI238:
 2528              	 .cfi_def_cfa_register 7
 2529 0006 7860     	 str r0,[r7,#4]
 656:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2530              	 .loc 3 656 0
 2531 0008 7B68     	 ldr r3,[r7,#4]
 2532 000a 1B0F     	 lsrs r3,r3,#28
 2533 000c FB60     	 str r3,[r7,#12]
 657:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2534              	 .loc 3 657 0
 2535 000e 7B68     	 ldr r3,[r7,#4]
 2536 0010 23F07043 	 bic r3,r3,#-268435456
 2537 0014 BB60     	 str r3,[r7,#8]
 658:../Libraries/XMCLib/src/xmc4_scu.c **** 
 659:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRSET0) + (index * 3U)) = (uint32_t)mask;
 2538              	 .loc 3 659 0
 2539 0016 FA68     	 ldr r2,[r7,#12]
 2540 0018 1346     	 mov r3,r2
 2541 001a 5B00     	 lsls r3,r3,#1
 2542 001c 1344     	 add r3,r3,r2
 2543 001e 9B00     	 lsls r3,r3,#2
 2544 0020 1A46     	 mov r2,r3
 2545 0022 044B     	 ldr r3,.L176
 2546 0024 1344     	 add r3,r3,r2
 2547 0026 BA68     	 ldr r2,[r7,#8]
 2548 0028 1A60     	 str r2,[r3]
 660:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2549              	 .loc 3 660 0
 2550 002a 1437     	 adds r7,r7,#20
 2551              	.LCFI239:
 2552              	 .cfi_def_cfa_offset 4
 2553 002c BD46     	 mov sp,r7
 2554              	.LCFI240:
 2555              	 .cfi_def_cfa_register 13
 2556              	 
 2557 002e 5DF8047B 	 ldr r7,[sp],#4
 2558              	.LCFI241:
 2559              	 .cfi_restore 7
 2560              	 .cfi_def_cfa_offset 0
 2561 0032 7047     	 bx lr
 2562              	.L177:
 2563              	 .align 2
 2564              	.L176:
 2565 0034 10440050 	 .word 1342194704
 2566              	 .cfi_endproc
 2567              	.LFE207:
 2569              	 .section .text.XMC_SCU_RESET_DeassertPeripheralReset,"ax",%progbits
 2570              	 .align 2
 2571              	 .global XMC_SCU_RESET_DeassertPeripheralReset
 2572              	 .thumb
 2573              	 .thumb_func
 2575              	XMC_SCU_RESET_DeassertPeripheralReset:
 2576              	.LFB208:
 661:../Libraries/XMCLib/src/xmc4_scu.c **** 
 662:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually de-assert a reset request */
 663:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 664:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2577              	 .loc 3 664 0
 2578              	 .cfi_startproc
 2579              	 
 2580              	 
 2581              	 
 2582 0000 80B4     	 push {r7}
 2583              	.LCFI242:
 2584              	 .cfi_def_cfa_offset 4
 2585              	 .cfi_offset 7,-4
 2586 0002 85B0     	 sub sp,sp,#20
 2587              	.LCFI243:
 2588              	 .cfi_def_cfa_offset 24
 2589 0004 00AF     	 add r7,sp,#0
 2590              	.LCFI244:
 2591              	 .cfi_def_cfa_register 7
 2592 0006 7860     	 str r0,[r7,#4]
 665:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2593              	 .loc 3 665 0
 2594 0008 7B68     	 ldr r3,[r7,#4]
 2595 000a 1B0F     	 lsrs r3,r3,#28
 2596 000c FB60     	 str r3,[r7,#12]
 666:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2597              	 .loc 3 666 0
 2598 000e 7B68     	 ldr r3,[r7,#4]
 2599 0010 23F07043 	 bic r3,r3,#-268435456
 2600 0014 BB60     	 str r3,[r7,#8]
 667:../Libraries/XMCLib/src/xmc4_scu.c **** 
 668:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRCLR0) + (index * 3U)) = (uint32_t)mask;
 2601              	 .loc 3 668 0
 2602 0016 FA68     	 ldr r2,[r7,#12]
 2603 0018 1346     	 mov r3,r2
 2604 001a 5B00     	 lsls r3,r3,#1
 2605 001c 1344     	 add r3,r3,r2
 2606 001e 9B00     	 lsls r3,r3,#2
 2607 0020 1A46     	 mov r2,r3
 2608 0022 044B     	 ldr r3,.L179
 2609 0024 1344     	 add r3,r3,r2
 2610 0026 BA68     	 ldr r2,[r7,#8]
 2611 0028 1A60     	 str r2,[r3]
 669:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2612              	 .loc 3 669 0
 2613 002a 1437     	 adds r7,r7,#20
 2614              	.LCFI245:
 2615              	 .cfi_def_cfa_offset 4
 2616 002c BD46     	 mov sp,r7
 2617              	.LCFI246:
 2618              	 .cfi_def_cfa_register 13
 2619              	 
 2620 002e 5DF8047B 	 ldr r7,[sp],#4
 2621              	.LCFI247:
 2622              	 .cfi_restore 7
 2623              	 .cfi_def_cfa_offset 0
 2624 0032 7047     	 bx lr
 2625              	.L180:
 2626              	 .align 2
 2627              	.L179:
 2628 0034 14440050 	 .word 1342194708
 2629              	 .cfi_endproc
 2630              	.LFE208:
 2632              	 .section .text.XMC_SCU_RESET_IsPeripheralResetAsserted,"ax",%progbits
 2633              	 .align 2
 2634              	 .global XMC_SCU_RESET_IsPeripheralResetAsserted
 2635              	 .thumb
 2636              	 .thumb_func
 2638              	XMC_SCU_RESET_IsPeripheralResetAsserted:
 2639              	.LFB209:
 670:../Libraries/XMCLib/src/xmc4_scu.c **** 
 671:../Libraries/XMCLib/src/xmc4_scu.c **** /* Find out if the peripheral reset is asserted */
 672:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 673:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2640              	 .loc 3 673 0
 2641              	 .cfi_startproc
 2642              	 
 2643              	 
 2644              	 
 2645 0000 80B4     	 push {r7}
 2646              	.LCFI248:
 2647              	 .cfi_def_cfa_offset 4
 2648              	 .cfi_offset 7,-4
 2649 0002 85B0     	 sub sp,sp,#20
 2650              	.LCFI249:
 2651              	 .cfi_def_cfa_offset 24
 2652 0004 00AF     	 add r7,sp,#0
 2653              	.LCFI250:
 2654              	 .cfi_def_cfa_register 7
 2655 0006 7860     	 str r0,[r7,#4]
 674:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2656              	 .loc 3 674 0
 2657 0008 7B68     	 ldr r3,[r7,#4]
 2658 000a 1B0F     	 lsrs r3,r3,#28
 2659 000c FB60     	 str r3,[r7,#12]
 675:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2660              	 .loc 3 675 0
 2661 000e 7B68     	 ldr r3,[r7,#4]
 2662 0010 23F07043 	 bic r3,r3,#-268435456
 2663 0014 BB60     	 str r3,[r7,#8]
 676:../Libraries/XMCLib/src/xmc4_scu.c **** 
 677:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_RESET->PRSTAT0) + (index * 3U)) & mask) != 0U);
 2664              	 .loc 3 677 0
 2665 0016 FA68     	 ldr r2,[r7,#12]
 2666 0018 1346     	 mov r3,r2
 2667 001a 5B00     	 lsls r3,r3,#1
 2668 001c 1344     	 add r3,r3,r2
 2669 001e 9B00     	 lsls r3,r3,#2
 2670 0020 1A46     	 mov r2,r3
 2671 0022 084B     	 ldr r3,.L183
 2672 0024 1344     	 add r3,r3,r2
 2673 0026 1A68     	 ldr r2,[r3]
 2674 0028 BB68     	 ldr r3,[r7,#8]
 2675 002a 1340     	 ands r3,r3,r2
 2676 002c 002B     	 cmp r3,#0
 2677 002e 14BF     	 ite ne
 2678 0030 0123     	 movne r3,#1
 2679 0032 0023     	 moveq r3,#0
 2680 0034 DBB2     	 uxtb r3,r3
 678:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2681              	 .loc 3 678 0
 2682 0036 1846     	 mov r0,r3
 2683 0038 1437     	 adds r7,r7,#20
 2684              	.LCFI251:
 2685              	 .cfi_def_cfa_offset 4
 2686 003a BD46     	 mov sp,r7
 2687              	.LCFI252:
 2688              	 .cfi_def_cfa_register 13
 2689              	 
 2690 003c 5DF8047B 	 ldr r7,[sp],#4
 2691              	.LCFI253:
 2692              	 .cfi_restore 7
 2693              	 .cfi_def_cfa_offset 0
 2694 0040 7047     	 bx lr
 2695              	.L184:
 2696 0042 00BF     	 .align 2
 2697              	.L183:
 2698 0044 0C440050 	 .word 1342194700
 2699              	 .cfi_endproc
 2700              	.LFE209:
 2702              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency,"ax",%progbits
 2703              	 .align 2
 2704              	 .global XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2705              	 .thumb
 2706              	 .thumb_func
 2708              	XMC_SCU_CLOCK_GetSystemPllClockFrequency:
 2709              	.LFB210:
 679:../Libraries/XMCLib/src/xmc4_scu.c **** 
 680:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 681:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL output clock
 682:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 683:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void)
 684:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2710              	 .loc 3 684 0
 2711              	 .cfi_startproc
 2712              	 
 2713              	 
 2714 0000 80B5     	 push {r7,lr}
 2715              	.LCFI254:
 2716              	 .cfi_def_cfa_offset 8
 2717              	 .cfi_offset 7,-8
 2718              	 .cfi_offset 14,-4
 2719 0002 84B0     	 sub sp,sp,#16
 2720              	.LCFI255:
 2721              	 .cfi_def_cfa_offset 24
 2722 0004 00AF     	 add r7,sp,#0
 2723              	.LCFI256:
 2724              	 .cfi_def_cfa_register 7
 685:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 686:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 687:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 688:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t k2_div;
 689:../Libraries/XMCLib/src/xmc4_scu.c **** 
 690:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency();
 2725              	 .loc 3 690 0
 2726 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2727 000a F860     	 str r0,[r7,#12]
 691:../Libraries/XMCLib/src/xmc4_scu.c ****   if(SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 2728              	 .loc 3 691 0
 2729 000c 1A4B     	 ldr r3,.L189
 2730 000e 1B68     	 ldr r3,[r3]
 2731 0010 03F00103 	 and r3,r3,#1
 2732 0014 002B     	 cmp r3,#0
 2733 0016 09D0     	 beq .L186
 692:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 693:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Prescalar mode - fOSC is the parent*/
 694:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)(clock_frequency / 
 695:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2734              	 .loc 3 695 0
 2735 0018 174B     	 ldr r3,.L189
 2736 001a 9B68     	 ldr r3,[r3,#8]
 2737 001c 03F07F03 	 and r3,r3,#127
 2738 0020 0133     	 adds r3,r3,#1
 694:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2739              	 .loc 3 694 0
 2740 0022 FA68     	 ldr r2,[r7,#12]
 2741 0024 B2FBF3F3 	 udiv r3,r2,r3
 2742 0028 FB60     	 str r3,[r7,#12]
 2743 002a 1FE0     	 b .L187
 2744              	.L186:
 696:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 697:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 698:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 699:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Po
 2745              	 .loc 3 699 0
 2746 002c 124B     	 ldr r3,.L189
 2747 002e 9B68     	 ldr r3,[r3,#8]
 2748 0030 03F07063 	 and r3,r3,#251658240
 2749 0034 1B0E     	 lsrs r3,r3,#24
 2750 0036 0133     	 adds r3,r3,#1
 2751 0038 BB60     	 str r3,[r7,#8]
 700:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 2752              	 .loc 3 700 0
 2753 003a 0F4B     	 ldr r3,.L189
 2754 003c 9B68     	 ldr r3,[r3,#8]
 2755 003e 03F4FE43 	 and r3,r3,#32512
 2756 0042 1B0A     	 lsrs r3,r3,#8
 2757 0044 0133     	 adds r3,r3,#1
 2758 0046 7B60     	 str r3,[r7,#4]
 701:../Libraries/XMCLib/src/xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 2759              	 .loc 3 701 0
 2760 0048 0B4B     	 ldr r3,.L189
 2761 004a 9B68     	 ldr r3,[r3,#8]
 2762 004c 03F4FE03 	 and r3,r3,#8323072
 2763 0050 1B0C     	 lsrs r3,r3,#16
 2764 0052 0133     	 adds r3,r3,#1
 2765 0054 3B60     	 str r3,[r7]
 702:../Libraries/XMCLib/src/xmc4_scu.c ****        
 703:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (clock_frequency * n_div) / (p_div * k2_div);
 2766              	 .loc 3 703 0
 2767 0056 FB68     	 ldr r3,[r7,#12]
 2768 0058 7A68     	 ldr r2,[r7,#4]
 2769 005a 02FB03F2 	 mul r2,r2,r3
 2770 005e BB68     	 ldr r3,[r7,#8]
 2771 0060 3968     	 ldr r1,[r7]
 2772 0062 01FB03F3 	 mul r3,r1,r3
 2773 0066 B2FBF3F3 	 udiv r3,r2,r3
 2774 006a FB60     	 str r3,[r7,#12]
 2775              	.L187:
 704:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 705:../Libraries/XMCLib/src/xmc4_scu.c **** 
 706:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2776              	 .loc 3 706 0
 2777 006c FB68     	 ldr r3,[r7,#12]
 707:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2778              	 .loc 3 707 0
 2779 006e 1846     	 mov r0,r3
 2780 0070 1037     	 adds r7,r7,#16
 2781              	.LCFI257:
 2782              	 .cfi_def_cfa_offset 8
 2783 0072 BD46     	 mov sp,r7
 2784              	.LCFI258:
 2785              	 .cfi_def_cfa_register 13
 2786              	 
 2787 0074 80BD     	 pop {r7,pc}
 2788              	.L190:
 2789 0076 00BF     	 .align 2
 2790              	.L189:
 2791 0078 10470050 	 .word 1342195472
 2792              	 .cfi_endproc
 2793              	.LFE210:
 2795              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency,"ax",%progbits
 2796              	 .align 2
 2797              	 .global XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2798              	 .thumb
 2799              	 .thumb_func
 2801              	XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:
 2802              	.LFB211:
 708:../Libraries/XMCLib/src/xmc4_scu.c **** 
 709:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 710:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL VCO input clock
 711:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 712:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void)
 713:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2803              	 .loc 3 713 0
 2804              	 .cfi_startproc
 2805              	 
 2806              	 
 2807 0000 80B5     	 push {r7,lr}
 2808              	.LCFI259:
 2809              	 .cfi_def_cfa_offset 8
 2810              	 .cfi_offset 7,-8
 2811              	 .cfi_offset 14,-4
 2812 0002 82B0     	 sub sp,sp,#8
 2813              	.LCFI260:
 2814              	 .cfi_def_cfa_offset 16
 2815 0004 00AF     	 add r7,sp,#0
 2816              	.LCFI261:
 2817              	 .cfi_def_cfa_register 7
 714:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 715:../Libraries/XMCLib/src/xmc4_scu.c **** 
 716:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Prescalar mode - fOSC is the parent*/
 717:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk) == (uint32_t)XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 2818              	 .loc 3 717 0
 2819 0006 084B     	 ldr r3,.L195
 2820 0008 DB68     	 ldr r3,[r3,#12]
 2821 000a 03F00103 	 and r3,r3,#1
 2822 000e 002B     	 cmp r3,#0
 2823 0010 03D1     	 bne .L192
 718:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 719:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OSCHP_GetFrequency();
 2824              	 .loc 3 719 0
 2825 0012 FFF7FEFF 	 bl OSCHP_GetFrequency
 2826 0016 7860     	 str r0,[r7,#4]
 2827 0018 01E0     	 b .L193
 2828              	.L192:
 720:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 721:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 722:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 723:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OFI_FREQUENCY;
 2829              	 .loc 3 723 0
 2830 001a 044B     	 ldr r3,.L195+4
 2831 001c 7B60     	 str r3,[r7,#4]
 2832              	.L193:
 724:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 725:../Libraries/XMCLib/src/xmc4_scu.c ****   
 726:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2833              	 .loc 3 726 0
 2834 001e 7B68     	 ldr r3,[r7,#4]
 727:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2835              	 .loc 3 727 0
 2836 0020 1846     	 mov r0,r3
 2837 0022 0837     	 adds r7,r7,#8
 2838              	.LCFI262:
 2839              	 .cfi_def_cfa_offset 8
 2840 0024 BD46     	 mov sp,r7
 2841              	.LCFI263:
 2842              	 .cfi_def_cfa_register 13
 2843              	 
 2844 0026 80BD     	 pop {r7,pc}
 2845              	.L196:
 2846              	 .align 2
 2847              	.L195:
 2848 0028 10470050 	 .word 1342195472
 2849 002c 00366E01 	 .word 24000000
 2850              	 .cfi_endproc
 2851              	.LFE211:
 2853              	 .section .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency,"ax",%progbits
 2854              	 .align 2
 2855              	 .global XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2856              	 .thumb
 2857              	 .thumb_func
 2859              	XMC_SCU_CLOCK_GetUsbPllClockFrequency:
 2860              	.LFB212:
 728:../Libraries/XMCLib/src/xmc4_scu.c **** 
 729:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 730:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of USB PLL output clock
 731:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 732:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void)
 733:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2861              	 .loc 3 733 0
 2862              	 .cfi_startproc
 2863              	 
 2864              	 
 2865 0000 80B5     	 push {r7,lr}
 2866              	.LCFI264:
 2867              	 .cfi_def_cfa_offset 8
 2868              	 .cfi_offset 7,-8
 2869              	 .cfi_offset 14,-4
 2870 0002 84B0     	 sub sp,sp,#16
 2871              	.LCFI265:
 2872              	 .cfi_def_cfa_offset 24
 2873 0004 00AF     	 add r7,sp,#0
 2874              	.LCFI266:
 2875              	 .cfi_def_cfa_register 7
 734:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 735:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 736:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 737:../Libraries/XMCLib/src/xmc4_scu.c ****   
 738:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = OSCHP_GetFrequency();
 2876              	 .loc 3 738 0
 2877 0006 FFF7FEFF 	 bl OSCHP_GetFrequency
 2878 000a F860     	 str r0,[r7,#12]
 739:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 2879              	 .loc 3 739 0
 2880 000c 104B     	 ldr r3,.L200
 2881 000e 1B69     	 ldr r3,[r3,#16]
 2882 0010 03F00103 	 and r3,r3,#1
 2883 0014 002B     	 cmp r3,#0
 2884 0016 16D1     	 bne .L198
 740:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 741:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Normal mode - fVCO is the parent*/
 742:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_NDIV_Msk) >> SCU_PLL_USBPLLCON_ND
 2885              	 .loc 3 742 0
 2886 0018 0D4B     	 ldr r3,.L200
 2887 001a 5B69     	 ldr r3,[r3,#20]
 2888 001c 03F4FE43 	 and r3,r3,#32512
 2889 0020 1B0A     	 lsrs r3,r3,#8
 2890 0022 0133     	 adds r3,r3,#1
 2891 0024 BB60     	 str r3,[r7,#8]
 743:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 2892              	 .loc 3 743 0
 2893 0026 0A4B     	 ldr r3,.L200
 2894 0028 5B69     	 ldr r3,[r3,#20]
 2895 002a 03F07063 	 and r3,r3,#251658240
 2896 002e 1B0E     	 lsrs r3,r3,#24
 2897 0030 0133     	 adds r3,r3,#1
 2898 0032 7B60     	 str r3,[r7,#4]
 744:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)((clock_frequency * n_div)/ (uint32_t)(p_div * 2UL));
 2899              	 .loc 3 744 0
 2900 0034 FB68     	 ldr r3,[r7,#12]
 2901 0036 BA68     	 ldr r2,[r7,#8]
 2902 0038 02FB03F2 	 mul r2,r2,r3
 2903 003c 7B68     	 ldr r3,[r7,#4]
 2904 003e 5B00     	 lsls r3,r3,#1
 2905 0040 B2FBF3F3 	 udiv r3,r2,r3
 2906 0044 FB60     	 str r3,[r7,#12]
 2907              	.L198:
 745:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 746:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2908              	 .loc 3 746 0
 2909 0046 FB68     	 ldr r3,[r7,#12]
 747:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2910              	 .loc 3 747 0
 2911 0048 1846     	 mov r0,r3
 2912 004a 1037     	 adds r7,r7,#16
 2913              	.LCFI267:
 2914              	 .cfi_def_cfa_offset 8
 2915 004c BD46     	 mov sp,r7
 2916              	.LCFI268:
 2917              	 .cfi_def_cfa_register 13
 2918              	 
 2919 004e 80BD     	 pop {r7,pc}
 2920              	.L201:
 2921              	 .align 2
 2922              	.L200:
 2923 0050 10470050 	 .word 1342195472
 2924              	 .cfi_endproc
 2925              	.LFE212:
 2927              	 .section .text.XMC_SCU_CLOCK_GetCcuClockFrequency,"ax",%progbits
 2928              	 .align 2
 2929              	 .global XMC_SCU_CLOCK_GetCcuClockFrequency
 2930              	 .thumb
 2931              	 .thumb_func
 2933              	XMC_SCU_CLOCK_GetCcuClockFrequency:
 2934              	.LFB213:
 748:../Libraries/XMCLib/src/xmc4_scu.c **** 
 749:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 750:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of CCU clock frequency
 751:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 752:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void)
 753:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2935              	 .loc 3 753 0
 2936              	 .cfi_startproc
 2937              	 
 2938              	 
 2939 0000 80B5     	 push {r7,lr}
 2940              	.LCFI269:
 2941              	 .cfi_def_cfa_offset 8
 2942              	 .cfi_offset 7,-8
 2943              	 .cfi_offset 14,-4
 2944 0002 82B0     	 sub sp,sp,#8
 2945              	.LCFI270:
 2946              	 .cfi_def_cfa_offset 16
 2947 0004 00AF     	 add r7,sp,#0
 2948              	.LCFI271:
 2949              	 .cfi_def_cfa_register 7
 754:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2950              	 .loc 3 754 0
 2951 0006 0023     	 movs r3,#0
 2952 0008 7B60     	 str r3,[r7,#4]
 755:../Libraries/XMCLib/src/xmc4_scu.c ****   frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2953              	 .loc 3 755 0
 2954 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2955 000e 7860     	 str r0,[r7,#4]
 756:../Libraries/XMCLib/src/xmc4_scu.c ****   
 757:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency >> ((uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >>
 2956              	 .loc 3 757 0
 2957 0010 054B     	 ldr r3,.L204
 2958 0012 1B6A     	 ldr r3,[r3,#32]
 2959 0014 03F00103 	 and r3,r3,#1
 2960 0018 7A68     	 ldr r2,[r7,#4]
 2961 001a 22FA03F3 	 lsr r3,r2,r3
 758:../Libraries/XMCLib/src/xmc4_scu.c ****                                               SCU_CLK_CCUCLKCR_CCUDIV_Pos)));
 759:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2962              	 .loc 3 759 0
 2963 001e 1846     	 mov r0,r3
 2964 0020 0837     	 adds r7,r7,#8
 2965              	.LCFI272:
 2966              	 .cfi_def_cfa_offset 8
 2967 0022 BD46     	 mov sp,r7
 2968              	.LCFI273:
 2969              	 .cfi_def_cfa_register 13
 2970              	 
 2971 0024 80BD     	 pop {r7,pc}
 2972              	.L205:
 2973 0026 00BF     	 .align 2
 2974              	.L204:
 2975 0028 00460050 	 .word 1342195200
 2976              	 .cfi_endproc
 2977              	.LFE213:
 2979              	 .section .text.XMC_SCU_CLOCK_GetUsbClockFrequency,"ax",%progbits
 2980              	 .align 2
 2981              	 .global XMC_SCU_CLOCK_GetUsbClockFrequency
 2982              	 .thumb
 2983              	 .thumb_func
 2985              	XMC_SCU_CLOCK_GetUsbClockFrequency:
 2986              	.LFB214:
 760:../Libraries/XMCLib/src/xmc4_scu.c **** 
 761:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 762:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve USB and SDMMC clock frequency
 763:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 764:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void)
 765:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2987              	 .loc 3 765 0
 2988              	 .cfi_startproc
 2989              	 
 2990              	 
 2991 0000 80B5     	 push {r7,lr}
 2992              	.LCFI274:
 2993              	 .cfi_def_cfa_offset 8
 2994              	 .cfi_offset 7,-8
 2995              	 .cfi_offset 14,-4
 2996 0002 82B0     	 sub sp,sp,#8
 2997              	.LCFI275:
 2998              	 .cfi_def_cfa_offset 16
 2999 0004 00AF     	 add r7,sp,#0
 3000              	.LCFI276:
 3001              	 .cfi_def_cfa_register 7
 766:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3002              	 .loc 3 766 0
 3003 0006 0023     	 movs r3,#0
 3004 0008 7B60     	 str r3,[r7,#4]
 767:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 768:../Libraries/XMCLib/src/xmc4_scu.c **** 
 769:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetUsbClockSource();
 3005              	 .loc 3 769 0
 3006 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbClockSource
 3007 000e 3860     	 str r0,[r7]
 770:../Libraries/XMCLib/src/xmc4_scu.c **** 
 771:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_SYSPLL)
 3008              	 .loc 3 771 0
 3009 0010 3B68     	 ldr r3,[r7]
 3010 0012 B3F5803F 	 cmp r3,#65536
 3011 0016 03D1     	 bne .L207
 772:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 773:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3012              	 .loc 3 773 0
 3013 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3014 001c 7860     	 str r0,[r7,#4]
 3015 001e 05E0     	 b .L208
 3016              	.L207:
 774:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 775:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_USBPLL)
 3017              	 .loc 3 775 0
 3018 0020 3B68     	 ldr r3,[r7]
 3019 0022 002B     	 cmp r3,#0
 3020 0024 02D1     	 bne .L208
 776:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 777:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 3021              	 .loc 3 777 0
 3022 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 3023 002a 7860     	 str r0,[r7,#4]
 3024              	.L208:
 778:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 779:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 780:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 781:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 782:../Libraries/XMCLib/src/xmc4_scu.c **** 
 783:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency / (((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >>
 3025              	 .loc 3 783 0
 3026 002c 054B     	 ldr r3,.L210
 3027 002e 9B69     	 ldr r3,[r3,#24]
 3028 0030 03F00703 	 and r3,r3,#7
 784:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 3029              	 .loc 3 784 0
 3030 0034 0133     	 adds r3,r3,#1
 783:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 3031              	 .loc 3 783 0
 3032 0036 7A68     	 ldr r2,[r7,#4]
 3033 0038 B2FBF3F3 	 udiv r3,r2,r3
 785:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3034              	 .loc 3 785 0
 3035 003c 1846     	 mov r0,r3
 3036 003e 0837     	 adds r7,r7,#8
 3037              	.LCFI277:
 3038              	 .cfi_def_cfa_offset 8
 3039 0040 BD46     	 mov sp,r7
 3040              	.LCFI278:
 3041              	 .cfi_def_cfa_register 13
 3042              	 
 3043 0042 80BD     	 pop {r7,pc}
 3044              	.L211:
 3045              	 .align 2
 3046              	.L210:
 3047 0044 00460050 	 .word 1342195200
 3048              	 .cfi_endproc
 3049              	.LFE214:
 3051              	 .section .text.XMC_SCU_CLOCK_GetWdtClockFrequency,"ax",%progbits
 3052              	 .align 2
 3053              	 .global XMC_SCU_CLOCK_GetWdtClockFrequency
 3054              	 .thumb
 3055              	 .thumb_func
 3057              	XMC_SCU_CLOCK_GetWdtClockFrequency:
 3058              	.LFB215:
 786:../Libraries/XMCLib/src/xmc4_scu.c **** 
 787:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
 788:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 789:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve EBU clock frequency
 790:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 791:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetEbuClockFrequency(void)
 792:../Libraries/XMCLib/src/xmc4_scu.c **** {
 793:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 794:../Libraries/XMCLib/src/xmc4_scu.c ****   
 795:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency /(((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >>
 796:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 797:../Libraries/XMCLib/src/xmc4_scu.c **** }
 798:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 799:../Libraries/XMCLib/src/xmc4_scu.c **** 
 800:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
 801:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 802:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve ECAT clock frequency
 803:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 804:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetECATClockFrequency(void)
 805:../Libraries/XMCLib/src/xmc4_scu.c **** {
 806:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency;
 807:../Libraries/XMCLib/src/xmc4_scu.c **** 
 808:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) != 0U)
 809:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 810:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 811:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 812:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 813:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 814:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 815:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 816:../Libraries/XMCLib/src/xmc4_scu.c **** 
 817:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (XMC_SCU_CLOCK_GetECATClockDivider() + 1UL)));
 818:../Libraries/XMCLib/src/xmc4_scu.c **** }
 819:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 820:../Libraries/XMCLib/src/xmc4_scu.c **** 
 821:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 822:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve WDT clock frequency
 823:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 824:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetWdtClockFrequency(void)
 825:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3059              	 .loc 3 825 0
 3060              	 .cfi_startproc
 3061              	 
 3062              	 
 3063 0000 80B5     	 push {r7,lr}
 3064              	.LCFI279:
 3065              	 .cfi_def_cfa_offset 8
 3066              	 .cfi_offset 7,-8
 3067              	 .cfi_offset 14,-4
 3068 0002 82B0     	 sub sp,sp,#8
 3069              	.LCFI280:
 3070              	 .cfi_def_cfa_offset 16
 3071 0004 00AF     	 add r7,sp,#0
 3072              	.LCFI281:
 3073              	 .cfi_def_cfa_register 7
 826:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3074              	 .loc 3 826 0
 3075 0006 0023     	 movs r3,#0
 3076 0008 7B60     	 str r3,[r7,#4]
 827:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_WDTCLKSRC_t clksrc;
 828:../Libraries/XMCLib/src/xmc4_scu.c **** 
 829:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetWdtClockSource();
 3077              	 .loc 3 829 0
 3078 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetWdtClockSource
 3079 000e 3860     	 str r0,[r7]
 830:../Libraries/XMCLib/src/xmc4_scu.c **** 
 831:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_PLL)
 3080              	 .loc 3 831 0
 3081 0010 3B68     	 ldr r3,[r7]
 3082 0012 B3F5003F 	 cmp r3,#131072
 3083 0016 03D1     	 bne .L213
 832:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 833:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3084              	 .loc 3 833 0
 3085 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3086 001c 7860     	 str r0,[r7,#4]
 3087 001e 0CE0     	 b .L214
 3088              	.L213:
 834:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 835:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_OFI)
 3089              	 .loc 3 835 0
 3090 0020 3B68     	 ldr r3,[r7]
 3091 0022 002B     	 cmp r3,#0
 3092 0024 02D1     	 bne .L215
 836:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 837:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OFI_FREQUENCY;
 3093              	 .loc 3 837 0
 3094 0026 0A4B     	 ldr r3,.L217
 3095 0028 7B60     	 str r3,[r7,#4]
 3096 002a 06E0     	 b .L214
 3097              	.L215:
 838:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 839:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_STDBY)
 3098              	 .loc 3 839 0
 3099 002c 3B68     	 ldr r3,[r7]
 3100 002e B3F5803F 	 cmp r3,#65536
 3101 0032 02D1     	 bne .L214
 840:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 841:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OSI_FREQUENCY;
 3102              	 .loc 3 841 0
 3103 0034 4FF40043 	 mov r3,#32768
 3104 0038 7B60     	 str r3,[r7,#4]
 3105              	.L214:
 842:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 843:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 844:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 845:../Libraries/XMCLib/src/xmc4_scu.c **** 
 846:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 847:../Libraries/XMCLib/src/xmc4_scu.c **** 
 848:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >>
 3106              	 .loc 3 848 0
 3107 003a 064B     	 ldr r3,.L217+4
 3108 003c 5B6A     	 ldr r3,[r3,#36]
 3109 003e DBB2     	 uxtb r3,r3
 849:../Libraries/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 3110              	 .loc 3 849 0
 3111 0040 0133     	 adds r3,r3,#1
 848:../Libraries/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 3112              	 .loc 3 848 0
 3113 0042 7A68     	 ldr r2,[r7,#4]
 3114 0044 B2FBF3F3 	 udiv r3,r2,r3
 850:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3115              	 .loc 3 850 0
 3116 0048 1846     	 mov r0,r3
 3117 004a 0837     	 adds r7,r7,#8
 3118              	.LCFI282:
 3119              	 .cfi_def_cfa_offset 8
 3120 004c BD46     	 mov sp,r7
 3121              	.LCFI283:
 3122              	 .cfi_def_cfa_register 13
 3123              	 
 3124 004e 80BD     	 pop {r7,pc}
 3125              	.L218:
 3126              	 .align 2
 3127              	.L217:
 3128 0050 00366E01 	 .word 24000000
 3129 0054 00460050 	 .word 1342195200
 3130              	 .cfi_endproc
 3131              	.LFE215:
 3133              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency,"ax",%progbits
 3134              	 .align 2
 3135              	 .global XMC_SCU_CLOCK_GetExternalOutputClockFrequency
 3136              	 .thumb
 3137              	 .thumb_func
 3139              	XMC_SCU_CLOCK_GetExternalOutputClockFrequency:
 3140              	.LFB216:
 851:../Libraries/XMCLib/src/xmc4_scu.c **** 
 852:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 853:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief API to retrieve EXTERNAL-OUT clock frequency
 854:../Libraries/XMCLib/src/xmc4_scu.c ****  * @retval Clock frequency
 855:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 856:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetExternalOutputClockFrequency(void)
 857:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3141              	 .loc 3 857 0
 3142              	 .cfi_startproc
 3143              	 
 3144              	 
 3145 0000 80B5     	 push {r7,lr}
 3146              	.LCFI284:
 3147              	 .cfi_def_cfa_offset 8
 3148              	 .cfi_offset 7,-8
 3149              	 .cfi_offset 14,-4
 3150 0002 82B0     	 sub sp,sp,#8
 3151              	.LCFI285:
 3152              	 .cfi_def_cfa_offset 16
 3153 0004 00AF     	 add r7,sp,#0
 3154              	.LCFI286:
 3155              	 .cfi_def_cfa_register 7
 858:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3156              	 .loc 3 858 0
 3157 0006 0023     	 movs r3,#0
 3158 0008 7B60     	 str r3,[r7,#4]
 859:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 860:../Libraries/XMCLib/src/xmc4_scu.c **** 
 861:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetExternalOutputClockSource();
 3159              	 .loc 3 861 0
 3160 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetExternalOutputClockSource
 3161 000e 0346     	 mov r3,r0
 3162 0010 FB70     	 strb r3,[r7,#3]
 862:../Libraries/XMCLib/src/xmc4_scu.c **** 
 863:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL)
 3163              	 .loc 3 863 0
 3164 0012 FB78     	 ldrb r3,[r7,#3]
 3165 0014 032B     	 cmp r3,#3
 3166 0016 0DD1     	 bne .L220
 864:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 865:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3167              	 .loc 3 865 0
 3168 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3169 001c 7860     	 str r0,[r7,#4]
 866:../Libraries/XMCLib/src/xmc4_scu.c ****     
 867:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3170              	 .loc 3 867 0
 3171 001e 134B     	 ldr r3,.L224
 3172 0020 9A6A     	 ldr r2,[r3,#40]
 3173 0022 134B     	 ldr r3,.L224+4
 3174 0024 1340     	 ands r3,r3,r2
 3175 0026 1B0C     	 lsrs r3,r3,#16
 868:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3176              	 .loc 3 868 0
 3177 0028 0133     	 adds r3,r3,#1
 867:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3178              	 .loc 3 867 0
 3179 002a 7A68     	 ldr r2,[r7,#4]
 3180 002c B2FBF3F3 	 udiv r3,r2,r3
 3181 0030 7B60     	 str r3,[r7,#4]
 3182 0032 16E0     	 b .L221
 3183              	.L220:
 869:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 870:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS)
 3184              	 .loc 3 870 0
 3185 0034 FB78     	 ldrb r3,[r7,#3]
 3186 0036 002B     	 cmp r3,#0
 3187 0038 03D1     	 bne .L222
 871:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 872:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 3188              	 .loc 3 872 0
 3189 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 3190 003e 7860     	 str r0,[r7,#4]
 3191 0040 0FE0     	 b .L221
 3192              	.L222:
 873:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 874:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_USB)
 3193              	 .loc 3 874 0
 3194 0042 FB78     	 ldrb r3,[r7,#3]
 3195 0044 022B     	 cmp r3,#2
 3196 0046 0CD1     	 bne .L221
 875:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 876:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 3197              	 .loc 3 876 0
 3198 0048 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 3199 004c 7860     	 str r0,[r7,#4]
 877:../Libraries/XMCLib/src/xmc4_scu.c ****     
 878:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3200              	 .loc 3 878 0
 3201 004e 074B     	 ldr r3,.L224
 3202 0050 9A6A     	 ldr r2,[r3,#40]
 3203 0052 074B     	 ldr r3,.L224+4
 3204 0054 1340     	 ands r3,r3,r2
 3205 0056 1B0C     	 lsrs r3,r3,#16
 879:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3206              	 .loc 3 879 0
 3207 0058 0133     	 adds r3,r3,#1
 878:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3208              	 .loc 3 878 0
 3209 005a 7A68     	 ldr r2,[r7,#4]
 3210 005c B2FBF3F3 	 udiv r3,r2,r3
 3211 0060 7B60     	 str r3,[r7,#4]
 3212              	.L221:
 880:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 881:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 882:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 883:../Libraries/XMCLib/src/xmc4_scu.c **** 
 884:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 885:../Libraries/XMCLib/src/xmc4_scu.c **** 
 886:../Libraries/XMCLib/src/xmc4_scu.c ****   return (frequency);
 3213              	 .loc 3 886 0
 3214 0062 7B68     	 ldr r3,[r7,#4]
 887:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3215              	 .loc 3 887 0
 3216 0064 1846     	 mov r0,r3
 3217 0066 0837     	 adds r7,r7,#8
 3218              	.LCFI287:
 3219              	 .cfi_def_cfa_offset 8
 3220 0068 BD46     	 mov sp,r7
 3221              	.LCFI288:
 3222              	 .cfi_def_cfa_register 13
 3223              	 
 3224 006a 80BD     	 pop {r7,pc}
 3225              	.L225:
 3226              	 .align 2
 3227              	.L224:
 3228 006c 00460050 	 .word 1342195200
 3229 0070 0000FF01 	 .word 33488896
 3230              	 .cfi_endproc
 3231              	.LFE216:
 3233              	 .section .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency,"ax",%progbits
 3234              	 .align 2
 3235              	 .global XMC_SCU_CLOCK_GetPeripheralClockFrequency
 3236              	 .thumb
 3237              	 .thumb_func
 3239              	XMC_SCU_CLOCK_GetPeripheralClockFrequency:
 3240              	.LFB217:
 888:../Libraries/XMCLib/src/xmc4_scu.c **** 
 889:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 890:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve clock frequency of peripherals on the peripheral bus using a shared functional c
 891:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 892:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void)
 893:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3241              	 .loc 3 893 0
 3242              	 .cfi_startproc
 3243              	 
 3244              	 
 3245 0000 80B5     	 push {r7,lr}
 3246              	.LCFI289:
 3247              	 .cfi_def_cfa_offset 8
 3248              	 .cfi_offset 7,-8
 3249              	 .cfi_offset 14,-4
 3250 0002 00AF     	 add r7,sp,#0
 3251              	.LCFI290:
 3252              	 .cfi_def_cfa_register 7
 894:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3253              	 .loc 3 894 0
 3254 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCpuClockFrequency
 3255 0008 0246     	 mov r2,r0
 895:../Libraries/XMCLib/src/xmc4_scu.c ****          ((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos));  
 3256              	 .loc 3 895 0
 3257 000a 044B     	 ldr r3,.L228
 3258 000c 5B69     	 ldr r3,[r3,#20]
 894:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3259              	 .loc 3 894 0
 3260 000e 03F00103 	 and r3,r3,#1
 3261 0012 22FA03F3 	 lsr r3,r2,r3
 896:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3262              	 .loc 3 896 0
 3263 0016 1846     	 mov r0,r3
 3264 0018 80BD     	 pop {r7,pc}
 3265              	.L229:
 3266 001a 00BF     	 .align 2
 3267              	.L228:
 3268 001c 00460050 	 .word 1342195200
 3269              	 .cfi_endproc
 3270              	.LFE217:
 3272              	 .section .text.XMC_SCU_CLOCK_SetSystemClockSource,"ax",%progbits
 3273              	 .align 2
 3274              	 .global XMC_SCU_CLOCK_SetSystemClockSource
 3275              	 .thumb
 3276              	 .thumb_func
 3278              	XMC_SCU_CLOCK_SetSystemClockSource:
 3279              	.LFB218:
 897:../Libraries/XMCLib/src/xmc4_scu.c **** 
 898:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSYS */
 899:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source)
 900:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3280              	 .loc 3 900 0
 3281              	 .cfi_startproc
 3282              	 
 3283              	 
 3284              	 
 3285 0000 80B4     	 push {r7}
 3286              	.LCFI291:
 3287              	 .cfi_def_cfa_offset 4
 3288              	 .cfi_offset 7,-4
 3289 0002 83B0     	 sub sp,sp,#12
 3290              	.LCFI292:
 3291              	 .cfi_def_cfa_offset 16
 3292 0004 00AF     	 add r7,sp,#0
 3293              	.LCFI293:
 3294              	 .cfi_def_cfa_register 7
 3295 0006 7860     	 str r0,[r7,#4]
 901:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSSEL_Msk)) |
 3296              	 .loc 3 901 0
 3297 0008 0649     	 ldr r1,.L231
 3298 000a 064B     	 ldr r3,.L231
 3299 000c DB68     	 ldr r3,[r3,#12]
 3300 000e 23F48032 	 bic r2,r3,#65536
 3301 0012 7B68     	 ldr r3,[r7,#4]
 3302 0014 1343     	 orrs r3,r3,r2
 3303 0016 CB60     	 str r3,[r1,#12]
 902:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 903:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3304              	 .loc 3 903 0
 3305 0018 0C37     	 adds r7,r7,#12
 3306              	.LCFI294:
 3307              	 .cfi_def_cfa_offset 4
 3308 001a BD46     	 mov sp,r7
 3309              	.LCFI295:
 3310              	 .cfi_def_cfa_register 13
 3311              	 
 3312 001c 5DF8047B 	 ldr r7,[sp],#4
 3313              	.LCFI296:
 3314              	 .cfi_restore 7
 3315              	 .cfi_def_cfa_offset 0
 3316 0020 7047     	 bx lr
 3317              	.L232:
 3318 0022 00BF     	 .align 2
 3319              	.L231:
 3320 0024 00460050 	 .word 1342195200
 3321              	 .cfi_endproc
 3322              	.LFE218:
 3324              	 .section .text.XMC_SCU_CLOCK_SetUsbClockSource,"ax",%progbits
 3325              	 .align 2
 3326              	 .global XMC_SCU_CLOCK_SetUsbClockSource
 3327              	 .thumb
 3328              	 .thumb_func
 3330              	XMC_SCU_CLOCK_SetUsbClockSource:
 3331              	.LFB219:
 904:../Libraries/XMCLib/src/xmc4_scu.c **** 
 905:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fUSB */
 906:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source)
 907:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3332              	 .loc 3 907 0
 3333              	 .cfi_startproc
 3334              	 
 3335              	 
 3336              	 
 3337 0000 80B4     	 push {r7}
 3338              	.LCFI297:
 3339              	 .cfi_def_cfa_offset 4
 3340              	 .cfi_offset 7,-4
 3341 0002 83B0     	 sub sp,sp,#12
 3342              	.LCFI298:
 3343              	 .cfi_def_cfa_offset 16
 3344 0004 00AF     	 add r7,sp,#0
 3345              	.LCFI299:
 3346              	 .cfi_def_cfa_register 7
 3347 0006 7860     	 str r0,[r7,#4]
 908:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBSEL_Msk)) |
 3348              	 .loc 3 908 0
 3349 0008 0649     	 ldr r1,.L234
 3350 000a 064B     	 ldr r3,.L234
 3351 000c 9B69     	 ldr r3,[r3,#24]
 3352 000e 23F48032 	 bic r2,r3,#65536
 3353 0012 7B68     	 ldr r3,[r7,#4]
 3354 0014 1343     	 orrs r3,r3,r2
 3355 0016 8B61     	 str r3,[r1,#24]
 909:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 910:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3356              	 .loc 3 910 0
 3357 0018 0C37     	 adds r7,r7,#12
 3358              	.LCFI300:
 3359              	 .cfi_def_cfa_offset 4
 3360 001a BD46     	 mov sp,r7
 3361              	.LCFI301:
 3362              	 .cfi_def_cfa_register 13
 3363              	 
 3364 001c 5DF8047B 	 ldr r7,[sp],#4
 3365              	.LCFI302:
 3366              	 .cfi_restore 7
 3367              	 .cfi_def_cfa_offset 0
 3368 0020 7047     	 bx lr
 3369              	.L235:
 3370 0022 00BF     	 .align 2
 3371              	.L234:
 3372 0024 00460050 	 .word 1342195200
 3373              	 .cfi_endproc
 3374              	.LFE219:
 3376              	 .section .text.XMC_SCU_CLOCK_SetWdtClockSource,"ax",%progbits
 3377              	 .align 2
 3378              	 .global XMC_SCU_CLOCK_SetWdtClockSource
 3379              	 .thumb
 3380              	 .thumb_func
 3382              	XMC_SCU_CLOCK_SetWdtClockSource:
 3383              	.LFB220:
 911:../Libraries/XMCLib/src/xmc4_scu.c **** 
 912:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fWDT */
 913:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source)
 914:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3384              	 .loc 3 914 0
 3385              	 .cfi_startproc
 3386              	 
 3387              	 
 3388              	 
 3389 0000 80B4     	 push {r7}
 3390              	.LCFI303:
 3391              	 .cfi_def_cfa_offset 4
 3392              	 .cfi_offset 7,-4
 3393 0002 83B0     	 sub sp,sp,#12
 3394              	.LCFI304:
 3395              	 .cfi_def_cfa_offset 16
 3396 0004 00AF     	 add r7,sp,#0
 3397              	.LCFI305:
 3398              	 .cfi_def_cfa_register 7
 3399 0006 7860     	 str r0,[r7,#4]
 915:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTSEL_Msk)) |
 3400              	 .loc 3 915 0
 3401 0008 0649     	 ldr r1,.L237
 3402 000a 064B     	 ldr r3,.L237
 3403 000c 5B6A     	 ldr r3,[r3,#36]
 3404 000e 23F44032 	 bic r2,r3,#196608
 3405 0012 7B68     	 ldr r3,[r7,#4]
 3406 0014 1343     	 orrs r3,r3,r2
 3407 0016 4B62     	 str r3,[r1,#36]
 916:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 917:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3408              	 .loc 3 917 0
 3409 0018 0C37     	 adds r7,r7,#12
 3410              	.LCFI306:
 3411              	 .cfi_def_cfa_offset 4
 3412 001a BD46     	 mov sp,r7
 3413              	.LCFI307:
 3414              	 .cfi_def_cfa_register 13
 3415              	 
 3416 001c 5DF8047B 	 ldr r7,[sp],#4
 3417              	.LCFI308:
 3418              	 .cfi_restore 7
 3419              	 .cfi_def_cfa_offset 0
 3420 0020 7047     	 bx lr
 3421              	.L238:
 3422 0022 00BF     	 .align 2
 3423              	.L237:
 3424 0024 00460050 	 .word 1342195200
 3425              	 .cfi_endproc
 3426              	.LFE220:
 3428              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockSource,"ax",%progbits
 3429              	 .align 2
 3430              	 .global XMC_SCU_CLOCK_SetExternalOutputClockSource
 3431              	 .thumb
 3432              	 .thumb_func
 3434              	XMC_SCU_CLOCK_SetExternalOutputClockSource:
 3435              	.LFB221:
 918:../Libraries/XMCLib/src/xmc4_scu.c **** 
 919:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fEXT */
 920:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t source)
 921:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3436              	 .loc 3 921 0
 3437              	 .cfi_startproc
 3438              	 
 3439              	 
 3440              	 
 3441 0000 80B4     	 push {r7}
 3442              	.LCFI309:
 3443              	 .cfi_def_cfa_offset 4
 3444              	 .cfi_offset 7,-4
 3445 0002 83B0     	 sub sp,sp,#12
 3446              	.LCFI310:
 3447              	 .cfi_def_cfa_offset 16
 3448 0004 00AF     	 add r7,sp,#0
 3449              	.LCFI311:
 3450              	 .cfi_def_cfa_register 7
 3451 0006 0346     	 mov r3,r0
 3452 0008 FB71     	 strb r3,[r7,#7]
 922:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3453              	 .loc 3 922 0
 3454 000a 0649     	 ldr r1,.L240
 3455 000c 054B     	 ldr r3,.L240
 3456 000e 9B6A     	 ldr r3,[r3,#40]
 3457 0010 23F00702 	 bic r2,r3,#7
 923:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 3458              	 .loc 3 923 0
 3459 0014 FB79     	 ldrb r3,[r7,#7]
 922:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3460              	 .loc 3 922 0
 3461 0016 1343     	 orrs r3,r3,r2
 3462 0018 8B62     	 str r3,[r1,#40]
 924:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3463              	 .loc 3 924 0
 3464 001a 0C37     	 adds r7,r7,#12
 3465              	.LCFI312:
 3466              	 .cfi_def_cfa_offset 4
 3467 001c BD46     	 mov sp,r7
 3468              	.LCFI313:
 3469              	 .cfi_def_cfa_register 13
 3470              	 
 3471 001e 5DF8047B 	 ldr r7,[sp],#4
 3472              	.LCFI314:
 3473              	 .cfi_restore 7
 3474              	 .cfi_def_cfa_offset 0
 3475 0022 7047     	 bx lr
 3476              	.L241:
 3477              	 .align 2
 3478              	.L240:
 3479 0024 00460050 	 .word 1342195200
 3480              	 .cfi_endproc
 3481              	.LFE221:
 3483              	 .section .text.XMC_SCU_CLOCK_SetSystemPllClockSource,"ax",%progbits
 3484              	 .align 2
 3485              	 .global XMC_SCU_CLOCK_SetSystemPllClockSource
 3486              	 .thumb
 3487              	 .thumb_func
 3489              	XMC_SCU_CLOCK_SetSystemPllClockSource:
 3490              	.LFB222:
 925:../Libraries/XMCLib/src/xmc4_scu.c **** 
 926:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fPLL */
 927:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source)
 928:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3491              	 .loc 3 928 0
 3492              	 .cfi_startproc
 3493              	 
 3494              	 
 3495              	 
 3496 0000 80B4     	 push {r7}
 3497              	.LCFI315:
 3498              	 .cfi_def_cfa_offset 4
 3499              	 .cfi_offset 7,-4
 3500 0002 83B0     	 sub sp,sp,#12
 3501              	.LCFI316:
 3502              	 .cfi_def_cfa_offset 16
 3503 0004 00AF     	 add r7,sp,#0
 3504              	.LCFI317:
 3505              	 .cfi_def_cfa_register 7
 3506 0006 0346     	 mov r3,r0
 3507 0008 FB80     	 strh r3,[r7,#6]
 929:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Check input clock */
 930:../Libraries/XMCLib/src/xmc4_scu.c ****   if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) /* Select PLLClockSource */
 3508              	 .loc 3 930 0
 3509 000a FB88     	 ldrh r3,[r7,#6]
 3510 000c 002B     	 cmp r3,#0
 3511 000e 08D1     	 bne .L243
 931:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 932:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 &= (uint32_t)~(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3512              	 .loc 3 932 0
 3513 0010 0A4A     	 ldr r2,.L245
 3514 0012 0A4B     	 ldr r3,.L245
 3515 0014 DB68     	 ldr r3,[r3,#12]
 3516 0016 23F48073 	 bic r3,r3,#256
 3517 001a 23F00103 	 bic r3,r3,#1
 3518 001e D360     	 str r3,[r2,#12]
 3519 0020 07E0     	 b .L242
 3520              	.L243:
 933:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 934:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 935:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 936:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 |= (uint32_t)(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3521              	 .loc 3 936 0
 3522 0022 064A     	 ldr r2,.L245
 3523 0024 054B     	 ldr r3,.L245
 3524 0026 DB68     	 ldr r3,[r3,#12]
 3525 0028 43F48073 	 orr r3,r3,#256
 3526 002c 43F00103 	 orr r3,r3,#1
 3527 0030 D360     	 str r3,[r2,#12]
 3528              	.L242:
 937:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 938:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3529              	 .loc 3 938 0
 3530 0032 0C37     	 adds r7,r7,#12
 3531              	.LCFI318:
 3532              	 .cfi_def_cfa_offset 4
 3533 0034 BD46     	 mov sp,r7
 3534              	.LCFI319:
 3535              	 .cfi_def_cfa_register 13
 3536              	 
 3537 0036 5DF8047B 	 ldr r7,[sp],#4
 3538              	.LCFI320:
 3539              	 .cfi_restore 7
 3540              	 .cfi_def_cfa_offset 0
 3541 003a 7047     	 bx lr
 3542              	.L246:
 3543              	 .align 2
 3544              	.L245:
 3545 003c 10470050 	 .word 1342195472
 3546              	 .cfi_endproc
 3547              	.LFE222:
 3549              	 .section .text.XMC_SCU_HIB_SetRtcClockSource,"ax",%progbits
 3550              	 .align 2
 3551              	 .global XMC_SCU_HIB_SetRtcClockSource
 3552              	 .thumb
 3553              	 .thumb_func
 3555              	XMC_SCU_HIB_SetRtcClockSource:
 3556              	.LFB223:
 939:../Libraries/XMCLib/src/xmc4_scu.c **** 
 940:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fRTC */
 941:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source)
 942:../Libraries/XMCLib/src/xmc4_scu.c **** { 
 3557              	 .loc 3 942 0
 3558              	 .cfi_startproc
 3559              	 
 3560              	 
 3561              	 
 3562 0000 80B4     	 push {r7}
 3563              	.LCFI321:
 3564              	 .cfi_def_cfa_offset 4
 3565              	 .cfi_offset 7,-4
 3566 0002 83B0     	 sub sp,sp,#12
 3567              	.LCFI322:
 3568              	 .cfi_def_cfa_offset 16
 3569 0004 00AF     	 add r7,sp,#0
 3570              	.LCFI323:
 3571              	 .cfi_def_cfa_register 7
 3572 0006 0346     	 mov r3,r0
 3573 0008 FB71     	 strb r3,[r7,#7]
 943:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of HDCR register in hibernate domain is completed */
 944:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3574              	 .loc 3 944 0
 3575 000a 00BF     	 nop
 3576              	.L248:
 3577              	 .loc 3 944 0 is_stmt 0 discriminator 1
 3578 000c 094B     	 ldr r3,.L249
 3579 000e D3F8C430 	 ldr r3,[r3,#196]
 3580 0012 03F00803 	 and r3,r3,#8
 3581 0016 002B     	 cmp r3,#0
 3582 0018 F8D1     	 bne .L248
 945:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 946:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 947:../Libraries/XMCLib/src/xmc4_scu.c **** 
 948:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_RCS_Msk)) |
 3583              	 .loc 3 948 0 is_stmt 1
 3584 001a 0749     	 ldr r1,.L249+4
 3585 001c 064B     	 ldr r3,.L249+4
 3586 001e DB68     	 ldr r3,[r3,#12]
 3587 0020 23F04002 	 bic r2,r3,#64
 949:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3588              	 .loc 3 949 0
 3589 0024 FB79     	 ldrb r3,[r7,#7]
 948:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3590              	 .loc 3 948 0
 3591 0026 1343     	 orrs r3,r3,r2
 3592 0028 CB60     	 str r3,[r1,#12]
 950:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3593              	 .loc 3 950 0
 3594 002a 0C37     	 adds r7,r7,#12
 3595              	.LCFI324:
 3596              	 .cfi_def_cfa_offset 4
 3597 002c BD46     	 mov sp,r7
 3598              	.LCFI325:
 3599              	 .cfi_def_cfa_register 13
 3600              	 
 3601 002e 5DF8047B 	 ldr r7,[sp],#4
 3602              	.LCFI326:
 3603              	 .cfi_restore 7
 3604              	 .cfi_def_cfa_offset 0
 3605 0032 7047     	 bx lr
 3606              	.L250:
 3607              	 .align 2
 3608              	.L249:
 3609 0034 00400050 	 .word 1342193664
 3610 0038 00430050 	 .word 1342194432
 3611              	 .cfi_endproc
 3612              	.LFE223:
 3614              	 .section .text.XMC_SCU_HIB_SetStandbyClockSource,"ax",%progbits
 3615              	 .align 2
 3616              	 .global XMC_SCU_HIB_SetStandbyClockSource
 3617              	 .thumb
 3618              	 .thumb_func
 3620              	XMC_SCU_HIB_SetStandbyClockSource:
 3621              	.LFB224:
 951:../Libraries/XMCLib/src/xmc4_scu.c **** 
 952:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSTDBY */
 953:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source)
 954:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3622              	 .loc 3 954 0
 3623              	 .cfi_startproc
 3624              	 
 3625              	 
 3626              	 
 3627 0000 80B4     	 push {r7}
 3628              	.LCFI327:
 3629              	 .cfi_def_cfa_offset 4
 3630              	 .cfi_offset 7,-4
 3631 0002 83B0     	 sub sp,sp,#12
 3632              	.LCFI328:
 3633              	 .cfi_def_cfa_offset 16
 3634 0004 00AF     	 add r7,sp,#0
 3635              	.LCFI329:
 3636              	 .cfi_def_cfa_register 7
 3637 0006 0346     	 mov r3,r0
 3638 0008 FB71     	 strb r3,[r7,#7]
 955:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3639              	 .loc 3 955 0
 3640 000a 00BF     	 nop
 3641              	.L252:
 3642              	 .loc 3 955 0 is_stmt 0 discriminator 1
 3643 000c 094B     	 ldr r3,.L253
 3644 000e D3F8C430 	 ldr r3,[r3,#196]
 3645 0012 03F00803 	 and r3,r3,#8
 3646 0016 002B     	 cmp r3,#0
 3647 0018 F8D1     	 bne .L252
 956:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 957:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 958:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 959:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_STDBYSEL_Msk)) |
 3648              	 .loc 3 959 0 is_stmt 1
 3649 001a 0749     	 ldr r1,.L253+4
 3650 001c 064B     	 ldr r3,.L253+4
 3651 001e DB68     	 ldr r3,[r3,#12]
 3652 0020 23F08002 	 bic r2,r3,#128
 960:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3653              	 .loc 3 960 0
 3654 0024 FB79     	 ldrb r3,[r7,#7]
 959:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3655              	 .loc 3 959 0
 3656 0026 1343     	 orrs r3,r3,r2
 3657 0028 CB60     	 str r3,[r1,#12]
 961:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3658              	 .loc 3 961 0
 3659 002a 0C37     	 adds r7,r7,#12
 3660              	.LCFI330:
 3661              	 .cfi_def_cfa_offset 4
 3662 002c BD46     	 mov sp,r7
 3663              	.LCFI331:
 3664              	 .cfi_def_cfa_register 13
 3665              	 
 3666 002e 5DF8047B 	 ldr r7,[sp],#4
 3667              	.LCFI332:
 3668              	 .cfi_restore 7
 3669              	 .cfi_def_cfa_offset 0
 3670 0032 7047     	 bx lr
 3671              	.L254:
 3672              	 .align 2
 3673              	.L253:
 3674 0034 00400050 	 .word 1342193664
 3675 0038 00430050 	 .word 1342194432
 3676              	 .cfi_endproc
 3677              	.LFE224:
 3679              	 .section .text.XMC_SCU_CLOCK_SetSystemClockDivider,"ax",%progbits
 3680              	 .align 2
 3681              	 .global XMC_SCU_CLOCK_SetSystemClockDivider
 3682              	 .thumb
 3683              	 .thumb_func
 3685              	XMC_SCU_CLOCK_SetSystemClockDivider:
 3686              	.LFB225:
 962:../Libraries/XMCLib/src/xmc4_scu.c **** 
 963:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsys and its parent */
 964:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider)
 965:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3687              	 .loc 3 965 0
 3688              	 .cfi_startproc
 3689              	 
 3690              	 
 3691              	 
 3692 0000 80B4     	 push {r7}
 3693              	.LCFI333:
 3694              	 .cfi_def_cfa_offset 4
 3695              	 .cfi_offset 7,-4
 3696 0002 83B0     	 sub sp,sp,#12
 3697              	.LCFI334:
 3698              	 .cfi_def_cfa_offset 16
 3699 0004 00AF     	 add r7,sp,#0
 3700              	.LCFI335:
 3701              	 .cfi_def_cfa_register 7
 3702 0006 7860     	 str r0,[r7,#4]
 966:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSystemClockDivider:Wrong clock divider value",
 967:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_SYSCLKCR_SYSDIV_Msk + 1UL)) );
 968:../Libraries/XMCLib/src/xmc4_scu.c **** 
 969:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSDIV_Msk)) |
 3703              	 .loc 3 969 0
 3704 0008 0649     	 ldr r1,.L256
 3705 000a 064B     	 ldr r3,.L256
 3706 000c DB68     	 ldr r3,[r3,#12]
 3707 000e 23F0FF02 	 bic r2,r3,#255
 970:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3708              	 .loc 3 970 0
 3709 0012 7B68     	 ldr r3,[r7,#4]
 3710 0014 013B     	 subs r3,r3,#1
 969:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3711              	 .loc 3 969 0
 3712 0016 1343     	 orrs r3,r3,r2
 3713 0018 CB60     	 str r3,[r1,#12]
 971:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3714              	 .loc 3 971 0
 3715 001a 0C37     	 adds r7,r7,#12
 3716              	.LCFI336:
 3717              	 .cfi_def_cfa_offset 4
 3718 001c BD46     	 mov sp,r7
 3719              	.LCFI337:
 3720              	 .cfi_def_cfa_register 13
 3721              	 
 3722 001e 5DF8047B 	 ldr r7,[sp],#4
 3723              	.LCFI338:
 3724              	 .cfi_restore 7
 3725              	 .cfi_def_cfa_offset 0
 3726 0022 7047     	 bx lr
 3727              	.L257:
 3728              	 .align 2
 3729              	.L256:
 3730 0024 00460050 	 .word 1342195200
 3731              	 .cfi_endproc
 3732              	.LFE225:
 3734              	 .section .text.XMC_SCU_CLOCK_SetCcuClockDivider,"ax",%progbits
 3735              	 .align 2
 3736              	 .global XMC_SCU_CLOCK_SetCcuClockDivider
 3737              	 .thumb
 3738              	 .thumb_func
 3740              	XMC_SCU_CLOCK_SetCcuClockDivider:
 3741              	.LFB226:
 972:../Libraries/XMCLib/src/xmc4_scu.c **** 
 973:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fccu and its parent */
 974:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t divider)
 975:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3742              	 .loc 3 975 0
 3743              	 .cfi_startproc
 3744              	 
 3745              	 
 3746              	 
 3747 0000 80B4     	 push {r7}
 3748              	.LCFI339:
 3749              	 .cfi_def_cfa_offset 4
 3750              	 .cfi_offset 7,-4
 3751 0002 83B0     	 sub sp,sp,#12
 3752              	.LCFI340:
 3753              	 .cfi_def_cfa_offset 16
 3754 0004 00AF     	 add r7,sp,#0
 3755              	.LCFI341:
 3756              	 .cfi_def_cfa_register 7
 3757 0006 7860     	 str r0,[r7,#4]
 976:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCapcomClockDivider:Wrong clock divider value", (divider <= 2UL) );
 977:../Libraries/XMCLib/src/xmc4_scu.c **** 
 978:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CCUCLKCR = (SCU_CLK->CCUCLKCR & ((uint32_t)~SCU_CLK_CCUCLKCR_CCUDIV_Msk)) |
 3758              	 .loc 3 978 0
 3759 0008 0649     	 ldr r1,.L259
 3760 000a 064B     	 ldr r3,.L259
 3761 000c 1B6A     	 ldr r3,[r3,#32]
 3762 000e 23F00102 	 bic r2,r3,#1
 979:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3763              	 .loc 3 979 0
 3764 0012 7B68     	 ldr r3,[r7,#4]
 3765 0014 013B     	 subs r3,r3,#1
 978:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3766              	 .loc 3 978 0
 3767 0016 1343     	 orrs r3,r3,r2
 3768 0018 0B62     	 str r3,[r1,#32]
 980:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3769              	 .loc 3 980 0
 3770 001a 0C37     	 adds r7,r7,#12
 3771              	.LCFI342:
 3772              	 .cfi_def_cfa_offset 4
 3773 001c BD46     	 mov sp,r7
 3774              	.LCFI343:
 3775              	 .cfi_def_cfa_register 13
 3776              	 
 3777 001e 5DF8047B 	 ldr r7,[sp],#4
 3778              	.LCFI344:
 3779              	 .cfi_restore 7
 3780              	 .cfi_def_cfa_offset 0
 3781 0022 7047     	 bx lr
 3782              	.L260:
 3783              	 .align 2
 3784              	.L259:
 3785 0024 00460050 	 .word 1342195200
 3786              	 .cfi_endproc
 3787              	.LFE226:
 3789              	 .section .text.XMC_SCU_CLOCK_SetCpuClockDivider,"ax",%progbits
 3790              	 .align 2
 3791              	 .global XMC_SCU_CLOCK_SetCpuClockDivider
 3792              	 .thumb
 3793              	 .thumb_func
 3795              	XMC_SCU_CLOCK_SetCpuClockDivider:
 3796              	.LFB227:
 981:../Libraries/XMCLib/src/xmc4_scu.c **** 
 982:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fcpu and its parent */
 983:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t divider)
 984:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3797              	 .loc 3 984 0
 3798              	 .cfi_startproc
 3799              	 
 3800              	 
 3801              	 
 3802 0000 80B4     	 push {r7}
 3803              	.LCFI345:
 3804              	 .cfi_def_cfa_offset 4
 3805              	 .cfi_offset 7,-4
 3806 0002 83B0     	 sub sp,sp,#12
 3807              	.LCFI346:
 3808              	 .cfi_def_cfa_offset 16
 3809 0004 00AF     	 add r7,sp,#0
 3810              	.LCFI347:
 3811              	 .cfi_def_cfa_register 7
 3812 0006 7860     	 str r0,[r7,#4]
 985:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCpuClockDivider:Wrong clock divider value", (divider <= 2UL) );
 986:../Libraries/XMCLib/src/xmc4_scu.c **** 
 987:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CPUCLKCR = (SCU_CLK->CPUCLKCR & ((uint32_t)~SCU_CLK_CPUCLKCR_CPUDIV_Msk)) |
 3813              	 .loc 3 987 0
 3814 0008 0649     	 ldr r1,.L262
 3815 000a 064B     	 ldr r3,.L262
 3816 000c 1B69     	 ldr r3,[r3,#16]
 3817 000e 23F00102 	 bic r2,r3,#1
 988:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3818              	 .loc 3 988 0
 3819 0012 7B68     	 ldr r3,[r7,#4]
 3820 0014 013B     	 subs r3,r3,#1
 987:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3821              	 .loc 3 987 0
 3822 0016 1343     	 orrs r3,r3,r2
 3823 0018 0B61     	 str r3,[r1,#16]
 989:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3824              	 .loc 3 989 0
 3825 001a 0C37     	 adds r7,r7,#12
 3826              	.LCFI348:
 3827              	 .cfi_def_cfa_offset 4
 3828 001c BD46     	 mov sp,r7
 3829              	.LCFI349:
 3830              	 .cfi_def_cfa_register 13
 3831              	 
 3832 001e 5DF8047B 	 ldr r7,[sp],#4
 3833              	.LCFI350:
 3834              	 .cfi_restore 7
 3835              	 .cfi_def_cfa_offset 0
 3836 0022 7047     	 bx lr
 3837              	.L263:
 3838              	 .align 2
 3839              	.L262:
 3840 0024 00460050 	 .word 1342195200
 3841              	 .cfi_endproc
 3842              	.LFE227:
 3844              	 .section .text.XMC_SCU_CLOCK_SetPeripheralClockDivider,"ax",%progbits
 3845              	 .align 2
 3846              	 .global XMC_SCU_CLOCK_SetPeripheralClockDivider
 3847              	 .thumb
 3848              	 .thumb_func
 3850              	XMC_SCU_CLOCK_SetPeripheralClockDivider:
 3851              	.LFB228:
 990:../Libraries/XMCLib/src/xmc4_scu.c **** 
 991:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fperiph and its parent */
 992:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t divider)
 993:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3852              	 .loc 3 993 0
 3853              	 .cfi_startproc
 3854              	 
 3855              	 
 3856              	 
 3857 0000 80B4     	 push {r7}
 3858              	.LCFI351:
 3859              	 .cfi_def_cfa_offset 4
 3860              	 .cfi_offset 7,-4
 3861 0002 83B0     	 sub sp,sp,#12
 3862              	.LCFI352:
 3863              	 .cfi_def_cfa_offset 16
 3864 0004 00AF     	 add r7,sp,#0
 3865              	.LCFI353:
 3866              	 .cfi_def_cfa_register 7
 3867 0006 7860     	 str r0,[r7,#4]
 994:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetPeripheralClockDivider:Wrong clock divider value", (divider <= 2UL) 
 995:../Libraries/XMCLib/src/xmc4_scu.c **** 
 996:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->PBCLKCR = (SCU_CLK->PBCLKCR & ((uint32_t)~SCU_CLK_PBCLKCR_PBDIV_Msk)) |
 3868              	 .loc 3 996 0
 3869 0008 0649     	 ldr r1,.L265
 3870 000a 064B     	 ldr r3,.L265
 3871 000c 5B69     	 ldr r3,[r3,#20]
 3872 000e 23F00102 	 bic r2,r3,#1
 997:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3873              	 .loc 3 997 0
 3874 0012 7B68     	 ldr r3,[r7,#4]
 3875 0014 013B     	 subs r3,r3,#1
 996:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3876              	 .loc 3 996 0
 3877 0016 1343     	 orrs r3,r3,r2
 3878 0018 4B61     	 str r3,[r1,#20]
 998:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3879              	 .loc 3 998 0
 3880 001a 0C37     	 adds r7,r7,#12
 3881              	.LCFI354:
 3882              	 .cfi_def_cfa_offset 4
 3883 001c BD46     	 mov sp,r7
 3884              	.LCFI355:
 3885              	 .cfi_def_cfa_register 13
 3886              	 
 3887 001e 5DF8047B 	 ldr r7,[sp],#4
 3888              	.LCFI356:
 3889              	 .cfi_restore 7
 3890              	 .cfi_def_cfa_offset 0
 3891 0022 7047     	 bx lr
 3892              	.L266:
 3893              	 .align 2
 3894              	.L265:
 3895 0024 00460050 	 .word 1342195200
 3896              	 .cfi_endproc
 3897              	.LFE228:
 3899              	 .section .text.XMC_SCU_CLOCK_SetUsbClockDivider,"ax",%progbits
 3900              	 .align 2
 3901              	 .global XMC_SCU_CLOCK_SetUsbClockDivider
 3902              	 .thumb
 3903              	 .thumb_func
 3905              	XMC_SCU_CLOCK_SetUsbClockDivider:
 3906              	.LFB229:
 999:../Libraries/XMCLib/src/xmc4_scu.c **** 
1000:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsdmmc and its parent */
1001:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t divider)
1002:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3907              	 .loc 3 1002 0
 3908              	 .cfi_startproc
 3909              	 
 3910              	 
 3911              	 
 3912 0000 80B4     	 push {r7}
 3913              	.LCFI357:
 3914              	 .cfi_def_cfa_offset 4
 3915              	 .cfi_offset 7,-4
 3916 0002 83B0     	 sub sp,sp,#12
 3917              	.LCFI358:
 3918              	 .cfi_def_cfa_offset 16
 3919 0004 00AF     	 add r7,sp,#0
 3920              	.LCFI359:
 3921              	 .cfi_def_cfa_register 7
 3922 0006 7860     	 str r0,[r7,#4]
1003:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSdmmcClockDivider:Wrong clock divider value",
1004:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_USBCLKCR_USBDIV_Msk + 1UL)) );
1005:../Libraries/XMCLib/src/xmc4_scu.c **** 
1006:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBDIV_Msk)) |
 3923              	 .loc 3 1006 0
 3924 0008 0649     	 ldr r1,.L268
 3925 000a 064B     	 ldr r3,.L268
 3926 000c 9B69     	 ldr r3,[r3,#24]
 3927 000e 23F00702 	 bic r2,r3,#7
1007:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3928              	 .loc 3 1007 0
 3929 0012 7B68     	 ldr r3,[r7,#4]
 3930 0014 013B     	 subs r3,r3,#1
1006:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3931              	 .loc 3 1006 0
 3932 0016 1343     	 orrs r3,r3,r2
 3933 0018 8B61     	 str r3,[r1,#24]
1008:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3934              	 .loc 3 1008 0
 3935 001a 0C37     	 adds r7,r7,#12
 3936              	.LCFI360:
 3937              	 .cfi_def_cfa_offset 4
 3938 001c BD46     	 mov sp,r7
 3939              	.LCFI361:
 3940              	 .cfi_def_cfa_register 13
 3941              	 
 3942 001e 5DF8047B 	 ldr r7,[sp],#4
 3943              	.LCFI362:
 3944              	 .cfi_restore 7
 3945              	 .cfi_def_cfa_offset 0
 3946 0022 7047     	 bx lr
 3947              	.L269:
 3948              	 .align 2
 3949              	.L268:
 3950 0024 00460050 	 .word 1342195200
 3951              	 .cfi_endproc
 3952              	.LFE229:
 3954              	 .section .text.XMC_SCU_CLOCK_SetWdtClockDivider,"ax",%progbits
 3955              	 .align 2
 3956              	 .global XMC_SCU_CLOCK_SetWdtClockDivider
 3957              	 .thumb
 3958              	 .thumb_func
 3960              	XMC_SCU_CLOCK_SetWdtClockDivider:
 3961              	.LFB230:
1009:../Libraries/XMCLib/src/xmc4_scu.c **** 
1010:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
1011:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between febu and its parent */
1012:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t divider)
1013:../Libraries/XMCLib/src/xmc4_scu.c **** {
1014:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetEbuClockDivider:Wrong clock divider value",
1015:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EBUCLKCR_EBUDIV_Msk + 1UL) ) );
1016:../Libraries/XMCLib/src/xmc4_scu.c **** 
1017:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EBUCLKCR = (SCU_CLK->EBUCLKCR & ((uint32_t)~SCU_CLK_EBUCLKCR_EBUDIV_Msk)) |
1018:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
1019:../Libraries/XMCLib/src/xmc4_scu.c **** }
1020:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1021:../Libraries/XMCLib/src/xmc4_scu.c **** 
1022:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fwdt and its parent */
1023:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t divider)
1024:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3962              	 .loc 3 1024 0
 3963              	 .cfi_startproc
 3964              	 
 3965              	 
 3966              	 
 3967 0000 80B4     	 push {r7}
 3968              	.LCFI363:
 3969              	 .cfi_def_cfa_offset 4
 3970              	 .cfi_offset 7,-4
 3971 0002 83B0     	 sub sp,sp,#12
 3972              	.LCFI364:
 3973              	 .cfi_def_cfa_offset 16
 3974 0004 00AF     	 add r7,sp,#0
 3975              	.LCFI365:
 3976              	 .cfi_def_cfa_register 7
 3977 0006 7860     	 str r0,[r7,#4]
1025:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetWdtClockDivider:Wrong clock divider value",
1026:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_WDTCLKCR_WDTDIV_Msk + 1UL) ) );
1027:../Libraries/XMCLib/src/xmc4_scu.c **** 
1028:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTDIV_Msk)) |
 3978              	 .loc 3 1028 0
 3979 0008 0649     	 ldr r1,.L271
 3980 000a 064B     	 ldr r3,.L271
 3981 000c 5B6A     	 ldr r3,[r3,#36]
 3982 000e 23F0FF02 	 bic r2,r3,#255
1029:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3983              	 .loc 3 1029 0
 3984 0012 7B68     	 ldr r3,[r7,#4]
 3985 0014 013B     	 subs r3,r3,#1
1028:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3986              	 .loc 3 1028 0
 3987 0016 1343     	 orrs r3,r3,r2
 3988 0018 4B62     	 str r3,[r1,#36]
1030:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3989              	 .loc 3 1030 0
 3990 001a 0C37     	 adds r7,r7,#12
 3991              	.LCFI366:
 3992              	 .cfi_def_cfa_offset 4
 3993 001c BD46     	 mov sp,r7
 3994              	.LCFI367:
 3995              	 .cfi_def_cfa_register 13
 3996              	 
 3997 001e 5DF8047B 	 ldr r7,[sp],#4
 3998              	.LCFI368:
 3999              	 .cfi_restore 7
 4000              	 .cfi_def_cfa_offset 0
 4001 0022 7047     	 bx lr
 4002              	.L272:
 4003              	 .align 2
 4004              	.L271:
 4005 0024 00460050 	 .word 1342195200
 4006              	 .cfi_endproc
 4007              	.LFE230:
 4009              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider,"ax",%progbits
 4010              	 .align 2
 4011              	 .global XMC_SCU_CLOCK_SetExternalOutputClockDivider
 4012              	 .thumb
 4013              	 .thumb_func
 4015              	XMC_SCU_CLOCK_SetExternalOutputClockDivider:
 4016              	.LFB231:
1031:../Libraries/XMCLib/src/xmc4_scu.c **** 
1032:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fext and its parent */
1033:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t divider)
1034:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4017              	 .loc 3 1034 0
 4018              	 .cfi_startproc
 4019              	 
 4020              	 
 4021              	 
 4022 0000 80B4     	 push {r7}
 4023              	.LCFI369:
 4024              	 .cfi_def_cfa_offset 4
 4025              	 .cfi_offset 7,-4
 4026 0002 83B0     	 sub sp,sp,#12
 4027              	.LCFI370:
 4028              	 .cfi_def_cfa_offset 16
 4029 0004 00AF     	 add r7,sp,#0
 4030              	.LCFI371:
 4031              	 .cfi_def_cfa_register 7
 4032 0006 7860     	 str r0,[r7,#4]
1035:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetExternalOutputClockDivider:Wrong clock divider value",
1036:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EXTCLKCR_ECKDIV_Msk + 1UL) ) );
1037:../Libraries/XMCLib/src/xmc4_scu.c **** 
1038:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKDIV_Msk)) |
 4033              	 .loc 3 1038 0
 4034 0008 0849     	 ldr r1,.L274
 4035 000a 084B     	 ldr r3,.L274
 4036 000c 9B6A     	 ldr r3,[r3,#40]
 4037 000e 23F0FF73 	 bic r3,r3,#33423360
 4038 0012 23F48033 	 bic r3,r3,#65536
1039:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4039              	 .loc 3 1039 0
 4040 0016 7A68     	 ldr r2,[r7,#4]
 4041 0018 013A     	 subs r2,r2,#1
 4042 001a 1204     	 lsls r2,r2,#16
1038:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4043              	 .loc 3 1038 0
 4044 001c 1343     	 orrs r3,r3,r2
 4045 001e 8B62     	 str r3,[r1,#40]
1040:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4046              	 .loc 3 1040 0
 4047 0020 0C37     	 adds r7,r7,#12
 4048              	.LCFI372:
 4049              	 .cfi_def_cfa_offset 4
 4050 0022 BD46     	 mov sp,r7
 4051              	.LCFI373:
 4052              	 .cfi_def_cfa_register 13
 4053              	 
 4054 0024 5DF8047B 	 ldr r7,[sp],#4
 4055              	.LCFI374:
 4056              	 .cfi_restore 7
 4057              	 .cfi_def_cfa_offset 0
 4058 0028 7047     	 bx lr
 4059              	.L275:
 4060 002a 00BF     	 .align 2
 4061              	.L274:
 4062 002c 00460050 	 .word 1342195200
 4063              	 .cfi_endproc
 4064              	.LFE231:
 4066              	 .section .text.XMC_SCU_CLOCK_EnableClock,"ax",%progbits
 4067              	 .align 2
 4068              	 .global XMC_SCU_CLOCK_EnableClock
 4069              	 .thumb
 4070              	 .thumb_func
 4072              	XMC_SCU_CLOCK_EnableClock:
 4073              	.LFB232:
1041:../Libraries/XMCLib/src/xmc4_scu.c **** 
1042:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
1043:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the ECAT clock by setting the clock divider for the ECAT clock source */
1044:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider)
1045:../Libraries/XMCLib/src/xmc4_scu.c **** {
1046:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
1047:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_ECATCLKCR_ECADIV_Pos);
1048:../Libraries/XMCLib/src/xmc4_scu.c **** }
1049:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1050:../Libraries/XMCLib/src/xmc4_scu.c **** 
1051:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a given module clock */
1052:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock)
1053:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4074              	 .loc 3 1053 0
 4075              	 .cfi_startproc
 4076              	 
 4077              	 
 4078              	 
 4079 0000 80B4     	 push {r7}
 4080              	.LCFI375:
 4081              	 .cfi_def_cfa_offset 4
 4082              	 .cfi_offset 7,-4
 4083 0002 83B0     	 sub sp,sp,#12
 4084              	.LCFI376:
 4085              	 .cfi_def_cfa_offset 16
 4086 0004 00AF     	 add r7,sp,#0
 4087              	.LCFI377:
 4088              	 .cfi_def_cfa_register 7
 4089 0006 0346     	 mov r3,r0
 4090 0008 FB71     	 strb r3,[r7,#7]
1054:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKSET = ((uint32_t)clock);
 4091              	 .loc 3 1054 0
 4092 000a 044A     	 ldr r2,.L277
 4093 000c FB79     	 ldrb r3,[r7,#7]
 4094 000e 5360     	 str r3,[r2,#4]
1055:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4095              	 .loc 3 1055 0
 4096 0010 0C37     	 adds r7,r7,#12
 4097              	.LCFI378:
 4098              	 .cfi_def_cfa_offset 4
 4099 0012 BD46     	 mov sp,r7
 4100              	.LCFI379:
 4101              	 .cfi_def_cfa_register 13
 4102              	 
 4103 0014 5DF8047B 	 ldr r7,[sp],#4
 4104              	.LCFI380:
 4105              	 .cfi_restore 7
 4106              	 .cfi_def_cfa_offset 0
 4107 0018 7047     	 bx lr
 4108              	.L278:
 4109 001a 00BF     	 .align 2
 4110              	.L277:
 4111 001c 00460050 	 .word 1342195200
 4112              	 .cfi_endproc
 4113              	.LFE232:
 4115              	 .section .text.XMC_SCU_CLOCK_DisableClock,"ax",%progbits
 4116              	 .align 2
 4117              	 .global XMC_SCU_CLOCK_DisableClock
 4118              	 .thumb
 4119              	 .thumb_func
 4121              	XMC_SCU_CLOCK_DisableClock:
 4122              	.LFB233:
1056:../Libraries/XMCLib/src/xmc4_scu.c **** 
1057:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a given module clock */
1058:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock)
1059:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4123              	 .loc 3 1059 0
 4124              	 .cfi_startproc
 4125              	 
 4126              	 
 4127              	 
 4128 0000 80B4     	 push {r7}
 4129              	.LCFI381:
 4130              	 .cfi_def_cfa_offset 4
 4131              	 .cfi_offset 7,-4
 4132 0002 83B0     	 sub sp,sp,#12
 4133              	.LCFI382:
 4134              	 .cfi_def_cfa_offset 16
 4135 0004 00AF     	 add r7,sp,#0
 4136              	.LCFI383:
 4137              	 .cfi_def_cfa_register 7
 4138 0006 0346     	 mov r3,r0
 4139 0008 FB71     	 strb r3,[r7,#7]
1060:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKCLR = ((uint32_t)clock);
 4140              	 .loc 3 1060 0
 4141 000a 044A     	 ldr r2,.L280
 4142 000c FB79     	 ldrb r3,[r7,#7]
 4143 000e 9360     	 str r3,[r2,#8]
1061:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4144              	 .loc 3 1061 0
 4145 0010 0C37     	 adds r7,r7,#12
 4146              	.LCFI384:
 4147              	 .cfi_def_cfa_offset 4
 4148 0012 BD46     	 mov sp,r7
 4149              	.LCFI385:
 4150              	 .cfi_def_cfa_register 13
 4151              	 
 4152 0014 5DF8047B 	 ldr r7,[sp],#4
 4153              	.LCFI386:
 4154              	 .cfi_restore 7
 4155              	 .cfi_def_cfa_offset 0
 4156 0018 7047     	 bx lr
 4157              	.L281:
 4158 001a 00BF     	 .align 2
 4159              	.L280:
 4160 001c 00460050 	 .word 1342195200
 4161              	 .cfi_endproc
 4162              	.LFE233:
 4164              	 .section .text.XMC_SCU_CLOCK_IsClockEnabled,"ax",%progbits
 4165              	 .align 2
 4166              	 .global XMC_SCU_CLOCK_IsClockEnabled
 4167              	 .thumb
 4168              	 .thumb_func
 4170              	XMC_SCU_CLOCK_IsClockEnabled:
 4171              	.LFB234:
1062:../Libraries/XMCLib/src/xmc4_scu.c **** 
1063:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if module clock of the given peripheral is enabled */
1064:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock)
1065:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4172              	 .loc 3 1065 0
 4173              	 .cfi_startproc
 4174              	 
 4175              	 
 4176              	 
 4177 0000 80B4     	 push {r7}
 4178              	.LCFI387:
 4179              	 .cfi_def_cfa_offset 4
 4180              	 .cfi_offset 7,-4
 4181 0002 83B0     	 sub sp,sp,#12
 4182              	.LCFI388:
 4183              	 .cfi_def_cfa_offset 16
 4184 0004 00AF     	 add r7,sp,#0
 4185              	.LCFI389:
 4186              	 .cfi_def_cfa_register 7
 4187 0006 0346     	 mov r3,r0
 4188 0008 FB71     	 strb r3,[r7,#7]
1066:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)(SCU_CLK->CLKSTAT & ((uint32_t)clock));
 4189              	 .loc 3 1066 0
 4190 000a 074B     	 ldr r3,.L284
 4191 000c 1A68     	 ldr r2,[r3]
 4192 000e FB79     	 ldrb r3,[r7,#7]
 4193 0010 1340     	 ands r3,r3,r2
 4194 0012 002B     	 cmp r3,#0
 4195 0014 14BF     	 ite ne
 4196 0016 0123     	 movne r3,#1
 4197 0018 0023     	 moveq r3,#0
 4198 001a DBB2     	 uxtb r3,r3
1067:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4199              	 .loc 3 1067 0
 4200 001c 1846     	 mov r0,r3
 4201 001e 0C37     	 adds r7,r7,#12
 4202              	.LCFI390:
 4203              	 .cfi_def_cfa_offset 4
 4204 0020 BD46     	 mov sp,r7
 4205              	.LCFI391:
 4206              	 .cfi_def_cfa_register 13
 4207              	 
 4208 0022 5DF8047B 	 ldr r7,[sp],#4
 4209              	.LCFI392:
 4210              	 .cfi_restore 7
 4211              	 .cfi_def_cfa_offset 0
 4212 0026 7047     	 bx lr
 4213              	.L285:
 4214              	 .align 2
 4215              	.L284:
 4216 0028 00460050 	 .word 1342195200
 4217              	 .cfi_endproc
 4218              	.LFE234:
 4220              	 .section .text.XMC_SCU_CLOCK_GatePeripheralClock,"ax",%progbits
 4221              	 .align 2
 4222              	 .global XMC_SCU_CLOCK_GatePeripheralClock
 4223              	 .thumb
 4224              	 .thumb_func
 4226              	XMC_SCU_CLOCK_GatePeripheralClock:
 4227              	.LFB235:
1068:../Libraries/XMCLib/src/xmc4_scu.c **** 
1069:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(CLOCK_GATING_SUPPORTED)
1070:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to gate a given module clock */
1071:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1072:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4228              	 .loc 3 1072 0
 4229              	 .cfi_startproc
 4230              	 
 4231              	 
 4232              	 
 4233 0000 80B4     	 push {r7}
 4234              	.LCFI393:
 4235              	 .cfi_def_cfa_offset 4
 4236              	 .cfi_offset 7,-4
 4237 0002 85B0     	 sub sp,sp,#20
 4238              	.LCFI394:
 4239              	 .cfi_def_cfa_offset 24
 4240 0004 00AF     	 add r7,sp,#0
 4241              	.LCFI395:
 4242              	 .cfi_def_cfa_register 7
 4243 0006 7860     	 str r0,[r7,#4]
1073:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (peripheral & 0xf0000000UL) >> 28UL;
 4244              	 .loc 3 1073 0
 4245 0008 7B68     	 ldr r3,[r7,#4]
 4246 000a 1B0F     	 lsrs r3,r3,#28
 4247 000c FB60     	 str r3,[r7,#12]
1074:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4248              	 .loc 3 1074 0
 4249 000e 7B68     	 ldr r3,[r7,#4]
 4250 0010 23F07043 	 bic r3,r3,#-268435456
 4251 0014 BB60     	 str r3,[r7,#8]
1075:../Libraries/XMCLib/src/xmc4_scu.c **** 
1076:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)((&(SCU_CLK->CGATSET0)) + (index * 3U)) = (uint32_t)mask;
 4252              	 .loc 3 1076 0
 4253 0016 FA68     	 ldr r2,[r7,#12]
 4254 0018 1346     	 mov r3,r2
 4255 001a 5B00     	 lsls r3,r3,#1
 4256 001c 1344     	 add r3,r3,r2
 4257 001e 9B00     	 lsls r3,r3,#2
 4258 0020 1A46     	 mov r2,r3
 4259 0022 044B     	 ldr r3,.L287
 4260 0024 1344     	 add r3,r3,r2
 4261 0026 BA68     	 ldr r2,[r7,#8]
 4262 0028 1A60     	 str r2,[r3]
1077:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4263              	 .loc 3 1077 0
 4264 002a 1437     	 adds r7,r7,#20
 4265              	.LCFI396:
 4266              	 .cfi_def_cfa_offset 4
 4267 002c BD46     	 mov sp,r7
 4268              	.LCFI397:
 4269              	 .cfi_def_cfa_register 13
 4270              	 
 4271 002e 5DF8047B 	 ldr r7,[sp],#4
 4272              	.LCFI398:
 4273              	 .cfi_restore 7
 4274              	 .cfi_def_cfa_offset 0
 4275 0032 7047     	 bx lr
 4276              	.L288:
 4277              	 .align 2
 4278              	.L287:
 4279 0034 44460050 	 .word 1342195268
 4280              	 .cfi_endproc
 4281              	.LFE235:
 4283              	 .section .text.XMC_SCU_CLOCK_UngatePeripheralClock,"ax",%progbits
 4284              	 .align 2
 4285              	 .global XMC_SCU_CLOCK_UngatePeripheralClock
 4286              	 .thumb
 4287              	 .thumb_func
 4289              	XMC_SCU_CLOCK_UngatePeripheralClock:
 4290              	.LFB236:
1078:../Libraries/XMCLib/src/xmc4_scu.c **** 
1079:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1080:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1081:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4291              	 .loc 3 1081 0
 4292              	 .cfi_startproc
 4293              	 
 4294              	 
 4295              	 
 4296 0000 80B4     	 push {r7}
 4297              	.LCFI399:
 4298              	 .cfi_def_cfa_offset 4
 4299              	 .cfi_offset 7,-4
 4300 0002 85B0     	 sub sp,sp,#20
 4301              	.LCFI400:
 4302              	 .cfi_def_cfa_offset 24
 4303 0004 00AF     	 add r7,sp,#0
 4304              	.LCFI401:
 4305              	 .cfi_def_cfa_register 7
 4306 0006 7860     	 str r0,[r7,#4]
1082:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((peripheral & 0xf0000000UL) >> 28UL);
 4307              	 .loc 3 1082 0
 4308 0008 7B68     	 ldr r3,[r7,#4]
 4309 000a 1B0F     	 lsrs r3,r3,#28
 4310 000c FB60     	 str r3,[r7,#12]
1083:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4311              	 .loc 3 1083 0
 4312 000e 7B68     	 ldr r3,[r7,#4]
 4313 0010 23F07043 	 bic r3,r3,#-268435456
 4314 0014 BB60     	 str r3,[r7,#8]
1084:../Libraries/XMCLib/src/xmc4_scu.c **** 
1085:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_CLK->CGATCLR0) + (index * 3U)) = (uint32_t)mask;
 4315              	 .loc 3 1085 0
 4316 0016 FA68     	 ldr r2,[r7,#12]
 4317 0018 1346     	 mov r3,r2
 4318 001a 5B00     	 lsls r3,r3,#1
 4319 001c 1344     	 add r3,r3,r2
 4320 001e 9B00     	 lsls r3,r3,#2
 4321 0020 1A46     	 mov r2,r3
 4322 0022 044B     	 ldr r3,.L290
 4323 0024 1344     	 add r3,r3,r2
 4324 0026 BA68     	 ldr r2,[r7,#8]
 4325 0028 1A60     	 str r2,[r3]
1086:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4326              	 .loc 3 1086 0
 4327 002a 1437     	 adds r7,r7,#20
 4328              	.LCFI402:
 4329              	 .cfi_def_cfa_offset 4
 4330 002c BD46     	 mov sp,r7
 4331              	.LCFI403:
 4332              	 .cfi_def_cfa_register 13
 4333              	 
 4334 002e 5DF8047B 	 ldr r7,[sp],#4
 4335              	.LCFI404:
 4336              	 .cfi_restore 7
 4337              	 .cfi_def_cfa_offset 0
 4338 0032 7047     	 bx lr
 4339              	.L291:
 4340              	 .align 2
 4341              	.L290:
 4342 0034 48460050 	 .word 1342195272
 4343              	 .cfi_endproc
 4344              	.LFE236:
 4346              	 .section .text.XMC_SCU_CLOCK_IsPeripheralClockGated,"ax",%progbits
 4347              	 .align 2
 4348              	 .global XMC_SCU_CLOCK_IsPeripheralClockGated
 4349              	 .thumb
 4350              	 .thumb_func
 4352              	XMC_SCU_CLOCK_IsPeripheralClockGated:
 4353              	.LFB237:
1087:../Libraries/XMCLib/src/xmc4_scu.c **** 
1088:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1089:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1090:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4354              	 .loc 3 1090 0
 4355              	 .cfi_startproc
 4356              	 
 4357              	 
 4358              	 
 4359 0000 80B4     	 push {r7}
 4360              	.LCFI405:
 4361              	 .cfi_def_cfa_offset 4
 4362              	 .cfi_offset 7,-4
 4363 0002 85B0     	 sub sp,sp,#20
 4364              	.LCFI406:
 4365              	 .cfi_def_cfa_offset 24
 4366 0004 00AF     	 add r7,sp,#0
 4367              	.LCFI407:
 4368              	 .cfi_def_cfa_register 7
 4369 0006 7860     	 str r0,[r7,#4]
1091:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = ((peripheral & 0xf0000000UL) >> 28UL);
 4370              	 .loc 3 1091 0
 4371 0008 7B68     	 ldr r3,[r7,#4]
 4372 000a 1B0F     	 lsrs r3,r3,#28
 4373 000c FB60     	 str r3,[r7,#12]
1092:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4374              	 .loc 3 1092 0
 4375 000e 7B68     	 ldr r3,[r7,#4]
 4376 0010 23F07043 	 bic r3,r3,#-268435456
 4377 0014 BB60     	 str r3,[r7,#8]
1093:../Libraries/XMCLib/src/xmc4_scu.c **** 
1094:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_CLK->CGATSTAT0) + (index * 3U)) & mask) != 0U);
 4378              	 .loc 3 1094 0
 4379 0016 FA68     	 ldr r2,[r7,#12]
 4380 0018 1346     	 mov r3,r2
 4381 001a 5B00     	 lsls r3,r3,#1
 4382 001c 1344     	 add r3,r3,r2
 4383 001e 9B00     	 lsls r3,r3,#2
 4384 0020 1A46     	 mov r2,r3
 4385 0022 084B     	 ldr r3,.L294
 4386 0024 1344     	 add r3,r3,r2
 4387 0026 1A68     	 ldr r2,[r3]
 4388 0028 BB68     	 ldr r3,[r7,#8]
 4389 002a 1340     	 ands r3,r3,r2
 4390 002c 002B     	 cmp r3,#0
 4391 002e 14BF     	 ite ne
 4392 0030 0123     	 movne r3,#1
 4393 0032 0023     	 moveq r3,#0
 4394 0034 DBB2     	 uxtb r3,r3
1095:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4395              	 .loc 3 1095 0
 4396 0036 1846     	 mov r0,r3
 4397 0038 1437     	 adds r7,r7,#20
 4398              	.LCFI408:
 4399              	 .cfi_def_cfa_offset 4
 4400 003a BD46     	 mov sp,r7
 4401              	.LCFI409:
 4402              	 .cfi_def_cfa_register 13
 4403              	 
 4404 003c 5DF8047B 	 ldr r7,[sp],#4
 4405              	.LCFI410:
 4406              	 .cfi_restore 7
 4407              	 .cfi_def_cfa_offset 0
 4408 0040 7047     	 bx lr
 4409              	.L295:
 4410 0042 00BF     	 .align 2
 4411              	.L294:
 4412 0044 40460050 	 .word 1342195264
 4413              	 .cfi_endproc
 4414              	.LFE237:
 4416              	 .section .text.XMC_SCU_POWER_GetEVR13Voltage,"ax",%progbits
 4417              	 .align 2
 4418              	 .global XMC_SCU_POWER_GetEVR13Voltage
 4419              	 .thumb
 4420              	 .thumb_func
 4422              	XMC_SCU_POWER_GetEVR13Voltage:
 4423              	.LFB238:
1096:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1097:../Libraries/XMCLib/src/xmc4_scu.c **** 
1098:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR13Voltage(void)
1099:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4424              	 .loc 3 1099 0
 4425              	 .cfi_startproc
 4426              	 
 4427              	 
 4428              	 
 4429 0000 80B4     	 push {r7}
 4430              	.LCFI411:
 4431              	 .cfi_def_cfa_offset 4
 4432              	 .cfi_offset 7,-4
 4433 0002 00AF     	 add r7,sp,#0
 4434              	.LCFI412:
 4435              	 .cfi_def_cfa_register 7
1100:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC13V_Msk) * XMC_SCU_POWER_LSB13V;
 4436              	 .loc 3 1100 0
 4437 0004 084B     	 ldr r3,.L298
 4438 0006 5B69     	 ldr r3,[r3,#20]
 4439 0008 DBB2     	 uxtb r3,r3
 4440 000a 07EE903A 	 fmsr s15,r3
 4441 000e F8EE677A 	 fuitos s15,s15
 4442 0012 9FED067A 	 flds s14,.L298+4
 4443 0016 67EE877A 	 fmuls s15,s15,s14
 4444 001a 17EE903A 	 fmrs r3,s15
1101:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4445              	 .loc 3 1101 0
 4446 001e 1846     	 mov r0,r3
 4447 0020 BD46     	 mov sp,r7
 4448              	.LCFI413:
 4449              	 .cfi_def_cfa_register 13
 4450              	 
 4451 0022 5DF8047B 	 ldr r7,[sp],#4
 4452              	.LCFI414:
 4453              	 .cfi_restore 7
 4454              	 .cfi_def_cfa_offset 0
 4455 0026 7047     	 bx lr
 4456              	.L299:
 4457              	 .align 2
 4458              	.L298:
 4459 0028 00420050 	 .word 1342194176
 4460 002c ED0DBE3B 	 .word 1002311149
 4461              	 .cfi_endproc
 4462              	.LFE238:
 4464              	 .section .text.XMC_SCU_POWER_GetEVR33Voltage,"ax",%progbits
 4465              	 .align 2
 4466              	 .global XMC_SCU_POWER_GetEVR33Voltage
 4467              	 .thumb
 4468              	 .thumb_func
 4470              	XMC_SCU_POWER_GetEVR33Voltage:
 4471              	.LFB239:
1102:../Libraries/XMCLib/src/xmc4_scu.c **** 
1103:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR33Voltage(void)
1104:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4472              	 .loc 3 1104 0
 4473              	 .cfi_startproc
 4474              	 
 4475              	 
 4476              	 
 4477 0000 80B4     	 push {r7}
 4478              	.LCFI415:
 4479              	 .cfi_def_cfa_offset 4
 4480              	 .cfi_offset 7,-4
 4481 0002 00AF     	 add r7,sp,#0
 4482              	.LCFI416:
 4483              	 .cfi_def_cfa_register 7
1105:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC33V_Msk) >> SCU_POWER_EVRVADCSTAT_VAD
 4484              	 .loc 3 1105 0
 4485 0004 094B     	 ldr r3,.L302
 4486 0006 5B69     	 ldr r3,[r3,#20]
 4487 0008 03F47F43 	 and r3,r3,#65280
 4488 000c 1B0A     	 lsrs r3,r3,#8
 4489 000e 07EE903A 	 fmsr s15,r3
 4490 0012 F8EE677A 	 fuitos s15,s15
 4491 0016 9FED067A 	 flds s14,.L302+4
 4492 001a 67EE877A 	 fmuls s15,s15,s14
 4493 001e 17EE903A 	 fmrs r3,s15
1106:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4494              	 .loc 3 1106 0
 4495 0022 1846     	 mov r0,r3
 4496 0024 BD46     	 mov sp,r7
 4497              	.LCFI417:
 4498              	 .cfi_def_cfa_register 13
 4499              	 
 4500 0026 5DF8047B 	 ldr r7,[sp],#4
 4501              	.LCFI418:
 4502              	 .cfi_restore 7
 4503              	 .cfi_def_cfa_offset 0
 4504 002a 7047     	 bx lr
 4505              	.L303:
 4506              	 .align 2
 4507              	.L302:
 4508 002c 00420050 	 .word 1342194176
 4509 0030 EC51B83C 	 .word 1018712556
 4510              	 .cfi_endproc
 4511              	.LFE239:
 4513              	 .section .text.XMC_SCU_CLOCK_EnableUsbPll,"ax",%progbits
 4514              	 .align 2
 4515              	 .global XMC_SCU_CLOCK_EnableUsbPll
 4516              	 .thumb
 4517              	 .thumb_func
 4519              	XMC_SCU_CLOCK_EnableUsbPll:
 4520              	.LFB240:
1107:../Libraries/XMCLib/src/xmc4_scu.c **** 
1108:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB PLL for USB clock */
1109:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableUsbPll(void)
1110:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4521              	 .loc 3 1110 0
 4522              	 .cfi_startproc
 4523              	 
 4524              	 
 4525              	 
 4526 0000 80B4     	 push {r7}
 4527              	.LCFI419:
 4528              	 .cfi_def_cfa_offset 4
 4529              	 .cfi_offset 7,-4
 4530 0002 00AF     	 add r7,sp,#0
 4531              	.LCFI420:
 4532              	 .cfi_def_cfa_register 7
1111:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4533              	 .loc 3 1111 0
 4534 0004 054A     	 ldr r2,.L305
 4535 0006 054B     	 ldr r3,.L305
 4536 0008 5B69     	 ldr r3,[r3,#20]
 4537 000a 23F48033 	 bic r3,r3,#65536
 4538 000e 23F00203 	 bic r3,r3,#2
 4539 0012 5361     	 str r3,[r2,#20]
1112:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4540              	 .loc 3 1112 0
 4541 0014 BD46     	 mov sp,r7
 4542              	.LCFI421:
 4543              	 .cfi_def_cfa_register 13
 4544              	 
 4545 0016 5DF8047B 	 ldr r7,[sp],#4
 4546              	.LCFI422:
 4547              	 .cfi_restore 7
 4548              	 .cfi_def_cfa_offset 0
 4549 001a 7047     	 bx lr
 4550              	.L306:
 4551              	 .align 2
 4552              	.L305:
 4553 001c 10470050 	 .word 1342195472
 4554              	 .cfi_endproc
 4555              	.LFE240:
 4557              	 .section .text.XMC_SCU_CLOCK_DisableUsbPll,"ax",%progbits
 4558              	 .align 2
 4559              	 .global XMC_SCU_CLOCK_DisableUsbPll
 4560              	 .thumb
 4561              	 .thumb_func
 4563              	XMC_SCU_CLOCK_DisableUsbPll:
 4564              	.LFB241:
1113:../Libraries/XMCLib/src/xmc4_scu.c **** 
1114:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL for USB clock */
1115:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableUsbPll(void)
1116:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4565              	 .loc 3 1116 0
 4566              	 .cfi_startproc
 4567              	 
 4568              	 
 4569              	 
 4570 0000 80B4     	 push {r7}
 4571              	.LCFI423:
 4572              	 .cfi_def_cfa_offset 4
 4573              	 .cfi_offset 7,-4
 4574 0002 00AF     	 add r7,sp,#0
 4575              	.LCFI424:
 4576              	 .cfi_def_cfa_register 7
1117:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4577              	 .loc 3 1117 0
 4578 0004 054A     	 ldr r2,.L308
 4579 0006 054B     	 ldr r3,.L308
 4580 0008 5B69     	 ldr r3,[r3,#20]
 4581 000a 43F48033 	 orr r3,r3,#65536
 4582 000e 43F00203 	 orr r3,r3,#2
 4583 0012 5361     	 str r3,[r2,#20]
1118:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4584              	 .loc 3 1118 0
 4585 0014 BD46     	 mov sp,r7
 4586              	.LCFI425:
 4587              	 .cfi_def_cfa_register 13
 4588              	 
 4589 0016 5DF8047B 	 ldr r7,[sp],#4
 4590              	.LCFI426:
 4591              	 .cfi_restore 7
 4592              	 .cfi_def_cfa_offset 0
 4593 001a 7047     	 bx lr
 4594              	.L309:
 4595              	 .align 2
 4596              	.L308:
 4597 001c 10470050 	 .word 1342195472
 4598              	 .cfi_endproc
 4599              	.LFE241:
 4601              	 .section .text.XMC_SCU_CLOCK_StartUsbPll,"ax",%progbits
 4602              	 .align 2
 4603              	 .global XMC_SCU_CLOCK_StartUsbPll
 4604              	 .thumb
 4605              	 .thumb_func
 4607              	XMC_SCU_CLOCK_StartUsbPll:
 4608              	.LFB242:
1119:../Libraries/XMCLib/src/xmc4_scu.c **** 
1120:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure USB PLL */
1121:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartUsbPll(uint32_t pdiv, uint32_t ndiv)
1122:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4609              	 .loc 3 1122 0
 4610              	 .cfi_startproc
 4611              	 
 4612              	 
 4613              	 
 4614 0000 80B4     	 push {r7}
 4615              	.LCFI427:
 4616              	 .cfi_def_cfa_offset 4
 4617              	 .cfi_offset 7,-4
 4618 0002 83B0     	 sub sp,sp,#12
 4619              	.LCFI428:
 4620              	 .cfi_def_cfa_offset 16
 4621 0004 00AF     	 add r7,sp,#0
 4622              	.LCFI429:
 4623              	 .cfi_def_cfa_register 7
 4624 0006 7860     	 str r0,[r7,#4]
 4625 0008 3960     	 str r1,[r7]
1123:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Go to bypass the USB PLL */
1124:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4626              	 .loc 3 1124 0
 4627 000a 194A     	 ldr r2,.L312
 4628 000c 184B     	 ldr r3,.L312
 4629 000e 5B69     	 ldr r3,[r3,#20]
 4630 0010 43F00103 	 orr r3,r3,#1
 4631 0014 5361     	 str r3,[r2,#20]
1125:../Libraries/XMCLib/src/xmc4_scu.c **** 
1126:../Libraries/XMCLib/src/xmc4_scu.c ****   /* disconnect Oscillator from USB PLL */
1127:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_FINDIS_Msk;
 4632              	 .loc 3 1127 0
 4633 0016 164A     	 ldr r2,.L312
 4634 0018 154B     	 ldr r3,.L312
 4635 001a 5B69     	 ldr r3,[r3,#20]
 4636 001c 43F01003 	 orr r3,r3,#16
 4637 0020 5361     	 str r3,[r2,#20]
1128:../Libraries/XMCLib/src/xmc4_scu.c **** 
1129:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Setup Divider settings for USB PLL */
1130:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)((uint32_t)((ndiv -1U) << SCU_PLL_USBPLLCON_NDIV_Pos) |
 4638              	 .loc 3 1130 0
 4639 0022 1349     	 ldr r1,.L312
 4640 0024 3B68     	 ldr r3,[r7]
 4641 0026 013B     	 subs r3,r3,#1
 4642 0028 1A02     	 lsls r2,r3,#8
1131:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4643              	 .loc 3 1131 0
 4644 002a 7B68     	 ldr r3,[r7,#4]
 4645 002c 013B     	 subs r3,r3,#1
 4646 002e 1B06     	 lsls r3,r3,#24
1130:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4647              	 .loc 3 1130 0
 4648 0030 1343     	 orrs r3,r3,r2
 4649 0032 4B61     	 str r3,[r1,#20]
1132:../Libraries/XMCLib/src/xmc4_scu.c **** 
1133:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Set OSCDISCDIS */
1134:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4650              	 .loc 3 1134 0
 4651 0034 0E4A     	 ldr r2,.L312
 4652 0036 0E4B     	 ldr r3,.L312
 4653 0038 5B69     	 ldr r3,[r3,#20]
 4654 003a 43F04003 	 orr r3,r3,#64
 4655 003e 5361     	 str r3,[r2,#20]
1135:../Libraries/XMCLib/src/xmc4_scu.c **** 
1136:../Libraries/XMCLib/src/xmc4_scu.c ****   /* connect Oscillator to USB PLL */
1137:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~SCU_PLL_USBPLLCON_FINDIS_Msk;
 4656              	 .loc 3 1137 0
 4657 0040 0B4A     	 ldr r2,.L312
 4658 0042 0B4B     	 ldr r3,.L312
 4659 0044 5B69     	 ldr r3,[r3,#20]
 4660 0046 23F01003 	 bic r3,r3,#16
 4661 004a 5361     	 str r3,[r2,#20]
1138:../Libraries/XMCLib/src/xmc4_scu.c **** 
1139:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart PLL Lock detection */
1140:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_RESLD_Msk;
 4662              	 .loc 3 1140 0
 4663 004c 084A     	 ldr r2,.L312
 4664 004e 084B     	 ldr r3,.L312
 4665 0050 5B69     	 ldr r3,[r3,#20]
 4666 0052 43F48023 	 orr r3,r3,#262144
 4667 0056 5361     	 str r3,[r2,#20]
1141:../Libraries/XMCLib/src/xmc4_scu.c **** 
1142:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 4668              	 .loc 3 1142 0
 4669 0058 00BF     	 nop
 4670              	.L311:
 4671              	 .loc 3 1142 0 is_stmt 0 discriminator 1
 4672 005a 054B     	 ldr r3,.L312
 4673 005c 1B69     	 ldr r3,[r3,#16]
 4674 005e 03F00403 	 and r3,r3,#4
 4675 0062 002B     	 cmp r3,#0
 4676 0064 F9D0     	 beq .L311
1143:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1144:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for PLL Lock */
1145:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1146:../Libraries/XMCLib/src/xmc4_scu.c **** 
1147:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4677              	 .loc 3 1147 0 is_stmt 1
 4678 0066 0C37     	 adds r7,r7,#12
 4679              	.LCFI430:
 4680              	 .cfi_def_cfa_offset 4
 4681 0068 BD46     	 mov sp,r7
 4682              	.LCFI431:
 4683              	 .cfi_def_cfa_register 13
 4684              	 
 4685 006a 5DF8047B 	 ldr r7,[sp],#4
 4686              	.LCFI432:
 4687              	 .cfi_restore 7
 4688              	 .cfi_def_cfa_offset 0
 4689 006e 7047     	 bx lr
 4690              	.L313:
 4691              	 .align 2
 4692              	.L312:
 4693 0070 10470050 	 .word 1342195472
 4694              	 .cfi_endproc
 4695              	.LFE242:
 4697              	 .section .text.XMC_SCU_CLOCK_StopUsbPll,"ax",%progbits
 4698              	 .align 2
 4699              	 .global XMC_SCU_CLOCK_StopUsbPll
 4700              	 .thumb
 4701              	 .thumb_func
 4703              	XMC_SCU_CLOCK_StopUsbPll:
 4704              	.LFB243:
1148:../Libraries/XMCLib/src/xmc4_scu.c **** 
1149:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL operation */
1150:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopUsbPll(void)
1151:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4705              	 .loc 3 1151 0
 4706              	 .cfi_startproc
 4707              	 
 4708              	 
 4709              	 
 4710 0000 80B4     	 push {r7}
 4711              	.LCFI433:
 4712              	 .cfi_def_cfa_offset 4
 4713              	 .cfi_offset 7,-4
 4714 0002 00AF     	 add r7,sp,#0
 4715              	.LCFI434:
 4716              	 .cfi_def_cfa_register 7
1152:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk |
 4717              	 .loc 3 1152 0
 4718 0004 034B     	 ldr r3,.L315
 4719 0006 044A     	 ldr r2,.L315+4
 4720 0008 5A61     	 str r2,[r3,#20]
1153:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_PLL_USBPLLCON_VCOBYP_Msk);
1154:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4721              	 .loc 3 1154 0
 4722 000a BD46     	 mov sp,r7
 4723              	.LCFI435:
 4724              	 .cfi_def_cfa_register 13
 4725              	 
 4726 000c 5DF8047B 	 ldr r7,[sp],#4
 4727              	.LCFI436:
 4728              	 .cfi_restore 7
 4729              	 .cfi_def_cfa_offset 0
 4730 0010 7047     	 bx lr
 4731              	.L316:
 4732 0012 00BF     	 .align 2
 4733              	.L315:
 4734 0014 10470050 	 .word 1342195472
 4735 0018 03000100 	 .word 65539
 4736              	 .cfi_endproc
 4737              	.LFE243:
 4739              	 .section .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode,"ax",%progbits
 4740              	 .align 2
 4741              	 .global XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 4742              	 .thumb
 4743              	 .thumb_func
 4745              	XMC_SCU_CLOCK_SetBackupClockCalibrationMode:
 4746              	.LFB244:
1155:../Libraries/XMCLib/src/xmc4_scu.c **** 
1156:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to onfigure the calibration mode for internal oscillator */
1157:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetBackupClockCalibrationMode(XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t mode)
1158:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4747              	 .loc 3 1158 0
 4748              	 .cfi_startproc
 4749              	 
 4750              	 
 4751 0000 80B5     	 push {r7,lr}
 4752              	.LCFI437:
 4753              	 .cfi_def_cfa_offset 8
 4754              	 .cfi_offset 7,-8
 4755              	 .cfi_offset 14,-4
 4756 0002 82B0     	 sub sp,sp,#8
 4757              	.LCFI438:
 4758              	 .cfi_def_cfa_offset 16
 4759 0004 00AF     	 add r7,sp,#0
 4760              	.LCFI439:
 4761              	 .cfi_def_cfa_register 7
 4762 0006 0346     	 mov r3,r0
 4763 0008 FB71     	 strb r3,[r7,#7]
1159:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable factory calibration based trimming */
1160:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FOTR_Msk;
 4764              	 .loc 3 1160 0
 4765 000a 0F4A     	 ldr r2,.L319
 4766 000c 0E4B     	 ldr r3,.L319
 4767 000e 5B68     	 ldr r3,[r3,#4]
 4768 0010 43F48013 	 orr r3,r3,#1048576
 4769 0014 5360     	 str r3,[r2,#4]
1161:../Libraries/XMCLib/src/xmc4_scu.c **** 
1162:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC)
 4770              	 .loc 3 1162 0
 4771 0016 FB79     	 ldrb r3,[r7,#7]
 4772 0018 012B     	 cmp r3,#1
 4773 001a 0ED1     	 bne .L318
1163:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1164:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Disable factory calibration based trimming */
1165:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FOTR_Msk;
 4774              	 .loc 3 1165 0
 4775 001c 0A4A     	 ldr r2,.L319
 4776 001e 0A4B     	 ldr r3,.L319
 4777 0020 5B68     	 ldr r3,[r3,#4]
 4778 0022 23F48013 	 bic r3,r3,#1048576
 4779 0026 5360     	 str r3,[r2,#4]
1166:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_lDelay(100UL);
 4780              	 .loc 3 1166 0
 4781 0028 6420     	 movs r0,#100
 4782 002a FFF7FEFF 	 bl XMC_SCU_lDelay
1167:../Libraries/XMCLib/src/xmc4_scu.c **** 
1168:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Enable automatic calibration */
1169:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_AOTREN_Msk;
 4783              	 .loc 3 1169 0
 4784 002e 064A     	 ldr r2,.L319
 4785 0030 054B     	 ldr r3,.L319
 4786 0032 5B68     	 ldr r3,[r3,#4]
 4787 0034 43F40023 	 orr r3,r3,#524288
 4788 0038 5360     	 str r3,[r2,#4]
 4789              	.L318:
1170:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1171:../Libraries/XMCLib/src/xmc4_scu.c **** 
1172:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(100UL);
 4790              	 .loc 3 1172 0
 4791 003a 6420     	 movs r0,#100
 4792 003c FFF7FEFF 	 bl XMC_SCU_lDelay
1173:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4793              	 .loc 3 1173 0
 4794 0040 0837     	 adds r7,r7,#8
 4795              	.LCFI440:
 4796              	 .cfi_def_cfa_offset 8
 4797 0042 BD46     	 mov sp,r7
 4798              	.LCFI441:
 4799              	 .cfi_def_cfa_register 13
 4800              	 
 4801 0044 80BD     	 pop {r7,pc}
 4802              	.L320:
 4803 0046 00BF     	 .align 2
 4804              	.L319:
 4805 0048 10470050 	 .word 1342195472
 4806              	 .cfi_endproc
 4807              	.LFE244:
 4809              	 .section .text.XMC_SCU_POWER_EnableUsb,"ax",%progbits
 4810              	 .align 2
 4811              	 .global XMC_SCU_POWER_EnableUsb
 4812              	 .thumb
 4813              	 .thumb_func
 4815              	XMC_SCU_POWER_EnableUsb:
 4816              	.LFB245:
1174:../Libraries/XMCLib/src/xmc4_scu.c **** 
1175:../Libraries/XMCLib/src/xmc4_scu.c **** 
1176:../Libraries/XMCLib/src/xmc4_scu.c **** 
1177:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB Phy and comparator */
1178:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_EnableUsb(void)
1179:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4817              	 .loc 3 1179 0
 4818              	 .cfi_startproc
 4819              	 
 4820              	 
 4821              	 
 4822 0000 80B4     	 push {r7}
 4823              	.LCFI442:
 4824              	 .cfi_def_cfa_offset 4
 4825              	 .cfi_offset 7,-4
 4826 0002 00AF     	 add r7,sp,#0
 4827              	.LCFI443:
 4828              	 .cfi_def_cfa_register 7
1180:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1181:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)(SCU_POWER_PWRSET_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4829              	 .loc 3 1181 0
 4830 0004 034B     	 ldr r3,.L322
 4831 0006 4FF44032 	 mov r2,#196608
 4832 000a 5A60     	 str r2,[r3,#4]
1182:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1183:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_USBPHYPDQ_Msk;
1184:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1185:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4833              	 .loc 3 1185 0
 4834 000c BD46     	 mov sp,r7
 4835              	.LCFI444:
 4836              	 .cfi_def_cfa_register 13
 4837              	 
 4838 000e 5DF8047B 	 ldr r7,[sp],#4
 4839              	.LCFI445:
 4840              	 .cfi_restore 7
 4841              	 .cfi_def_cfa_offset 0
 4842 0012 7047     	 bx lr
 4843              	.L323:
 4844              	 .align 2
 4845              	.L322:
 4846 0014 00420050 	 .word 1342194176
 4847              	 .cfi_endproc
 4848              	.LFE245:
 4850              	 .section .text.XMC_SCU_POWER_DisableUsb,"ax",%progbits
 4851              	 .align 2
 4852              	 .global XMC_SCU_POWER_DisableUsb
 4853              	 .thumb
 4854              	 .thumb_func
 4856              	XMC_SCU_POWER_DisableUsb:
 4857              	.LFB246:
1186:../Libraries/XMCLib/src/xmc4_scu.c **** 
1187:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down USB Phy and comparator */
1188:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_DisableUsb(void)
1189:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4858              	 .loc 3 1189 0
 4859              	 .cfi_startproc
 4860              	 
 4861              	 
 4862              	 
 4863 0000 80B4     	 push {r7}
 4864              	.LCFI446:
 4865              	 .cfi_def_cfa_offset 4
 4866              	 .cfi_offset 7,-4
 4867 0002 00AF     	 add r7,sp,#0
 4868              	.LCFI447:
 4869              	 .cfi_def_cfa_register 7
1190:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1191:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)(SCU_POWER_PWRCLR_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4870              	 .loc 3 1191 0
 4871 0004 034B     	 ldr r3,.L325
 4872 0006 4FF44032 	 mov r2,#196608
 4873 000a 9A60     	 str r2,[r3,#8]
1192:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1193:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_USBPHYPDQ_Msk;
1194:../Libraries/XMCLib/src/xmc4_scu.c **** #endif    
1195:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4874              	 .loc 3 1195 0
 4875 000c BD46     	 mov sp,r7
 4876              	.LCFI448:
 4877              	 .cfi_def_cfa_register 13
 4878              	 
 4879 000e 5DF8047B 	 ldr r7,[sp],#4
 4880              	.LCFI449:
 4881              	 .cfi_restore 7
 4882              	 .cfi_def_cfa_offset 0
 4883 0012 7047     	 bx lr
 4884              	.L326:
 4885              	 .align 2
 4886              	.L325:
 4887 0014 00420050 	 .word 1342194176
 4888              	 .cfi_endproc
 4889              	.LFE246:
 4891              	 .section .text.XMC_SCU_CLOCK_IsUsbPllLocked,"ax",%progbits
 4892              	 .align 2
 4893              	 .global XMC_SCU_CLOCK_IsUsbPllLocked
 4894              	 .thumb
 4895              	 .thumb_func
 4897              	XMC_SCU_CLOCK_IsUsbPllLocked:
 4898              	.LFB247:
1196:../Libraries/XMCLib/src/xmc4_scu.c **** 
1197:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check USB PLL is locked or not */
1198:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsUsbPllLocked(void)
1199:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4899              	 .loc 3 1199 0
 4900              	 .cfi_startproc
 4901              	 
 4902              	 
 4903              	 
 4904 0000 80B4     	 push {r7}
 4905              	.LCFI450:
 4906              	 .cfi_def_cfa_offset 4
 4907              	 .cfi_offset 7,-4
 4908 0002 00AF     	 add r7,sp,#0
 4909              	.LCFI451:
 4910              	 .cfi_def_cfa_register 7
1200:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) != 0UL);
 4911              	 .loc 3 1200 0
 4912 0004 064B     	 ldr r3,.L329
 4913 0006 1B69     	 ldr r3,[r3,#16]
 4914 0008 03F00403 	 and r3,r3,#4
 4915 000c 002B     	 cmp r3,#0
 4916 000e 14BF     	 ite ne
 4917 0010 0123     	 movne r3,#1
 4918 0012 0023     	 moveq r3,#0
 4919 0014 DBB2     	 uxtb r3,r3
1201:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4920              	 .loc 3 1201 0
 4921 0016 1846     	 mov r0,r3
 4922 0018 BD46     	 mov sp,r7
 4923              	.LCFI452:
 4924              	 .cfi_def_cfa_register 13
 4925              	 
 4926 001a 5DF8047B 	 ldr r7,[sp],#4
 4927              	.LCFI453:
 4928              	 .cfi_restore 7
 4929              	 .cfi_def_cfa_offset 0
 4930 001e 7047     	 bx lr
 4931              	.L330:
 4932              	 .align 2
 4933              	.L329:
 4934 0020 10470050 	 .word 1342195472
 4935              	 .cfi_endproc
 4936              	.LFE247:
 4938              	 .section .text.XMC_SCU_HIB_EnableHibernateDomain,"ax",%progbits
 4939              	 .align 2
 4940              	 .global XMC_SCU_HIB_EnableHibernateDomain
 4941              	 .thumb
 4942              	 .thumb_func
 4944              	XMC_SCU_HIB_EnableHibernateDomain:
 4945              	.LFB248:
1202:../Libraries/XMCLib/src/xmc4_scu.c **** 
1203:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power up the hibernation domain */
1204:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableHibernateDomain(void)
1205:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4946              	 .loc 3 1205 0
 4947              	 .cfi_startproc
 4948              	 
 4949              	 
 4950              	 
 4951 0000 80B4     	 push {r7}
 4952              	.LCFI454:
 4953              	 .cfi_def_cfa_offset 4
 4954              	 .cfi_offset 7,-4
 4955 0002 00AF     	 add r7,sp,#0
 4956              	.LCFI455:
 4957              	 .cfi_def_cfa_register 7
1206:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up HIB domain if and only if it is currently powered down */
1207:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 4958              	 .loc 3 1207 0
 4959 0004 124B     	 ldr r3,.L336
 4960 0006 1B68     	 ldr r3,[r3]
 4961 0008 03F00103 	 and r3,r3,#1
 4962 000c 002B     	 cmp r3,#0
 4963 000e 09D1     	 bne .L332
1208:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1209:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_HIB_Msk;
 4964              	 .loc 3 1209 0
 4965 0010 0F4B     	 ldr r3,.L336
 4966 0012 0122     	 movs r2,#1
 4967 0014 5A60     	 str r2,[r3,#4]
1210:../Libraries/XMCLib/src/xmc4_scu.c ****     
1211:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 4968              	 .loc 3 1211 0
 4969 0016 00BF     	 nop
 4970              	.L333:
 4971              	 .loc 3 1211 0 is_stmt 0 discriminator 1
 4972 0018 0D4B     	 ldr r3,.L336
 4973 001a 1B68     	 ldr r3,[r3]
 4974 001c 03F00103 	 and r3,r3,#1
 4975 0020 002B     	 cmp r3,#0
 4976 0022 F9D0     	 beq .L333
 4977              	.L332:
1212:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1213:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1214:../Libraries/XMCLib/src/xmc4_scu.c ****     }    
1215:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1216:../Libraries/XMCLib/src/xmc4_scu.c ****   
1217:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Remove the reset only if HIB domain were in a state of reset */
1218:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 4978              	 .loc 3 1218 0 is_stmt 1
 4979 0024 0B4B     	 ldr r3,.L336+4
 4980 0026 1B68     	 ldr r3,[r3]
 4981 0028 03F40073 	 and r3,r3,#512
 4982 002c 002B     	 cmp r3,#0
 4983 002e 0AD0     	 beq .L331
1219:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1220:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_HIBRS_Msk;
 4984              	 .loc 3 1220 0
 4985 0030 084B     	 ldr r3,.L336+4
 4986 0032 4FF40072 	 mov r2,#512
 4987 0036 9A60     	 str r2,[r3,#8]
1221:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk) != 0UL)
 4988              	 .loc 3 1221 0
 4989 0038 00BF     	 nop
 4990              	.L335:
 4991              	 .loc 3 1221 0 is_stmt 0 discriminator 1
 4992 003a 064B     	 ldr r3,.L336+4
 4993 003c 1B68     	 ldr r3,[r3]
 4994 003e 03F40073 	 and r3,r3,#512
 4995 0042 002B     	 cmp r3,#0
 4996 0044 F9D1     	 bne .L335
 4997              	.L331:
1222:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1223:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1224:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1225:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1226:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4998              	 .loc 3 1226 0 is_stmt 1
 4999 0046 BD46     	 mov sp,r7
 5000              	.LCFI456:
 5001              	 .cfi_def_cfa_register 13
 5002              	 
 5003 0048 5DF8047B 	 ldr r7,[sp],#4
 5004              	.LCFI457:
 5005              	 .cfi_restore 7
 5006              	 .cfi_def_cfa_offset 0
 5007 004c 7047     	 bx lr
 5008              	.L337:
 5009 004e 00BF     	 .align 2
 5010              	.L336:
 5011 0050 00420050 	 .word 1342194176
 5012 0054 00440050 	 .word 1342194688
 5013              	 .cfi_endproc
 5014              	.LFE248:
 5016              	 .section .text.XMC_SCU_HIB_DisableHibernateDomain,"ax",%progbits
 5017              	 .align 2
 5018              	 .global XMC_SCU_HIB_DisableHibernateDomain
 5019              	 .thumb
 5020              	 .thumb_func
 5022              	XMC_SCU_HIB_DisableHibernateDomain:
 5023              	.LFB249:
1227:../Libraries/XMCLib/src/xmc4_scu.c **** 
1228:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down the hibernation domain */
1229:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableHibernateDomain(void)
1230:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5024              	 .loc 3 1230 0
 5025              	 .cfi_startproc
 5026              	 
 5027              	 
 5028              	 
 5029 0000 80B4     	 push {r7}
 5030              	.LCFI458:
 5031              	 .cfi_def_cfa_offset 4
 5032              	 .cfi_offset 7,-4
 5033 0002 00AF     	 add r7,sp,#0
 5034              	.LCFI459:
 5035              	 .cfi_def_cfa_register 7
1231:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Disable hibernate domain */   
1232:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_HIB_Msk;
 5036              	 .loc 3 1232 0
 5037 0004 054B     	 ldr r3,.L339
 5038 0006 0122     	 movs r2,#1
 5039 0008 9A60     	 str r2,[r3,#8]
1233:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Reset of hibernate domain reset */  
1234:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_RESET->RSTSET = (uint32_t)SCU_RESET_RSTSET_HIBRS_Msk;
 5040              	 .loc 3 1234 0
 5041 000a 054B     	 ldr r3,.L339+4
 5042 000c 4FF40072 	 mov r2,#512
 5043 0010 5A60     	 str r2,[r3,#4]
1235:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5044              	 .loc 3 1235 0
 5045 0012 BD46     	 mov sp,r7
 5046              	.LCFI460:
 5047              	 .cfi_def_cfa_register 13
 5048              	 
 5049 0014 5DF8047B 	 ldr r7,[sp],#4
 5050              	.LCFI461:
 5051              	 .cfi_restore 7
 5052              	 .cfi_def_cfa_offset 0
 5053 0018 7047     	 bx lr
 5054              	.L340:
 5055 001a 00BF     	 .align 2
 5056              	.L339:
 5057 001c 00420050 	 .word 1342194176
 5058 0020 00440050 	 .word 1342194688
 5059              	 .cfi_endproc
 5060              	.LFE249:
 5062              	 .section .text.XMC_SCU_HIB_IsHibernateDomainEnabled,"ax",%progbits
 5063              	 .align 2
 5064              	 .global XMC_SCU_HIB_IsHibernateDomainEnabled
 5065              	 .thumb
 5066              	 .thumb_func
 5068              	XMC_SCU_HIB_IsHibernateDomainEnabled:
 5069              	.LFB250:
1236:../Libraries/XMCLib/src/xmc4_scu.c **** 
1237:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check the hibernation domain is enabled or not */
1238:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HIB_IsHibernateDomainEnabled(void)
1239:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5070              	 .loc 3 1239 0
 5071              	 .cfi_startproc
 5072              	 
 5073              	 
 5074              	 
 5075 0000 80B4     	 push {r7}
 5076              	.LCFI462:
 5077              	 .cfi_def_cfa_offset 4
 5078              	 .cfi_offset 7,-4
 5079 0002 00AF     	 add r7,sp,#0
 5080              	.LCFI463:
 5081              	 .cfi_def_cfa_register 7
1240:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5082              	 .loc 3 1240 0
 5083 0004 0B4B     	 ldr r3,.L345
 5084 0006 1B68     	 ldr r3,[r3]
 5085 0008 03F00103 	 and r3,r3,#1
 5086 000c 002B     	 cmp r3,#0
 5087 000e 07D0     	 beq .L342
1241:../Libraries/XMCLib/src/xmc4_scu.c ****           !(bool)(SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk));
 5088              	 .loc 3 1241 0 discriminator 1
 5089 0010 094B     	 ldr r3,.L345+4
 5090 0012 1B68     	 ldr r3,[r3]
 5091 0014 03F40073 	 and r3,r3,#512
1240:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5092              	 .loc 3 1240 0 discriminator 1
 5093 0018 002B     	 cmp r3,#0
 5094 001a 01D1     	 bne .L342
1240:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5095              	 .loc 3 1240 0 is_stmt 0 discriminator 3
 5096 001c 0123     	 movs r3,#1
 5097 001e 00E0     	 b .L343
 5098              	.L342:
1240:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5099              	 .loc 3 1240 0 discriminator 4
 5100 0020 0023     	 movs r3,#0
 5101              	.L343:
1240:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5102              	 .loc 3 1240 0 discriminator 6
 5103 0022 03F00103 	 and r3,r3,#1
 5104 0026 DBB2     	 uxtb r3,r3
1242:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5105              	 .loc 3 1242 0 is_stmt 1 discriminator 6
 5106 0028 1846     	 mov r0,r3
 5107 002a BD46     	 mov sp,r7
 5108              	.LCFI464:
 5109              	 .cfi_def_cfa_register 13
 5110              	 
 5111 002c 5DF8047B 	 ldr r7,[sp],#4
 5112              	.LCFI465:
 5113              	 .cfi_restore 7
 5114              	 .cfi_def_cfa_offset 0
 5115 0030 7047     	 bx lr
 5116              	.L346:
 5117 0032 00BF     	 .align 2
 5118              	.L345:
 5119 0034 00420050 	 .word 1342194176
 5120 0038 00440050 	 .word 1342194688
 5121              	 .cfi_endproc
 5122              	.LFE250:
 5124              	 .section .text.XMC_SCU_HIB_EnableInternalSlowClock,"ax",%progbits
 5125              	 .align 2
 5126              	 .global XMC_SCU_HIB_EnableInternalSlowClock
 5127              	 .thumb
 5128              	 .thumb_func
 5130              	XMC_SCU_HIB_EnableInternalSlowClock:
 5131              	.LFB251:
1243:../Libraries/XMCLib/src/xmc4_scu.c **** 
1244:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1245:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableInternalSlowClock(void)
1246:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5132              	 .loc 3 1246 0
 5133              	 .cfi_startproc
 5134              	 
 5135              	 
 5136              	 
 5137 0000 80B4     	 push {r7}
 5138              	.LCFI466:
 5139              	 .cfi_def_cfa_offset 4
 5140              	 .cfi_offset 7,-4
 5141 0002 00AF     	 add r7,sp,#0
 5142              	.LCFI467:
 5143              	 .cfi_def_cfa_register 7
1247:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5144              	 .loc 3 1247 0
 5145 0004 00BF     	 nop
 5146              	.L348:
 5147              	 .loc 3 1247 0 is_stmt 0 discriminator 1
 5148 0006 084B     	 ldr r3,.L349
 5149 0008 D3F8C430 	 ldr r3,[r3,#196]
 5150 000c 03F02003 	 and r3,r3,#32
 5151 0010 002B     	 cmp r3,#0
 5152 0012 F8D1     	 bne .L348
1248:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1249:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1250:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1251:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL &= (uint32_t)~(SCU_HIBERNATE_OSCSICTRL_PWD_Msk);
 5153              	 .loc 3 1251 0 is_stmt 1
 5154 0014 054A     	 ldr r2,.L349+4
 5155 0016 054B     	 ldr r3,.L349+4
 5156 0018 5B69     	 ldr r3,[r3,#20]
 5157 001a 23F00103 	 bic r3,r3,#1
 5158 001e 5361     	 str r3,[r2,#20]
1252:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5159              	 .loc 3 1252 0
 5160 0020 BD46     	 mov sp,r7
 5161              	.LCFI468:
 5162              	 .cfi_def_cfa_register 13
 5163              	 
 5164 0022 5DF8047B 	 ldr r7,[sp],#4
 5165              	.LCFI469:
 5166              	 .cfi_restore 7
 5167              	 .cfi_def_cfa_offset 0
 5168 0026 7047     	 bx lr
 5169              	.L350:
 5170              	 .align 2
 5171              	.L349:
 5172 0028 00400050 	 .word 1342193664
 5173 002c 00430050 	 .word 1342194432
 5174              	 .cfi_endproc
 5175              	.LFE251:
 5177              	 .section .text.XMC_SCU_HIB_DisableInternalSlowClock,"ax",%progbits
 5178              	 .align 2
 5179              	 .global XMC_SCU_HIB_DisableInternalSlowClock
 5180              	 .thumb
 5181              	 .thumb_func
 5183              	XMC_SCU_HIB_DisableInternalSlowClock:
 5184              	.LFB252:
1253:../Libraries/XMCLib/src/xmc4_scu.c **** 
1254:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1255:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableInternalSlowClock(void)
1256:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5185              	 .loc 3 1256 0
 5186              	 .cfi_startproc
 5187              	 
 5188              	 
 5189              	 
 5190 0000 80B4     	 push {r7}
 5191              	.LCFI470:
 5192              	 .cfi_def_cfa_offset 4
 5193              	 .cfi_offset 7,-4
 5194 0002 00AF     	 add r7,sp,#0
 5195              	.LCFI471:
 5196              	 .cfi_def_cfa_register 7
1257:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5197              	 .loc 3 1257 0
 5198 0004 00BF     	 nop
 5199              	.L352:
 5200              	 .loc 3 1257 0 is_stmt 0 discriminator 1
 5201 0006 084B     	 ldr r3,.L353
 5202 0008 D3F8C430 	 ldr r3,[r3,#196]
 5203 000c 03F02003 	 and r3,r3,#32
 5204 0010 002B     	 cmp r3,#0
 5205 0012 F8D1     	 bne .L352
1258:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1259:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1260:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1261:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL |= (uint32_t)SCU_HIBERNATE_OSCSICTRL_PWD_Msk;
 5206              	 .loc 3 1261 0 is_stmt 1
 5207 0014 054A     	 ldr r2,.L353+4
 5208 0016 054B     	 ldr r3,.L353+4
 5209 0018 5B69     	 ldr r3,[r3,#20]
 5210 001a 43F00103 	 orr r3,r3,#1
 5211 001e 5361     	 str r3,[r2,#20]
1262:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5212              	 .loc 3 1262 0
 5213 0020 BD46     	 mov sp,r7
 5214              	.LCFI472:
 5215              	 .cfi_def_cfa_register 13
 5216              	 
 5217 0022 5DF8047B 	 ldr r7,[sp],#4
 5218              	.LCFI473:
 5219              	 .cfi_restore 7
 5220              	 .cfi_def_cfa_offset 0
 5221 0026 7047     	 bx lr
 5222              	.L354:
 5223              	 .align 2
 5224              	.L353:
 5225 0028 00400050 	 .word 1342193664
 5226 002c 00430050 	 .word 1342194432
 5227              	 .cfi_endproc
 5228              	.LFE252:
 5230              	 .section .text.XMC_SCU_HIB_ClearEventStatus,"ax",%progbits
 5231              	 .align 2
 5232              	 .global XMC_SCU_HIB_ClearEventStatus
 5233              	 .thumb
 5234              	 .thumb_func
 5236              	XMC_SCU_HIB_ClearEventStatus:
 5237              	.LFB253:
1263:../Libraries/XMCLib/src/xmc4_scu.c **** 
1264:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_ClearEventStatus(int32_t event)
1265:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5238              	 .loc 3 1265 0
 5239              	 .cfi_startproc
 5240              	 
 5241              	 
 5242              	 
 5243 0000 80B4     	 push {r7}
 5244              	.LCFI474:
 5245              	 .cfi_def_cfa_offset 4
 5246              	 .cfi_offset 7,-4
 5247 0002 83B0     	 sub sp,sp,#12
 5248              	.LCFI475:
 5249              	 .cfi_def_cfa_offset 16
 5250 0004 00AF     	 add r7,sp,#0
 5251              	.LCFI476:
 5252              	 .cfi_def_cfa_register 7
 5253 0006 7860     	 str r0,[r7,#4]
1266:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 5254              	 .loc 3 1266 0
 5255 0008 00BF     	 nop
 5256              	.L356:
 5257              	 .loc 3 1266 0 is_stmt 0 discriminator 1
 5258 000a 074B     	 ldr r3,.L357
 5259 000c D3F8C430 	 ldr r3,[r3,#196]
 5260 0010 03F00203 	 and r3,r3,#2
 5261 0014 002B     	 cmp r3,#0
 5262 0016 F8D1     	 bne .L356
1267:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1268:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCLR register in hibernate domain is ready to accept a write */  
1269:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1270:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = event;
 5263              	 .loc 3 1270 0 is_stmt 1
 5264 0018 044A     	 ldr r2,.L357+4
 5265 001a 7B68     	 ldr r3,[r7,#4]
 5266 001c 5360     	 str r3,[r2,#4]
1271:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5267              	 .loc 3 1271 0
 5268 001e 0C37     	 adds r7,r7,#12
 5269              	.LCFI477:
 5270              	 .cfi_def_cfa_offset 4
 5271 0020 BD46     	 mov sp,r7
 5272              	.LCFI478:
 5273              	 .cfi_def_cfa_register 13
 5274              	 
 5275 0022 5DF8047B 	 ldr r7,[sp],#4
 5276              	.LCFI479:
 5277              	 .cfi_restore 7
 5278              	 .cfi_def_cfa_offset 0
 5279 0026 7047     	 bx lr
 5280              	.L358:
 5281              	 .align 2
 5282              	.L357:
 5283 0028 00400050 	 .word 1342193664
 5284 002c 00430050 	 .word 1342194432
 5285              	 .cfi_endproc
 5286              	.LFE253:
 5288              	 .section .text.XMC_SCU_HIB_TriggerEvent,"ax",%progbits
 5289              	 .align 2
 5290              	 .global XMC_SCU_HIB_TriggerEvent
 5291              	 .thumb
 5292              	 .thumb_func
 5294              	XMC_SCU_HIB_TriggerEvent:
 5295              	.LFB254:
1272:../Libraries/XMCLib/src/xmc4_scu.c **** 
1273:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_TriggerEvent(int32_t event)
1274:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5296              	 .loc 3 1274 0
 5297              	 .cfi_startproc
 5298              	 
 5299              	 
 5300              	 
 5301 0000 80B4     	 push {r7}
 5302              	.LCFI480:
 5303              	 .cfi_def_cfa_offset 4
 5304              	 .cfi_offset 7,-4
 5305 0002 83B0     	 sub sp,sp,#12
 5306              	.LCFI481:
 5307              	 .cfi_def_cfa_offset 16
 5308 0004 00AF     	 add r7,sp,#0
 5309              	.LCFI482:
 5310              	 .cfi_def_cfa_register 7
 5311 0006 7860     	 str r0,[r7,#4]
1275:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 5312              	 .loc 3 1275 0
 5313 0008 00BF     	 nop
 5314              	.L360:
 5315              	 .loc 3 1275 0 is_stmt 0 discriminator 1
 5316 000a 074B     	 ldr r3,.L361
 5317 000c D3F8C430 	 ldr r3,[r3,#196]
 5318 0010 03F00403 	 and r3,r3,#4
 5319 0014 002B     	 cmp r3,#0
 5320 0016 F8D1     	 bne .L360
1276:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1277:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDSET register in hibernate domain is ready to accept a write */    
1278:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = event;
 5321              	 .loc 3 1279 0 is_stmt 1
 5322 0018 044A     	 ldr r2,.L361+4
 5323 001a 7B68     	 ldr r3,[r7,#4]
 5324 001c 9360     	 str r3,[r2,#8]
1280:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5325              	 .loc 3 1280 0
 5326 001e 0C37     	 adds r7,r7,#12
 5327              	.LCFI483:
 5328              	 .cfi_def_cfa_offset 4
 5329 0020 BD46     	 mov sp,r7
 5330              	.LCFI484:
 5331              	 .cfi_def_cfa_register 13
 5332              	 
 5333 0022 5DF8047B 	 ldr r7,[sp],#4
 5334              	.LCFI485:
 5335              	 .cfi_restore 7
 5336              	 .cfi_def_cfa_offset 0
 5337 0026 7047     	 bx lr
 5338              	.L362:
 5339              	 .align 2
 5340              	.L361:
 5341 0028 00400050 	 .word 1342193664
 5342 002c 00430050 	 .word 1342194432
 5343              	 .cfi_endproc
 5344              	.LFE254:
 5346              	 .section .text.XMC_SCU_HIB_EnableEvent,"ax",%progbits
 5347              	 .align 2
 5348              	 .global XMC_SCU_HIB_EnableEvent
 5349              	 .thumb
 5350              	 .thumb_func
 5352              	XMC_SCU_HIB_EnableEvent:
 5353              	.LFB255:
1281:../Libraries/XMCLib/src/xmc4_scu.c **** 
1282:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableEvent(int32_t event)
1283:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5354              	 .loc 3 1283 0
 5355              	 .cfi_startproc
 5356              	 
 5357              	 
 5358              	 
 5359 0000 80B4     	 push {r7}
 5360              	.LCFI486:
 5361              	 .cfi_def_cfa_offset 4
 5362              	 .cfi_offset 7,-4
 5363 0002 83B0     	 sub sp,sp,#12
 5364              	.LCFI487:
 5365              	 .cfi_def_cfa_offset 16
 5366 0004 00AF     	 add r7,sp,#0
 5367              	.LCFI488:
 5368              	 .cfi_def_cfa_register 7
 5369 0006 7860     	 str r0,[r7,#4]
1284:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1285:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
 5370              	 .loc 3 1285 0
 5371 0008 7B68     	 ldr r3,[r7,#4]
 5372 000a 03F48073 	 and r3,r3,#256
 5373 000e 5B04     	 lsls r3,r3,#17
 5374 0010 1A46     	 mov r2,r3
 5375 0012 7B68     	 ldr r3,[r7,#4]
 5376 0014 23F48073 	 bic r3,r3,#256
 5377 0018 1343     	 orrs r3,r3,r2
 5378 001a 7B60     	 str r3,[r7,#4]
1286:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
 5379              	 .loc 3 1286 0
 5380 001c 7B68     	 ldr r3,[r7,#4]
 5381 001e 03F40073 	 and r3,r3,#512
 5382 0022 DB03     	 lsls r3,r3,#15
 5383 0024 1A46     	 mov r2,r3
 5384 0026 7B68     	 ldr r3,[r7,#4]
 5385 0028 23F40073 	 bic r3,r3,#512
 5386 002c 1343     	 orrs r3,r3,r2
 5387 002e 7B60     	 str r3,[r7,#4]
1287:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
 5388              	 .loc 3 1287 0
 5389 0030 7B68     	 ldr r3,[r7,#4]
 5390 0032 03F48063 	 and r3,r3,#1024
 5391 0036 5B04     	 lsls r3,r3,#17
 5392 0038 1A46     	 mov r2,r3
 5393 003a 7B68     	 ldr r3,[r7,#4]
 5394 003c 23F48063 	 bic r3,r3,#1024
 5395 0040 1343     	 orrs r3,r3,r2
 5396 0042 7B60     	 str r3,[r7,#4]
1288:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
 5397              	 .loc 3 1288 0
 5398 0044 7B68     	 ldr r3,[r7,#4]
 5399 0046 03F40063 	 and r3,r3,#2048
 5400 004a DB03     	 lsls r3,r3,#15
 5401 004c 1A46     	 mov r2,r3
 5402 004e 7B68     	 ldr r3,[r7,#4]
 5403 0050 23F40063 	 bic r3,r3,#2048
 5404 0054 1343     	 orrs r3,r3,r2
 5405 0056 7B60     	 str r3,[r7,#4]
1289:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1290:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
 5406              	 .loc 3 1290 0
 5407 0058 7B68     	 ldr r3,[r7,#4]
 5408 005a 03F48053 	 and r3,r3,#4096
 5409 005e 5B04     	 lsls r3,r3,#17
 5410 0060 1A46     	 mov r2,r3
 5411 0062 7B68     	 ldr r3,[r7,#4]
 5412 0064 23F48053 	 bic r3,r3,#4096
 5413 0068 1343     	 orrs r3,r3,r2
 5414 006a 7B60     	 str r3,[r7,#4]
1291:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
 5415              	 .loc 3 1291 0
 5416 006c 7B68     	 ldr r3,[r7,#4]
 5417 006e 03F40053 	 and r3,r3,#8192
 5418 0072 DB03     	 lsls r3,r3,#15
 5419 0074 1A46     	 mov r2,r3
 5420 0076 7B68     	 ldr r3,[r7,#4]
 5421 0078 23F40053 	 bic r3,r3,#8192
 5422 007c 1343     	 orrs r3,r3,r2
 5423 007e 7B60     	 str r3,[r7,#4]
1292:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1293:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1294:../Libraries/XMCLib/src/xmc4_scu.c **** 
1295:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5424              	 .loc 3 1295 0
 5425 0080 00BF     	 nop
 5426              	.L364:
 5427              	 .loc 3 1295 0 is_stmt 0 discriminator 1
 5428 0082 094B     	 ldr r3,.L365
 5429 0084 D3F8C430 	 ldr r3,[r3,#196]
 5430 0088 03F00803 	 and r3,r3,#8
 5431 008c 002B     	 cmp r3,#0
 5432 008e F8D1     	 bne .L364
1296:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1297:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1298:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1299:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= event;
 5433              	 .loc 3 1299 0 is_stmt 1
 5434 0090 0649     	 ldr r1,.L365+4
 5435 0092 064B     	 ldr r3,.L365+4
 5436 0094 DA68     	 ldr r2,[r3,#12]
 5437 0096 7B68     	 ldr r3,[r7,#4]
 5438 0098 1343     	 orrs r3,r3,r2
 5439 009a CB60     	 str r3,[r1,#12]
1300:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5440              	 .loc 3 1300 0
 5441 009c 0C37     	 adds r7,r7,#12
 5442              	.LCFI489:
 5443              	 .cfi_def_cfa_offset 4
 5444 009e BD46     	 mov sp,r7
 5445              	.LCFI490:
 5446              	 .cfi_def_cfa_register 13
 5447              	 
 5448 00a0 5DF8047B 	 ldr r7,[sp],#4
 5449              	.LCFI491:
 5450              	 .cfi_restore 7
 5451              	 .cfi_def_cfa_offset 0
 5452 00a4 7047     	 bx lr
 5453              	.L366:
 5454 00a6 00BF     	 .align 2
 5455              	.L365:
 5456 00a8 00400050 	 .word 1342193664
 5457 00ac 00430050 	 .word 1342194432
 5458              	 .cfi_endproc
 5459              	.LFE255:
 5461              	 .section .text.XMC_SCU_HIB_DisableEvent,"ax",%progbits
 5462              	 .align 2
 5463              	 .global XMC_SCU_HIB_DisableEvent
 5464              	 .thumb
 5465              	 .thumb_func
 5467              	XMC_SCU_HIB_DisableEvent:
 5468              	.LFB256:
1301:../Libraries/XMCLib/src/xmc4_scu.c **** 
1302:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableEvent(int32_t event)
1303:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5469              	 .loc 3 1303 0
 5470              	 .cfi_startproc
 5471              	 
 5472              	 
 5473              	 
 5474 0000 80B4     	 push {r7}
 5475              	.LCFI492:
 5476              	 .cfi_def_cfa_offset 4
 5477              	 .cfi_offset 7,-4
 5478 0002 83B0     	 sub sp,sp,#12
 5479              	.LCFI493:
 5480              	 .cfi_def_cfa_offset 16
 5481 0004 00AF     	 add r7,sp,#0
 5482              	.LCFI494:
 5483              	 .cfi_def_cfa_register 7
 5484 0006 7860     	 str r0,[r7,#4]
1304:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1305:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
 5485              	 .loc 3 1305 0
 5486 0008 7B68     	 ldr r3,[r7,#4]
 5487 000a 03F48073 	 and r3,r3,#256
 5488 000e 5B04     	 lsls r3,r3,#17
 5489 0010 1A46     	 mov r2,r3
 5490 0012 7B68     	 ldr r3,[r7,#4]
 5491 0014 23F48073 	 bic r3,r3,#256
 5492 0018 1343     	 orrs r3,r3,r2
 5493 001a 7B60     	 str r3,[r7,#4]
1306:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
 5494              	 .loc 3 1306 0
 5495 001c 7B68     	 ldr r3,[r7,#4]
 5496 001e 03F40073 	 and r3,r3,#512
 5497 0022 DB03     	 lsls r3,r3,#15
 5498 0024 1A46     	 mov r2,r3
 5499 0026 7B68     	 ldr r3,[r7,#4]
 5500 0028 23F40073 	 bic r3,r3,#512
 5501 002c 1343     	 orrs r3,r3,r2
 5502 002e 7B60     	 str r3,[r7,#4]
1307:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
 5503              	 .loc 3 1307 0
 5504 0030 7B68     	 ldr r3,[r7,#4]
 5505 0032 03F48063 	 and r3,r3,#1024
 5506 0036 5B04     	 lsls r3,r3,#17
 5507 0038 1A46     	 mov r2,r3
 5508 003a 7B68     	 ldr r3,[r7,#4]
 5509 003c 23F48063 	 bic r3,r3,#1024
 5510 0040 1343     	 orrs r3,r3,r2
 5511 0042 7B60     	 str r3,[r7,#4]
1308:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
 5512              	 .loc 3 1308 0
 5513 0044 7B68     	 ldr r3,[r7,#4]
 5514 0046 03F40063 	 and r3,r3,#2048
 5515 004a DB03     	 lsls r3,r3,#15
 5516 004c 1A46     	 mov r2,r3
 5517 004e 7B68     	 ldr r3,[r7,#4]
 5518 0050 23F40063 	 bic r3,r3,#2048
 5519 0054 1343     	 orrs r3,r3,r2
 5520 0056 7B60     	 str r3,[r7,#4]
1309:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1310:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
 5521              	 .loc 3 1310 0
 5522 0058 7B68     	 ldr r3,[r7,#4]
 5523 005a 03F48053 	 and r3,r3,#4096
 5524 005e 5B04     	 lsls r3,r3,#17
 5525 0060 1A46     	 mov r2,r3
 5526 0062 7B68     	 ldr r3,[r7,#4]
 5527 0064 23F48053 	 bic r3,r3,#4096
 5528 0068 1343     	 orrs r3,r3,r2
 5529 006a 7B60     	 str r3,[r7,#4]
1311:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
 5530              	 .loc 3 1311 0
 5531 006c 7B68     	 ldr r3,[r7,#4]
 5532 006e 03F40053 	 and r3,r3,#8192
 5533 0072 DB03     	 lsls r3,r3,#15
 5534 0074 1A46     	 mov r2,r3
 5535 0076 7B68     	 ldr r3,[r7,#4]
 5536 0078 23F40053 	 bic r3,r3,#8192
 5537 007c 1343     	 orrs r3,r3,r2
 5538 007e 7B60     	 str r3,[r7,#4]
1312:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1313:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1314:../Libraries/XMCLib/src/xmc4_scu.c **** 
1315:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5539              	 .loc 3 1315 0
 5540 0080 00BF     	 nop
 5541              	.L368:
 5542              	 .loc 3 1315 0 is_stmt 0 discriminator 1
 5543 0082 094B     	 ldr r3,.L369
 5544 0084 D3F8C430 	 ldr r3,[r3,#196]
 5545 0088 03F00803 	 and r3,r3,#8
 5546 008c 002B     	 cmp r3,#0
 5547 008e F8D1     	 bne .L368
1316:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1317:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1318:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1319:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR &= ~event;
 5548              	 .loc 3 1319 0 is_stmt 1
 5549 0090 0649     	 ldr r1,.L369+4
 5550 0092 064B     	 ldr r3,.L369+4
 5551 0094 DB68     	 ldr r3,[r3,#12]
 5552 0096 7A68     	 ldr r2,[r7,#4]
 5553 0098 D243     	 mvns r2,r2
 5554 009a 1340     	 ands r3,r3,r2
 5555 009c CB60     	 str r3,[r1,#12]
1320:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5556              	 .loc 3 1320 0
 5557 009e 0C37     	 adds r7,r7,#12
 5558              	.LCFI495:
 5559              	 .cfi_def_cfa_offset 4
 5560 00a0 BD46     	 mov sp,r7
 5561              	.LCFI496:
 5562              	 .cfi_def_cfa_register 13
 5563              	 
 5564 00a2 5DF8047B 	 ldr r7,[sp],#4
 5565              	.LCFI497:
 5566              	 .cfi_restore 7
 5567              	 .cfi_def_cfa_offset 0
 5568 00a6 7047     	 bx lr
 5569              	.L370:
 5570              	 .align 2
 5571              	.L369:
 5572 00a8 00400050 	 .word 1342193664
 5573 00ac 00430050 	 .word 1342194432
 5574              	 .cfi_endproc
 5575              	.LFE256:
 5577              	 .section .text.XMC_SCU_HIB_EnterHibernateState,"ax",%progbits
 5578              	 .align 2
 5579              	 .global XMC_SCU_HIB_EnterHibernateState
 5580              	 .thumb
 5581              	 .thumb_func
 5583              	XMC_SCU_HIB_EnterHibernateState:
 5584              	.LFB257:
1321:../Libraries/XMCLib/src/xmc4_scu.c **** 
1322:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateState(void) 
1323:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5585              	 .loc 3 1323 0
 5586              	 .cfi_startproc
 5587              	 
 5588              	 
 5589              	 
 5590 0000 80B4     	 push {r7}
 5591              	.LCFI498:
 5592              	 .cfi_def_cfa_offset 4
 5593              	 .cfi_offset 7,-4
 5594 0002 00AF     	 add r7,sp,#0
 5595              	.LCFI499:
 5596              	 .cfi_def_cfa_register 7
1324:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5597              	 .loc 3 1324 0
 5598 0004 00BF     	 nop
 5599              	.L372:
 5600              	 .loc 3 1324 0 is_stmt 0 discriminator 1
 5601 0006 084B     	 ldr r3,.L373
 5602 0008 D3F8C430 	 ldr r3,[r3,#196]
 5603 000c 03F00803 	 and r3,r3,#8
 5604 0010 002B     	 cmp r3,#0
 5605 0012 F8D1     	 bne .L372
1325:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1326:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1327:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1328:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_HIB_Msk;
 5606              	 .loc 3 1328 0 is_stmt 1
 5607 0014 054A     	 ldr r2,.L373+4
 5608 0016 054B     	 ldr r3,.L373+4
 5609 0018 DB68     	 ldr r3,[r3,#12]
 5610 001a 43F01003 	 orr r3,r3,#16
 5611 001e D360     	 str r3,[r2,#12]
1329:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5612              	 .loc 3 1329 0
 5613 0020 BD46     	 mov sp,r7
 5614              	.LCFI500:
 5615              	 .cfi_def_cfa_register 13
 5616              	 
 5617 0022 5DF8047B 	 ldr r7,[sp],#4
 5618              	.LCFI501:
 5619              	 .cfi_restore 7
 5620              	 .cfi_def_cfa_offset 0
 5621 0026 7047     	 bx lr
 5622              	.L374:
 5623              	 .align 2
 5624              	.L373:
 5625 0028 00400050 	 .word 1342193664
 5626 002c 00430050 	 .word 1342194432
 5627              	 .cfi_endproc
 5628              	.LFE257:
 5630              	 .section .text.XMC_SCU_HIB_EnterHibernateStateEx,"ax",%progbits
 5631              	 .align 2
 5632              	 .global XMC_SCU_HIB_EnterHibernateStateEx
 5633              	 .thumb
 5634              	 .thumb_func
 5636              	XMC_SCU_HIB_EnterHibernateStateEx:
 5637              	.LFB258:
1330:../Libraries/XMCLib/src/xmc4_scu.c **** 
1331:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateStateEx(XMC_SCU_HIB_HIBERNATE_MODE_t mode)
1332:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5638              	 .loc 3 1332 0
 5639              	 .cfi_startproc
 5640              	 
 5641              	 
 5642 0000 80B5     	 push {r7,lr}
 5643              	.LCFI502:
 5644              	 .cfi_def_cfa_offset 8
 5645              	 .cfi_offset 7,-8
 5646              	 .cfi_offset 14,-4
 5647 0002 82B0     	 sub sp,sp,#8
 5648              	.LCFI503:
 5649              	 .cfi_def_cfa_offset 16
 5650 0004 00AF     	 add r7,sp,#0
 5651              	.LCFI504:
 5652              	 .cfi_def_cfa_register 7
 5653 0006 0346     	 mov r3,r0
 5654 0008 FB71     	 strb r3,[r7,#7]
1333:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 5655              	 .loc 3 1333 0
 5656 000a FB79     	 ldrb r3,[r7,#7]
 5657 000c 002B     	 cmp r3,#0
 5658 000e 01D1     	 bne .L376
1334:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1335:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_HIB_EnterHibernateState();
 5659              	 .loc 3 1335 0
 5660 0010 FFF7FEFF 	 bl XMC_SCU_HIB_EnterHibernateState
 5661              	.L376:
1336:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1337:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1338:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL)
 5662              	 .loc 3 1338 0
 5663 0014 FB79     	 ldrb r3,[r7,#7]
 5664 0016 012B     	 cmp r3,#1
 5665 0018 0AD1     	 bne .L375
1339:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1340:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HINTSET_Msk)
 5666              	 .loc 3 1340 0
 5667 001a 00BF     	 nop
 5668              	.L378:
 5669              	 .loc 3 1340 0 is_stmt 0 discriminator 1
 5670 001c 064B     	 ldr r3,.L379
 5671 001e D3F8C430 	 ldr r3,[r3,#196]
 5672 0022 03F08073 	 and r3,r3,#16777216
 5673 0026 002B     	 cmp r3,#0
 5674 0028 F8D1     	 bne .L378
1341:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1342:../Libraries/XMCLib/src/xmc4_scu.c ****       /* Wait until HDCR register in hibernate domain is ready to accept a write */
1343:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1344:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HINTSET = SCU_HIBERNATE_HINTSET_HIBNINT_Msk;
 5675              	 .loc 3 1344 0 is_stmt 1
 5676 002a 044B     	 ldr r3,.L379+4
 5677 002c 0122     	 movs r2,#1
 5678 002e 1A64     	 str r2,[r3,#64]
 5679              	.L375:
1345:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1346:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1347:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5680              	 .loc 3 1347 0
 5681 0030 0837     	 adds r7,r7,#8
 5682              	.LCFI505:
 5683              	 .cfi_def_cfa_offset 8
 5684 0032 BD46     	 mov sp,r7
 5685              	.LCFI506:
 5686              	 .cfi_def_cfa_register 13
 5687              	 
 5688 0034 80BD     	 pop {r7,pc}
 5689              	.L380:
 5690 0036 00BF     	 .align 2
 5691              	.L379:
 5692 0038 00400050 	 .word 1342193664
 5693 003c 00430050 	 .word 1342194432
 5694              	 .cfi_endproc
 5695              	.LFE258:
 5697              	 .section .text.XMC_SCU_HIB_SetWakeupTriggerInput,"ax",%progbits
 5698              	 .align 2
 5699              	 .global XMC_SCU_HIB_SetWakeupTriggerInput
 5700              	 .thumb
 5701              	 .thumb_func
 5703              	XMC_SCU_HIB_SetWakeupTriggerInput:
 5704              	.LFB259:
1348:../Libraries/XMCLib/src/xmc4_scu.c **** 
1349:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetWakeupTriggerInput(XMC_SCU_HIB_IO_t pin)
1350:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5705              	 .loc 3 1350 0
 5706              	 .cfi_startproc
 5707              	 
 5708              	 
 5709              	 
 5710 0000 80B4     	 push {r7}
 5711              	.LCFI507:
 5712              	 .cfi_def_cfa_offset 4
 5713              	 .cfi_offset 7,-4
 5714 0002 83B0     	 sub sp,sp,#12
 5715              	.LCFI508:
 5716              	 .cfi_def_cfa_offset 16
 5717 0004 00AF     	 add r7,sp,#0
 5718              	.LCFI509:
 5719              	 .cfi_def_cfa_register 7
 5720 0006 0346     	 mov r3,r0
 5721 0008 FB71     	 strb r3,[r7,#7]
1351:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5722              	 .loc 3 1351 0
 5723 000a 00BF     	 nop
 5724              	.L382:
 5725              	 .loc 3 1351 0 is_stmt 0 discriminator 1
 5726 000c 0D4B     	 ldr r3,.L385
 5727 000e D3F8C430 	 ldr r3,[r3,#196]
 5728 0012 03F00803 	 and r3,r3,#8
 5729 0016 002B     	 cmp r3,#0
 5730 0018 F8D1     	 bne .L382
1352:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1353:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1354:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1355:../Libraries/XMCLib/src/xmc4_scu.c **** 
1356:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5731              	 .loc 3 1356 0 is_stmt 1
 5732 001a FB79     	 ldrb r3,[r7,#7]
 5733 001c 002B     	 cmp r3,#0
 5734 001e 06D1     	 bne .L383
1357:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1358:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5735              	 .loc 3 1358 0
 5736 0020 094A     	 ldr r2,.L385+4
 5737 0022 094B     	 ldr r3,.L385+4
 5738 0024 DB68     	 ldr r3,[r3,#12]
 5739 0026 43F48073 	 orr r3,r3,#256
 5740 002a D360     	 str r3,[r2,#12]
 5741 002c 05E0     	 b .L381
 5742              	.L383:
1359:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1360:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1361:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1362:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_WKUPSEL_Msk; 
 5743              	 .loc 3 1362 0
 5744 002e 064A     	 ldr r2,.L385+4
 5745 0030 054B     	 ldr r3,.L385+4
 5746 0032 DB68     	 ldr r3,[r3,#12]
 5747 0034 23F48073 	 bic r3,r3,#256
 5748 0038 D360     	 str r3,[r2,#12]
 5749              	.L381:
1363:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1364:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5750              	 .loc 3 1364 0
 5751 003a 0C37     	 adds r7,r7,#12
 5752              	.LCFI510:
 5753              	 .cfi_def_cfa_offset 4
 5754 003c BD46     	 mov sp,r7
 5755              	.LCFI511:
 5756              	 .cfi_def_cfa_register 13
 5757              	 
 5758 003e 5DF8047B 	 ldr r7,[sp],#4
 5759              	.LCFI512:
 5760              	 .cfi_restore 7
 5761              	 .cfi_def_cfa_offset 0
 5762 0042 7047     	 bx lr
 5763              	.L386:
 5764              	 .align 2
 5765              	.L385:
 5766 0044 00400050 	 .word 1342193664
 5767 0048 00430050 	 .word 1342194432
 5768              	 .cfi_endproc
 5769              	.LFE259:
 5771              	 .section .text.XMC_SCU_HIB_SetPinMode,"ax",%progbits
 5772              	 .align 2
 5773              	 .global XMC_SCU_HIB_SetPinMode
 5774              	 .thumb
 5775              	 .thumb_func
 5777              	XMC_SCU_HIB_SetPinMode:
 5778              	.LFB260:
1365:../Libraries/XMCLib/src/xmc4_scu.c **** 
1366:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinMode(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_PIN_MODE_t mode)
1367:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5779              	 .loc 3 1367 0
 5780              	 .cfi_startproc
 5781              	 
 5782              	 
 5783              	 
 5784 0000 80B4     	 push {r7}
 5785              	.LCFI513:
 5786              	 .cfi_def_cfa_offset 4
 5787              	 .cfi_offset 7,-4
 5788 0002 83B0     	 sub sp,sp,#12
 5789              	.LCFI514:
 5790              	 .cfi_def_cfa_offset 16
 5791 0004 00AF     	 add r7,sp,#0
 5792              	.LCFI515:
 5793              	 .cfi_def_cfa_register 7
 5794 0006 0346     	 mov r3,r0
 5795 0008 3960     	 str r1,[r7]
 5796 000a FB71     	 strb r3,[r7,#7]
1368:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5797              	 .loc 3 1368 0
 5798 000c 00BF     	 nop
 5799              	.L388:
 5800              	 .loc 3 1368 0 is_stmt 0 discriminator 1
 5801 000e 0F4B     	 ldr r3,.L389
 5802 0010 D3F8C430 	 ldr r3,[r3,#196]
 5803 0014 03F00803 	 and r3,r3,#8
 5804 0018 002B     	 cmp r3,#0
 5805 001a F8D1     	 bne .L388
1369:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1370:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1371:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1372:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0SEL_Msk << (SCU_HIBERNATE
 5806              	 .loc 3 1372 0 is_stmt 1
 5807 001c 0C49     	 ldr r1,.L389+4
 5808 001e 0C4B     	 ldr r3,.L389+4
 5809 0020 DA68     	 ldr r2,[r3,#12]
 5810 0022 FB79     	 ldrb r3,[r7,#7]
 5811 0024 9B00     	 lsls r3,r3,#2
 5812 0026 1846     	 mov r0,r3
 5813 0028 4FF47023 	 mov r3,#983040
 5814 002c 8340     	 lsls r3,r3,r0
 5815 002e DB43     	 mvns r3,r3
 5816 0030 1A40     	 ands r2,r2,r3
1373:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5817              	 .loc 3 1373 0
 5818 0032 FB79     	 ldrb r3,[r7,#7]
 5819 0034 9B00     	 lsls r3,r3,#2
1372:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5820              	 .loc 3 1372 0
 5821 0036 1846     	 mov r0,r3
 5822              	 .loc 3 1373 0
 5823 0038 3B68     	 ldr r3,[r7]
 5824 003a 8340     	 lsls r3,r3,r0
1372:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5825              	 .loc 3 1372 0
 5826 003c 1343     	 orrs r3,r3,r2
 5827 003e CB60     	 str r3,[r1,#12]
1374:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5828              	 .loc 3 1374 0
 5829 0040 0C37     	 adds r7,r7,#12
 5830              	.LCFI516:
 5831              	 .cfi_def_cfa_offset 4
 5832 0042 BD46     	 mov sp,r7
 5833              	.LCFI517:
 5834              	 .cfi_def_cfa_register 13
 5835              	 
 5836 0044 5DF8047B 	 ldr r7,[sp],#4
 5837              	.LCFI518:
 5838              	 .cfi_restore 7
 5839              	 .cfi_def_cfa_offset 0
 5840 0048 7047     	 bx lr
 5841              	.L390:
 5842 004a 00BF     	 .align 2
 5843              	.L389:
 5844 004c 00400050 	 .word 1342193664
 5845 0050 00430050 	 .word 1342194432
 5846              	 .cfi_endproc
 5847              	.LFE260:
 5849              	 .section .text.XMC_SCU_HIB_SetPinOutputLevel,"ax",%progbits
 5850              	 .align 2
 5851              	 .global XMC_SCU_HIB_SetPinOutputLevel
 5852              	 .thumb
 5853              	 .thumb_func
 5855              	XMC_SCU_HIB_SetPinOutputLevel:
 5856              	.LFB261:
1375:../Libraries/XMCLib/src/xmc4_scu.c **** 
1376:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinOutputLevel(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_IO_OUTPUT_LEVEL_t level)
1377:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5857              	 .loc 3 1377 0
 5858              	 .cfi_startproc
 5859              	 
 5860              	 
 5861              	 
 5862 0000 80B4     	 push {r7}
 5863              	.LCFI519:
 5864              	 .cfi_def_cfa_offset 4
 5865              	 .cfi_offset 7,-4
 5866 0002 83B0     	 sub sp,sp,#12
 5867              	.LCFI520:
 5868              	 .cfi_def_cfa_offset 16
 5869 0004 00AF     	 add r7,sp,#0
 5870              	.LCFI521:
 5871              	 .cfi_def_cfa_register 7
 5872 0006 0346     	 mov r3,r0
 5873 0008 0A46     	 mov r2,r1
 5874 000a FB71     	 strb r3,[r7,#7]
 5875 000c 1346     	 mov r3,r2
 5876 000e BB80     	 strh r3,[r7,#4]
1378:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5877              	 .loc 3 1378 0
 5878 0010 00BF     	 nop
 5879              	.L392:
 5880              	 .loc 3 1378 0 is_stmt 0 discriminator 1
 5881 0012 0E4B     	 ldr r3,.L393
 5882 0014 D3F8C430 	 ldr r3,[r3,#196]
 5883 0018 03F00803 	 and r3,r3,#8
 5884 001c 002B     	 cmp r3,#0
 5885 001e F8D1     	 bne .L392
1379:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1380:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1381:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1382:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0POL_Msk << pin)) |
 5886              	 .loc 3 1382 0 is_stmt 1
 5887 0020 0B48     	 ldr r0,.L393+4
 5888 0022 0B4B     	 ldr r3,.L393+4
 5889 0024 DA68     	 ldr r2,[r3,#12]
 5890 0026 FB79     	 ldrb r3,[r7,#7]
 5891 0028 4FF48051 	 mov r1,#4096
 5892 002c 01FA03F3 	 lsl r3,r1,r3
 5893 0030 DB43     	 mvns r3,r3
 5894 0032 1340     	 ands r3,r3,r2
1383:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5895              	 .loc 3 1383 0
 5896 0034 B988     	 ldrh r1,[r7,#4]
 5897 0036 FA79     	 ldrb r2,[r7,#7]
 5898 0038 01FA02F2 	 lsl r2,r1,r2
1382:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5899              	 .loc 3 1382 0
 5900 003c 1343     	 orrs r3,r3,r2
 5901 003e C360     	 str r3,[r0,#12]
1384:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5902              	 .loc 3 1384 0
 5903 0040 0C37     	 adds r7,r7,#12
 5904              	.LCFI522:
 5905              	 .cfi_def_cfa_offset 4
 5906 0042 BD46     	 mov sp,r7
 5907              	.LCFI523:
 5908              	 .cfi_def_cfa_register 13
 5909              	 
 5910 0044 5DF8047B 	 ldr r7,[sp],#4
 5911              	.LCFI524:
 5912              	 .cfi_restore 7
 5913              	 .cfi_def_cfa_offset 0
 5914 0048 7047     	 bx lr
 5915              	.L394:
 5916 004a 00BF     	 .align 2
 5917              	.L393:
 5918 004c 00400050 	 .word 1342193664
 5919 0050 00430050 	 .word 1342194432
 5920              	 .cfi_endproc
 5921              	.LFE261:
 5923              	 .section .text.XMC_SCU_HIB_SetInput0,"ax",%progbits
 5924              	 .align 2
 5925              	 .global XMC_SCU_HIB_SetInput0
 5926              	 .thumb
 5927              	 .thumb_func
 5929              	XMC_SCU_HIB_SetInput0:
 5930              	.LFB262:
1385:../Libraries/XMCLib/src/xmc4_scu.c **** 
1386:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetInput0(XMC_SCU_HIB_IO_t pin)
1387:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5931              	 .loc 3 1387 0
 5932              	 .cfi_startproc
 5933              	 
 5934              	 
 5935              	 
 5936 0000 80B4     	 push {r7}
 5937              	.LCFI525:
 5938              	 .cfi_def_cfa_offset 4
 5939              	 .cfi_offset 7,-4
 5940 0002 83B0     	 sub sp,sp,#12
 5941              	.LCFI526:
 5942              	 .cfi_def_cfa_offset 16
 5943 0004 00AF     	 add r7,sp,#0
 5944              	.LCFI527:
 5945              	 .cfi_def_cfa_register 7
 5946 0006 0346     	 mov r3,r0
 5947 0008 FB71     	 strb r3,[r7,#7]
1388:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5948              	 .loc 3 1388 0
 5949 000a 00BF     	 nop
 5950              	.L396:
 5951              	 .loc 3 1388 0 is_stmt 0 discriminator 1
 5952 000c 0D4B     	 ldr r3,.L399
 5953 000e D3F8C430 	 ldr r3,[r3,#196]
 5954 0012 03F00803 	 and r3,r3,#8
 5955 0016 002B     	 cmp r3,#0
 5956 0018 F8D1     	 bne .L396
1389:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1390:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1391:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1392:../Libraries/XMCLib/src/xmc4_scu.c **** 
1393:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5957              	 .loc 3 1393 0 is_stmt 1
 5958 001a FB79     	 ldrb r3,[r7,#7]
 5959 001c 002B     	 cmp r3,#0
 5960 001e 06D1     	 bne .L397
1394:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1395:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5961              	 .loc 3 1395 0
 5962 0020 094A     	 ldr r2,.L399+4
 5963 0022 094B     	 ldr r3,.L399+4
 5964 0024 DB68     	 ldr r3,[r3,#12]
 5965 0026 43F48063 	 orr r3,r3,#1024
 5966 002a D360     	 str r3,[r2,#12]
 5967 002c 05E0     	 b .L395
 5968              	.L397:
1396:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1397:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1398:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1399:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_GPI0SEL_Msk; 
 5969              	 .loc 3 1399 0
 5970 002e 064A     	 ldr r2,.L399+4
 5971 0030 054B     	 ldr r3,.L399+4
 5972 0032 DB68     	 ldr r3,[r3,#12]
 5973 0034 23F48063 	 bic r3,r3,#1024
 5974 0038 D360     	 str r3,[r2,#12]
 5975              	.L395:
1400:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1401:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5976              	 .loc 3 1401 0
 5977 003a 0C37     	 adds r7,r7,#12
 5978              	.LCFI528:
 5979              	 .cfi_def_cfa_offset 4
 5980 003c BD46     	 mov sp,r7
 5981              	.LCFI529:
 5982              	 .cfi_def_cfa_register 13
 5983              	 
 5984 003e 5DF8047B 	 ldr r7,[sp],#4
 5985              	.LCFI530:
 5986              	 .cfi_restore 7
 5987              	 .cfi_def_cfa_offset 0
 5988 0042 7047     	 bx lr
 5989              	.L400:
 5990              	 .align 2
 5991              	.L399:
 5992 0044 00400050 	 .word 1342193664
 5993 0048 00430050 	 .word 1342194432
 5994              	 .cfi_endproc
 5995              	.LFE262:
 5997              	 .section .text.XMC_SCU_HIB_SetSR0Input,"ax",%progbits
 5998              	 .align 2
 5999              	 .global XMC_SCU_HIB_SetSR0Input
 6000              	 .thumb
 6001              	 .thumb_func
 6003              	XMC_SCU_HIB_SetSR0Input:
 6004              	.LFB263:
1402:../Libraries/XMCLib/src/xmc4_scu.c **** 
1403:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR0Input(XMC_SCU_HIB_SR0_INPUT_t input)
1404:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6005              	 .loc 3 1404 0
 6006              	 .cfi_startproc
 6007              	 
 6008              	 
 6009              	 
 6010 0000 80B4     	 push {r7}
 6011              	.LCFI531:
 6012              	 .cfi_def_cfa_offset 4
 6013              	 .cfi_offset 7,-4
 6014 0002 83B0     	 sub sp,sp,#12
 6015              	.LCFI532:
 6016              	 .cfi_def_cfa_offset 16
 6017 0004 00AF     	 add r7,sp,#0
 6018              	.LCFI533:
 6019              	 .cfi_def_cfa_register 7
 6020 0006 0346     	 mov r3,r0
 6021 0008 FB80     	 strh r3,[r7,#6]
1405:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 6022              	 .loc 3 1405 0
 6023 000a 00BF     	 nop
 6024              	.L402:
 6025              	 .loc 3 1405 0 is_stmt 0 discriminator 1
 6026 000c 094B     	 ldr r3,.L403
 6027 000e D3F8C430 	 ldr r3,[r3,#196]
 6028 0012 03F00803 	 and r3,r3,#8
 6029 0016 002B     	 cmp r3,#0
 6030 0018 F8D1     	 bne .L402
1406:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1407:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1408:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1409:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1410:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
 6031              	 .loc 3 1410 0 is_stmt 1
 6032 001a 0749     	 ldr r1,.L403+4
 6033 001c 064B     	 ldr r3,.L403+4
 6034 001e DB68     	 ldr r3,[r3,#12]
 6035 0020 23F48842 	 bic r2,r3,#17408
 6036 0024 FB88     	 ldrh r3,[r7,#6]
 6037 0026 1343     	 orrs r3,r3,r2
 6038 0028 CB60     	 str r3,[r1,#12]
1411:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1412:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk)) | 
1413:../Libraries/XMCLib/src/xmc4_scu.c **** #endif  
1414:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1415:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6039              	 .loc 3 1415 0
 6040 002a 0C37     	 adds r7,r7,#12
 6041              	.LCFI534:
 6042              	 .cfi_def_cfa_offset 4
 6043 002c BD46     	 mov sp,r7
 6044              	.LCFI535:
 6045              	 .cfi_def_cfa_register 13
 6046              	 
 6047 002e 5DF8047B 	 ldr r7,[sp],#4
 6048              	.LCFI536:
 6049              	 .cfi_restore 7
 6050              	 .cfi_def_cfa_offset 0
 6051 0032 7047     	 bx lr
 6052              	.L404:
 6053              	 .align 2
 6054              	.L403:
 6055 0034 00400050 	 .word 1342193664
 6056 0038 00430050 	 .word 1342194432
 6057              	 .cfi_endproc
 6058              	.LFE263:
 6060              	 .section .text.XMC_SCU_HIB_SetSR1Input,"ax",%progbits
 6061              	 .align 2
 6062              	 .global XMC_SCU_HIB_SetSR1Input
 6063              	 .thumb
 6064              	 .thumb_func
 6066              	XMC_SCU_HIB_SetSR1Input:
 6067              	.LFB264:
1416:../Libraries/XMCLib/src/xmc4_scu.c **** 
1417:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1418:../Libraries/XMCLib/src/xmc4_scu.c **** 
1419:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1420:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR1Input(XMC_SCU_HIB_SR1_INPUT_t input)
1421:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6068              	 .loc 3 1421 0
 6069              	 .cfi_startproc
 6070              	 
 6071              	 
 6072              	 
 6073 0000 80B4     	 push {r7}
 6074              	.LCFI537:
 6075              	 .cfi_def_cfa_offset 4
 6076              	 .cfi_offset 7,-4
 6077 0002 83B0     	 sub sp,sp,#12
 6078              	.LCFI538:
 6079              	 .cfi_def_cfa_offset 16
 6080 0004 00AF     	 add r7,sp,#0
 6081              	.LCFI539:
 6082              	 .cfi_def_cfa_register 7
 6083 0006 0346     	 mov r3,r0
 6084 0008 FB80     	 strh r3,[r7,#6]
1422:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 6085              	 .loc 3 1422 0
 6086 000a 00BF     	 nop
 6087              	.L406:
 6088              	 .loc 3 1422 0 is_stmt 0 discriminator 1
 6089 000c 0A4B     	 ldr r3,.L407
 6090 000e D3F8C430 	 ldr r3,[r3,#196]
 6091 0012 03F00803 	 and r3,r3,#8
 6092 0016 002B     	 cmp r3,#0
 6093 0018 F8D1     	 bne .L406
1423:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1424:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1425:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1426:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
 6094              	 .loc 3 1426 0 is_stmt 1
 6095 001a 0849     	 ldr r1,.L407+4
 6096 001c 074B     	 ldr r3,.L407+4
 6097 001e DB68     	 ldr r3,[r3,#12]
 6098 0020 23F48843 	 bic r3,r3,#17408
 6099 0024 23F02003 	 bic r3,r3,#32
 6100 0028 FA88     	 ldrh r2,[r7,#6]
 6101 002a 1343     	 orrs r3,r3,r2
 6102 002c CB60     	 str r3,[r1,#12]
1427:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1428:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6103              	 .loc 3 1428 0
 6104 002e 0C37     	 adds r7,r7,#12
 6105              	.LCFI540:
 6106              	 .cfi_def_cfa_offset 4
 6107 0030 BD46     	 mov sp,r7
 6108              	.LCFI541:
 6109              	 .cfi_def_cfa_register 13
 6110              	 
 6111 0032 5DF8047B 	 ldr r7,[sp],#4
 6112              	.LCFI542:
 6113              	 .cfi_restore 7
 6114              	 .cfi_def_cfa_offset 0
 6115 0036 7047     	 bx lr
 6116              	.L408:
 6117              	 .align 2
 6118              	.L407:
 6119 0038 00400050 	 .word 1342193664
 6120 003c 00430050 	 .word 1342194432
 6121              	 .cfi_endproc
 6122              	.LFE264:
 6124              	 .section .text.XMC_SCU_HIB_LPAC_SetInput,"ax",%progbits
 6125              	 .align 2
 6126              	 .global XMC_SCU_HIB_LPAC_SetInput
 6127              	 .thumb
 6128              	 .thumb_func
 6130              	XMC_SCU_HIB_LPAC_SetInput:
 6131              	.LFB265:
1429:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1430:../Libraries/XMCLib/src/xmc4_scu.c **** 
1431:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetInput(XMC_SCU_HIB_LPAC_INPUT_t input)
1432:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6132              	 .loc 3 1432 0
 6133              	 .cfi_startproc
 6134              	 
 6135              	 
 6136              	 
 6137 0000 80B4     	 push {r7}
 6138              	.LCFI543:
 6139              	 .cfi_def_cfa_offset 4
 6140              	 .cfi_offset 7,-4
 6141 0002 83B0     	 sub sp,sp,#12
 6142              	.LCFI544:
 6143              	 .cfi_def_cfa_offset 16
 6144 0004 00AF     	 add r7,sp,#0
 6145              	.LCFI545:
 6146              	 .cfi_def_cfa_register 7
 6147 0006 0346     	 mov r3,r0
 6148 0008 FB71     	 strb r3,[r7,#7]
1433:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
 6149              	 .loc 3 1433 0
 6150 000a 00BF     	 nop
 6151              	.L410:
 6152              	 .loc 3 1433 0 is_stmt 0 discriminator 1
 6153 000c 094B     	 ldr r3,.L411
 6154 000e D3F8C430 	 ldr r3,[r3,#196]
 6155 0012 03F48033 	 and r3,r3,#65536
 6156 0016 002B     	 cmp r3,#0
 6157 0018 F8D1     	 bne .L410
1434:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1435:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1436:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1437:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_CMPEN_Msk
 6158              	 .loc 3 1437 0 is_stmt 1
 6159 001a 0749     	 ldr r1,.L411+4
 6160 001c 064B     	 ldr r3,.L411+4
 6161 001e 1B6A     	 ldr r3,[r3,#32]
 6162 0020 23F00702 	 bic r2,r3,#7
 6163 0024 FB79     	 ldrb r3,[r7,#7]
 6164 0026 1343     	 orrs r3,r3,r2
 6165 0028 0B62     	 str r3,[r1,#32]
1438:../Libraries/XMCLib/src/xmc4_scu.c ****                             input;
1439:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6166              	 .loc 3 1439 0
 6167 002a 0C37     	 adds r7,r7,#12
 6168              	.LCFI546:
 6169              	 .cfi_def_cfa_offset 4
 6170 002c BD46     	 mov sp,r7
 6171              	.LCFI547:
 6172              	 .cfi_def_cfa_register 13
 6173              	 
 6174 002e 5DF8047B 	 ldr r7,[sp],#4
 6175              	.LCFI548:
 6176              	 .cfi_restore 7
 6177              	 .cfi_def_cfa_offset 0
 6178 0032 7047     	 bx lr
 6179              	.L412:
 6180              	 .align 2
 6181              	.L411:
 6182 0034 00400050 	 .word 1342193664
 6183 0038 00430050 	 .word 1342194432
 6184              	 .cfi_endproc
 6185              	.LFE265:
 6187              	 .section .text.XMC_SCU_HIB_LPAC_SetTrigger,"ax",%progbits
 6188              	 .align 2
 6189              	 .global XMC_SCU_HIB_LPAC_SetTrigger
 6190              	 .thumb
 6191              	 .thumb_func
 6193              	XMC_SCU_HIB_LPAC_SetTrigger:
 6194              	.LFB266:
1440:../Libraries/XMCLib/src/xmc4_scu.c **** 
1441:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTrigger(XMC_SCU_HIB_LPAC_TRIGGER_t trigger)
1442:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6195              	 .loc 3 1442 0
 6196              	 .cfi_startproc
 6197              	 
 6198              	 
 6199              	 
 6200 0000 80B4     	 push {r7}
 6201              	.LCFI549:
 6202              	 .cfi_def_cfa_offset 4
 6203              	 .cfi_offset 7,-4
 6204 0002 83B0     	 sub sp,sp,#12
 6205              	.LCFI550:
 6206              	 .cfi_def_cfa_offset 16
 6207 0004 00AF     	 add r7,sp,#0
 6208              	.LCFI551:
 6209              	 .cfi_def_cfa_register 7
 6210 0006 0346     	 mov r3,r0
 6211 0008 FB71     	 strb r3,[r7,#7]
1443:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
 6212              	 .loc 3 1443 0
 6213 000a 00BF     	 nop
 6214              	.L414:
 6215              	 .loc 3 1443 0 is_stmt 0 discriminator 1
 6216 000c 094B     	 ldr r3,.L415
 6217 000e D3F8C430 	 ldr r3,[r3,#196]
 6218 0012 03F48033 	 and r3,r3,#65536
 6219 0016 002B     	 cmp r3,#0
 6220 0018 F8D1     	 bne .L414
1444:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1445:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1446:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1447:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_TRIGSEL_M
 6221              	 .loc 3 1447 0 is_stmt 1
 6222 001a 0749     	 ldr r1,.L415+4
 6223 001c 064B     	 ldr r3,.L415+4
 6224 001e 1B6A     	 ldr r3,[r3,#32]
 6225 0020 23F07002 	 bic r2,r3,#112
 6226 0024 FB79     	 ldrb r3,[r7,#7]
 6227 0026 1343     	 orrs r3,r3,r2
 6228 0028 0B62     	 str r3,[r1,#32]
1448:../Libraries/XMCLib/src/xmc4_scu.c ****                             trigger;
1449:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6229              	 .loc 3 1449 0
 6230 002a 0C37     	 adds r7,r7,#12
 6231              	.LCFI552:
 6232              	 .cfi_def_cfa_offset 4
 6233 002c BD46     	 mov sp,r7
 6234              	.LCFI553:
 6235              	 .cfi_def_cfa_register 13
 6236              	 
 6237 002e 5DF8047B 	 ldr r7,[sp],#4
 6238              	.LCFI554:
 6239              	 .cfi_restore 7
 6240              	 .cfi_def_cfa_offset 0
 6241 0032 7047     	 bx lr
 6242              	.L416:
 6243              	 .align 2
 6244              	.L415:
 6245 0034 00400050 	 .word 1342193664
 6246 0038 00430050 	 .word 1342194432
 6247              	 .cfi_endproc
 6248              	.LFE266:
 6250              	 .section .text.XMC_SCU_HIB_LPAC_SetTiming,"ax",%progbits
 6251              	 .align 2
 6252              	 .global XMC_SCU_HIB_LPAC_SetTiming
 6253              	 .thumb
 6254              	 .thumb_func
 6256              	XMC_SCU_HIB_LPAC_SetTiming:
 6257              	.LFB267:
1450:../Libraries/XMCLib/src/xmc4_scu.c **** 
1451:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTiming(bool enable_delay, uint16_t interval_count, uint8_t settle_count)
1452:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6258              	 .loc 3 1452 0
 6259              	 .cfi_startproc
 6260              	 
 6261              	 
 6262              	 
 6263 0000 80B4     	 push {r7}
 6264              	.LCFI555:
 6265              	 .cfi_def_cfa_offset 4
 6266              	 .cfi_offset 7,-4
 6267 0002 85B0     	 sub sp,sp,#20
 6268              	.LCFI556:
 6269              	 .cfi_def_cfa_offset 24
 6270 0004 00AF     	 add r7,sp,#0
 6271              	.LCFI557:
 6272              	 .cfi_def_cfa_register 7
 6273 0006 0346     	 mov r3,r0
 6274 0008 FB71     	 strb r3,[r7,#7]
 6275 000a 0B46     	 mov r3,r1
 6276 000c BB80     	 strh r3,[r7,#4]
 6277 000e 1346     	 mov r3,r2
 6278 0010 BB71     	 strb r3,[r7,#6]
1453:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t config = 0;
 6279              	 .loc 3 1453 0
 6280 0012 0023     	 movs r3,#0
 6281 0014 FB60     	 str r3,[r7,#12]
1454:../Libraries/XMCLib/src/xmc4_scu.c **** 
1455:../Libraries/XMCLib/src/xmc4_scu.c ****   if (enable_delay)
 6282              	 .loc 3 1455 0
 6283 0016 FB79     	 ldrb r3,[r7,#7]
 6284 0018 002B     	 cmp r3,#0
 6285 001a 02D0     	 beq .L418
1456:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1457:../Libraries/XMCLib/src/xmc4_scu.c ****     config = SCU_HIBERNATE_LPACCONF_CONVDEL_Msk;
 6286              	 .loc 3 1457 0
 6287 001c 4FF48053 	 mov r3,#4096
 6288 0020 FB60     	 str r3,[r7,#12]
 6289              	.L418:
1458:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1459:../Libraries/XMCLib/src/xmc4_scu.c **** 
1460:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= interval_count << SCU_HIBERNATE_LPACCONF_INTERVCNT_Pos;
 6290              	 .loc 3 1460 0
 6291 0022 BB88     	 ldrh r3,[r7,#4]
 6292 0024 1B04     	 lsls r3,r3,#16
 6293 0026 1A46     	 mov r2,r3
 6294 0028 FB68     	 ldr r3,[r7,#12]
 6295 002a 1343     	 orrs r3,r3,r2
 6296 002c FB60     	 str r3,[r7,#12]
1461:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= settle_count << SCU_HIBERNATE_LPACCONF_SETTLECNT_Pos;
 6297              	 .loc 3 1461 0
 6298 002e BB79     	 ldrb r3,[r7,#6]
 6299 0030 1B07     	 lsls r3,r3,#28
 6300 0032 1A46     	 mov r2,r3
 6301 0034 FB68     	 ldr r3,[r7,#12]
 6302 0036 1343     	 orrs r3,r3,r2
 6303 0038 FB60     	 str r3,[r7,#12]
1462:../Libraries/XMCLib/src/xmc4_scu.c **** 
1463:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
 6304              	 .loc 3 1463 0
 6305 003a 00BF     	 nop
 6306              	.L419:
 6307              	 .loc 3 1463 0 is_stmt 0 discriminator 1
 6308 003c 0A4B     	 ldr r3,.L420
 6309 003e D3F8C430 	 ldr r3,[r3,#196]
 6310 0042 03F48033 	 and r3,r3,#65536
 6311 0046 002B     	 cmp r3,#0
 6312 0048 F8D1     	 bne .L419
1464:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1465:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1466:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1467:../Libraries/XMCLib/src/xmc4_scu.c **** 
1468:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~(SCU_HIBERNATE_LPACCONF_CONVDEL_
 6313              	 .loc 3 1468 0 is_stmt 1
 6314 004a 0849     	 ldr r1,.L420+4
 6315 004c 074B     	 ldr r3,.L420+4
 6316 004e 1A6A     	 ldr r2,[r3,#32]
 6317 0050 4EF6FF73 	 movw r3,#61439
 6318 0054 1340     	 ands r3,r3,r2
1469:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_INTERVCN
1470:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_SETTLECN
 6319              	 .loc 3 1470 0
 6320 0056 FA68     	 ldr r2,[r7,#12]
 6321 0058 1343     	 orrs r3,r3,r2
1468:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_INTERVCN
 6322              	 .loc 3 1468 0
 6323 005a 0B62     	 str r3,[r1,#32]
1471:../Libraries/XMCLib/src/xmc4_scu.c ****                             config;
1472:../Libraries/XMCLib/src/xmc4_scu.c **** 
1473:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6324              	 .loc 3 1473 0
 6325 005c 1437     	 adds r7,r7,#20
 6326              	.LCFI558:
 6327              	 .cfi_def_cfa_offset 4
 6328 005e BD46     	 mov sp,r7
 6329              	.LCFI559:
 6330              	 .cfi_def_cfa_register 13
 6331              	 
 6332 0060 5DF8047B 	 ldr r7,[sp],#4
 6333              	.LCFI560:
 6334              	 .cfi_restore 7
 6335              	 .cfi_def_cfa_offset 0
 6336 0064 7047     	 bx lr
 6337              	.L421:
 6338 0066 00BF     	 .align 2
 6339              	.L420:
 6340 0068 00400050 	 .word 1342193664
 6341 006c 00430050 	 .word 1342194432
 6342              	 .cfi_endproc
 6343              	.LFE267:
 6345              	 .section .text.XMC_SCU_HIB_LPAC_SetVBATThresholds,"ax",%progbits
 6346              	 .align 2
 6347              	 .global XMC_SCU_HIB_LPAC_SetVBATThresholds
 6348              	 .thumb
 6349              	 .thumb_func
 6351              	XMC_SCU_HIB_LPAC_SetVBATThresholds:
 6352              	.LFB268:
1474:../Libraries/XMCLib/src/xmc4_scu.c **** 
1475:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetVBATThresholds(uint8_t lower, uint8_t upper)
1476:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6353              	 .loc 3 1476 0
 6354              	 .cfi_startproc
 6355              	 
 6356              	 
 6357              	 
 6358 0000 80B4     	 push {r7}
 6359              	.LCFI561:
 6360              	 .cfi_def_cfa_offset 4
 6361              	 .cfi_offset 7,-4
 6362 0002 83B0     	 sub sp,sp,#12
 6363              	.LCFI562:
 6364              	 .cfi_def_cfa_offset 16
 6365 0004 00AF     	 add r7,sp,#0
 6366              	.LCFI563:
 6367              	 .cfi_def_cfa_register 7
 6368 0006 0346     	 mov r3,r0
 6369 0008 0A46     	 mov r2,r1
 6370 000a FB71     	 strb r3,[r7,#7]
 6371 000c 1346     	 mov r3,r2
 6372 000e BB71     	 strb r3,[r7,#6]
1477:../Libraries/XMCLib/src/xmc4_scu.c **** 
1478:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH0_Msk)
 6373              	 .loc 3 1478 0
 6374 0010 00BF     	 nop
 6375              	.L423:
 6376              	 .loc 3 1478 0 is_stmt 0 discriminator 1
 6377 0012 094B     	 ldr r3,.L424
 6378 0014 D3F8C430 	 ldr r3,[r3,#196]
 6379 0018 03F40033 	 and r3,r3,#131072
 6380 001c 002B     	 cmp r3,#0
 6381 001e F8D1     	 bne .L423
1479:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1480:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1481:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1482:../Libraries/XMCLib/src/xmc4_scu.c **** 
1483:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH0 = (lower << SCU_HIBERNATE_LPACTH0_VBATLO_Pos) | (upper << SCU_HIBERNATE_LP
 6382              	 .loc 3 1483 0 is_stmt 1
 6383 0020 0649     	 ldr r1,.L424+4
 6384 0022 FA79     	 ldrb r2,[r7,#7]
 6385 0024 BB79     	 ldrb r3,[r7,#6]
 6386 0026 1B02     	 lsls r3,r3,#8
 6387 0028 1343     	 orrs r3,r3,r2
 6388 002a 4B62     	 str r3,[r1,#36]
1484:../Libraries/XMCLib/src/xmc4_scu.c **** 
1485:../Libraries/XMCLib/src/xmc4_scu.c **** 
1486:../Libraries/XMCLib/src/xmc4_scu.c **** 
1487:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6389              	 .loc 3 1487 0
 6390 002c 0C37     	 adds r7,r7,#12
 6391              	.LCFI564:
 6392              	 .cfi_def_cfa_offset 4
 6393 002e BD46     	 mov sp,r7
 6394              	.LCFI565:
 6395              	 .cfi_def_cfa_register 13
 6396              	 
 6397 0030 5DF8047B 	 ldr r7,[sp],#4
 6398              	.LCFI566:
 6399              	 .cfi_restore 7
 6400              	 .cfi_def_cfa_offset 0
 6401 0034 7047     	 bx lr
 6402              	.L425:
 6403 0036 00BF     	 .align 2
 6404              	.L424:
 6405 0038 00400050 	 .word 1342193664
 6406 003c 00430050 	 .word 1342194432
 6407              	 .cfi_endproc
 6408              	.LFE268:
 6410              	 .section .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds,"ax",%progbits
 6411              	 .align 2
 6412              	 .global XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds
 6413              	 .thumb
 6414              	 .thumb_func
 6416              	XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:
 6417              	.LFB269:
1488:../Libraries/XMCLib/src/xmc4_scu.c **** 
1489:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds(uint8_t lower, uint8_t upper)
1490:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6418              	 .loc 3 1490 0
 6419              	 .cfi_startproc
 6420              	 
 6421              	 
 6422              	 
 6423 0000 80B4     	 push {r7}
 6424              	.LCFI567:
 6425              	 .cfi_def_cfa_offset 4
 6426              	 .cfi_offset 7,-4
 6427 0002 83B0     	 sub sp,sp,#12
 6428              	.LCFI568:
 6429              	 .cfi_def_cfa_offset 16
 6430 0004 00AF     	 add r7,sp,#0
 6431              	.LCFI569:
 6432              	 .cfi_def_cfa_register 7
 6433 0006 0346     	 mov r3,r0
 6434 0008 0A46     	 mov r2,r1
 6435 000a FB71     	 strb r3,[r7,#7]
 6436 000c 1346     	 mov r3,r2
 6437 000e BB71     	 strb r3,[r7,#6]
1491:../Libraries/XMCLib/src/xmc4_scu.c **** 
1492:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
 6438              	 .loc 3 1492 0
 6439 0010 00BF     	 nop
 6440              	.L427:
 6441              	 .loc 3 1492 0 is_stmt 0 discriminator 1
 6442 0012 0C4B     	 ldr r3,.L428
 6443 0014 D3F8C430 	 ldr r3,[r3,#196]
 6444 0018 03F48023 	 and r3,r3,#262144
 6445 001c 002B     	 cmp r3,#0
 6446 001e F8D1     	 bne .L427
1493:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1494:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1495:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1496:../Libraries/XMCLib/src/xmc4_scu.c **** 
1497:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Ms
 6447              	 .loc 3 1497 0 is_stmt 1
 6448 0020 0949     	 ldr r1,.L428+4
 6449 0022 094B     	 ldr r3,.L428+4
 6450 0024 9B6A     	 ldr r3,[r3,#40]
 6451 0026 23F47C53 	 bic r3,r3,#16128
 6452 002a 23F03F03 	 bic r3,r3,#63
 6453 002e FA79     	 ldrb r2,[r7,#7]
 6454 0030 1343     	 orrs r3,r3,r2
1498:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
1499:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO0HI_Pos);
 6455              	 .loc 3 1499 0
 6456 0032 BA79     	 ldrb r2,[r7,#6]
 6457 0034 1202     	 lsls r2,r2,#8
1498:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
 6458              	 .loc 3 1498 0
 6459 0036 1343     	 orrs r3,r3,r2
1497:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
 6460              	 .loc 3 1497 0
 6461 0038 8B62     	 str r3,[r1,#40]
1500:../Libraries/XMCLib/src/xmc4_scu.c **** 
1501:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6462              	 .loc 3 1501 0
 6463 003a 0C37     	 adds r7,r7,#12
 6464              	.LCFI570:
 6465              	 .cfi_def_cfa_offset 4
 6466 003c BD46     	 mov sp,r7
 6467              	.LCFI571:
 6468              	 .cfi_def_cfa_register 13
 6469              	 
 6470 003e 5DF8047B 	 ldr r7,[sp],#4
 6471              	.LCFI572:
 6472              	 .cfi_restore 7
 6473              	 .cfi_def_cfa_offset 0
 6474 0042 7047     	 bx lr
 6475              	.L429:
 6476              	 .align 2
 6477              	.L428:
 6478 0044 00400050 	 .word 1342193664
 6479 0048 00430050 	 .word 1342194432
 6480              	 .cfi_endproc
 6481              	.LFE269:
 6483              	 .section .text.XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds,"ax",%progbits
 6484              	 .align 2
 6485              	 .global XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds
 6486              	 .thumb
 6487              	 .thumb_func
 6489              	XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds:
 6490              	.LFB270:
1502:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1503:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds(uint8_t lower, uint8_t upper)
1504:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6491              	 .loc 3 1504 0
 6492              	 .cfi_startproc
 6493              	 
 6494              	 
 6495              	 
 6496 0000 80B4     	 push {r7}
 6497              	.LCFI573:
 6498              	 .cfi_def_cfa_offset 4
 6499              	 .cfi_offset 7,-4
 6500 0002 83B0     	 sub sp,sp,#12
 6501              	.LCFI574:
 6502              	 .cfi_def_cfa_offset 16
 6503 0004 00AF     	 add r7,sp,#0
 6504              	.LCFI575:
 6505              	 .cfi_def_cfa_register 7
 6506 0006 0346     	 mov r3,r0
 6507 0008 0A46     	 mov r2,r1
 6508 000a FB71     	 strb r3,[r7,#7]
 6509 000c 1346     	 mov r3,r2
 6510 000e BB71     	 strb r3,[r7,#6]
1505:../Libraries/XMCLib/src/xmc4_scu.c **** 
1506:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
 6511              	 .loc 3 1506 0
 6512 0010 00BF     	 nop
 6513              	.L431:
 6514              	 .loc 3 1506 0 is_stmt 0 discriminator 1
 6515 0012 0D4B     	 ldr r3,.L432
 6516 0014 D3F8C430 	 ldr r3,[r3,#196]
 6517 0018 03F48023 	 and r3,r3,#262144
 6518 001c 002B     	 cmp r3,#0
 6519 001e F8D1     	 bne .L431
1507:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1508:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1509:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1510:../Libraries/XMCLib/src/xmc4_scu.c **** 
1511:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Ms
 6520              	 .loc 3 1511 0 is_stmt 1
 6521 0020 0A49     	 ldr r1,.L432+4
 6522 0022 0A4B     	 ldr r3,.L432+4
 6523 0024 9B6A     	 ldr r3,[r3,#40]
 6524 0026 23F07C53 	 bic r3,r3,#1056964608
 6525 002a 23F47C13 	 bic r3,r3,#4128768
1512:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
 6526              	 .loc 3 1512 0
 6527 002e FA79     	 ldrb r2,[r7,#7]
 6528 0030 1204     	 lsls r2,r2,#16
1511:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
 6529              	 .loc 3 1511 0
 6530 0032 1343     	 orrs r3,r3,r2
1513:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO1HI_Pos);
 6531              	 .loc 3 1513 0
 6532 0034 BA79     	 ldrb r2,[r7,#6]
 6533 0036 1206     	 lsls r2,r2,#24
1512:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
 6534              	 .loc 3 1512 0
 6535 0038 1343     	 orrs r3,r3,r2
1511:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
 6536              	 .loc 3 1511 0
 6537 003a 8B62     	 str r3,[r1,#40]
1514:../Libraries/XMCLib/src/xmc4_scu.c **** 
1515:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6538              	 .loc 3 1515 0
 6539 003c 0C37     	 adds r7,r7,#12
 6540              	.LCFI576:
 6541              	 .cfi_def_cfa_offset 4
 6542 003e BD46     	 mov sp,r7
 6543              	.LCFI577:
 6544              	 .cfi_def_cfa_register 13
 6545              	 
 6546 0040 5DF8047B 	 ldr r7,[sp],#4
 6547              	.LCFI578:
 6548              	 .cfi_restore 7
 6549              	 .cfi_def_cfa_offset 0
 6550 0044 7047     	 bx lr
 6551              	.L433:
 6552 0046 00BF     	 .align 2
 6553              	.L432:
 6554 0048 00400050 	 .word 1342193664
 6555 004c 00430050 	 .word 1342194432
 6556              	 .cfi_endproc
 6557              	.LFE270:
 6559              	 .section .text.XMC_SCU_HIB_LPAC_GetStatus,"ax",%progbits
 6560              	 .align 2
 6561              	 .global XMC_SCU_HIB_LPAC_GetStatus
 6562              	 .thumb
 6563              	 .thumb_func
 6565              	XMC_SCU_HIB_LPAC_GetStatus:
 6566              	.LFB271:
1516:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1517:../Libraries/XMCLib/src/xmc4_scu.c **** int32_t XMC_SCU_HIB_LPAC_GetStatus(void)
1518:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6567              	 .loc 3 1518 0
 6568              	 .cfi_startproc
 6569              	 
 6570              	 
 6571              	 
 6572 0000 80B4     	 push {r7}
 6573              	.LCFI579:
 6574              	 .cfi_def_cfa_offset 4
 6575              	 .cfi_offset 7,-4
 6576 0002 00AF     	 add r7,sp,#0
 6577              	.LCFI580:
 6578              	 .cfi_def_cfa_register 7
1519:../Libraries/XMCLib/src/xmc4_scu.c ****   return SCU_HIBERNATE->LPACST;
 6579              	 .loc 3 1519 0
 6580 0004 034B     	 ldr r3,.L436
 6581 0006 DB6A     	 ldr r3,[r3,#44]
1520:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6582              	 .loc 3 1520 0
 6583 0008 1846     	 mov r0,r3
 6584 000a BD46     	 mov sp,r7
 6585              	.LCFI581:
 6586              	 .cfi_def_cfa_register 13
 6587              	 
 6588 000c 5DF8047B 	 ldr r7,[sp],#4
 6589              	.LCFI582:
 6590              	 .cfi_restore 7
 6591              	 .cfi_def_cfa_offset 0
 6592 0010 7047     	 bx lr
 6593              	.L437:
 6594 0012 00BF     	 .align 2
 6595              	.L436:
 6596 0014 00430050 	 .word 1342194432
 6597              	 .cfi_endproc
 6598              	.LFE271:
 6600              	 .section .text.XMC_SCU_HIB_LPAC_ClearStatus,"ax",%progbits
 6601              	 .align 2
 6602              	 .global XMC_SCU_HIB_LPAC_ClearStatus
 6603              	 .thumb
 6604              	 .thumb_func
 6606              	XMC_SCU_HIB_LPAC_ClearStatus:
 6607              	.LFB272:
1521:../Libraries/XMCLib/src/xmc4_scu.c **** 
1522:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_ClearStatus(int32_t status)
1523:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6608              	 .loc 3 1523 0
 6609              	 .cfi_startproc
 6610              	 
 6611              	 
 6612              	 
 6613 0000 80B4     	 push {r7}
 6614              	.LCFI583:
 6615              	 .cfi_def_cfa_offset 4
 6616              	 .cfi_offset 7,-4
 6617 0002 83B0     	 sub sp,sp,#12
 6618              	.LCFI584:
 6619              	 .cfi_def_cfa_offset 16
 6620 0004 00AF     	 add r7,sp,#0
 6621              	.LCFI585:
 6622              	 .cfi_def_cfa_register 7
 6623 0006 7860     	 str r0,[r7,#4]
1524:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCLR_Msk)
 6624              	 .loc 3 1524 0
 6625 0008 00BF     	 nop
 6626              	.L439:
 6627              	 .loc 3 1524 0 is_stmt 0 discriminator 1
 6628 000a 074B     	 ldr r3,.L440
 6629 000c D3F8C430 	 ldr r3,[r3,#196]
 6630 0010 03F48013 	 and r3,r3,#1048576
 6631 0014 002B     	 cmp r3,#0
 6632 0016 F8D1     	 bne .L439
1525:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1526:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACCLR register in hibernate domain is ready to accept a write */
1527:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1528:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCLR = status;;
 6633              	 .loc 3 1528 0 is_stmt 1
 6634 0018 044A     	 ldr r2,.L440+4
 6635 001a 7B68     	 ldr r3,[r7,#4]
 6636 001c 1363     	 str r3,[r2,#48]
1529:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6637              	 .loc 3 1529 0
 6638 001e 0C37     	 adds r7,r7,#12
 6639              	.LCFI586:
 6640              	 .cfi_def_cfa_offset 4
 6641 0020 BD46     	 mov sp,r7
 6642              	.LCFI587:
 6643              	 .cfi_def_cfa_register 13
 6644              	 
 6645 0022 5DF8047B 	 ldr r7,[sp],#4
 6646              	.LCFI588:
 6647              	 .cfi_restore 7
 6648              	 .cfi_def_cfa_offset 0
 6649 0026 7047     	 bx lr
 6650              	.L441:
 6651              	 .align 2
 6652              	.L440:
 6653 0028 00400050 	 .word 1342193664
 6654 002c 00430050 	 .word 1342194432
 6655              	 .cfi_endproc
 6656              	.LFE272:
 6658              	 .section .text.XMC_SCU_HIB_LPAC_TriggerCompare,"ax",%progbits
 6659              	 .align 2
 6660              	 .global XMC_SCU_HIB_LPAC_TriggerCompare
 6661              	 .thumb
 6662              	 .thumb_func
 6664              	XMC_SCU_HIB_LPAC_TriggerCompare:
 6665              	.LFB273:
1530:../Libraries/XMCLib/src/xmc4_scu.c **** 
1531:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_TriggerCompare(XMC_SCU_HIB_LPAC_INPUT_t input)
1532:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6666              	 .loc 3 1532 0
 6667              	 .cfi_startproc
 6668              	 
 6669              	 
 6670              	 
 6671 0000 80B4     	 push {r7}
 6672              	.LCFI589:
 6673              	 .cfi_def_cfa_offset 4
 6674              	 .cfi_offset 7,-4
 6675 0002 83B0     	 sub sp,sp,#12
 6676              	.LCFI590:
 6677              	 .cfi_def_cfa_offset 16
 6678 0004 00AF     	 add r7,sp,#0
 6679              	.LCFI591:
 6680              	 .cfi_def_cfa_register 7
 6681 0006 0346     	 mov r3,r0
 6682 0008 FB71     	 strb r3,[r7,#7]
1533:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACSET_Msk)
 6683              	 .loc 3 1533 0
 6684 000a 00BF     	 nop
 6685              	.L443:
 6686              	 .loc 3 1533 0 is_stmt 0 discriminator 1
 6687 000c 074B     	 ldr r3,.L444
 6688 000e D3F8C430 	 ldr r3,[r3,#196]
 6689 0012 03F40013 	 and r3,r3,#2097152
 6690 0016 002B     	 cmp r3,#0
 6691 0018 F8D1     	 bne .L443
1534:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1535:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACSET register in hibernate domain is ready to accept a write */
1536:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1537:../Libraries/XMCLib/src/xmc4_scu.c **** 
1538:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACSET = input;
 6692              	 .loc 3 1538 0 is_stmt 1
 6693 001a 054A     	 ldr r2,.L444+4
 6694 001c FB79     	 ldrb r3,[r7,#7]
 6695 001e 5363     	 str r3,[r2,#52]
1539:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6696              	 .loc 3 1539 0
 6697 0020 0C37     	 adds r7,r7,#12
 6698              	.LCFI592:
 6699              	 .cfi_def_cfa_offset 4
 6700 0022 BD46     	 mov sp,r7
 6701              	.LCFI593:
 6702              	 .cfi_def_cfa_register 13
 6703              	 
 6704 0024 5DF8047B 	 ldr r7,[sp],#4
 6705              	.LCFI594:
 6706              	 .cfi_restore 7
 6707              	 .cfi_def_cfa_offset 0
 6708 0028 7047     	 bx lr
 6709              	.L445:
 6710 002a 00BF     	 .align 2
 6711              	.L444:
 6712 002c 00400050 	 .word 1342193664
 6713 0030 00430050 	 .word 1342194432
 6714              	 .cfi_endproc
 6715              	.LFE273:
 6717              	 .section .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable,"ax",%progbits
 6718              	 .align 2
 6719              	 .global XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 6720              	 .thumb
 6721              	 .thumb_func
 6723              	XMC_SCU_CLOCK_IsLowPowerOscillatorStable:
 6724              	.LFB274:
1540:../Libraries/XMCLib/src/xmc4_scu.c **** 
1541:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1542:../Libraries/XMCLib/src/xmc4_scu.c **** 
1543:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void)
1544:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6725              	 .loc 3 1544 0
 6726              	 .cfi_startproc
 6727              	 
 6728              	 
 6729              	 
 6730 0000 80B4     	 push {r7}
 6731              	.LCFI595:
 6732              	 .cfi_def_cfa_offset 4
 6733              	 .cfi_offset 7,-4
 6734 0002 00AF     	 add r7,sp,#0
 6735              	.LCFI596:
 6736              	 .cfi_def_cfa_register 7
1545:../Libraries/XMCLib/src/xmc4_scu.c ****   //return ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) == 0UL);
1546:../Libraries/XMCLib/src/xmc4_scu.c ****   return 1;
 6737              	 .loc 3 1546 0
 6738 0004 0123     	 movs r3,#1
1547:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6739              	 .loc 3 1547 0
 6740 0006 1846     	 mov r0,r3
 6741 0008 BD46     	 mov sp,r7
 6742              	.LCFI597:
 6743              	 .cfi_def_cfa_register 13
 6744              	 
 6745 000a 5DF8047B 	 ldr r7,[sp],#4
 6746              	.LCFI598:
 6747              	 .cfi_restore 7
 6748              	 .cfi_def_cfa_offset 0
 6749 000e 7047     	 bx lr
 6750              	 .cfi_endproc
 6751              	.LFE274:
 6753              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillator,"ax",%progbits
 6754              	 .align 2
 6755              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillator
 6756              	 .thumb
 6757              	 .thumb_func
 6759              	XMC_SCU_CLOCK_EnableLowPowerOscillator:
 6760              	.LFB275:
1548:../Libraries/XMCLib/src/xmc4_scu.c **** 
1549:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1550:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void)
1551:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6761              	 .loc 3 1551 0
 6762              	 .cfi_startproc
 6763              	 
 6764              	 
 6765 0000 80B5     	 push {r7,lr}
 6766              	.LCFI599:
 6767              	 .cfi_def_cfa_offset 8
 6768              	 .cfi_offset 7,-8
 6769              	 .cfi_offset 14,-4
 6770 0002 00AF     	 add r7,sp,#0
 6771              	.LCFI600:
 6772              	 .cfi_def_cfa_register 7
1552:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP */
1553:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6773              	 .loc 3 1553 0
 6774 0004 00BF     	 nop
 6775              	.L449:
 6776              	 .loc 3 1553 0 is_stmt 0 discriminator 1
 6777 0006 164B     	 ldr r3,.L453
 6778 0008 D3F8C430 	 ldr r3,[r3,#196]
 6779 000c 03F08003 	 and r3,r3,#128
 6780 0010 002B     	 cmp r3,#0
 6781 0012 F8D1     	 bne .L449
1554:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1555:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until no pending update to OSCULCTRL register in hibernate domain */
1556:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1557:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6782              	 .loc 3 1557 0 is_stmt 1
 6783 0014 134A     	 ldr r2,.L453+4
 6784 0016 134B     	 ldr r3,.L453+4
 6785 0018 DB69     	 ldr r3,[r3,#28]
 6786 001a 23F03003 	 bic r3,r3,#48
 6787 001e D361     	 str r3,[r2,#28]
1558:../Libraries/XMCLib/src/xmc4_scu.c **** 
1559:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP Oscillator Watchdog*/
1560:../Libraries/XMCLib/src/xmc4_scu.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 6788              	 .loc 3 1560 0
 6789 0020 00BF     	 nop
 6790              	.L450:
 6791              	 .loc 3 1560 0 is_stmt 0 discriminator 1
 6792 0022 0F4B     	 ldr r3,.L453
 6793 0024 D3F8C430 	 ldr r3,[r3,#196]
 6794 0028 03F00803 	 and r3,r3,#8
 6795 002c 002B     	 cmp r3,#0
 6796 002e F8D1     	 bne .L450
1561:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1562:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
1563:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1564:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 6797              	 .loc 3 1564 0 is_stmt 1
 6798 0030 0C4A     	 ldr r2,.L453+4
 6799 0032 0C4B     	 ldr r3,.L453+4
 6800 0034 DB68     	 ldr r3,[r3,#12]
 6801 0036 43F00803 	 orr r3,r3,#8
 6802 003a D360     	 str r3,[r2,#12]
1565:../Libraries/XMCLib/src/xmc4_scu.c **** 
1566:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP Oscillator Watchdog*/
1567:../Libraries/XMCLib/src/xmc4_scu.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 6803              	 .loc 3 1567 0
 6804 003c 00BF     	 nop
 6805              	.L451:
 6806              	 .loc 3 1567 0 is_stmt 0 discriminator 1
 6807 003e 084B     	 ldr r3,.L453
 6808 0040 D3F8C430 	 ldr r3,[r3,#196]
 6809 0044 03F00403 	 and r3,r3,#4
 6810 0048 002B     	 cmp r3,#0
 6811 004a F8D1     	 bne .L451
1568:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1569:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
1570:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1571:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = (uint32_t)SCU_HIBERNATE_HDSET_ULPWDG_Msk;
 6812              	 .loc 3 1571 0 is_stmt 1
 6813 004c 054B     	 ldr r3,.L453+4
 6814 004e 0822     	 movs r2,#8
 6815 0050 9A60     	 str r2,[r3,#8]
1572:../Libraries/XMCLib/src/xmc4_scu.c **** 
1573:../Libraries/XMCLib/src/xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 6816              	 .loc 3 1573 0
 6817 0052 00BF     	 nop
 6818              	.L452:
 6819              	 .loc 3 1573 0 is_stmt 0 discriminator 1
 6820 0054 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 6821 0058 0346     	 mov r3,r0
 6822 005a 002B     	 cmp r3,#0
 6823 005c FAD1     	 bne .L452
1574:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1575:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until update of the stanby clock source is done in the HIB domain */    
1576:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1577:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6824              	 .loc 3 1577 0 is_stmt 1
 6825 005e 80BD     	 pop {r7,pc}
 6826              	.L454:
 6827              	 .align 2
 6828              	.L453:
 6829 0060 00400050 	 .word 1342193664
 6830 0064 00430050 	 .word 1342194432
 6831              	 .cfi_endproc
 6832              	.LFE275:
 6834              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillator,"ax",%progbits
 6835              	 .align 2
 6836              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillator
 6837              	 .thumb
 6838              	 .thumb_func
 6840              	XMC_SCU_CLOCK_DisableLowPowerOscillator:
 6841              	.LFB276:
1578:../Libraries/XMCLib/src/xmc4_scu.c **** 
1579:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1580:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void)
1581:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6842              	 .loc 3 1581 0
 6843              	 .cfi_startproc
 6844              	 
 6845              	 
 6846              	 
 6847 0000 80B4     	 push {r7}
 6848              	.LCFI601:
 6849              	 .cfi_def_cfa_offset 4
 6850              	 .cfi_offset 7,-4
 6851 0002 00AF     	 add r7,sp,#0
 6852              	.LCFI602:
 6853              	 .cfi_def_cfa_register 7
1582:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6854              	 .loc 3 1582 0
 6855 0004 00BF     	 nop
 6856              	.L456:
 6857              	 .loc 3 1582 0 is_stmt 0 discriminator 1
 6858 0006 084B     	 ldr r3,.L457
 6859 0008 D3F8C430 	 ldr r3,[r3,#196]
 6860 000c 03F08003 	 and r3,r3,#128
 6861 0010 002B     	 cmp r3,#0
 6862 0012 F8D1     	 bne .L456
1583:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1584:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1585:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1586:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= (uint32_t)SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6863              	 .loc 3 1586 0 is_stmt 1
 6864 0014 054A     	 ldr r2,.L457+4
 6865 0016 054B     	 ldr r3,.L457+4
 6866 0018 DB69     	 ldr r3,[r3,#28]
 6867 001a 43F03003 	 orr r3,r3,#48
 6868 001e D361     	 str r3,[r2,#28]
1587:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6869              	 .loc 3 1587 0
 6870 0020 BD46     	 mov sp,r7
 6871              	.LCFI603:
 6872              	 .cfi_def_cfa_register 13
 6873              	 
 6874 0022 5DF8047B 	 ldr r7,[sp],#4
 6875              	.LCFI604:
 6876              	 .cfi_restore 7
 6877              	 .cfi_def_cfa_offset 0
 6878 0026 7047     	 bx lr
 6879              	.L458:
 6880              	 .align 2
 6881              	.L457:
 6882 0028 00400050 	 .word 1342193664
 6883 002c 00430050 	 .word 1342194432
 6884              	 .cfi_endproc
 6885              	.LFE276:
 6887              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6888              	 .align 2
 6889              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
 6890              	 .thumb
 6891              	 .thumb_func
 6893              	XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:
 6894              	.LFB277:
1588:../Libraries/XMCLib/src/xmc4_scu.c **** 
1589:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void)
1590:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6895              	 .loc 3 1590 0
 6896              	 .cfi_startproc
 6897              	 
 6898              	 
 6899              	 
 6900 0000 80B4     	 push {r7}
 6901              	.LCFI605:
 6902              	 .cfi_def_cfa_offset 4
 6903              	 .cfi_offset 7,-4
 6904 0002 00AF     	 add r7,sp,#0
 6905              	.LCFI606:
 6906              	 .cfi_def_cfa_register 7
1591:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6907              	 .loc 3 1591 0
 6908 0004 00BF     	 nop
 6909              	.L460:
 6910              	 .loc 3 1591 0 is_stmt 0 discriminator 1
 6911 0006 084B     	 ldr r3,.L461
 6912 0008 D3F8C430 	 ldr r3,[r3,#196]
 6913 000c 03F08003 	 and r3,r3,#128
 6914 0010 002B     	 cmp r3,#0
 6915 0012 F8D1     	 bne .L460
1592:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1593:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1594:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1595:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= SCU_HIBERNATE_OSCULCTRL_X1DEN_Msk | SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6916              	 .loc 3 1595 0 is_stmt 1
 6917 0014 054A     	 ldr r2,.L461+4
 6918 0016 054B     	 ldr r3,.L461+4
 6919 0018 DB69     	 ldr r3,[r3,#28]
 6920 001a 43F03103 	 orr r3,r3,#49
 6921 001e D361     	 str r3,[r2,#28]
1596:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6922              	 .loc 3 1596 0
 6923 0020 BD46     	 mov sp,r7
 6924              	.LCFI607:
 6925              	 .cfi_def_cfa_register 13
 6926              	 
 6927 0022 5DF8047B 	 ldr r7,[sp],#4
 6928              	.LCFI608:
 6929              	 .cfi_restore 7
 6930              	 .cfi_def_cfa_offset 0
 6931 0026 7047     	 bx lr
 6932              	.L462:
 6933              	 .align 2
 6934              	.L461:
 6935 0028 00400050 	 .word 1342193664
 6936 002c 00430050 	 .word 1342194432
 6937              	 .cfi_endproc
 6938              	.LFE277:
 6940              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6941              	 .align 2
 6942              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
 6943              	 .thumb
 6944              	 .thumb_func
 6946              	XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:
 6947              	.LFB278:
1597:../Libraries/XMCLib/src/xmc4_scu.c **** 
1598:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void)
1599:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6948              	 .loc 3 1599 0
 6949              	 .cfi_startproc
 6950              	 
 6951              	 
 6952              	 
 6953 0000 80B4     	 push {r7}
 6954              	.LCFI609:
 6955              	 .cfi_def_cfa_offset 4
 6956              	 .cfi_offset 7,-4
 6957 0002 00AF     	 add r7,sp,#0
 6958              	.LCFI610:
 6959              	 .cfi_def_cfa_register 7
1600:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6960              	 .loc 3 1600 0
 6961 0004 00BF     	 nop
 6962              	.L464:
 6963              	 .loc 3 1600 0 is_stmt 0 discriminator 1
 6964 0006 094B     	 ldr r3,.L465
 6965 0008 D3F8C430 	 ldr r3,[r3,#196]
 6966 000c 03F08003 	 and r3,r3,#128
 6967 0010 002B     	 cmp r3,#0
 6968 0012 F8D1     	 bne .L464
1601:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1602:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1603:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1604:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL = (SCU_HIBERNATE->OSCULCTRL & ~(uint32_t)(SCU_HIBERNATE_OSCULCTRL_X1DEN_
 6969              	 .loc 3 1604 0 is_stmt 1
 6970 0014 064A     	 ldr r2,.L465+4
 6971 0016 064B     	 ldr r3,.L465+4
 6972 0018 DB69     	 ldr r3,[r3,#28]
 6973 001a 23F03103 	 bic r3,r3,#49
 6974 001e 43F02003 	 orr r3,r3,#32
 6975 0022 D361     	 str r3,[r2,#28]
1605:../Libraries/XMCLib/src/xmc4_scu.c ****                              (SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN << SCU_HIBERNATE_OSCULCTR
1606:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6976              	 .loc 3 1606 0
 6977 0024 BD46     	 mov sp,r7
 6978              	.LCFI611:
 6979              	 .cfi_def_cfa_register 13
 6980              	 
 6981 0026 5DF8047B 	 ldr r7,[sp],#4
 6982              	.LCFI612:
 6983              	 .cfi_restore 7
 6984              	 .cfi_def_cfa_offset 0
 6985 002a 7047     	 bx lr
 6986              	.L466:
 6987              	 .align 2
 6988              	.L465:
 6989 002c 00400050 	 .word 1342193664
 6990 0030 00430050 	 .word 1342194432
 6991              	 .cfi_endproc
 6992              	.LFE278:
 6994              	 .section .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6995              	 .align 2
 6996              	 .global XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
 6997              	 .thumb
 6998              	 .thumb_func
 7000              	XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:
 7001              	.LFB279:
1607:../Libraries/XMCLib/src/xmc4_scu.c **** 
1608:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void)
1609:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7002              	 .loc 3 1609 0
 7003              	 .cfi_startproc
 7004              	 
 7005              	 
 7006              	 
 7007 0000 80B4     	 push {r7}
 7008              	.LCFI613:
 7009              	 .cfi_def_cfa_offset 4
 7010              	 .cfi_offset 7,-4
 7011 0002 00AF     	 add r7,sp,#0
 7012              	.LCFI614:
 7013              	 .cfi_def_cfa_register 7
1610:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_HIBERNATE->OSCULSTAT & SCU_HIBERNATE_OSCULSTAT_X1D_Msk);
 7014              	 .loc 3 1610 0
 7015 0004 044B     	 ldr r3,.L469
 7016 0006 9B69     	 ldr r3,[r3,#24]
 7017 0008 03F00103 	 and r3,r3,#1
1611:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7018              	 .loc 3 1611 0
 7019 000c 1846     	 mov r0,r3
 7020 000e BD46     	 mov sp,r7
 7021              	.LCFI615:
 7022              	 .cfi_def_cfa_register 13
 7023              	 
 7024 0010 5DF8047B 	 ldr r7,[sp],#4
 7025              	.LCFI616:
 7026              	 .cfi_restore 7
 7027              	 .cfi_def_cfa_offset 0
 7028 0014 7047     	 bx lr
 7029              	.L470:
 7030 0016 00BF     	 .align 2
 7031              	.L469:
 7032 0018 00430050 	 .word 1342194432
 7033              	 .cfi_endproc
 7034              	.LFE279:
 7036              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator,"ax",%progbits
 7037              	 .align 2
 7038              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 7039              	 .thumb
 7040              	 .thumb_func
 7042              	XMC_SCU_CLOCK_EnableHighPerformanceOscillator:
 7043              	.LFB280:
1612:../Libraries/XMCLib/src/xmc4_scu.c **** 
1613:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable High Precision High Speed oscillator */
1614:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void)
1615:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7044              	 .loc 3 1615 0
 7045              	 .cfi_startproc
 7046              	 
 7047              	 
 7048 0000 B0B5     	 push {r4,r5,r7,lr}
 7049              	.LCFI617:
 7050              	 .cfi_def_cfa_offset 16
 7051              	 .cfi_offset 4,-16
 7052              	 .cfi_offset 5,-12
 7053              	 .cfi_offset 7,-8
 7054              	 .cfi_offset 14,-4
 7055 0002 00AF     	 add r7,sp,#0
 7056              	.LCFI618:
 7057              	 .cfi_def_cfa_register 7
1616:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_PLLPWD_Msk;
 7058              	 .loc 3 1616 0
 7059 0004 0F4A     	 ldr r2,.L472
 7060 0006 0F4B     	 ldr r3,.L472
 7061 0008 5B68     	 ldr r3,[r3,#4]
 7062 000a 23F48033 	 bic r3,r3,#65536
 7063 000e 5360     	 str r3,[r2,#4]
1617:../Libraries/XMCLib/src/xmc4_scu.c **** 
1618:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL = (uint32_t)((SCU_OSC->OSCHPCTRL & ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCH
 7064              	 .loc 3 1618 0
 7065 0010 0D4D     	 ldr r5,.L472+4
 7066 0012 0D4B     	 ldr r3,.L472+4
 7067 0014 5B68     	 ldr r3,[r3,#4]
 7068 0016 23F47024 	 bic r4,r3,#983040
 7069 001a 24F03004 	 bic r4,r4,#48
1619:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 7070              	 .loc 3 1619 0
 7071 001e FFF7FEFF 	 bl OSCHP_GetFrequency
 7072 0022 0246     	 mov r2,r0
 7073 0024 094B     	 ldr r3,.L472+8
 7074 0026 A3FB0223 	 umull r2,r3,r3,r2
 7075 002a 1B0D     	 lsrs r3,r3,#20
 7076 002c 013B     	 subs r3,r3,#1
 7077 002e 1B04     	 lsls r3,r3,#16
1618:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 7078              	 .loc 3 1618 0
 7079 0030 2343     	 orrs r3,r3,r4
 7080 0032 6B60     	 str r3,[r5,#4]
1620:../Libraries/XMCLib/src/xmc4_scu.c **** 
1621:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart OSC Watchdog */
1622:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_OSCRES_Msk;
 7081              	 .loc 3 1622 0
 7082 0034 034A     	 ldr r2,.L472
 7083 0036 034B     	 ldr r3,.L472
 7084 0038 5B68     	 ldr r3,[r3,#4]
 7085 003a 23F40033 	 bic r3,r3,#131072
 7086 003e 5360     	 str r3,[r2,#4]
1623:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7087              	 .loc 3 1623 0
 7088 0040 B0BD     	 pop {r4,r5,r7,pc}
 7089              	.L473:
 7090 0042 00BF     	 .align 2
 7091              	.L472:
 7092 0044 10470050 	 .word 1342195472
 7093 0048 00470050 	 .word 1342195456
 7094 004c 6BCA5F6B 	 .word 1801439851
 7095              	 .cfi_endproc
 7096              	.LFE280:
 7098              	 .section .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable,"ax",%progbits
 7099              	 .align 2
 7100              	 .global XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 7101              	 .thumb
 7102              	 .thumb_func
 7104              	XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:
 7105              	.LFB281:
1624:../Libraries/XMCLib/src/xmc4_scu.c **** 
1625:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void)
1626:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7106              	 .loc 3 1626 0
 7107              	 .cfi_startproc
 7108              	 
 7109              	 
 7110              	 
 7111 0000 80B4     	 push {r7}
 7112              	.LCFI619:
 7113              	 .cfi_def_cfa_offset 4
 7114              	 .cfi_offset 7,-4
 7115 0002 00AF     	 add r7,sp,#0
 7116              	.LCFI620:
 7117              	 .cfi_def_cfa_register 7
1627:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_PLL->PLLSTAT & XMC_SCU_PLL_PLLSTAT_OSC_USABLE) == XMC_SCU_PLL_PLLSTAT_OSC_USABLE);
 7118              	 .loc 3 1627 0
 7119 0004 074B     	 ldr r3,.L476
 7120 0006 1B68     	 ldr r3,[r3]
 7121 0008 03F46073 	 and r3,r3,#896
 7122 000c B3F5607F 	 cmp r3,#896
 7123 0010 0CBF     	 ite eq
 7124 0012 0123     	 moveq r3,#1
 7125 0014 0023     	 movne r3,#0
 7126 0016 DBB2     	 uxtb r3,r3
1628:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7127              	 .loc 3 1628 0
 7128 0018 1846     	 mov r0,r3
 7129 001a BD46     	 mov sp,r7
 7130              	.LCFI621:
 7131              	 .cfi_def_cfa_register 13
 7132              	 
 7133 001c 5DF8047B 	 ldr r7,[sp],#4
 7134              	.LCFI622:
 7135              	 .cfi_restore 7
 7136              	 .cfi_def_cfa_offset 0
 7137 0020 7047     	 bx lr
 7138              	.L477:
 7139 0022 00BF     	 .align 2
 7140              	.L476:
 7141 0024 10470050 	 .word 1342195472
 7142              	 .cfi_endproc
 7143              	.LFE281:
 7145              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator,"ax",%progbits
 7146              	 .align 2
 7147              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillator
 7148              	 .thumb
 7149              	 .thumb_func
 7151              	XMC_SCU_CLOCK_DisableHighPerformanceOscillator:
 7152              	.LFB282:
1629:../Libraries/XMCLib/src/xmc4_scu.c **** 
1630:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable High Precision High Speed oscillator */
1631:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void)
1632:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7153              	 .loc 3 1632 0
 7154              	 .cfi_startproc
 7155              	 
 7156              	 
 7157              	 
 7158 0000 80B4     	 push {r7}
 7159              	.LCFI623:
 7160              	 .cfi_def_cfa_offset 4
 7161              	 .cfi_offset 7,-4
 7162 0002 00AF     	 add r7,sp,#0
 7163              	.LCFI624:
 7164              	 .cfi_def_cfa_register 7
1633:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= (uint32_t)SCU_OSC_OSCHPCTRL_MODE_Msk;
 7165              	 .loc 3 1633 0
 7166 0004 044A     	 ldr r2,.L479
 7167 0006 044B     	 ldr r3,.L479
 7168 0008 5B68     	 ldr r3,[r3,#4]
 7169 000a 43F03003 	 orr r3,r3,#48
 7170 000e 5360     	 str r3,[r2,#4]
1634:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7171              	 .loc 3 1634 0
 7172 0010 BD46     	 mov sp,r7
 7173              	.LCFI625:
 7174              	 .cfi_def_cfa_register 13
 7175              	 
 7176 0012 5DF8047B 	 ldr r7,[sp],#4
 7177              	.LCFI626:
 7178              	 .cfi_restore 7
 7179              	 .cfi_def_cfa_offset 0
 7180 0016 7047     	 bx lr
 7181              	.L480:
 7182              	 .align 2
 7183              	.L479:
 7184 0018 00470050 	 .word 1342195456
 7185              	 .cfi_endproc
 7186              	.LFE282:
 7188              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 7189              	 .align 2
 7190              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
 7191              	 .thumb
 7192              	 .thumb_func
 7194              	XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:
 7195              	.LFB283:
1635:../Libraries/XMCLib/src/xmc4_scu.c **** 
1636:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void)
1637:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7196              	 .loc 3 1637 0
 7197              	 .cfi_startproc
 7198              	 
 7199              	 
 7200              	 
 7201 0000 80B4     	 push {r7}
 7202              	.LCFI627:
 7203              	 .cfi_def_cfa_offset 4
 7204              	 .cfi_offset 7,-4
 7205 0002 00AF     	 add r7,sp,#0
 7206              	.LCFI628:
 7207              	 .cfi_def_cfa_register 7
1638:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 7208              	 .loc 3 1638 0
 7209 0004 044A     	 ldr r2,.L482
 7210 0006 044B     	 ldr r3,.L482
 7211 0008 5B68     	 ldr r3,[r3,#4]
 7212 000a 43F00103 	 orr r3,r3,#1
 7213 000e 5360     	 str r3,[r2,#4]
1639:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7214              	 .loc 3 1639 0
 7215 0010 BD46     	 mov sp,r7
 7216              	.LCFI629:
 7217              	 .cfi_def_cfa_register 13
 7218              	 
 7219 0012 5DF8047B 	 ldr r7,[sp],#4
 7220              	.LCFI630:
 7221              	 .cfi_restore 7
 7222              	 .cfi_def_cfa_offset 0
 7223 0016 7047     	 bx lr
 7224              	.L483:
 7225              	 .align 2
 7226              	.L482:
 7227 0018 00470050 	 .word 1342195456
 7228              	 .cfi_endproc
 7229              	.LFE283:
 7231              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 7232              	 .align 2
 7233              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
 7234              	 .thumb
 7235              	 .thumb_func
 7237              	XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:
 7238              	.LFB284:
1640:../Libraries/XMCLib/src/xmc4_scu.c **** 
1641:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void)
1642:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7239              	 .loc 3 1642 0
 7240              	 .cfi_startproc
 7241              	 
 7242              	 
 7243              	 
 7244 0000 80B4     	 push {r7}
 7245              	.LCFI631:
 7246              	 .cfi_def_cfa_offset 4
 7247              	 .cfi_offset 7,-4
 7248 0002 00AF     	 add r7,sp,#0
 7249              	.LCFI632:
 7250              	 .cfi_def_cfa_register 7
1643:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL &= ~SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 7251              	 .loc 3 1643 0
 7252 0004 044A     	 ldr r2,.L485
 7253 0006 044B     	 ldr r3,.L485
 7254 0008 5B68     	 ldr r3,[r3,#4]
 7255 000a 23F00103 	 bic r3,r3,#1
 7256 000e 5360     	 str r3,[r2,#4]
1644:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7257              	 .loc 3 1644 0
 7258 0010 BD46     	 mov sp,r7
 7259              	.LCFI633:
 7260              	 .cfi_def_cfa_register 13
 7261              	 
 7262 0012 5DF8047B 	 ldr r7,[sp],#4
 7263              	.LCFI634:
 7264              	 .cfi_restore 7
 7265              	 .cfi_def_cfa_offset 0
 7266 0016 7047     	 bx lr
 7267              	.L486:
 7268              	 .align 2
 7269              	.L485:
 7270 0018 00470050 	 .word 1342195456
 7271              	 .cfi_endproc
 7272              	.LFE284:
 7274              	 .section .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus,"ax",%progbits
 7275              	 .align 2
 7276              	 .global XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
 7277              	 .thumb
 7278              	 .thumb_func
 7280              	XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:
 7281              	.LFB285:
1645:../Libraries/XMCLib/src/xmc4_scu.c **** 
1646:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void)
1647:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7282              	 .loc 3 1647 0
 7283              	 .cfi_startproc
 7284              	 
 7285              	 
 7286              	 
 7287 0000 80B4     	 push {r7}
 7288              	.LCFI635:
 7289              	 .cfi_def_cfa_offset 4
 7290              	 .cfi_offset 7,-4
 7291 0002 00AF     	 add r7,sp,#0
 7292              	.LCFI636:
 7293              	 .cfi_def_cfa_register 7
1648:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_OSC->OSCHPSTAT & SCU_OSC_OSCHPSTAT_X1D_Msk);
 7294              	 .loc 3 1648 0
 7295 0004 044B     	 ldr r3,.L489
 7296 0006 1B68     	 ldr r3,[r3]
 7297 0008 03F00103 	 and r3,r3,#1
1649:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7298              	 .loc 3 1649 0
 7299 000c 1846     	 mov r0,r3
 7300 000e BD46     	 mov sp,r7
 7301              	.LCFI637:
 7302              	 .cfi_def_cfa_register 13
 7303              	 
 7304 0010 5DF8047B 	 ldr r7,[sp],#4
 7305              	.LCFI638:
 7306              	 .cfi_restore 7
 7307              	 .cfi_def_cfa_offset 0
 7308 0014 7047     	 bx lr
 7309              	.L490:
 7310 0016 00BF     	 .align 2
 7311              	.L489:
 7312 0018 00470050 	 .word 1342195456
 7313              	 .cfi_endproc
 7314              	.LFE285:
 7316              	 .section .text.XMC_SCU_CLOCK_EnableSystemPll,"ax",%progbits
 7317              	 .align 2
 7318              	 .global XMC_SCU_CLOCK_EnableSystemPll
 7319              	 .thumb
 7320              	 .thumb_func
 7322              	XMC_SCU_CLOCK_EnableSystemPll:
 7323              	.LFB286:
1650:../Libraries/XMCLib/src/xmc4_scu.c **** 
1651:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable main PLL */
1652:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableSystemPll(void)
1653:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7324              	 .loc 3 1653 0
 7325              	 .cfi_startproc
 7326              	 
 7327              	 
 7328              	 
 7329 0000 80B4     	 push {r7}
 7330              	.LCFI639:
 7331              	 .cfi_def_cfa_offset 4
 7332              	 .cfi_offset 7,-4
 7333 0002 00AF     	 add r7,sp,#0
 7334              	.LCFI640:
 7335              	 .cfi_def_cfa_register 7
1654:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 7336              	 .loc 3 1654 0
 7337 0004 054A     	 ldr r2,.L492
 7338 0006 054B     	 ldr r3,.L492
 7339 0008 5B68     	 ldr r3,[r3,#4]
 7340 000a 23F48033 	 bic r3,r3,#65536
 7341 000e 23F00203 	 bic r3,r3,#2
 7342 0012 5360     	 str r3,[r2,#4]
1655:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7343              	 .loc 3 1655 0
 7344 0014 BD46     	 mov sp,r7
 7345              	.LCFI641:
 7346              	 .cfi_def_cfa_register 13
 7347              	 
 7348 0016 5DF8047B 	 ldr r7,[sp],#4
 7349              	.LCFI642:
 7350              	 .cfi_restore 7
 7351              	 .cfi_def_cfa_offset 0
 7352 001a 7047     	 bx lr
 7353              	.L493:
 7354              	 .align 2
 7355              	.L492:
 7356 001c 10470050 	 .word 1342195472
 7357              	 .cfi_endproc
 7358              	.LFE286:
 7360              	 .section .text.XMC_SCU_CLOCK_DisableSystemPll,"ax",%progbits
 7361              	 .align 2
 7362              	 .global XMC_SCU_CLOCK_DisableSystemPll
 7363              	 .thumb
 7364              	 .thumb_func
 7366              	XMC_SCU_CLOCK_DisableSystemPll:
 7367              	.LFB287:
1656:../Libraries/XMCLib/src/xmc4_scu.c **** 
1657:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable main PLL */
1658:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableSystemPll(void)
1659:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7368              	 .loc 3 1659 0
 7369              	 .cfi_startproc
 7370              	 
 7371              	 
 7372              	 
 7373 0000 80B4     	 push {r7}
 7374              	.LCFI643:
 7375              	 .cfi_def_cfa_offset 4
 7376              	 .cfi_offset 7,-4
 7377 0002 00AF     	 add r7,sp,#0
 7378              	.LCFI644:
 7379              	 .cfi_def_cfa_register 7
1660:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 7380              	 .loc 3 1660 0
 7381 0004 054A     	 ldr r2,.L495
 7382 0006 054B     	 ldr r3,.L495
 7383 0008 5B68     	 ldr r3,[r3,#4]
 7384 000a 43F48033 	 orr r3,r3,#65536
 7385 000e 43F00203 	 orr r3,r3,#2
 7386 0012 5360     	 str r3,[r2,#4]
1661:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7387              	 .loc 3 1661 0
 7388 0014 BD46     	 mov sp,r7
 7389              	.LCFI645:
 7390              	 .cfi_def_cfa_register 13
 7391              	 
 7392 0016 5DF8047B 	 ldr r7,[sp],#4
 7393              	.LCFI646:
 7394              	 .cfi_restore 7
 7395              	 .cfi_def_cfa_offset 0
 7396 001a 7047     	 bx lr
 7397              	.L496:
 7398              	 .align 2
 7399              	.L495:
 7400 001c 10470050 	 .word 1342195472
 7401              	 .cfi_endproc
 7402              	.LFE287:
 7404              	 .section .text.XMC_SCU_CLOCK_StartSystemPll,"ax",%progbits
 7405              	 .align 2
 7406              	 .global XMC_SCU_CLOCK_StartSystemPll
 7407              	 .thumb
 7408              	 .thumb_func
 7410              	XMC_SCU_CLOCK_StartSystemPll:
 7411              	.LFB288:
1662:../Libraries/XMCLib/src/xmc4_scu.c **** 
1663:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure main PLL */
1664:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartSystemPll(XMC_SCU_CLOCK_SYSPLLCLKSRC_t source,
1665:../Libraries/XMCLib/src/xmc4_scu.c ****                                   XMC_SCU_CLOCK_SYSPLL_MODE_t mode,
1666:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t pdiv,
1667:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t ndiv,
1668:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t kdiv)
1669:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7412              	 .loc 3 1669 0
 7413              	 .cfi_startproc
 7414              	 
 7415              	 
 7416 0000 80B5     	 push {r7,lr}
 7417              	.LCFI647:
 7418              	 .cfi_def_cfa_offset 8
 7419              	 .cfi_offset 7,-8
 7420              	 .cfi_offset 14,-4
 7421 0002 86B0     	 sub sp,sp,#24
 7422              	.LCFI648:
 7423              	 .cfi_def_cfa_offset 32
 7424 0004 00AF     	 add r7,sp,#0
 7425              	.LCFI649:
 7426              	 .cfi_def_cfa_register 7
 7427 0006 BA60     	 str r2,[r7,#8]
 7428 0008 7B60     	 str r3,[r7,#4]
 7429 000a 0346     	 mov r3,r0
 7430 000c FB81     	 strh r3,[r7,#14]
 7431 000e 0B46     	 mov r3,r1
 7432 0010 7B73     	 strb r3,[r7,#13]
1670:../Libraries/XMCLib/src/xmc4_scu.c **** 
1671:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t vco_frequency; /* Q10.22, max VCO frequency = 520MHz */
1672:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t kdiv_temp;
1673:../Libraries/XMCLib/src/xmc4_scu.c **** 
1674:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemPllClockSource(source);
 7433              	 .loc 3 1674 0
 7434 0012 FB89     	 ldrh r3,[r7,#14]
 7435 0014 1846     	 mov r0,r3
 7436 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemPllClockSource
1675:../Libraries/XMCLib/src/xmc4_scu.c **** 
1676:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)
 7437              	 .loc 3 1676 0
 7438 001a 7B7B     	 ldrb r3,[r7,#13]
 7439 001c 012B     	 cmp r3,#1
 7440 001e 40F08480 	 bne .L498
1677:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1678:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Calculate initial step to be close to fOFI */
1679:../Libraries/XMCLib/src/xmc4_scu.c ****     if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 7441              	 .loc 3 1679 0
 7442 0022 FB89     	 ldrh r3,[r7,#14]
 7443 0024 002B     	 cmp r3,#0
 7444 0026 09D1     	 bne .L499
1680:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1681:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OSCHP_GetFrequency() / 1000000U) << 22;
 7445              	 .loc 3 1681 0
 7446 0028 FFF7FEFF 	 bl OSCHP_GetFrequency
 7447 002c 0246     	 mov r2,r0
 7448 002e 4B4B     	 ldr r3,.L507
 7449 0030 A3FB0223 	 umull r2,r3,r3,r2
 7450 0034 9B0C     	 lsrs r3,r3,#18
 7451 0036 9B05     	 lsls r3,r3,#22
 7452 0038 7B61     	 str r3,[r7,#20]
 7453 003a 02E0     	 b .L500
 7454              	.L499:
1682:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1683:../Libraries/XMCLib/src/xmc4_scu.c ****     else
1684:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1685:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OFI_FREQUENCY / 1000000U) << 22;
 7455              	 .loc 3 1685 0
 7456 003c 4FF0C063 	 mov r3,#100663296
 7457 0040 7B61     	 str r3,[r7,#20]
 7458              	.L500:
1686:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1687:../Libraries/XMCLib/src/xmc4_scu.c ****     vco_frequency = ((vco_frequency * ndiv) / pdiv);
 7459              	 .loc 3 1687 0
 7460 0042 7B69     	 ldr r3,[r7,#20]
 7461 0044 7A68     	 ldr r2,[r7,#4]
 7462 0046 02FB03F2 	 mul r2,r2,r3
 7463 004a BB68     	 ldr r3,[r7,#8]
 7464 004c B2FBF3F3 	 udiv r3,r2,r3
 7465 0050 7B61     	 str r3,[r7,#20]
1688:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
 7466              	 .loc 3 1688 0
 7467 0052 7B69     	 ldr r3,[r7,#20]
 7468 0054 424A     	 ldr r2,.L507+4
 7469 0056 A2FB0323 	 umull r2,r3,r2,r3
 7470 005a 1B09     	 lsrs r3,r3,#4
 7471 005c 9B0D     	 lsrs r3,r3,#22
 7472 005e 3B61     	 str r3,[r7,#16]
1689:../Libraries/XMCLib/src/xmc4_scu.c **** 
1690:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1691:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 7473              	 .loc 3 1691 0
 7474 0060 404A     	 ldr r2,.L507+8
 7475 0062 404B     	 ldr r3,.L507+8
 7476 0064 5B68     	 ldr r3,[r3,#4]
 7477 0066 43F00103 	 orr r3,r3,#1
 7478 006a 5360     	 str r3,[r2,#4]
1692:../Libraries/XMCLib/src/xmc4_scu.c **** 
1693:../Libraries/XMCLib/src/xmc4_scu.c ****     /* disconnect Oscillator from PLL */
1694:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FINDIS_Msk;
 7479              	 .loc 3 1694 0
 7480 006c 3D4A     	 ldr r2,.L507+8
 7481 006e 3D4B     	 ldr r3,.L507+8
 7482 0070 5B68     	 ldr r3,[r3,#4]
 7483 0072 43F01003 	 orr r3,r3,#16
 7484 0076 5360     	 str r3,[r2,#4]
1695:../Libraries/XMCLib/src/xmc4_scu.c **** 
1696:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Setup divider settings for main PLL */
1697:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~(SCU_PLL_PLLCON1_NDIV_Msk | SCU_PLL_PLLCON1_
 7485              	 .loc 3 1697 0
 7486 0078 3A49     	 ldr r1,.L507+8
 7487 007a 3A4B     	 ldr r3,.L507+8
 7488 007c 9A68     	 ldr r2,[r3,#8]
 7489 007e 3A4B     	 ldr r3,.L507+12
 7490 0080 1340     	 ands r3,r3,r2
1698:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 7491              	 .loc 3 1698 0
 7492 0082 7A68     	 ldr r2,[r7,#4]
 7493 0084 013A     	 subs r2,r2,#1
 7494 0086 1202     	 lsls r2,r2,#8
 7495 0088 1A43     	 orrs r2,r2,r3
1699:../Libraries/XMCLib/src/xmc4_scu.c ****                                    ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
 7496              	 .loc 3 1699 0
 7497 008a 3B69     	 ldr r3,[r7,#16]
 7498 008c 013B     	 subs r3,r3,#1
 7499 008e 1B04     	 lsls r3,r3,#16
1698:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 7500              	 .loc 3 1698 0
 7501 0090 1A43     	 orrs r2,r2,r3
1700:../Libraries/XMCLib/src/xmc4_scu.c ****                                    ((pdiv - 1UL)<< SCU_PLL_PLLCON1_PDIV_Pos));
 7502              	 .loc 3 1700 0
 7503 0092 BB68     	 ldr r3,[r7,#8]
 7504 0094 013B     	 subs r3,r3,#1
 7505 0096 1B06     	 lsls r3,r3,#24
1697:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 7506              	 .loc 3 1697 0
 7507 0098 1343     	 orrs r3,r3,r2
 7508 009a 8B60     	 str r3,[r1,#8]
1701:../Libraries/XMCLib/src/xmc4_scu.c **** 
1702:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Set OSCDISCDIS, OSC clock remains connected to the VCO in case of loss of lock */
1703:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 7509              	 .loc 3 1703 0
 7510 009c 314A     	 ldr r2,.L507+8
 7511 009e 314B     	 ldr r3,.L507+8
 7512 00a0 5B68     	 ldr r3,[r3,#4]
 7513 00a2 43F04003 	 orr r3,r3,#64
 7514 00a6 5360     	 str r3,[r2,#4]
1704:../Libraries/XMCLib/src/xmc4_scu.c **** 
1705:../Libraries/XMCLib/src/xmc4_scu.c ****     /* connect Oscillator to PLL */
1706:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FINDIS_Msk;
 7515              	 .loc 3 1706 0
 7516 00a8 2E4A     	 ldr r2,.L507+8
 7517 00aa 2E4B     	 ldr r3,.L507+8
 7518 00ac 5B68     	 ldr r3,[r3,#4]
 7519 00ae 23F01003 	 bic r3,r3,#16
 7520 00b2 5360     	 str r3,[r2,#4]
1707:../Libraries/XMCLib/src/xmc4_scu.c **** 
1708:../Libraries/XMCLib/src/xmc4_scu.c ****     /* restart PLL Lock detection */
1709:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_RESLD_Msk;
 7521              	 .loc 3 1709 0
 7522 00b4 2B4A     	 ldr r2,.L507+8
 7523 00b6 2B4B     	 ldr r3,.L507+8
 7524 00b8 5B68     	 ldr r3,[r3,#4]
 7525 00ba 43F48023 	 orr r3,r3,#262144
 7526 00be 5360     	 str r3,[r2,#4]
1710:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 7527              	 .loc 3 1710 0
 7528 00c0 00BF     	 nop
 7529              	.L501:
 7530              	 .loc 3 1710 0 is_stmt 0 discriminator 1
 7531 00c2 284B     	 ldr r3,.L507+8
 7532 00c4 1B68     	 ldr r3,[r3]
 7533 00c6 03F00403 	 and r3,r3,#4
 7534 00ca 002B     	 cmp r3,#0
 7535 00cc F9D0     	 beq .L501
1711:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1712:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for PLL Lock */
1713:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1714:../Libraries/XMCLib/src/xmc4_scu.c **** 
1715:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to normal mode */
1716:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_VCOBYP_Msk;
 7536              	 .loc 3 1716 0 is_stmt 1
 7537 00ce 254A     	 ldr r2,.L507+8
 7538 00d0 244B     	 ldr r3,.L507+8
 7539 00d2 5B68     	 ldr r3,[r3,#4]
 7540 00d4 23F00103 	 bic r3,r3,#1
 7541 00d8 5360     	 str r3,[r2,#4]
1717:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 7542              	 .loc 3 1717 0
 7543 00da 00BF     	 nop
 7544              	.L502:
 7545              	 .loc 3 1717 0 is_stmt 0 discriminator 1
 7546 00dc 214B     	 ldr r3,.L507+8
 7547 00de 1B68     	 ldr r3,[r3]
 7548 00e0 03F00103 	 and r3,r3,#1
 7549 00e4 002B     	 cmp r3,#0
 7550 00e6 F9D1     	 bne .L502
1718:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1719:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for normal mode */
1720:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1721:../Libraries/XMCLib/src/xmc4_scu.c **** 
1722:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Ramp up PLL frequency in steps */
1723:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 60UL) >> 22;
 7551              	 .loc 3 1723 0 is_stmt 1
 7552 00e8 7B69     	 ldr r3,[r7,#20]
 7553 00ea 204A     	 ldr r2,.L507+16
 7554 00ec A2FB0323 	 umull r2,r3,r2,r3
 7555 00f0 5B09     	 lsrs r3,r3,#5
 7556 00f2 9B0D     	 lsrs r3,r3,#22
 7557 00f4 3B61     	 str r3,[r7,#16]
1724:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 7558              	 .loc 3 1724 0
 7559 00f6 3A6A     	 ldr r2,[r7,#32]
 7560 00f8 3B69     	 ldr r3,[r7,#16]
 7561 00fa 9A42     	 cmp r2,r3
 7562 00fc 02D2     	 bcs .L503
1725:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1726:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 7563              	 .loc 3 1726 0
 7564 00fe 3869     	 ldr r0,[r7,#16]
 7565 0100 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 7566              	.L503:
1727:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1728:../Libraries/XMCLib/src/xmc4_scu.c **** 
1729:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 90UL) >> 22;
 7567              	 .loc 3 1729 0
 7568 0104 7B69     	 ldr r3,[r7,#20]
 7569 0106 5B08     	 lsrs r3,r3,#1
 7570 0108 194A     	 ldr r2,.L507+20
 7571 010a A2FB0323 	 umull r2,r3,r2,r3
 7572 010e 5B09     	 lsrs r3,r3,#5
 7573 0110 9B0D     	 lsrs r3,r3,#22
 7574 0112 3B61     	 str r3,[r7,#16]
1730:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 7575              	 .loc 3 1730 0
 7576 0114 3A6A     	 ldr r2,[r7,#32]
 7577 0116 3B69     	 ldr r3,[r7,#16]
 7578 0118 9A42     	 cmp r2,r3
 7579 011a 02D2     	 bcs .L504
1731:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1732:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 7580              	 .loc 3 1732 0
 7581 011c 3869     	 ldr r0,[r7,#16]
 7582 011e FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 7583              	.L504:
1733:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1734:../Libraries/XMCLib/src/xmc4_scu.c **** 
1735:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv);
 7584              	 .loc 3 1735 0
 7585 0122 386A     	 ldr r0,[r7,#32]
 7586 0124 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 7587 0128 15E0     	 b .L497
 7588              	.L498:
1736:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1737:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1738:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1739:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K1DIV_Msk) |
 7589              	 .loc 3 1739 0
 7590 012a 0E49     	 ldr r1,.L507+8
 7591 012c 0D4B     	 ldr r3,.L507+8
 7592 012e 9B68     	 ldr r3,[r3,#8]
 7593 0130 23F07F02 	 bic r2,r3,#127
1740:../Libraries/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 7594              	 .loc 3 1740 0
 7595 0134 3B6A     	 ldr r3,[r7,#32]
 7596 0136 013B     	 subs r3,r3,#1
1739:../Libraries/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 7597              	 .loc 3 1739 0
 7598 0138 1343     	 orrs r3,r3,r2
 7599 013a 8B60     	 str r3,[r1,#8]
1741:../Libraries/XMCLib/src/xmc4_scu.c **** 
1742:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1743:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 7600              	 .loc 3 1743 0
 7601 013c 094A     	 ldr r2,.L507+8
 7602 013e 094B     	 ldr r3,.L507+8
 7603 0140 5B68     	 ldr r3,[r3,#4]
 7604 0142 43F00103 	 orr r3,r3,#1
 7605 0146 5360     	 str r3,[r2,#4]
1744:../Libraries/XMCLib/src/xmc4_scu.c **** 
1745:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 7606              	 .loc 3 1745 0
 7607 0148 00BF     	 nop
 7608              	.L506:
 7609              	 .loc 3 1745 0 is_stmt 0 discriminator 1
 7610 014a 064B     	 ldr r3,.L507+8
 7611 014c 1B68     	 ldr r3,[r3]
 7612 014e 03F00103 	 and r3,r3,#1
 7613 0152 002B     	 cmp r3,#0
 7614 0154 F9D0     	 beq .L506
 7615              	.L497:
1746:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1747:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1748:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1749:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1750:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7616              	 .loc 3 1750 0 is_stmt 1
 7617 0156 1837     	 adds r7,r7,#24
 7618              	.LCFI650:
 7619              	 .cfi_def_cfa_offset 8
 7620 0158 BD46     	 mov sp,r7
 7621              	.LCFI651:
 7622              	 .cfi_def_cfa_register 13
 7623              	 
 7624 015a 80BD     	 pop {r7,pc}
 7625              	.L508:
 7626              	 .align 2
 7627              	.L507:
 7628 015c 83DE1B43 	 .word 1125899907
 7629 0160 ABAAAAAA 	 .word -1431655765
 7630 0164 10470050 	 .word 1342195472
 7631 0168 FF8080F0 	 .word -260013825
 7632 016c 89888888 	 .word -2004318071
 7633 0170 B7600BB6 	 .word -1240768329
 7634              	 .cfi_endproc
 7635              	.LFE288:
 7637              	 .section .text.XMC_SCU_CLOCK_StopSystemPll,"ax",%progbits
 7638              	 .align 2
 7639              	 .global XMC_SCU_CLOCK_StopSystemPll
 7640              	 .thumb
 7641              	 .thumb_func
 7643              	XMC_SCU_CLOCK_StopSystemPll:
 7644              	.LFB289:
1751:../Libraries/XMCLib/src/xmc4_scu.c **** 
1752:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to stop main PLL operation */
1753:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopSystemPll(void)
1754:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7645              	 .loc 3 1754 0
 7646              	 .cfi_startproc
 7647              	 
 7648              	 
 7649              	 
 7650 0000 80B4     	 push {r7}
 7651              	.LCFI652:
 7652              	 .cfi_def_cfa_offset 4
 7653              	 .cfi_offset 7,-4
 7654 0002 00AF     	 add r7,sp,#0
 7655              	.LCFI653:
 7656              	 .cfi_def_cfa_register 7
1755:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_PLLPWD_Msk;
 7657              	 .loc 3 1755 0
 7658 0004 044A     	 ldr r2,.L510
 7659 0006 044B     	 ldr r3,.L510
 7660 0008 5B68     	 ldr r3,[r3,#4]
 7661 000a 43F48033 	 orr r3,r3,#65536
 7662 000e 5360     	 str r3,[r2,#4]
1756:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7663              	 .loc 3 1756 0
 7664 0010 BD46     	 mov sp,r7
 7665              	.LCFI654:
 7666              	 .cfi_def_cfa_register 13
 7667              	 
 7668 0012 5DF8047B 	 ldr r7,[sp],#4
 7669              	.LCFI655:
 7670              	 .cfi_restore 7
 7671              	 .cfi_def_cfa_offset 0
 7672 0016 7047     	 bx lr
 7673              	.L511:
 7674              	 .align 2
 7675              	.L510:
 7676 0018 10470050 	 .word 1342195472
 7677              	 .cfi_endproc
 7678              	.LFE289:
 7680              	 .section .text.XMC_SCU_CLOCK_StepSystemPllFrequency,"ax",%progbits
 7681              	 .align 2
 7682              	 .global XMC_SCU_CLOCK_StepSystemPllFrequency
 7683              	 .thumb
 7684              	 .thumb_func
 7686              	XMC_SCU_CLOCK_StepSystemPllFrequency:
 7687              	.LFB290:
1757:../Libraries/XMCLib/src/xmc4_scu.c **** 
1758:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to step up/down the main PLL frequency */
1759:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StepSystemPllFrequency(uint32_t kdiv)
1760:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7688              	 .loc 3 1760 0
 7689              	 .cfi_startproc
 7690              	 
 7691              	 
 7692 0000 80B5     	 push {r7,lr}
 7693              	.LCFI656:
 7694              	 .cfi_def_cfa_offset 8
 7695              	 .cfi_offset 7,-8
 7696              	 .cfi_offset 14,-4
 7697 0002 82B0     	 sub sp,sp,#8
 7698              	.LCFI657:
 7699              	 .cfi_def_cfa_offset 16
 7700 0004 00AF     	 add r7,sp,#0
 7701              	.LCFI658:
 7702              	 .cfi_def_cfa_register 7
 7703 0006 7860     	 str r0,[r7,#4]
1761:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7704              	 .loc 3 1761 0
 7705 0008 0749     	 ldr r1,.L513
 7706 000a 074B     	 ldr r3,.L513
 7707 000c 9B68     	 ldr r3,[r3,#8]
 7708 000e 23F4FE02 	 bic r2,r3,#8323072
1762:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((kdiv - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos));
 7709              	 .loc 3 1762 0
 7710 0012 7B68     	 ldr r3,[r7,#4]
 7711 0014 013B     	 subs r3,r3,#1
 7712 0016 1B04     	 lsls r3,r3,#16
1761:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7713              	 .loc 3 1761 0
 7714 0018 1343     	 orrs r3,r3,r2
 7715 001a 8B60     	 str r3,[r1,#8]
1763:../Libraries/XMCLib/src/xmc4_scu.c **** 
1764:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(50U);
 7716              	 .loc 3 1764 0
 7717 001c 3220     	 movs r0,#50
 7718 001e FFF7FEFF 	 bl XMC_SCU_lDelay
1765:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7719              	 .loc 3 1765 0
 7720 0022 0837     	 adds r7,r7,#8
 7721              	.LCFI659:
 7722              	 .cfi_def_cfa_offset 8
 7723 0024 BD46     	 mov sp,r7
 7724              	.LCFI660:
 7725              	 .cfi_def_cfa_register 13
 7726              	 
 7727 0026 80BD     	 pop {r7,pc}
 7728              	.L514:
 7729              	 .align 2
 7730              	.L513:
 7731 0028 10470050 	 .word 1342195472
 7732              	 .cfi_endproc
 7733              	.LFE290:
 7735              	 .section .text.XMC_SCU_CLOCK_IsSystemPllLocked,"ax",%progbits
 7736              	 .align 2
 7737              	 .global XMC_SCU_CLOCK_IsSystemPllLocked
 7738              	 .thumb
 7739              	 .thumb_func
 7741              	XMC_SCU_CLOCK_IsSystemPllLocked:
 7742              	.LFB291:
1766:../Libraries/XMCLib/src/xmc4_scu.c **** 
1767:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check main PLL is locked or not */
1768:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsSystemPllLocked(void)
1769:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7743              	 .loc 3 1769 0
 7744              	 .cfi_startproc
 7745              	 
 7746              	 
 7747              	 
 7748 0000 80B4     	 push {r7}
 7749              	.LCFI661:
 7750              	 .cfi_def_cfa_offset 4
 7751              	 .cfi_offset 7,-4
 7752 0002 00AF     	 add r7,sp,#0
 7753              	.LCFI662:
 7754              	 .cfi_def_cfa_register 7
1770:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) != 0UL);
 7755              	 .loc 3 1770 0
 7756 0004 064B     	 ldr r3,.L517
 7757 0006 1B68     	 ldr r3,[r3]
 7758 0008 03F00403 	 and r3,r3,#4
 7759 000c 002B     	 cmp r3,#0
 7760 000e 14BF     	 ite ne
 7761 0010 0123     	 movne r3,#1
 7762 0012 0023     	 moveq r3,#0
 7763 0014 DBB2     	 uxtb r3,r3
1771:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7764              	 .loc 3 1771 0
 7765 0016 1846     	 mov r0,r3
 7766 0018 BD46     	 mov sp,r7
 7767              	.LCFI663:
 7768              	 .cfi_def_cfa_register 13
 7769              	 
 7770 001a 5DF8047B 	 ldr r7,[sp],#4
 7771              	.LCFI664:
 7772              	 .cfi_restore 7
 7773              	 .cfi_def_cfa_offset 0
 7774 001e 7047     	 bx lr
 7775              	.L518:
 7776              	 .align 2
 7777              	.L517:
 7778 0020 10470050 	 .word 1342195472
 7779              	 .cfi_endproc
 7780              	.LFE291:
 7782              	 .section .text.XMC_SCU_INTERRUPT_SetEventHandler,"ax",%progbits
 7783              	 .align 2
 7784              	 .global XMC_SCU_INTERRUPT_SetEventHandler
 7785              	 .thumb
 7786              	 .thumb_func
 7788              	XMC_SCU_INTERRUPT_SetEventHandler:
 7789              	.LFB292:
1772:../Libraries/XMCLib/src/xmc4_scu.c **** 
1773:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1774:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to assign the event handler function to be executed on occurrence of the selected event.
1775:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1776:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler(const XMC_SCU_INTERRUPT_EVENT_t event,
1777:../Libraries/XMCLib/src/xmc4_scu.c ****                                                    const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)
1778:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7790              	 .loc 3 1778 0
 7791              	 .cfi_startproc
 7792              	 
 7793              	 
 7794              	 
 7795 0000 80B4     	 push {r7}
 7796              	.LCFI665:
 7797              	 .cfi_def_cfa_offset 4
 7798              	 .cfi_offset 7,-4
 7799 0002 85B0     	 sub sp,sp,#20
 7800              	.LCFI666:
 7801              	 .cfi_def_cfa_offset 24
 7802 0004 00AF     	 add r7,sp,#0
 7803              	.LCFI667:
 7804              	 .cfi_def_cfa_register 7
 7805 0006 7860     	 str r0,[r7,#4]
 7806 0008 3960     	 str r1,[r7]
1779:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1780:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status;
1781:../Libraries/XMCLib/src/xmc4_scu.c ****   
1782:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7807              	 .loc 3 1782 0
 7808 000a 0023     	 movs r3,#0
 7809 000c FB60     	 str r3,[r7,#12]
1783:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7810              	 .loc 3 1783 0
 7811 000e 02E0     	 b .L520
 7812              	.L522:
1784:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1785:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;
 7813              	 .loc 3 1785 0
 7814 0010 FB68     	 ldr r3,[r7,#12]
 7815 0012 0133     	 adds r3,r3,#1
 7816 0014 FB60     	 str r3,[r7,#12]
 7817              	.L520:
1783:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7818              	 .loc 3 1783 0
 7819 0016 FB68     	 ldr r3,[r7,#12]
 7820 0018 7A68     	 ldr r2,[r7,#4]
 7821 001a 22FA03F3 	 lsr r3,r2,r3
 7822 001e 03F00103 	 and r3,r3,#1
 7823 0022 002B     	 cmp r3,#0
 7824 0024 02D1     	 bne .L521
1783:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7825              	 .loc 3 1783 0 is_stmt 0 discriminator 1
 7826 0026 FB68     	 ldr r3,[r7,#12]
 7827 0028 1F2B     	 cmp r3,#31
 7828 002a F1D9     	 bls .L522
 7829              	.L521:
1786:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1787:../Libraries/XMCLib/src/xmc4_scu.c ****   
1788:../Libraries/XMCLib/src/xmc4_scu.c ****   if (index == XMC_SCU_INTERRUPT_EVENT_MAX)
 7830              	 .loc 3 1788 0 is_stmt 1
 7831 002c FB68     	 ldr r3,[r7,#12]
 7832 002e 202B     	 cmp r3,#32
 7833 0030 02D1     	 bne .L523
1789:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1790:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 7834              	 .loc 3 1790 0
 7835 0032 0123     	 movs r3,#1
 7836 0034 FB72     	 strb r3,[r7,#11]
 7837 0036 06E0     	 b .L524
 7838              	.L523:
1791:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1792:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1793:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1794:../Libraries/XMCLib/src/xmc4_scu.c ****     event_handler_list[index] = handler;
 7839              	 .loc 3 1794 0
 7840 0038 0649     	 ldr r1,.L526
 7841 003a FB68     	 ldr r3,[r7,#12]
 7842 003c 3A68     	 ldr r2,[r7]
 7843 003e 41F82320 	 str r2,[r1,r3,lsl#2]
1795:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_OK;      
 7844              	 .loc 3 1795 0
 7845 0042 0023     	 movs r3,#0
 7846 0044 FB72     	 strb r3,[r7,#11]
 7847              	.L524:
1796:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1797:../Libraries/XMCLib/src/xmc4_scu.c ****   
1798:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 7848              	 .loc 3 1798 0
 7849 0046 FB7A     	 ldrb r3,[r7,#11]
1799:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7850              	 .loc 3 1799 0
 7851 0048 1846     	 mov r0,r3
 7852 004a 1437     	 adds r7,r7,#20
 7853              	.LCFI668:
 7854              	 .cfi_def_cfa_offset 4
 7855 004c BD46     	 mov sp,r7
 7856              	.LCFI669:
 7857              	 .cfi_def_cfa_register 13
 7858              	 
 7859 004e 5DF8047B 	 ldr r7,[sp],#4
 7860              	.LCFI670:
 7861              	 .cfi_restore 7
 7862              	 .cfi_def_cfa_offset 0
 7863 0052 7047     	 bx lr
 7864              	.L527:
 7865              	 .align 2
 7866              	.L526:
 7867 0054 00000000 	 .word event_handler_list
 7868              	 .cfi_endproc
 7869              	.LFE292:
 7871              	 .section .text.XMC_SCU_IRQHandler,"ax",%progbits
 7872              	 .align 2
 7873              	 .global XMC_SCU_IRQHandler
 7874              	 .thumb
 7875              	 .thumb_func
 7877              	XMC_SCU_IRQHandler:
 7878              	.LFB293:
1800:../Libraries/XMCLib/src/xmc4_scu.c **** 
1801:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1802:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to execute callback functions for multiple events.
1803:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1804:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_IRQHandler(uint32_t sr_num)
1805:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7879              	 .loc 3 1805 0
 7880              	 .cfi_startproc
 7881              	 
 7882              	 
 7883 0000 80B5     	 push {r7,lr}
 7884              	.LCFI671:
 7885              	 .cfi_def_cfa_offset 8
 7886              	 .cfi_offset 7,-8
 7887              	 .cfi_offset 14,-4
 7888 0002 86B0     	 sub sp,sp,#24
 7889              	.LCFI672:
 7890              	 .cfi_def_cfa_offset 32
 7891 0004 00AF     	 add r7,sp,#0
 7892              	.LCFI673:
 7893              	 .cfi_def_cfa_register 7
 7894 0006 7860     	 str r0,[r7,#4]
1806:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1807:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_t event;
1808:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler;
1809:../Libraries/XMCLib/src/xmc4_scu.c ****   
1810:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_UNUSED_ARG(sr_num);
1811:../Libraries/XMCLib/src/xmc4_scu.c ****   
1812:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7895              	 .loc 3 1812 0
 7896 0008 0023     	 movs r3,#0
 7897 000a 7B61     	 str r3,[r7,#20]
1813:../Libraries/XMCLib/src/xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
 7898              	 .loc 3 1813 0
 7899 000c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 7900 0010 3861     	 str r0,[r7,#16]
1814:../Libraries/XMCLib/src/xmc4_scu.c ****   while (index < XMC_SCU_INTERRUPT_EVENT_MAX)
 7901              	 .loc 3 1814 0
 7902 0012 1CE0     	 b .L529
 7903              	.L533:
1815:../Libraries/XMCLib/src/xmc4_scu.c ****   {    
1816:../Libraries/XMCLib/src/xmc4_scu.c ****     if ((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) != 0U)
 7904              	 .loc 3 1816 0
 7905 0014 7B69     	 ldr r3,[r7,#20]
 7906 0016 3A69     	 ldr r2,[r7,#16]
 7907 0018 22FA03F3 	 lsr r3,r2,r3
 7908 001c 03F00103 	 and r3,r3,#1
 7909 0020 002B     	 cmp r3,#0
 7910 0022 11D0     	 beq .L530
1817:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1818:../Libraries/XMCLib/src/xmc4_scu.c ****       event_handler = event_handler_list[index];
 7911              	 .loc 3 1818 0
 7912 0024 0D4A     	 ldr r2,.L534
 7913 0026 7B69     	 ldr r3,[r7,#20]
 7914 0028 52F82330 	 ldr r3,[r2,r3,lsl#2]
 7915 002c FB60     	 str r3,[r7,#12]
1819:../Libraries/XMCLib/src/xmc4_scu.c ****       if (event_handler != NULL)
 7916              	 .loc 3 1819 0
 7917 002e FB68     	 ldr r3,[r7,#12]
 7918 0030 002B     	 cmp r3,#0
 7919 0032 01D0     	 beq .L531
1820:../Libraries/XMCLib/src/xmc4_scu.c ****       {
1821:../Libraries/XMCLib/src/xmc4_scu.c ****           (event_handler)();
 7920              	 .loc 3 1821 0
 7921 0034 FB68     	 ldr r3,[r7,#12]
 7922 0036 9847     	 blx r3
 7923              	.L531:
1822:../Libraries/XMCLib/src/xmc4_scu.c ****       }
1823:../Libraries/XMCLib/src/xmc4_scu.c ****       
1824:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_INTERRUPT_ClearEventStatus((uint32_t)(1UL << index));
 7924              	 .loc 3 1824 0
 7925 0038 7B69     	 ldr r3,[r7,#20]
 7926 003a 0122     	 movs r2,#1
 7927 003c 02FA03F3 	 lsl r3,r2,r3
 7928 0040 1846     	 mov r0,r3
 7929 0042 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1825:../Libraries/XMCLib/src/xmc4_scu.c ****       
1826:../Libraries/XMCLib/src/xmc4_scu.c ****       break;
 7930              	 .loc 3 1826 0
 7931 0046 05E0     	 b .L528
 7932              	.L530:
1827:../Libraries/XMCLib/src/xmc4_scu.c ****     }   
1828:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;    
 7933              	 .loc 3 1828 0
 7934 0048 7B69     	 ldr r3,[r7,#20]
 7935 004a 0133     	 adds r3,r3,#1
 7936 004c 7B61     	 str r3,[r7,#20]
 7937              	.L529:
1814:../Libraries/XMCLib/src/xmc4_scu.c ****   {    
 7938              	 .loc 3 1814 0
 7939 004e 7B69     	 ldr r3,[r7,#20]
 7940 0050 1F2B     	 cmp r3,#31
 7941 0052 DFD9     	 bls .L533
 7942              	.L528:
1829:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1830:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7943              	 .loc 3 1830 0
 7944 0054 1837     	 adds r7,r7,#24
 7945              	.LCFI674:
 7946              	 .cfi_def_cfa_offset 8
 7947 0056 BD46     	 mov sp,r7
 7948              	.LCFI675:
 7949              	 .cfi_def_cfa_register 13
 7950              	 
 7951 0058 80BD     	 pop {r7,pc}
 7952              	.L535:
 7953 005a 00BF     	 .align 2
 7954              	.L534:
 7955 005c 00000000 	 .word event_handler_list
 7956              	 .cfi_endproc
 7957              	.LFE293:
 7959              	 .text
 7960              	.Letext0:
 7961              	 .file 4 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 7962              	 .file 5 "c:\\users\\pescatore\\switchdrive\\private\\konzept\\mcu for gate driver\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 7963              	 .file 6 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/XMC4400.h"
 7964              	 .file 7 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Include/core_cm4.h"
 7965              	 .file 8 "F:/GitHub Projects/FH Luzern/BAT/BAT/Libraries/CMSIS/Infineon/XMC4400_series/Include/system_XMC4400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_scu.c
    {standard input}:20     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 $t
    {standard input}:24     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 XMC_SCU_CLOCK_GetUsbClockSource
    {standard input}:57     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000018 $d
    {standard input}:62     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 $t
    {standard input}:66     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 XMC_SCU_CLOCK_GetWdtClockSource
    {standard input}:98     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000018 $d
    {standard input}:103    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 $t
    {standard input}:107    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_GetExternalOutputClockSource
    {standard input}:141    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:0000001c $d
    {standard input}:146    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:150    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:185    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:191    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 $t
    {standard input}:195    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 XMC_SCU_CLOCK_GetCpuClockFrequency
    {standard input}:227    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000014 $d
    {standard input}:232    .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:236    .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:267    .text.XMC_SCU_GetMirrorStatus:00000014 $d
                            *COM*:00000080 event_handler_list
    {standard input}:273    .text.XMC_SCU_lDelay:00000000 $t
    {standard input}:277    .text.XMC_SCU_lDelay:00000000 XMC_SCU_lDelay
    {standard input}:339    .text.XMC_SCU_lDelay:0000003c $d
    {standard input}:345    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 $t
    {standard input}:350    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 XMC_SCU_INTERRUPT_EnableEvent
    {standard input}:391    .text.XMC_SCU_INTERRUPT_EnableEvent:00000020 $d
    {standard input}:396    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 $t
    {standard input}:401    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 XMC_SCU_INTERRUPT_DisableEvent
    {standard input}:443    .text.XMC_SCU_INTERRUPT_DisableEvent:00000020 $d
    {standard input}:448    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 $t
    {standard input}:453    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 XMC_SCU_INTERRUPT_TriggerEvent
    {standard input}:494    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000020 $d
    {standard input}:499    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 $t
    {standard input}:504    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 XMC_SCU_INTERUPT_GetEventStatus
    {standard input}:535    .text.XMC_SCU_INTERUPT_GetEventStatus:00000014 $d
    {standard input}:540    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 $t
    {standard input}:545    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 XMC_SCU_INTERRUPT_ClearEventStatus
    {standard input}:583    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000018 $d
    {standard input}:588    .text.XMC_SCU_GetBootMode:00000000 $t
    {standard input}:593    .text.XMC_SCU_GetBootMode:00000000 XMC_SCU_GetBootMode
    {standard input}:625    .text.XMC_SCU_GetBootMode:00000018 $d
    {standard input}:630    .text.XMC_SCU_SetBootMode:00000000 $t
    {standard input}:635    .text.XMC_SCU_SetBootMode:00000000 XMC_SCU_SetBootMode
    {standard input}:674    .text.XMC_SCU_SetBootMode:0000001c $d
    {standard input}:679    .text.XMC_SCU_ReadGPR:00000000 $t
    {standard input}:684    .text.XMC_SCU_ReadGPR:00000000 XMC_SCU_ReadGPR
    {standard input}:726    .text.XMC_SCU_ReadGPR:00000020 $d
    {standard input}:731    .text.XMC_SCU_WriteGPR:00000000 $t
    {standard input}:736    .text.XMC_SCU_WriteGPR:00000000 XMC_SCU_WriteGPR
    {standard input}:779    .text.XMC_SCU_WriteGPR:00000024 $d
    {standard input}:784    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 $t
    {standard input}:789    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 XMC_SCU_EnableOutOfRangeComparator
    {standard input}:837    .text.XMC_SCU_EnableOutOfRangeComparator:00000034 $d
    {standard input}:842    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 $t
    {standard input}:847    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 XMC_SCU_DisableOutOfRangeComparator
    {standard input}:896    .text.XMC_SCU_DisableOutOfRangeComparator:00000034 $d
    {standard input}:901    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 $t
    {standard input}:906    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 XMC_SCU_CalibrateTemperatureSensor
    {standard input}:954    .text.XMC_SCU_CalibrateTemperatureSensor:00000028 $d
    {standard input}:959    .text.XMC_SCU_EnableTemperatureSensor:00000000 $t
    {standard input}:964    .text.XMC_SCU_EnableTemperatureSensor:00000000 XMC_SCU_EnableTemperatureSensor
    {standard input}:997    .text.XMC_SCU_EnableTemperatureSensor:0000001c $d
    {standard input}:1002   .text.XMC_SCU_DisableTemperatureSensor:00000000 $t
    {standard input}:1007   .text.XMC_SCU_DisableTemperatureSensor:00000000 XMC_SCU_DisableTemperatureSensor
    {standard input}:1040   .text.XMC_SCU_DisableTemperatureSensor:0000001c $d
    {standard input}:1045   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 $t
    {standard input}:1050   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 XMC_SCU_IsTemperatureSensorEnabled
    {standard input}:1087   .text.XMC_SCU_IsTemperatureSensorEnabled:00000024 $d
    {standard input}:1092   .text.XMC_SCU_IsTemperatureSensorReady:00000000 $t
    {standard input}:1097   .text.XMC_SCU_IsTemperatureSensorReady:00000000 XMC_SCU_IsTemperatureSensorReady
    {standard input}:1134   .text.XMC_SCU_IsTemperatureSensorReady:00000024 $d
    {standard input}:1139   .text.XMC_SCU_StartTemperatureMeasurement:00000000 $t
    {standard input}:1144   .text.XMC_SCU_StartTemperatureMeasurement:00000000 XMC_SCU_StartTemperatureMeasurement
    {standard input}:1275   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 XMC_SCU_IsTemperatureSensorBusy
    {standard input}:1205   .text.XMC_SCU_StartTemperatureMeasurement:00000048 $d
    {standard input}:1210   .text.XMC_SCU_GetTemperatureMeasurement:00000000 $t
    {standard input}:1215   .text.XMC_SCU_GetTemperatureMeasurement:00000000 XMC_SCU_GetTemperatureMeasurement
    {standard input}:1265   .text.XMC_SCU_GetTemperatureMeasurement:00000034 $d
    {standard input}:1270   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 $t
    {standard input}:1312   .text.XMC_SCU_IsTemperatureSensorBusy:00000024 $d
    {standard input}:1317   .text.XMC_SCU_HighTemperature:00000000 $t
    {standard input}:1322   .text.XMC_SCU_HighTemperature:00000000 XMC_SCU_HighTemperature
    {standard input}:1399   .text.XMC_SCU_HighTemperature:00000054 $d
    {standard input}:1404   .text.XMC_SCU_SetRawTempLimits:00000000 $t
    {standard input}:1409   .text.XMC_SCU_SetRawTempLimits:00000000 XMC_SCU_SetRawTempLimits
    {standard input}:1468   .text.XMC_SCU_SetRawTempLimits:00000050 $d
    {standard input}:1473   .text.XMC_SCU_LowTemperature:00000000 $t
    {standard input}:1478   .text.XMC_SCU_LowTemperature:00000000 XMC_SCU_LowTemperature
    {standard input}:1555   .text.XMC_SCU_LowTemperature:00000054 $d
    {standard input}:1560   .text.XMC_SCU_WriteToRetentionMemory:00000000 $t
    {standard input}:1565   .text.XMC_SCU_WriteToRetentionMemory:00000000 XMC_SCU_WriteToRetentionMemory
    {standard input}:1626   .text.XMC_SCU_WriteToRetentionMemory:00000048 $d
    {standard input}:1631   .text.XMC_SCU_ReadFromRetentionMemory:00000000 $t
    {standard input}:1636   .text.XMC_SCU_ReadFromRetentionMemory:00000000 XMC_SCU_ReadFromRetentionMemory
    {standard input}:1696   .text.XMC_SCU_ReadFromRetentionMemory:00000044 $d
    {standard input}:1701   .text.XMC_SCU_CLOCK_Init:00000000 $t
    {standard input}:1706   .text.XMC_SCU_CLOCK_Init:00000000 XMC_SCU_CLOCK_Init
    {standard input}:3278   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 XMC_SCU_CLOCK_SetSystemClockSource
    {standard input}:4944   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 XMC_SCU_HIB_EnableHibernateDomain
    {standard input}:6759   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillator
    {standard input}:6723   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 XMC_SCU_CLOCK_IsLowPowerOscillatorStable
    {standard input}:3620   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 XMC_SCU_HIB_SetStandbyClockSource
    {standard input}:4745   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 XMC_SCU_CLOCK_SetBackupClockCalibrationMode
    {standard input}:3685   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 XMC_SCU_CLOCK_SetSystemClockDivider
    {standard input}:3795   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 XMC_SCU_CLOCK_SetCpuClockDivider
    {standard input}:3740   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 XMC_SCU_CLOCK_SetCcuClockDivider
    {standard input}:3850   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 XMC_SCU_CLOCK_SetPeripheralClockDivider
    {standard input}:7042   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillator
    {standard input}:7104   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
    {standard input}:7366   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 XMC_SCU_CLOCK_DisableSystemPll
    {standard input}:7322   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 XMC_SCU_CLOCK_EnableSystemPll
    {standard input}:7410   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 XMC_SCU_CLOCK_StartSystemPll
    {standard input}:1866   .text.XMC_SCU_TRAP_Enable:00000000 $t
    {standard input}:1871   .text.XMC_SCU_TRAP_Enable:00000000 XMC_SCU_TRAP_Enable
    {standard input}:1913   .text.XMC_SCU_TRAP_Enable:00000020 $d
    {standard input}:1918   .text.XMC_SCU_TRAP_Disable:00000000 $t
    {standard input}:1923   .text.XMC_SCU_TRAP_Disable:00000000 XMC_SCU_TRAP_Disable
    {standard input}:1964   .text.XMC_SCU_TRAP_Disable:00000020 $d
    {standard input}:1969   .text.XMC_SCU_TRAP_GetStatus:00000000 $t
    {standard input}:1974   .text.XMC_SCU_TRAP_GetStatus:00000000 XMC_SCU_TRAP_GetStatus
    {standard input}:2005   .text.XMC_SCU_TRAP_GetStatus:00000014 $d
    {standard input}:2010   .text.XMC_SCU_TRAP_Trigger:00000000 $t
    {standard input}:2015   .text.XMC_SCU_TRAP_Trigger:00000000 XMC_SCU_TRAP_Trigger
    {standard input}:2053   .text.XMC_SCU_TRAP_Trigger:00000018 $d
    {standard input}:2058   .text.XMC_SCU_TRAP_ClearStatus:00000000 $t
    {standard input}:2063   .text.XMC_SCU_TRAP_ClearStatus:00000000 XMC_SCU_TRAP_ClearStatus
    {standard input}:2101   .text.XMC_SCU_TRAP_ClearStatus:00000018 $d
    {standard input}:2106   .text.XMC_SCU_PARITY_ClearStatus:00000000 $t
    {standard input}:2111   .text.XMC_SCU_PARITY_ClearStatus:00000000 XMC_SCU_PARITY_ClearStatus
    {standard input}:2152   .text.XMC_SCU_PARITY_ClearStatus:00000020 $d
    {standard input}:2157   .text.XMC_SCU_PARITY_GetStatus:00000000 $t
    {standard input}:2162   .text.XMC_SCU_PARITY_GetStatus:00000000 XMC_SCU_PARITY_GetStatus
    {standard input}:2193   .text.XMC_SCU_PARITY_GetStatus:00000014 $d
    {standard input}:2198   .text.XMC_SCU_PARITY_Enable:00000000 $t
    {standard input}:2203   .text.XMC_SCU_PARITY_Enable:00000000 XMC_SCU_PARITY_Enable
    {standard input}:2244   .text.XMC_SCU_PARITY_Enable:00000020 $d
    {standard input}:2249   .text.XMC_SCU_PARITY_Disable:00000000 $t
    {standard input}:2254   .text.XMC_SCU_PARITY_Disable:00000000 XMC_SCU_PARITY_Disable
    {standard input}:2296   .text.XMC_SCU_PARITY_Disable:00000020 $d
    {standard input}:2301   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 $t
    {standard input}:2306   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 XMC_SCU_PARITY_EnableTrapGeneration
    {standard input}:2347   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000020 $d
    {standard input}:2352   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 $t
    {standard input}:2357   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 XMC_SCU_PARITY_DisableTrapGeneration
    {standard input}:2399   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000020 $d
    {standard input}:2404   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 $t
    {standard input}:2409   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 XMC_SCU_INTERRUPT_EnableNmiRequest
    {standard input}:2450   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000020 $d
    {standard input}:2455   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 $t
    {standard input}:2460   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 XMC_SCU_INTERRUPT_DisableNmiRequest
    {standard input}:2502   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000020 $d
    {standard input}:2507   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 $t
    {standard input}:2512   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 XMC_SCU_RESET_AssertPeripheralReset
    {standard input}:2565   .text.XMC_SCU_RESET_AssertPeripheralReset:00000034 $d
    {standard input}:2570   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 $t
    {standard input}:2575   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 XMC_SCU_RESET_DeassertPeripheralReset
    {standard input}:2628   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000034 $d
    {standard input}:2633   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 $t
    {standard input}:2638   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 XMC_SCU_RESET_IsPeripheralResetAsserted
    {standard input}:2698   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000044 $d
    {standard input}:2703   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 $t
    {standard input}:2708   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockFrequency
    {standard input}:2801   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
    {standard input}:2791   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000078 $d
    {standard input}:2796   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 $t
    {standard input}:2848   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000028 $d
    {standard input}:2854   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 $t
    {standard input}:2859   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbPllClockFrequency
    {standard input}:2923   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000050 $d
    {standard input}:2928   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 $t
    {standard input}:2933   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 XMC_SCU_CLOCK_GetCcuClockFrequency
    {standard input}:2975   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000028 $d
    {standard input}:2980   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 $t
    {standard input}:2985   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbClockFrequency
    {standard input}:3047   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000044 $d
    {standard input}:3052   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 $t
    {standard input}:3057   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 XMC_SCU_CLOCK_GetWdtClockFrequency
    {standard input}:3128   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000050 $d
    {standard input}:3134   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 $t
    {standard input}:3139   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 XMC_SCU_CLOCK_GetExternalOutputClockFrequency
    {standard input}:3228   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:0000006c $d
    {standard input}:3234   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 $t
    {standard input}:3239   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 XMC_SCU_CLOCK_GetPeripheralClockFrequency
    {standard input}:3268   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:0000001c $d
    {standard input}:3273   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 $t
    {standard input}:3320   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000024 $d
    {standard input}:3325   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 $t
    {standard input}:3330   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 XMC_SCU_CLOCK_SetUsbClockSource
    {standard input}:3372   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000024 $d
    {standard input}:3377   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 $t
    {standard input}:3382   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 XMC_SCU_CLOCK_SetWdtClockSource
    {standard input}:3424   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000024 $d
    {standard input}:3429   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 $t
    {standard input}:3434   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_SetExternalOutputClockSource
    {standard input}:3479   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000024 $d
    {standard input}:3484   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 $t
    {standard input}:3489   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 XMC_SCU_CLOCK_SetSystemPllClockSource
    {standard input}:3545   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:0000003c $d
    {standard input}:3550   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 $t
    {standard input}:3555   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 XMC_SCU_HIB_SetRtcClockSource
    {standard input}:3609   .text.XMC_SCU_HIB_SetRtcClockSource:00000034 $d
    {standard input}:3615   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 $t
    {standard input}:3674   .text.XMC_SCU_HIB_SetStandbyClockSource:00000034 $d
    {standard input}:3680   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 $t
    {standard input}:3730   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000024 $d
    {standard input}:3735   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 $t
    {standard input}:3785   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000024 $d
    {standard input}:3790   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 $t
    {standard input}:3840   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000024 $d
    {standard input}:3845   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 $t
    {standard input}:3895   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000024 $d
    {standard input}:3900   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 $t
    {standard input}:3905   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 XMC_SCU_CLOCK_SetUsbClockDivider
    {standard input}:3950   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000024 $d
    {standard input}:3955   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 $t
    {standard input}:3960   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 XMC_SCU_CLOCK_SetWdtClockDivider
    {standard input}:4005   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000024 $d
    {standard input}:4010   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 $t
    {standard input}:4015   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 XMC_SCU_CLOCK_SetExternalOutputClockDivider
    {standard input}:4062   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:0000002c $d
    {standard input}:4067   .text.XMC_SCU_CLOCK_EnableClock:00000000 $t
    {standard input}:4072   .text.XMC_SCU_CLOCK_EnableClock:00000000 XMC_SCU_CLOCK_EnableClock
    {standard input}:4111   .text.XMC_SCU_CLOCK_EnableClock:0000001c $d
    {standard input}:4116   .text.XMC_SCU_CLOCK_DisableClock:00000000 $t
    {standard input}:4121   .text.XMC_SCU_CLOCK_DisableClock:00000000 XMC_SCU_CLOCK_DisableClock
    {standard input}:4160   .text.XMC_SCU_CLOCK_DisableClock:0000001c $d
    {standard input}:4165   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 $t
    {standard input}:4170   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 XMC_SCU_CLOCK_IsClockEnabled
    {standard input}:4216   .text.XMC_SCU_CLOCK_IsClockEnabled:00000028 $d
    {standard input}:4221   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 $t
    {standard input}:4226   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 XMC_SCU_CLOCK_GatePeripheralClock
    {standard input}:4279   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000034 $d
    {standard input}:4284   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 $t
    {standard input}:4289   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 XMC_SCU_CLOCK_UngatePeripheralClock
    {standard input}:4342   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000034 $d
    {standard input}:4347   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 $t
    {standard input}:4352   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 XMC_SCU_CLOCK_IsPeripheralClockGated
    {standard input}:4412   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000044 $d
    {standard input}:4417   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 $t
    {standard input}:4422   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 XMC_SCU_POWER_GetEVR13Voltage
    {standard input}:4459   .text.XMC_SCU_POWER_GetEVR13Voltage:00000028 $d
    {standard input}:4465   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 $t
    {standard input}:4470   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 XMC_SCU_POWER_GetEVR33Voltage
    {standard input}:4508   .text.XMC_SCU_POWER_GetEVR33Voltage:0000002c $d
    {standard input}:4514   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 $t
    {standard input}:4519   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 XMC_SCU_CLOCK_EnableUsbPll
    {standard input}:4553   .text.XMC_SCU_CLOCK_EnableUsbPll:0000001c $d
    {standard input}:4558   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 $t
    {standard input}:4563   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 XMC_SCU_CLOCK_DisableUsbPll
    {standard input}:4597   .text.XMC_SCU_CLOCK_DisableUsbPll:0000001c $d
    {standard input}:4602   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 $t
    {standard input}:4607   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 XMC_SCU_CLOCK_StartUsbPll
    {standard input}:4693   .text.XMC_SCU_CLOCK_StartUsbPll:00000070 $d
    {standard input}:4698   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 $t
    {standard input}:4703   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 XMC_SCU_CLOCK_StopUsbPll
    {standard input}:4734   .text.XMC_SCU_CLOCK_StopUsbPll:00000014 $d
    {standard input}:4740   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 $t
    {standard input}:4805   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000048 $d
    {standard input}:4810   .text.XMC_SCU_POWER_EnableUsb:00000000 $t
    {standard input}:4815   .text.XMC_SCU_POWER_EnableUsb:00000000 XMC_SCU_POWER_EnableUsb
    {standard input}:4846   .text.XMC_SCU_POWER_EnableUsb:00000014 $d
    {standard input}:4851   .text.XMC_SCU_POWER_DisableUsb:00000000 $t
    {standard input}:4856   .text.XMC_SCU_POWER_DisableUsb:00000000 XMC_SCU_POWER_DisableUsb
    {standard input}:4887   .text.XMC_SCU_POWER_DisableUsb:00000014 $d
    {standard input}:4892   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 $t
    {standard input}:4897   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 XMC_SCU_CLOCK_IsUsbPllLocked
    {standard input}:4934   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000020 $d
    {standard input}:4939   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 $t
    {standard input}:5011   .text.XMC_SCU_HIB_EnableHibernateDomain:00000050 $d
    {standard input}:5017   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 $t
    {standard input}:5022   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 XMC_SCU_HIB_DisableHibernateDomain
    {standard input}:5057   .text.XMC_SCU_HIB_DisableHibernateDomain:0000001c $d
    {standard input}:5063   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 $t
    {standard input}:5068   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 XMC_SCU_HIB_IsHibernateDomainEnabled
    {standard input}:5119   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000034 $d
    {standard input}:5125   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 $t
    {standard input}:5130   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 XMC_SCU_HIB_EnableInternalSlowClock
    {standard input}:5172   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000028 $d
    {standard input}:5178   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 $t
    {standard input}:5183   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 XMC_SCU_HIB_DisableInternalSlowClock
    {standard input}:5225   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000028 $d
    {standard input}:5231   .text.XMC_SCU_HIB_ClearEventStatus:00000000 $t
    {standard input}:5236   .text.XMC_SCU_HIB_ClearEventStatus:00000000 XMC_SCU_HIB_ClearEventStatus
    {standard input}:5283   .text.XMC_SCU_HIB_ClearEventStatus:00000028 $d
    {standard input}:5289   .text.XMC_SCU_HIB_TriggerEvent:00000000 $t
    {standard input}:5294   .text.XMC_SCU_HIB_TriggerEvent:00000000 XMC_SCU_HIB_TriggerEvent
    {standard input}:5341   .text.XMC_SCU_HIB_TriggerEvent:00000028 $d
    {standard input}:5347   .text.XMC_SCU_HIB_EnableEvent:00000000 $t
    {standard input}:5352   .text.XMC_SCU_HIB_EnableEvent:00000000 XMC_SCU_HIB_EnableEvent
    {standard input}:5456   .text.XMC_SCU_HIB_EnableEvent:000000a8 $d
    {standard input}:5462   .text.XMC_SCU_HIB_DisableEvent:00000000 $t
    {standard input}:5467   .text.XMC_SCU_HIB_DisableEvent:00000000 XMC_SCU_HIB_DisableEvent
    {standard input}:5572   .text.XMC_SCU_HIB_DisableEvent:000000a8 $d
    {standard input}:5578   .text.XMC_SCU_HIB_EnterHibernateState:00000000 $t
    {standard input}:5583   .text.XMC_SCU_HIB_EnterHibernateState:00000000 XMC_SCU_HIB_EnterHibernateState
    {standard input}:5625   .text.XMC_SCU_HIB_EnterHibernateState:00000028 $d
    {standard input}:5631   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 $t
    {standard input}:5636   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 XMC_SCU_HIB_EnterHibernateStateEx
    {standard input}:5692   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000038 $d
    {standard input}:5698   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 $t
    {standard input}:5703   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 XMC_SCU_HIB_SetWakeupTriggerInput
    {standard input}:5766   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000044 $d
    {standard input}:5772   .text.XMC_SCU_HIB_SetPinMode:00000000 $t
    {standard input}:5777   .text.XMC_SCU_HIB_SetPinMode:00000000 XMC_SCU_HIB_SetPinMode
    {standard input}:5844   .text.XMC_SCU_HIB_SetPinMode:0000004c $d
    {standard input}:5850   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 $t
    {standard input}:5855   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 XMC_SCU_HIB_SetPinOutputLevel
    {standard input}:5918   .text.XMC_SCU_HIB_SetPinOutputLevel:0000004c $d
    {standard input}:5924   .text.XMC_SCU_HIB_SetInput0:00000000 $t
    {standard input}:5929   .text.XMC_SCU_HIB_SetInput0:00000000 XMC_SCU_HIB_SetInput0
    {standard input}:5992   .text.XMC_SCU_HIB_SetInput0:00000044 $d
    {standard input}:5998   .text.XMC_SCU_HIB_SetSR0Input:00000000 $t
    {standard input}:6003   .text.XMC_SCU_HIB_SetSR0Input:00000000 XMC_SCU_HIB_SetSR0Input
    {standard input}:6055   .text.XMC_SCU_HIB_SetSR0Input:00000034 $d
    {standard input}:6061   .text.XMC_SCU_HIB_SetSR1Input:00000000 $t
    {standard input}:6066   .text.XMC_SCU_HIB_SetSR1Input:00000000 XMC_SCU_HIB_SetSR1Input
    {standard input}:6119   .text.XMC_SCU_HIB_SetSR1Input:00000038 $d
    {standard input}:6125   .text.XMC_SCU_HIB_LPAC_SetInput:00000000 $t
    {standard input}:6130   .text.XMC_SCU_HIB_LPAC_SetInput:00000000 XMC_SCU_HIB_LPAC_SetInput
    {standard input}:6182   .text.XMC_SCU_HIB_LPAC_SetInput:00000034 $d
    {standard input}:6188   .text.XMC_SCU_HIB_LPAC_SetTrigger:00000000 $t
    {standard input}:6193   .text.XMC_SCU_HIB_LPAC_SetTrigger:00000000 XMC_SCU_HIB_LPAC_SetTrigger
    {standard input}:6245   .text.XMC_SCU_HIB_LPAC_SetTrigger:00000034 $d
    {standard input}:6251   .text.XMC_SCU_HIB_LPAC_SetTiming:00000000 $t
    {standard input}:6256   .text.XMC_SCU_HIB_LPAC_SetTiming:00000000 XMC_SCU_HIB_LPAC_SetTiming
    {standard input}:6340   .text.XMC_SCU_HIB_LPAC_SetTiming:00000068 $d
    {standard input}:6346   .text.XMC_SCU_HIB_LPAC_SetVBATThresholds:00000000 $t
    {standard input}:6351   .text.XMC_SCU_HIB_LPAC_SetVBATThresholds:00000000 XMC_SCU_HIB_LPAC_SetVBATThresholds
    {standard input}:6405   .text.XMC_SCU_HIB_LPAC_SetVBATThresholds:00000038 $d
    {standard input}:6411   .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:00000000 $t
    {standard input}:6416   .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:00000000 XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds
    {standard input}:6478   .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:00000044 $d
    {standard input}:6484   .text.XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds:00000000 $t
    {standard input}:6489   .text.XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds:00000000 XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds
    {standard input}:6554   .text.XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds:00000048 $d
    {standard input}:6560   .text.XMC_SCU_HIB_LPAC_GetStatus:00000000 $t
    {standard input}:6565   .text.XMC_SCU_HIB_LPAC_GetStatus:00000000 XMC_SCU_HIB_LPAC_GetStatus
    {standard input}:6596   .text.XMC_SCU_HIB_LPAC_GetStatus:00000014 $d
    {standard input}:6601   .text.XMC_SCU_HIB_LPAC_ClearStatus:00000000 $t
    {standard input}:6606   .text.XMC_SCU_HIB_LPAC_ClearStatus:00000000 XMC_SCU_HIB_LPAC_ClearStatus
    {standard input}:6653   .text.XMC_SCU_HIB_LPAC_ClearStatus:00000028 $d
    {standard input}:6659   .text.XMC_SCU_HIB_LPAC_TriggerCompare:00000000 $t
    {standard input}:6664   .text.XMC_SCU_HIB_LPAC_TriggerCompare:00000000 XMC_SCU_HIB_LPAC_TriggerCompare
    {standard input}:6712   .text.XMC_SCU_HIB_LPAC_TriggerCompare:0000002c $d
    {standard input}:6718   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 $t
    {standard input}:6754   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 $t
    {standard input}:6829   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000060 $d
    {standard input}:6835   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 $t
    {standard input}:6840   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillator
    {standard input}:6882   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000028 $d
    {standard input}:6888   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6893   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6935   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000028 $d
    {standard input}:6941   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6946   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6989   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:0000002c $d
    {standard input}:6995   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:7000   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
    {standard input}:7032   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:7037   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 $t
    {standard input}:7092   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000044 $d
    {standard input}:7099   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 $t
    {standard input}:7141   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000024 $d
    {standard input}:7146   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 $t
    {standard input}:7151   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillator
    {standard input}:7184   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000018 $d
    {standard input}:7189   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:7194   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:7227   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:7232   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:7237   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:7270   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:7275   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:7280   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
    {standard input}:7312   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:7317   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 $t
    {standard input}:7356   .text.XMC_SCU_CLOCK_EnableSystemPll:0000001c $d
    {standard input}:7361   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 $t
    {standard input}:7400   .text.XMC_SCU_CLOCK_DisableSystemPll:0000001c $d
    {standard input}:7405   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 $t
    {standard input}:7686   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 XMC_SCU_CLOCK_StepSystemPllFrequency
    {standard input}:7628   .text.XMC_SCU_CLOCK_StartSystemPll:0000015c $d
    {standard input}:7638   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 $t
    {standard input}:7643   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 XMC_SCU_CLOCK_StopSystemPll
    {standard input}:7676   .text.XMC_SCU_CLOCK_StopSystemPll:00000018 $d
    {standard input}:7681   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 $t
    {standard input}:7731   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000028 $d
    {standard input}:7736   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 $t
    {standard input}:7741   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 XMC_SCU_CLOCK_IsSystemPllLocked
    {standard input}:7778   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000020 $d
    {standard input}:7783   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 $t
    {standard input}:7788   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 XMC_SCU_INTERRUPT_SetEventHandler
    {standard input}:7867   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000054 $d
    {standard input}:7872   .text.XMC_SCU_IRQHandler:00000000 $t
    {standard input}:7877   .text.XMC_SCU_IRQHandler:00000000 XMC_SCU_IRQHandler
    {standard input}:7955   .text.XMC_SCU_IRQHandler:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
SystemCoreClockUpdate
OSCHP_GetFrequency
